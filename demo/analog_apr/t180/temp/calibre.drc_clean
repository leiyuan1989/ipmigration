#DEFINE CHECK_SRAM_EXCL
#DEFINE CHECK_ALRDL
#DEFINE CHECK_DUMMY_ODPO
#DEFINE GUIDELINE_LUP
#DEFINE GUIDELINE_ESD
#DEFINE MIX_MODE
#DEFINE THICK_20K
#DEFINE 3.3V
#DEFINE 1.8V
VARIABLE PAD_TEXT  "?"
VARIABLE VDD_TEXT  "AVDDBG" "AVDDR" "AVDWELL" "VDWELL" "VD33APST" "VDD5V" "TAVD33" "VD33PST" "AVDD" "TAVDD" "TAVD33PST" "TAVDDPST" "AVD33B" "VDD" "AVD33G" "DVDD" "AVDDG" "AVDDB" "VDDG" "VDDPST" "VD33REF" "VD33" "AVD33R" "VDDSA"
VARIABLE VSS_TEXT  "VSSPST" "AVS33R" "AVSSUB" "VSSREF" "VSSAPST" "VS33APST" "DVSS" "AVS33G" "AVSSBG" "TAVSS" "AVS33B" "AVSSB" "GND" "VSSG" "VSSUB" "VSS" "AVSS" "TAVSSPST" "AGND" "AVSSR" "AVSSG"
#DEFINE CHECK_LATCHUP_BY_PAD_CONNECTION
PRECISION    1000
RESOLUTION     5
LAYOUT SYSTEM GDSII
LAYOUT PATH "GDSFILENAME"
LAYOUT PRIMARY "TOPCELLNAME"
DRC RESULTS DATABASE "DRC_RES.db"
DRC SUMMARY REPORT "DRC.rep"
DRC CHECK TEXT ALL
DRC MAXIMUM RESULTS ALL
FLAG OFFGRID YES
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES
LAYOUT PROCESS BOX RECORD YES
LAYER NWELi	2
LAYER DIFFi	3
LAYER DOD	1340
LAYER MAP 3   DATATYPE 1 1340
LAYER ODBLK	1350
LAYER MAP 150 DATATYPE 20 1350
LAYER PDIFFi	11
LAYER NDIFFi	12
LAYER OD2i	4
LAYER POLYi	13
LAYER DPO	1342
LAYER MAP 13  DATATYPE 1 1342
LAYER POBLK	1351
LAYER MAP 150 DATATYPE 21 1351
LAYER PPi	7
LAYER NPi	8
LAYER BJTDUMMY	49
LAYER DIODUMMY	56
LAYER RPDUMMY   54
LAYER COi	15
LAYER M1i	16
LAYER VIA1i	17
LAYER M2i	18
LAYER VIA2i	27
LAYER M3i	28
LAYER VIA3i	29
LAYER M4i	31
LAYER VIA4i	32
LAYER M5i	33
LAYER VIA5i	39
LAYER M6i	38
LAYER VIADi	167
LAYER MDi	168
LAYER CBi	19
LAYER CBDi	169
LAYER UBMi	170
LAYER PPIi	189
LAYER RPOi	34
LAYER NTNi	129
LAYER PLMIDEi	89
LAYER DNWi	82
LAYER VTMPi	23
LAYER VTMNi	24
LAYER PV_P	71
LAYER PV_N	72
LAYER HRIi	48
LAYER MAP 16  DATATYPE 1 316
LAYER M1DMY	316
LAYER MAP 18  DATATYPE 1 318
LAYER M2DMY	318
LAYER MAP 28  DATATYPE 1 329
LAYER M3DMY	329
LAYER MAP 31  DATATYPE 1 331
LAYER M4DMY	331
LAYER MAP 33  DATATYPE 1 333
LAYER M5DMY	333
LAYER MAP 38  DATATYPE 1 338
LAYER M6DMY	338
LAYER MAP 168 DATATYPE 1 340
LAYER MDDMY	340
LAYER MAP 16  DATATYPE 2 321
LAYER M1SLOTi	321
LAYER MAP 18  DATATYPE 2 322
LAYER M2SLOTi	322
LAYER MAP 28  DATATYPE 2 323
LAYER M3SLOTi	323
LAYER MAP 31  DATATYPE 2 324
LAYER M4SLOTi	324
LAYER MAP 33  DATATYPE 2 325
LAYER M5SLOTi	325
LAYER MAP 38  DATATYPE 2 326
LAYER M6SLOTi	326
LAYER MAP 168 DATATYPE 2 328
LAYER MDSLOTi	328
LAYER MAP 67  DATATYPE 2 257
LAYER CTM2i	257
LAYER MAP 67  DATATYPE 3 258
LAYER CTM3i	258
LAYER MAP 67  DATATYPE 4 259
LAYER CTM4i	259
LAYER MAP 67  DATATYPE 5 260
LAYER CTM5i	260
LAYER HOTWL	51
LAYER EXCLi	55
LAYER DRCDMY	60
LAYER RWDMY	52
LAYER DPDMY	65
LAYER PLDMY	66
LAYER SDI	58
LAYER ESD1DMY	136
LAYER ESD2DMY	137
LAYER ESD3DMY	234
LAYER CTMDMY	131
LAYER RLPPDMY	134
LAYER DMN2V	184
LAYER DMP2V	149
LAYER VARDMY	138
LAYER PMDMY	236
LAYER FWI	235
LAYER LMARK	263
LAYER MAP 63  DATATYPE 1 263
LAYER LWI	363
LAYER MAP 63  DATATYPE 2 363
LAYER WBDMY	183
LAYER ESDi	30
LAYER INDDMY	364
LAYER MAP 139 DATATYPE 0 364
LAYER SEALRING	126
LAYER LOGO	178
LAYER LUPWDMY     2551
LAYER MAP 255 DATATYPE 1 2551
LAYER SBDDMY     1440
LAYER MAP 144 DATATYPE 0 1440
LAYER RFDUMMY     1601
LAYER MAP 160 DATATYPE 1 1601
LAYER MAP 189 DATATYPE 101 1891
LAYER MAP 255 DATATYPE 4   2554
LAYER	VDDDMY 2554
LAYER MAP 255 DATATYPE 5   2555
LAYER	VSSDMY 2555
LAYOUT TOP LAYER M1i VIA1i M1SLOTi M1DMY
LAYOUT TOP LAYER M2i VIA2i M2SLOTi M2DMY
LAYOUT TOP LAYER M3i VIA3i M3SLOTi M3DMY
LAYOUT TOP LAYER M4i VIA4i M4SLOTi M4DMY
LAYOUT TOP LAYER M5i VIA5i M5SLOTi M5DMY
LAYOUT TOP LAYER MDi VIADi MDSLOTi MDDMY M6i M6SLOTi M6DMY CBi
M1xd = (M1i OR M1DMY) NOT M1SLOTi
M1x  = M1i NOT M1SLOTi
LAYER DM1EXCL	371
LAYER MAP 150 DATATYPE 1 371
M2xd = (M2i OR M2DMY) NOT M2SLOTi
M2x  = M2i NOT M2SLOTi
LAYER DM2EXCL	372
LAYER MAP 150 DATATYPE 2 372
M3xd = (M3i OR M3DMY) NOT M3SLOTi
M3x  = M3i NOT M3SLOTi
LAYER DM3EXCL	373
LAYER MAP 150 DATATYPE 3 373
M4xd = (M4i OR M4DMY) NOT M4SLOTi
M4x  = M4i NOT M4SLOTi
LAYER DM4EXCL	374
LAYER MAP 150 DATATYPE 4 374
M5xd = (M5i OR M5DMY) NOT M5SLOTi
M5x  = M5i NOT M5SLOTi
LAYER DM5EXCL	375
LAYER MAP 150 DATATYPE 5 375
M6xd = (M6i OR M6DMY) NOT M6SLOTi
M6x  = M6i NOT M6SLOTi
LAYER DM6EXCL	376
LAYER MAP 150 DATATYPE 6 376
MDxd = (MDi OR MDDMY) NOT MDSLOTi
MDx  = MDi NOT MDSLOTi
LAYER DMDEXCL	380
LAYER MAP 150 DATATYPE 15 380
CHIP         = EXTENT
BULK	= SIZE CHIP BY 1.0
EXCL = EXCLi NOT LOGO
#IFDEF CHECK_SRAM_EXCL
EXCL_S	= CHIP NOT BULK
#ELSE
EXCL_S	= COPY EXCL
#ENDIF
PWELi	= BULK	NOT NWELi
ODi	= (DIFFi OR NDIFFi) OR PDIFFi
PWEL	= PWELi	NOT EXCL
NWEL	= NWELi	NOT INSIDE EXCL
DNW	= DNWi	NOT EXCL
VTMP	= VTMPi	NOT EXCL
VTMN	= VTMNi	NOT EXCL
#IFDEF CHECK_DUMMY_ODPO
OD	= (ODi	OR  DOD) NOT EXCL
POLY	= (POLYi OR DPO) NOT EXCL
#ELSE
OD	= ODi	NOT EXCL
POLY	= POLYi	NOT EXCL
#ENDIF
OD2	= OD2i	NOT EXCL
PP	= PPi	NOT INSIDE EXCL
NP	= NPi	NOT INSIDE EXCL
CO	= COi	NOT EXCL
M1	= M1xd	NOT EXCL
M1_A	= M1xd  NOT INSIDE EXCL
VIA1	= VIA1i	NOT EXCL
M2	= M2xd	NOT INSIDE EXCL_S
VIA2	= VIA2i	NOT INSIDE EXCL_S
M3	= M3xd	NOT INSIDE EXCL_S
VIA3	= VIA3i	NOT INSIDE EXCL_S
M4	= M4xd	NOT INSIDE EXCL_S
VIA4	= VIA4i	NOT INSIDE EXCL_S
M5	= M5xd	NOT INSIDE EXCL_S
VIA5	= VIA5i	NOT INSIDE EXCL_S
M6	= M6xd	NOT INSIDE EXCL_S
VIAD	= VIADi	NOT INSIDE EXCL_S
MD	= MDxd	NOT INSIDE EXCL_S
CB	= CBi	NOT EXCL_S
CBD	= CBDi	NOT EXCL_S
RPO	= RPOi	NOT EXCL
NTN	= NTNi	NOT EXCL
PLMIDE	= PLMIDEi NOT EXCL_S
FW	= FWI	NOT EXCL_S
LW	= LWI	NOT EXCL_S
HRI	= HRIi	NOT EXCL
ESD	= ESDi	NOT EXCL_S
CTM2	= CTM2i	NOT EXCL_S
CTM3	= CTM3i	NOT EXCL_S
CTM4	= CTM4i	NOT EXCL_S
CTM5	= CTM5i	NOT EXCL_S
NRODi	= ODi	NOT RPOi
NPODi	= NPi	AND NRODi
PPODi	= PPi	AND NRODi
NONWRi	= NWELi	NOT INTERACT RWDMY
NTAPi	= NPODi	AND NONWRi
NACTi	= NPODi	NOT NWELi
PTAPi	= PPODi	NOT NWELi
PACTi	= PPODi	AND NONWRi
PSDi	= PACTi	NOT POLYi
NSDi	= NACTi	NOT POLYi
ILP1i	= POLYi	NOT RPOi
NPOD	= NP	AND OD
PPOD	= PP	AND OD
RNWEL	= NWEL	INTERACT RWDMY
NONWR	= NWEL	NOT RNWEL
NTAP	= NPOD	AND NONWR
NACT	= NPOD	NOT NWEL
PTAP	= PPOD	NOT NWEL
PACT	= PPOD	AND NWEL
ALL_GATE = POLY AND OD
POLY_ISO = POLY NOT OD
LVGT	= ALL_GATE NOT OD2
HVGT	= ALL_GATE AND OD2
GATE_W	= POLY INSIDE EDGE OD
GATE_L	= OD INSIDE EDGE POLY
GATE_NP	= ALL_GATE AND NP
GATE_PP	= ALL_GATE AND PP
FPO1	= COPY POLY_ISO
RPO_NOT_SDI = RPO NOT SDI
PORES	= FPO1 AND RPO_NOT_SDI
ILP1	= POLY_ISO NOT RPO
FFOD	= (OD OUTSIDE RWDMY) OUTSIDE ALL_GATE
ODRES	= FFOD AND RPO_NOT_SDI
DACT    = NACT OR PACT
DSTP    = NTAP OR PTAP
IMP     = PP OR NP
HRDMY	= (DMP2V OR DMN2V) OR RLPPDMY
HREP	= PORES AND HRDMY
HVN_GOX    = NPOD AND OD2
HVP_GOX    = PPOD AND OD2
HV_NGATE_W = GATE_W INSIDE EDGE HVN_GOX
HV_PGATE_W = GATE_W INSIDE EDGE HVP_GOX
BUTT_NTAP  = NTAP TOUCH PACT
NONB_NTAP  = NTAP NOT TOUCH PACT
BUTT_PTAP  = PTAP TOUCH NACT
NONB_PTAP  = PTAP NOT TOUCH NACT
PP_BEDGE   = BUTT_PTAP COIN EDGE NACT
NP_BEDGE   = BUTT_NTAP COIN EDGE PACT
OD2_BEDGE  = OD2 INSIDE EDGE OD
ACT_OD	= OD INTERACT POLY
PNSD	= ACT_OD NOT ALL_GATE
SDPO2	= PNSD INTERACT POLY == 2
CO_DIFF	= CO OUTSIDE POLY_ISO
CO_POLY	= CO NOT OUTSIDE POLY_ISO
ASD1	= PNSD ENCLOSE CO_DIFF
EXGATE_NP  = SIZE ((SIZE GATE_NP BY 0.03) AND POLY) BY 0.32
EXGATE_PP  = SIZE ((SIZE GATE_PP BY 0.03) AND POLY) BY 0.32
FUSE_LMARK = (CB OR FW) OR LW
RNGX       = PMDMY NOT FUSE_LMARK
CHIP_CORE = SIZE CHIP BY -10
PADH      = HOLES CB
SCORE     = CHIP_CORE INSIDE PADH
SR_CHIP   = CHIP INTERACT SCORE
SR = SR_CHIP NOT (SIZE SR_CHIP BY -10)
SR_CB = CB AND SR
SR_CO     = CO AND SR
SR_VIA1     = VIA1 AND SR
SR_VIA2     = VIA2 AND SR
SR_VIA3     = VIA3 AND SR
SR_VIA4     = VIA4 AND SR
SR_VIA5     = VIA5 AND SR
SR_VIAD     = VIAD AND SR
SBDOD    = ( OD AND SBDDMY ) AND NWEL
NW_SBD   = NWEL INTERACT SBDOD
DNW_SBD   = DNW INTERACT SBDOD
PP_SBD   = PP INTERACT SBDOD
PP_SBD_HOLE = HOLES PP_SBD INNER
PP_SBD_ALL = PP_SBD OR PP_SBD_HOLE
PP_NSBD = PP NOT PP_SBD
PPOD_SBD = SBDOD INTERACT PP
NPOD_SBD = SBDOD AND NP
PPOD_SBD_GAP = EXPAND EDGE PPOD_SBD OUTSIDE BY 0.48
PPOD_SBD_G   = PPOD_SBD_GAP TOUCH NPOD_SBD
NPOD_SBD_GAP = EXPAND EDGE NPOD_SBD OUTSIDE BY 0.48
NPOD_SBD_G   = NPOD_SBD_GAP TOUCH PPOD_SBD
SBDOD_ALL = ( PPOD_SBD OR NPOD_SBD ) OR PPOD_SBD_G
PPOD_SBD_W = PPOD_SBD TOUCH OUTSIDE EDGE NPOD_SBD_G
PPOD_SBD_L = PPOD_SBD NOT TOUCH OUTSIDE EDGE NPOD_SBD_G
NPOD_SBD_W = NPOD_SBD TOUCH OUTSIDE EDGE PPOD_SBD_G
CHIPx        = MERGE CHIP
VARIABLE  GRID      0.005
CONNECT	NTAPi NWELi
CONNECT	NTAPi PSDi
CONNECT	PTAPi NSDi
CONNECT	M1xd ILP1i NTAPi PTAPi PSDi NSDi BY COi
CONNECT	M1xd M2xd BY VIA1i
CONNECT	M2xd M3xd BY VIA2i
CONNECT	M3xd M4xd BY VIA3i
CONNECT	M4xd M5xd BY VIA4i
VIAt	= VIA5i NOT INTERACT CTM5i
VIAc	= VIA5i AND CTM5i
CONNECT	M5xd  M6xd BY VIAt
CONNECT	CTM5i M6xd BY VIAc
CONNECT	M6xd  MDxd BY VIADi
HRI.WARN {bracket}
#IFNDEF MIX_MODE
WARN.PROCESS_1 {bracket}
#ENDIF
#IFDEF MIX_MODE
#IFNDEF 1.8V
WARN.PROCESS_2 {bracket}
#ENDIF
#IFNDEF 3.3V
WARN.PROCESS_3 {bracket}
#ENDIF
#IFDEF LP
WARN.PROCESS_4 {bracket}
#ENDIF
#IFDEF 1.5V
WARN.PROCESS_5 {bracket}
#ENDIF
#IFDEF 5V
WARN.PROCESS_6 {bracket}
#ENDIF
#ENDIF
#IFDEF C016
#IFDEF 5V
WARN.PROCESS_7 {bracket}
#ENDIF
#IFDEF 1.5V
WARN.PROCESS_8 {bracket}
#ENDIF
#IFDEF LP
WARN.PROCESS_9 {bracket}
#ENDIF
#ENDIF
#IFDEF LP
#IFDEF 1.5V
WARN.PROCESS_10 {bracket}
#ENDIF
#ENDIF
#IFNDEF 3.3V
#IFNDEF 2.5V
#IFNDEF 5V
WARN.VOLTAGE_1 {bracket}
#ENDIF
#ENDIF
#ENDIF
#IFNDEF 1.8V
#IFNDEF 1.5V
WARN.VOLTAGE_2 {bracket}
#ENDIF
#ENDIF
#IFDEF 3.3V
#IFDEF 2.5V
WARN.VOLTAGE_3 {bracket}
#ENDIF
#IFDEF 5V
WARN.VOLTAGE_4 {bracket}
#ENDIF
#ENDIF
#IFDEF 1.8V
#IFDEF 1.5V
WARN.VOLTAGE_5 {bracket}
#ENDIF
#ENDIF
#IFDEF 1.8V
#IFDEF 2.5V
WARN.VOLTAGE_6 {bracket}
#ENDIF
#ENDIF
#IFDEF 1.5V
#IFDEF 5V
WARN.VOLTAGE_7 {bracket}
#ENDIF
#ENDIF
#IFNDEF MIX_MODE
#IFDEF THICK_40K
WARN.THICK_TOP_METAL_1 {bracket}
#ENDIF
#IFDEF THICK_20K
WARN.THICK_TOP_METAL_2 {bracket}
#ENDIF
#ENDIF
#IFDEF C016
#IFDEF THICK_40K
WARN.THICK_TOP_METAL_3 {bracket}
#ENDIF
#IFDEF THICK_20K
WARN.THICK_TOP_METAL_4 {bracket}
#ENDIF
#ENDIF
#IFDEF THICK_40K
#IFDEF THICK_20K
WARN.THICK_TOP_METAL_5 {bracket}
#ENDIF
#ENDIF
#IFNDEF MIX_MODE
WARN.DNW {bracket}
#ENDIF
#IFDEF 5V
WARN.NTN_1 {bracket}
#ENDIF
#IFDEF LP
#IFDEF 3.3V
WARN.NTN_2 {bracket}
#ENDIF
#ENDIF
HOT_NWEL = (NWEL AND HOTWL) OR RNWEL
NW.W.1 {bracket}
NW.W.2 {bracket}
NW.S.1 {bracket}
NW.S.2 {bracket}
NWRES = RNWEL INTERACT RPO
ODWR  = OD INTERACT NWRES
NPWR  = NP INTERACT NWRES
COWR  = CO_DIFF INTERACT NWRES
RHWR  = ODWR NOT RPO
RPONWR_H =  HOLES RPO INNER
NWR.E.1 {bracket}
NWR.E.2 {bracket}
NWR.C.1 {bracket}
NWR.C.2 {bracket}
NWR.C.3 {bracket}
NWR.O.1 {bracket}
NWR.R.1 {bracket}
NWRES_STI = RNWEL NOT INTERACT RPO
ODWR_STI  = OD INTERACT NWRES_STI
NPWR_STI  = NP INTERACT NWRES_STI
NWR.E.3 {bracket}
NWR.R.3{bracket}
NWR.R.4{bracket}
NWR.R.5 {bracket}
NWR.R.6 {bracket}
#IFNDEF 5V
NTN_OD = OD NOT OUTSIDE NTN
NTN_PO = POLY AND NTN
NTN_GATE_W = NTN_PO INSIDE EDGE NTN_OD
NTN_PO_W   = (NTN_PO INTERACT (CO OR OD)) COIN INSIDE EDGE POLY
NT_N.I.1 {bracket}
NT_N.I.2 {bracket}
NT_N.I.3 {bracket}
NT_N.I.4 {bracket}
NT_N.W.1 {bracket}
#IFDEF 1.5V
#IFDEF 3.3V
NT_N.W.1_1.5_3.3V {bracket}
#ENDIF
#ENDIF
#IFDEF 1.8V
#IFDEF C016
NTN.W.2 {bracket}
#ENDIF
#IFNDEF C016
NT_N.W.2_LV {bracket}
#ENDIF
#ENDIF
#IFDEF 1.5V
NT_N.W.2.LV {bracket}
NT_N.W.2_HV   {bracket}
#ENDIF
#IFNDEF C016
#IFDEF 3.3V
NT_N.W.2_3.3V {bracket}
#ENDIF
#ENDIF
#IFDEF C016
NTN.W.2B {bracket}
NTN.W.3 {bracket}
#ENDIF
NT_N.S.1 {bracket}
NT_N.E.1 {bracket}
#IFDEF 1.5V
NT_N.E.2.LV {bracket}
#ENDIF
NT_N.C.1 {bracket}
NT_N.C.2 {bracket}
#IFDEF 1.5V
NT_N.C.3.LV {bracket}
#ENDIF
NT_N.PO.1 {bracket}
#ENDIF
OD.W.1_OD.W.2 {bracket}
OD.S.1 {bracket}
OD.C.1 {bracket}
OD.C.2_OD.C.3 {bracket}
OD.C.4 {bracket}
OD.C.5 {bracket}
OD.W.3 {bracket}
OD.A.1 {bracket}
#IFDEF 5V
OD.C.2.1_OD.C.3.1 {bracket}
OD.C.4.1 {bracket}
#ENDIF
DACTG = DACT OR ALL_GATE
OD2.E.1 {bracket}
#IFNDEF 5V
#IFDEF 1.8V
OD2.S.1 {bracket}
#ENDIF
#ENDIF
#IFDEF 1.5V
OD2.S.1.LV {bracket}
#ENDIF
#IFDEF 5V
OD2.S.1.5V {bracket}
#ENDIF
#IFDEF LP
OD2.S.1.LP {bracket}
#ENDIF
OD2.C.1 {bracket}
OD2.C.2 {bracket}
OD2.E.2 {bracket}
#IFDEF 1.5V
OD2.E.4.LV {bracket}
OD2.C.4.LV {bracket}
OD2.O.1.LV {bracket}
#ENDIF
#IFDEF 5V
OD2.E.4.5V {bracket}
OD2.C.4.5V {bracket}
OD2.O.1.5V {bracket}
#ENDIF
#IFDEF LP
OD2.E.4.LP {bracket}
OD2.C.4.LP {bracket}
OD2.O.1.LP {bracket}
#ENDIF
PO.W.3 {bracket}
#IFDEF 3.3V
PO.W.1_3.3V {bracket}
PO.W.2_3.3V {bracket}
#ENDIF
#IFDEF 2.5V
PO.W.1_2.5V {bracket}
PO.W.2_2.5V {bracket}
#ENDIF
#IFDEF 5V
PO.W.1_5V {bracket}
PO.W.2_5V {bracket}
#ENDIF
PO.S.1 {bracket}
PO.S.2_PO.S.3 {bracket}
PO.C.1 {bracket}
PO.C.2 {bracket}
PO.O.1 {bracket}
#IFNDEF MIX_MODE
PO.R.1A {bracket}
#ENDIF
PO.R.1B {bracket}
PO.R.2 {bracket}
#IFDEF Recommend
RES.2_PO {bracket}
RES.2_OD {bracket}
DMPN2V = DMP2V OR DMN2V
RES.3_PO {bracket}
RES.3_OD {bracket}
RES.4_PO {bracket}
RES.4_OD {bracket}
RES.5_PO {bracket}
RES.5_OD {bracket}
RES.6_PO {bracket}
RES.6_OD {bracket}
#ENDIF
RES.9 {bracket}
RES.10 {bracket}
RES.11 {bracket}
#IFDEF MIX_MODE
#IFDEF Recommend
RES.HRI.1 {bracket}
RES.HRI.7 {bracket}
#ENDIF
#ENDIF
PPE4_NWELC = SIZE NWELi BY 0.43
PPE4_NWELS = SIZE PPE4_NWELC BY 0.18
PPE4_OD = PTAP AND PPE4_NWELS
PPE4_C1 = ENC PPE4_OD PP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
PPE4_C2 = ENC PPE4_OD PP < 0.18 ABUT > 0 < 90 CORNER REGION
PPE4_C3 = ENC PPE4_OD PP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
PPE4_C4 = (SIZE PPE4_C2 BY 0.005) NOT PPE4_OD
PPE4_ALL = (PPE4_C1 OR PPE4_C3) OR PPE4_C4
PPE4_CHECKOD = PPE4_ALL COIN OUTSIDE EDGE PPE4_OD
NPC3_C1 = EXT PPE4_OD NP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
NPC3_C2 = EXT PPE4_OD NP < 0.18 ABUT > 0 < 90 CORNER REGION
NPC3_C3 = EXT PPE4_OD NP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
NPC3_C4 = (SIZE NPC3_C2 BY 0.005) NOT PPE4_OD
NPC3_ALL = (NPC3_C1 OR NPC3_C3) OR NPC3_C4
NPC3_CHECKOD = NPC3_ALL COIN OUTSIDE EDGE PPE4_OD
NPE4_NWELC = SIZE NWELi BY -0.43
NPE4_NWELS = SIZE NPE4_NWELC BY -0.18
NPE4_OD = NTAP NOT NPE4_NWELS
NPE4_C1 = ENC NPE4_OD NP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
NPE4_C2 = ENC NPE4_OD NP < 0.18 ABUT > 0 < 90 CORNER REGION
NPE4_C3 = ENC NPE4_OD NP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
NPE4_C4 = (SIZE NPE4_C2 BY 0.005) NOT NPE4_OD
NPE4_ALL = (NPE4_C1 OR NPE4_C3) OR NPE4_C4
NPE4_CHECKOD = NPE4_ALL COIN OUTSIDE EDGE NPE4_OD
PPC3_C1 = EXT NPE4_OD PP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
PPC3_C2 = EXT NPE4_OD PP < 0.18 ABUT > 0 < 90 CORNER REGION
PPC3_C3 = EXT NPE4_OD PP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
PPC3_C4 = (SIZE PPC3_C2 BY 0.005) NOT NPE4_OD
PPC3_ALL = (PPC3_C1 OR PPC3_C3) OR PPC3_C4
PPC3_CHECKOD = PPC3_ALL COIN OUTSIDE EDGE NPE4_OD
PP.W.1 {bracket}
PP.S.1 {bracket}
PP.C.1 {bracket}
PP.C.2 {bracket}
PP.C.3 {bracket}
PP.C.5 {bracket}
PP.O.1 {bracket}
PP.E.1 {bracket}
PP.E.1_NP.E.1 {bracket}
PP.E.3 {bracket}
PP.E.4 {bracket}
PP.A.1 {bracket}
#IFNDEF MIX_MODE
PP.E.6 {bracket}
#ENDIF
PP.R.1_NP.R.1 {bracket}
PP.R.3_NP.R.3 {bracket}
NP.W.1 {bracket}
NP.S.1 {bracket}
NP.C.1 {bracket}
NP.C.2 {bracket}
NP.C.3 {bracket}
NP.C.5 {bracket}
NP.O.1 {bracket}
NP.E.1 {bracket}
NP.E.3 {bracket}
NP.E.4 {bracket}
NP.A.1 {bracket}
NP.E.6 {bracket}
CB_HOLE = HOLES CB
CB_SR = CB TOUCH CB_HOLE ==1
RPO_NOT_SR = RPO NOT INTERACT CB_SR
RPO.W.1 {bracket}
RPO.S.1 {bracket}
RPO.C.1 {bracket}
RPO.C.2 {bracket}
RPO.C.3 {bracket}
RPO.C.4 {bracket}
RPO.E.1 {bracket}
RPO.C.5 {bracket}
RPO.C.6 {bracket}
RPO.A.1 {bracket}
CO.W.1 {bracket}
CO.S.1 {bracket}
CO.S.2  {bracket}
CO.C.1_CO.R.1 {bracket}
CO.C.2 {bracket}
CO.E.1 {bracket}
CO.E.2 {bracket}
CO.E.3 {bracket}
CO.E.4 {bracket}
M1.W.1 {bracket}
M1.S.1 {bracket}
M1.S.2 {bracket}
M1.E.1 {bracket}
M1.E.2 {bracket}
M1.A.1{bracket}
VIA1_CORE = VIA1 NOT SR_VIA1
VIA1.W.1 {bracket}
VIA1.S.1 {bracket}
VIA1.E.1 {bracket}
VIA1.E.2 {bracket}
M2.W.1 {bracket}
M2.S.1 {bracket}
M2.S.2 {bracket}
M2.E.1 {bracket}
M2.E.2 {bracket}
M2.A.1{bracket}
VIA2_CORE = VIA2 NOT SR_VIA2
VIA2.W.1 {bracket}
VIA2.S.1 {bracket}
VIA2.E.1 {bracket}
VIA2.E.2 {bracket}
M3.W.1 {bracket}
M3.S.1 {bracket}
M3.S.2 {bracket}
M3.E.1 {bracket}
M3.E.2 {bracket}
M3.A.1{bracket}
VIA3_CORE = VIA3 NOT SR_VIA3
VIA3.W.1 {bracket}
VIA3.S.1 {bracket}
VIA3.E.1 {bracket}
VIA3.E.2 {bracket}
M4.W.1 {bracket}
M4.S.1 {bracket}
M4.S.2 {bracket}
M4.E.1 {bracket}
M4.E.2 {bracket}
M4.A.1{bracket}
VIA4_CORE = VIA4 NOT SR_VIA4
VIA4.W.1 {bracket}
VIA4.S.1 {bracket}
VIA4.E.1 {bracket}
VIA4.E.2 {bracket}
M5.W.1 {bracket}
M5.S.1 {bracket}
M5.S.2 {bracket}
M5.E.1 {bracket}
M5.E.2 {bracket}
M5.A.1{bracket}
#IFNDEF C016
VARIABLE  VIA_W_1      8
VARIABLE  VIA_S_1      3.2
VARIABLE  VIA_S_2      2.8
VARIABLE  VIA_S_2L     15
VARIABLE  VIA_A_5      300
VARIABLE  VIA_A_4      725
VARIABLE  VIA_A_3      960
VARIABLE  VIA_A_2     6000
VARIABLE  VIA_Merge   1.605
#ENDIF
#IFDEF C016
VARIABLE  VIA_W_1      8.9
VARIABLE  VIA_S_1      3.56
VARIABLE  VIA_S_2      3.12
VARIABLE  VIA_S_2L     16.7
VARIABLE  VIA_A_5      333
VARIABLE  VIA_A_4      806
VARIABLE  VIA_A_3      1067
VARIABLE  VIA_A_2      6667
VARIABLE  VIA_Merge   1.785
#ENDIF
VARIABLE  VIA_D_1     0.10
VARIABLE  VIA_S_3     0.49
VARIABLE  VIA_Filter   3.0
VIA1_M = VIA1 INTERACT M1
VIA1Merge1 = SIZE VIA1_M BY VIA_S_1/2 INSIDE OF M1 STEP 0.46
VIA1Merge2 = SIZE VIA1_M BY VIA_S_1/2 OVERUNDER
VIA1Merge.pre1 = VIA1Merge1 AND VIA1Merge2
VIA1Merge.pre11 = ENCLOSE RECTANGLE VIA1Merge.pre1 VIA_S_2L VIA_W_1
VIA1Merge.pre12 = VIA1_M INTERACT VIA1Merge.pre11
VIA1Merge.pre13 = SIZE VIA1Merge.pre12 BY VIA_S_1/2 OVERUNDER
VIA1Merge.pre2  = VIA1Merge1 AND VIA1Merge.pre13
VIA1_same_array = SIZE VIA1Merge.pre2 BY VIA_Filter/2 UNDEROVER
VIA2_M = VIA2 INTERACT M2
VIA2Merge1 = SIZE VIA2_M BY VIA_S_1/2 INSIDE OF M2 STEP 0.46
VIA2Merge2 = SIZE VIA2_M BY VIA_S_1/2 OVERUNDER
VIA2Merge.pre1 = VIA2Merge1 AND VIA2Merge2
VIA2Merge.pre11 = ENCLOSE RECTANGLE VIA2Merge.pre1 VIA_S_2L VIA_W_1
VIA2Merge.pre12 = VIA2_M INTERACT VIA2Merge.pre11
VIA2Merge.pre13 = SIZE VIA2Merge.pre12 BY VIA_S_1/2 OVERUNDER
VIA2Merge.pre2  = VIA2Merge1 AND VIA2Merge.pre13
VIA2_same_array = SIZE VIA2Merge.pre2 BY VIA_Filter/2 UNDEROVER
VIA3_M = VIA3 INTERACT M3
VIA3Merge1 = SIZE VIA3_M BY VIA_S_1/2 INSIDE OF M3 STEP 0.46
VIA3Merge2 = SIZE VIA3_M BY VIA_S_1/2 OVERUNDER
VIA3Merge.pre1 = VIA3Merge1 AND VIA3Merge2
VIA3Merge.pre11 = ENCLOSE RECTANGLE VIA3Merge.pre1 VIA_S_2L VIA_W_1
VIA3Merge.pre12 = VIA3_M INTERACT VIA3Merge.pre11
VIA3Merge.pre13 = SIZE VIA3Merge.pre12 BY VIA_S_1/2 OVERUNDER
VIA3Merge.pre2  = VIA3Merge1 AND VIA3Merge.pre13
VIA3_same_array = SIZE VIA3Merge.pre2 BY VIA_Filter/2 UNDEROVER
VIA4_M = VIA4 INTERACT M4
VIA4Merge1 = SIZE VIA4_M BY VIA_S_1/2 INSIDE OF M4 STEP 0.46
VIA4Merge2 = SIZE VIA4_M BY VIA_S_1/2 OVERUNDER
VIA4Merge.pre1 = VIA4Merge1 AND VIA4Merge2
VIA4Merge.pre11 = ENCLOSE RECTANGLE VIA4Merge.pre1 VIA_S_2L VIA_W_1
VIA4Merge.pre12 = VIA4_M INTERACT VIA4Merge.pre11
VIA4Merge.pre13 = SIZE VIA4Merge.pre12 BY VIA_S_1/2 OVERUNDER
VIA4Merge.pre2  = VIA4Merge1 AND VIA4Merge.pre13
VIA4_same_array = SIZE VIA4Merge.pre2 BY VIA_Filter/2 UNDEROVER
VIA5_M = VIA5 INTERACT M5
VIA5Merge1 = SIZE VIA5_M BY VIA_S_1/2 INSIDE OF M5 STEP 0.46
VIA5Merge2 = SIZE VIA5_M BY VIA_S_1/2 OVERUNDER
VIA5Merge.pre1 = VIA5Merge1 AND VIA5Merge2
VIA5Merge.pre11 = ENCLOSE RECTANGLE VIA5Merge.pre1 VIA_S_2L VIA_W_1
VIA5Merge.pre12 = VIA5_M INTERACT VIA5Merge.pre11
VIA5Merge.pre13 = SIZE VIA5Merge.pre12 BY VIA_S_1/2 OVERUNDER
VIA5Merge.pre2  = VIA5Merge1 AND VIA5Merge.pre13
VIA5_same_array = SIZE VIA5Merge.pre2 BY VIA_Filter/2 UNDEROVER
VIA1_same_array_5stack.pre1 = ((((AREA VIA1_same_array >= VIA_A_5) AND (AREA VIA2_same_array>= VIA_A_5 )) AND ( AREA VIA3_same_array>= VIA_A_5)) AND (AREA VIA4_same_array >= VIA_A_5)) AND ( AREA VIA5_same_array >= VIA_A_5 )
VIA1_same_array_5stack.pre2 = AREA VIA1_same_array_5stack.pre1 >= VIA_A_5
VIA1_same_array_4stack.pre1 = ((( AREA VIA1_same_array >= VIA_A_4)  AND (AREA VIA2_same_array >= VIA_A_4)) AND ( AREA VIA3_same_array>= VIA_A_4 )) AND ( AREA VIA4_same_array >= VIA_A_4 )
VIA1_same_array_4stack.pre2 = AREA VIA1_same_array_4stack.pre1 >= VIA_A_4
VIA2_same_array_4stack.pre1 = ((( AREA VIA2_same_array >= VIA_A_4)  AND (AREA VIA3_same_array >= VIA_A_4)) AND ( AREA VIA4_same_array>= VIA_A_4 )) AND ( AREA VIA5_same_array >= VIA_A_4 )
VIA2_same_array_4stack.pre2 = AREA VIA2_same_array_4stack.pre1 >= VIA_A_4
VIA1_same_array_3stack.pre1 = ((AREA VIA1_same_array >= VIA_A_3 ) AND (AREA VIA2_same_array >= VIA_A_3)) AND ( AREA VIA3_same_array >= VIA_A_3 )
VIA1_same_array_3stack.pre2 = AREA VIA1_same_array_3stack.pre1 >= VIA_A_3
VIA2_same_array_3stack.pre1 = ((AREA VIA2_same_array >= VIA_A_3 ) AND (AREA VIA3_same_array >= VIA_A_3)) AND ( AREA VIA4_same_array >= VIA_A_3 )
VIA2_same_array_3stack.pre2 = AREA VIA2_same_array_3stack.pre1 >= VIA_A_3
VIA3_same_array_3stack.pre1 = ((AREA VIA3_same_array >= VIA_A_3 ) AND (AREA VIA4_same_array >= VIA_A_3)) AND ( AREA VIA5_same_array >= VIA_A_3 )
VIA3_same_array_3stack.pre2 = AREA VIA3_same_array_3stack.pre1 >= VIA_A_3
VIA1_same_array_2stack.pre1 = ( AREA VIA1_same_array >= VIA_A_2 ) AND (AREA VIA2_same_array >= VIA_A_2 )
VIA1_same_array_2stack.pre2 = AREA VIA1_same_array_2stack.pre1 >= VIA_A_2
VIA2_same_array_2stack.pre1 = ( AREA VIA2_same_array >= VIA_A_2 ) AND (AREA VIA3_same_array >= VIA_A_2 )
VIA2_same_array_2stack.pre2 = AREA VIA2_same_array_2stack.pre1 >= VIA_A_2
VIA3_same_array_2stack.pre1 = ( AREA VIA3_same_array >= VIA_A_2 ) AND (AREA VIA4_same_array >= VIA_A_2 )
VIA3_same_array_2stack.pre2 = AREA VIA3_same_array_2stack.pre1 >= VIA_A_2
VIA4_same_array_2stack.pre1 = ( AREA VIA4_same_array >= VIA_A_2 ) AND (AREA VIA5_same_array >= VIA_A_2 )
VIA4_same_array_2stack.pre2 = AREA VIA4_same_array_2stack.pre1 >= VIA_A_2
VIA1_5stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_5stack.pre2 VIA_S_2L VIA_W_1
VIA1_Reg_3_S_5 = EXT VIA1_5stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1_Reg_3_S_5_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_5 0.005 VIA_S_2L
VIA1_5stack.pre4 = VIA1_5stack.pre3 INTERACT VIA1_Reg_3_S_5_1
VIA1ArrayS1_S_5 = EXT VIA1_5stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1ArrayS2_S_5 = ((((VIA1ArrayS1_S_5 NOT INSIDE M1) NOT INSIDE M2) NOT INSIDE M3) NOT INSIDE M4) NOT INSIDE M5
VIA1_5stack.Final = VIA1_5stack.pre4 INTERACT VIA1ArrayS2_S_5
VIA1_S_5_A1 = VIA1 INTERACT VIA1_5stack.Final
VIA1_Reg_4_S_5_A1 = EXT VIA1_S_5_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA1_Violate_S_5_A1= VIA1_S_5_A1 INTERACT VIA1_Reg_4_S_5_A1
VIA2_S_5_A1 = VIA2 INTERACT VIA1_5stack.Final
VIA2_Reg_4_S_5_A1 = EXT VIA2_S_5_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_5_A1 = VIA2_S_5_A1 INTERACT VIA2_Reg_4_S_5_A1
VIA3_S_5_A1 = VIA3 INTERACT VIA1_5stack.Final
VIA3_Reg_4_S_5_A1 = EXT VIA3_S_5_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_5_A1 = VIA3_S_5_A1 INTERACT VIA3_Reg_4_S_5_A1
VIA4_S_5_A1 = VIA4 INTERACT VIA1_5stack.Final
VIA4_Reg_4_S_5_A1 = EXT VIA4_S_5_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_5_A1 = VIA4_S_5_A1 INTERACT VIA4_Reg_4_S_5_A1
VIA5_S_5_A1 = VIA5 INTERACT VIA1_5stack.Final
VIA5_Reg_4_S_5_A1 = EXT VIA5_S_5_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA5_Violate_S_5_A1 = VIA5_S_5_A1 INTERACT VIA5_Reg_4_S_5_A1
CONNECT VIA1_5stack.Final VIA1_Violate_S_5_A1
CONNECT VIA1_5stack.Final VIA2_Violate_S_5_A1
CONNECT VIA1_5stack.Final VIA3_Violate_S_5_A1
CONNECT VIA1_5stack.Final VIA4_Violate_S_5_A1
CONNECT VIA1_5stack.Final VIA5_Violate_S_5_A1
VIA1.S.2_Array1_2_3_4_5_M {bracket}
VIA1_4stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_4stack.pre2 VIA_S_2L VIA_W_1
VIA1_Reg_3_S_4 = EXT VIA1_4stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1_Reg_3_S_4_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_4 0.005 VIA_S_2L
VIA1_4stack.pre4 = VIA1_4stack.pre3 INTERACT VIA1_Reg_3_S_4_1
VIA1ArrayS1_S_4 = EXT VIA1_4stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1ArrayS2_S_4 = (((VIA1ArrayS1_S_4 NOT INSIDE M1) NOT INSIDE M2) NOT INSIDE M3) NOT INSIDE M4
VIA1_4stack.Final = VIA1_4stack.pre4 INTERACT VIA1ArrayS2_S_4
VIA1_S_4_A1 = VIA1 INTERACT VIA1_4stack.Final
VIA1_Reg_4_S_4_A1 = EXT VIA1_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA1_Violate_S_4_A1= VIA1_S_4_A1 INTERACT VIA1_Reg_4_S_4_A1
VIA2_S_4_A1 = VIA2 INTERACT VIA1_4stack.Final
VIA2_Reg_4_S_4_A1 = EXT VIA2_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_4_A1 = VIA2_S_4_A1 INTERACT VIA2_Reg_4_S_4_A1
VIA3_S_4_A1 = VIA3 INTERACT VIA1_4stack.Final
VIA3_Reg_4_S_4_A1 = EXT VIA3_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_4_A1 = VIA3_S_4_A1 INTERACT VIA3_Reg_4_S_4_A1
VIA4_S_4_A1 = VIA4 INTERACT VIA1_4stack.Final
VIA4_Reg_4_S_4_A1 = EXT VIA4_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_4_A1 = VIA4_S_4_A1 INTERACT VIA4_Reg_4_S_4_A1
VIA2_4stack.pre3 = ENCLOSE RECTANGLE VIA2_same_array_4stack.pre2 VIA_S_2L VIA_W_1
VIA2_Reg_3_S_4 = EXT VIA2_4stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA2_Reg_3_S_4_1 = ENCLOSE RECTANGLE VIA2_Reg_3_S_4 0.005 VIA_S_2L
VIA2_4stack.pre4 = VIA2_4stack.pre3 INTERACT VIA2_Reg_3_S_4_1
VIA2ArrayS1_S_4 = EXT VIA2_4stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA2ArrayS2_S_4 = (((VIA2ArrayS1_S_4 NOT INSIDE M2) NOT INSIDE M3) NOT INSIDE M4) NOT INSIDE M5
VIA2_4stack.Final = VIA2_4stack.pre4 INTERACT VIA2ArrayS2_S_4
VIA2_S_4_A2 = VIA2 INTERACT VIA2_4stack.Final
VIA2_Reg_4_S_4_A2 = EXT VIA2_S_4_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_4_A2= VIA2_S_4_A2 INTERACT VIA2_Reg_4_S_4_A2
VIA3_S_4_A2 = VIA3 INTERACT VIA2_4stack.Final
VIA3_Reg_4_S_4_A2 = EXT VIA3_S_4_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_4_A2 = VIA3_S_4_A2 INTERACT VIA3_Reg_4_S_4_A2
VIA4_S_4_A2 = VIA4 INTERACT VIA2_4stack.Final
VIA4_Reg_4_S_4_A2 = EXT VIA4_S_4_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_4_A2 = VIA4_S_4_A2 INTERACT VIA4_Reg_4_S_4_A2
VIA5_S_4_A2 = VIA5 INTERACT VIA2_4stack.Final
VIA5_Reg_4_S_4_A2 = EXT VIA5_S_4_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA5_Violate_S_4_A2 = VIA5_S_4_A2 INTERACT VIA5_Reg_4_S_4_A2
CONNECT VIA1_4stack.Final VIA1_Violate_S_4_A1
CONNECT VIA1_4stack.Final VIA2_Violate_S_4_A1
CONNECT VIA1_4stack.Final VIA3_Violate_S_4_A1
CONNECT VIA1_4stack.Final VIA4_Violate_S_4_A1
CONNECT VIA2_4stack.Final VIA2_Violate_S_4_A2
CONNECT VIA2_4stack.Final VIA3_Violate_S_4_A2
CONNECT VIA2_4stack.Final VIA4_Violate_S_4_A2
CONNECT VIA2_4stack.Final VIA5_Violate_S_4_A2
VIA1.S.3_Array1_2_3_4_M {bracket}
VIA2.S.3_Array2_3_4_5_M {bracket}
VIA1_3stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_3stack.pre2 VIA_S_2L VIA_W_1
VIA1_Reg_3_S_3 = EXT VIA1_3stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1_Reg_3_S_3_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_3 0.005 VIA_S_2L
VIA1_3stack.pre4 = VIA1_3stack.pre3 INTERACT VIA1_Reg_3_S_3_1
VIA1ArrayS1_S_3 = EXT VIA1_3stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1ArrayS2_S_3 = ((VIA1ArrayS1_S_3 NOT INSIDE M1) NOT INSIDE M2) NOT INSIDE M3
VIA1_3stack.Final = VIA1_3stack.pre4 INTERACT VIA1ArrayS2_S_3
VIA1_S_3_A1 = VIA1 INTERACT VIA1_3stack.Final
VIA1_Reg_4_S_3_A1 = EXT VIA1_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA1_Violate_S_3_A1= VIA1_S_3_A1 INTERACT VIA1_Reg_4_S_3_A1
VIA2_S_3_A1 = VIA2 INTERACT VIA1_3stack.Final
VIA2_Reg_4_S_3_A1 = EXT VIA2_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_3_A1 = VIA2_S_3_A1 INTERACT VIA2_Reg_4_S_3_A1
VIA3_S_3_A1 = VIA3 INTERACT VIA1_3stack.Final
VIA3_Reg_4_S_3_A1 = EXT VIA3_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_3_A1 = VIA3_S_3_A1 INTERACT VIA3_Reg_4_S_3_A1
VIA2_3stack.pre3 = ENCLOSE RECTANGLE VIA2_same_array_3stack.pre2 VIA_S_2L VIA_W_1
VIA2_Reg_3_S_3 = EXT VIA2_3stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA2_Reg_3_S_3_1 = ENCLOSE RECTANGLE VIA2_Reg_3_S_3 0.005 VIA_S_2L
VIA2_3stack.pre4 = VIA2_3stack.pre3 INTERACT VIA2_Reg_3_S_3_1
VIA2ArrayS1_S_3 = EXT VIA2_3stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA2ArrayS2_S_3 = ((VIA2ArrayS1_S_3 NOT INSIDE M2) NOT INSIDE M3) NOT INSIDE M4
VIA2_3stack.Final = VIA2_3stack.pre4 INTERACT VIA2ArrayS2_S_3
VIA2_S_3_A2 = VIA2 INTERACT VIA2_3stack.Final
VIA2_Reg_4_S_3_A2 = EXT VIA2_S_3_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_3_A2= VIA2_S_3_A2 INTERACT VIA2_Reg_4_S_3_A2
VIA3_S_3_A2 = VIA3 INTERACT VIA2_3stack.Final
VIA3_Reg_4_S_3_A2 = EXT VIA3_S_3_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_3_A2 = VIA3_S_3_A2 INTERACT VIA3_Reg_4_S_3_A2
VIA4_S_3_A2 = VIA4 INTERACT VIA2_3stack.Final
VIA4_Reg_4_S_3_A2 = EXT VIA4_S_3_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_3_A2 = VIA4_S_3_A2 INTERACT VIA4_Reg_4_S_3_A2
VIA3_3stack.pre3 = ENCLOSE RECTANGLE VIA3_same_array_3stack.pre2 VIA_S_2L VIA_W_1
VIA3_Reg_3_S_3 = EXT VIA3_3stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA3_Reg_3_S_3_1 = ENCLOSE RECTANGLE VIA3_Reg_3_S_3 0.005 VIA_S_2L
VIA3_3stack.pre4 = VIA3_3stack.pre3 INTERACT VIA3_Reg_3_S_3_1
VIA3ArrayS1_S_3 = EXT VIA3_3stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA3ArrayS2_S_3 = ((VIA3ArrayS1_S_3 NOT INSIDE M3) NOT INSIDE M4) NOT INSIDE M5
VIA3_3stack.Final = VIA3_3stack.pre4 INTERACT VIA3ArrayS2_S_3
VIA3_S_3_A3 = VIA3 INTERACT VIA3_3stack.Final
VIA3_Reg_4_S_3_A3 = EXT VIA3_S_3_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_3_A3= VIA3_S_3_A3 INTERACT VIA3_Reg_4_S_3_A3
VIA4_S_3_A3 = VIA4 INTERACT VIA3_3stack.Final
VIA4_Reg_4_S_3_A3 = EXT VIA4_S_3_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_3_A3 = VIA4_S_3_A3 INTERACT VIA4_Reg_4_S_3_A3
VIA5_S_3_A3 = VIA5 INTERACT VIA3_3stack.Final
VIA5_Reg_4_S_3_A3 = EXT VIA5_S_3_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA5_Violate_S_3_A3 = VIA5_S_3_A3 INTERACT VIA5_Reg_4_S_3_A3
CONNECT VIA1_3stack.Final VIA1_Violate_S_3_A1
CONNECT VIA1_3stack.Final VIA2_Violate_S_3_A1
CONNECT VIA1_3stack.Final VIA3_Violate_S_3_A1
CONNECT VIA2_3stack.Final VIA2_Violate_S_3_A2
CONNECT VIA2_3stack.Final VIA3_Violate_S_3_A2
CONNECT VIA2_3stack.Final VIA4_Violate_S_3_A2
CONNECT VIA3_3stack.Final VIA3_Violate_S_3_A3
CONNECT VIA3_3stack.Final VIA4_Violate_S_3_A3
CONNECT VIA3_3stack.Final VIA5_Violate_S_3_A3
VIA1.S.4_Array1_2_3_M {bracket}
VIA2.S.4_Array2_3_4_M {bracket}
VIA3.S.4_Array3_4_5_M {bracket}
VIA1_2stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_2stack.pre2 VIA_S_2L VIA_W_1
VIA1_Reg_3_S_2 = EXT VIA1_2stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_2 0.005 VIA_S_2L
VIA1_2stack.pre4 = VIA1_2stack.pre3 INTERACT VIA1_Reg_3_S_2_1
VIA1ArrayS1_S_2 = EXT VIA1_2stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA1ArrayS2_S_2 = (VIA1ArrayS1_S_2 NOT INSIDE M1) NOT INSIDE M2
VIA1_2stack.Final = VIA1_2stack.pre4 INTERACT VIA1ArrayS2_S_2
VIA1_S_2_A1 = VIA1 INTERACT VIA1_2stack.Final
VIA1_Reg_4_S_2_A1 = EXT VIA1_S_2_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA1_Violate_S_2_A1= VIA1_S_2_A1 INTERACT VIA1_Reg_4_S_2_A1
VIA2_S_2_A1 = VIA2 INTERACT VIA1_2stack.Final
VIA2_Reg_4_S_2_A1 = EXT VIA2_S_2_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_2_A1 = VIA2_S_2_A1 INTERACT VIA2_Reg_4_S_2_A1
VIA2_2stack.pre3 = ENCLOSE RECTANGLE VIA2_same_array_2stack.pre2 VIA_S_2L VIA_W_1
VIA2_Reg_3_S_2 = EXT VIA2_2stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA2_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA2_Reg_3_S_2 0.005 VIA_S_2L
VIA2_2stack.pre4 = VIA2_2stack.pre3 INTERACT VIA2_Reg_3_S_2_1
VIA2ArrayS1_S_2 = EXT VIA2_2stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA2ArrayS2_S_2 = (VIA2ArrayS1_S_2 NOT INSIDE M2) NOT INSIDE M3
VIA2_2stack.Final = VIA2_2stack.pre4 INTERACT VIA2ArrayS2_S_2
VIA2_S_2_A2 = VIA2 INTERACT VIA2_2stack.Final
VIA2_Reg_4_S_2_A2 = EXT VIA2_S_2_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA2_Violate_S_2_A2= VIA2_S_2_A2 INTERACT VIA2_Reg_4_S_2_A2
VIA3_S_2_A2 = VIA3 INTERACT VIA2_2stack.Final
VIA3_Reg_4_S_2_A2 = EXT VIA3_S_2_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_2_A2 = VIA3_S_2_A2 INTERACT VIA3_Reg_4_S_2_A2
VIA3_2stack.pre3 = ENCLOSE RECTANGLE VIA3_same_array_2stack.pre2 VIA_S_2L VIA_W_1
VIA3_Reg_3_S_2 = EXT VIA3_2stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA3_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA3_Reg_3_S_2 0.005 VIA_S_2L
VIA3_2stack.pre4 = VIA3_2stack.pre3 INTERACT VIA3_Reg_3_S_2_1
VIA3ArrayS1_S_2 = EXT VIA3_2stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA3ArrayS2_S_2 = (VIA3ArrayS1_S_2 NOT INSIDE M3) NOT INSIDE M4
VIA3_2stack.Final = VIA3_2stack.pre4 INTERACT VIA3ArrayS2_S_2
VIA3_S_2_A3 = VIA3 INTERACT VIA3_2stack.Final
VIA3_Reg_4_S_2_A3 = EXT VIA3_S_2_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA3_Violate_S_2_A3= VIA3_S_2_A3 INTERACT VIA3_Reg_4_S_2_A3
VIA4_S_2_A3 = VIA4 INTERACT VIA3_2stack.Final
VIA4_Reg_4_S_2_A3 = EXT VIA4_S_2_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_2_A3 = VIA4_S_2_A3 INTERACT VIA4_Reg_4_S_2_A3
VIA4_2stack.pre3 = ENCLOSE RECTANGLE VIA4_same_array_2stack.pre2 VIA_S_2L VIA_W_1
VIA4_Reg_3_S_2 = EXT VIA4_2stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA4_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA4_Reg_3_S_2 0.005 VIA_S_2L
VIA4_2stack.pre4 = VIA4_2stack.pre3 INTERACT VIA4_Reg_3_S_2_1
VIA4ArrayS1_S_2 = EXT VIA4_2stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
VIA4ArrayS2_S_2 = (VIA4ArrayS1_S_2 NOT INSIDE M4) NOT INSIDE M5
VIA4_2stack.Final = VIA4_2stack.pre4 INTERACT VIA4ArrayS2_S_2
VIA4_S_2_A4 = VIA4 INTERACT VIA4_2stack.Final
VIA4_Reg_4_S_2_A4 = EXT VIA4_S_2_A4 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA4_Violate_S_2_A4= VIA4_S_2_A4 INTERACT VIA4_Reg_4_S_2_A4
VIA5_S_2_A4 = VIA5 INTERACT VIA4_2stack.Final
VIA5_Reg_4_S_2_A4 = EXT VIA5_S_2_A4 < VIA_S_3 ABUT < 90 SINGULAR REGION
VIA5_Violate_S_2_A4 = VIA5_S_2_A4 INTERACT VIA5_Reg_4_S_2_A4
CONNECT VIA1_2stack.Final VIA1_Violate_S_2_A1
CONNECT VIA1_2stack.Final VIA2_Violate_S_2_A1
CONNECT VIA2_2stack.Final VIA2_Violate_S_2_A2
CONNECT VIA2_2stack.Final VIA3_Violate_S_2_A2
CONNECT VIA3_2stack.Final VIA3_Violate_S_2_A3
CONNECT VIA3_2stack.Final VIA4_Violate_S_2_A3
CONNECT VIA4_2stack.Final VIA4_Violate_S_2_A4
CONNECT VIA4_2stack.Final VIA5_Violate_S_2_A4
VIA1.S.5_Array1_2_M {bracket}
VIA2.S.5_Array2_3_M {bracket}
VIA3.S.5_Array3_4_M {bracket}
VIA4.S.5_Array4_5_M {bracket}
CB_CUP = CB INTERACT WBDMY
VIA5R = VIA5 OUTSIDE CB_CUP
VIA5R_CORE = VIA5R NOT SR_VIA5
VIA5.W.1 {bracket}
VIA5.S.1 {bracket}
VIA5.E.1 {bracket}
VIA5.E.2 {bracket}
#IFDEF CHECK_ALRDL
#IFNDEF THICK_20K
#IFNDEF THICK_40K
VIADR = VIAD OUTSIDE CB_CUP
VIADR_CORE = VIADR NOT SR_VIAD
VIAD.W.1 {bracket}
VIAD.S.1 {bracket}
VIAD.E.1 {bracket}
VIAD.E.2 {bracket}
#ENDIF
#ENDIF
#ENDIF
#IFNDEF THICK_20K
#IFNDEF THICK_40K
M6.W.1 {bracket}
M6.S.1 {bracket}
M6.S.2 {bracket}
M6.E.1 {bracket}
M6.A.1 {bracket}
#IFDEF CHECK_ALRDL
MD.W.1 {bracket}
MD.S.1 {bracket}
MD.S.2 {bracket}
MD.E.1 {bracket}
MD.A.1 {bracket}
#ENDIF
#ENDIF
#ENDIF
PO.R.3 {bracket}
M1.R.1 {bracket}
M2.R.1 {bracket}
M3.R.1 {bracket}
M4.R.1 {bracket}
M5.R.1 {bracket}
#IFNDEF THICK_20K
#IFNDEF THICK_40K
M6.R.1 {bracket}
MD.R.1 {bracket}
#ENDIF
#ENDIF
GROUP DUMMY_PAD_CHECK ADP.S.2g ADP.W.3g ADP.W.4g
DP_V1 = DPDMY AND VIA1
DP_V2 = DPDMY AND VIA2
DP_V3 = DPDMY AND VIA3
DP_V4 = DPDMY AND VIA4
DP_V5 = DPDMY AND VIA5
DP_VD = DPDMY AND VIAD
ADP.R.0A {bracket}
ADP.R.0B {bracket}
ADP.R.0C {bracket}
ADP.S.1_VIA1 {bracket}
ADP.S.1_VIA2 {bracket}
ADP.S.1_VIA3 {bracket}
ADP.S.1_VIA4 {bracket}
ADP.S.1_VIA5 {bracket}
ADP.S.1_VIAD {bracket}
ADP.C.1_V1_V2 {bracket}
ADP.C.1_V2_V3 {bracket}
ADP.C.1_V3_V4 {bracket}
ADP.C.2_V4_V5 {bracket}
ADP.C.2_V5_VD {bracket}
ADP.E.1_V1_M1 {bracket}
ADP.E.1_V1_M2 {bracket}
ADP.E.1_V2_M2 {bracket}
ADP.E.1_V2_M3 {bracket}
ADP.E.1_V3_M3 {bracket}
ADP.E.1_V3_M4 {bracket}
ADP.E.1_V4_M4 {bracket}
ADP.E.1_V4_M5 {bracket}
ADP.E.1_V5_M5 {bracket}
ADP.E.1_V5_M6 {bracket}
ADP.E.1_VD_M6 {bracket}
ADP.E.1_VD_MD {bracket}
ADP.S.2g {bracket}
ADP.W.3g {bracket}
ADP.W.4g {bracket}
PL_V1 = PLDMY AND VIA1
PL_V2 = PLDMY AND VIA2
PL_V3 = PLDMY AND VIA3
PL_V4 = PLDMY AND VIA4
PL_V5 = PLDMY AND VIA5
PL_VD = PLDMY AND VIAD
ADP.R.0D {bracket}
ADP.S.1_PL_V1 {bracket}
ADP.S.1_PL_V2 {bracket}
ADP.S.1_PL_V3 {bracket}
ADP.S.1_PL_V4 {bracket}
ADP.S.1_PL_V5 {bracket}
ADP.S.1_PL_VD {bracket}
ADP.C.1_PL_V1_V2 {bracket}
ADP.C.1_PL_V2_V3 {bracket}
ADP.C.1_PL_V3_V4 {bracket}
ADP.C.2_PL_V4_V5 {bracket}
ADP.C.2_PL_V5_VD {bracket}
ADP.E.2_V1_M1 {bracket}
ADP.E.2_V1_M2 {bracket}
ADP.E.2_V2_M2 {bracket}
ADP.E.2_V2_M3 {bracket}
ADP.E.2_V3_M3 {bracket}
ADP.E.2_V3_M4 {bracket}
ADP.E.2_V4_M4 {bracket}
ADP.E.2_V4_M5 {bracket}
ADP.E.2_V5_M5 {bracket}
ADP.E.2_V5_M6 {bracket}
ADP.E.2_VD_M6 {bracket}
ADP.E.2_VD_MD {bracket}
CB_NON_CUP = CBi NOT INTERACT WBDMY
SLT_EXD  = CB_NON_CUP OR DPDMY
SLT_EXDT = CBi OR DPDMY
PAD_EXD = UBMi NOT INTERACT MDxd
M1EXD = M1xd NOT SLT_EXD
M1InnerHole = HOLES M1EXD INNER
M1BigHole   = SIZE M1InnerHole BY -5
M1Hole      = M1InnerHole OUTSIDE M1BigHole
M1HoleSpace = M1Hole NOT M1EXD
FIM1c       = M1EXD OR M1HoleSpace
LM1XA       = (SIZE (SIZE FIM1c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM1c
LM1X        = ENCLOSE RECTANGLE LM1XA 35.005 35.005
M1HoleD    = M1HoleSpace AND LM1X
AMS.1.M1 {bracket}
CONNECT M1HoleD LM1X
AMS.DN.M1 {bracket}
DISCONNECT
M2EXD = M2xd NOT SLT_EXD
M2InnerHole = HOLES M2EXD INNER
M2BigHole   = SIZE M2InnerHole BY -5
M2Hole      = M2InnerHole OUTSIDE M2BigHole
M2HoleSpace = M2Hole NOT M2EXD
FIM2c       = M2EXD OR M2HoleSpace
LM2XA       = (SIZE (SIZE FIM2c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM2c
LM2X        = ENCLOSE RECTANGLE LM2XA 35.005 35.005
M2HoleD    = M2HoleSpace AND LM2X
AMS.1.M2 {bracket}
CONNECT M2HoleD LM2X
AMS.DN.M2 {bracket}
DISCONNECT
M3EXD = M3xd NOT SLT_EXD
M3InnerHole = HOLES M3EXD INNER
M3BigHole   = SIZE M3InnerHole BY -5
M3Hole      = M3InnerHole OUTSIDE M3BigHole
M3HoleSpace = M3Hole NOT M3EXD
FIM3c       = M3EXD OR M3HoleSpace
LM3XA       = (SIZE (SIZE FIM3c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM3c
LM3X        = ENCLOSE RECTANGLE LM3XA 35.005 35.005
M3HoleD    = M3HoleSpace AND LM3X
AMS.1.M3 {bracket}
CONNECT M3HoleD LM3X
AMS.DN.M3 {bracket}
DISCONNECT
M4EXD = M4xd NOT SLT_EXD
M4InnerHole = HOLES M4EXD INNER
M4BigHole   = SIZE M4InnerHole BY -5
M4Hole      = M4InnerHole OUTSIDE M4BigHole
M4HoleSpace = M4Hole NOT M4EXD
FIM4c       = M4EXD OR M4HoleSpace
LM4XA       = (SIZE (SIZE FIM4c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM4c
LM4X        = ENCLOSE RECTANGLE LM4XA 35.005 35.005
M4HoleD    = M4HoleSpace AND LM4X
AMS.1.M4 {bracket}
CONNECT M4HoleD LM4X
AMS.DN.M4 {bracket}
DISCONNECT
M5EXD = M5xd NOT SLT_EXDT
M5InnerHole = HOLES M5EXD INNER
M5BigHole   = SIZE M5InnerHole BY -5
M5Hole      = M5InnerHole OUTSIDE M5BigHole
M5HoleSpace = M5Hole NOT M5EXD
FIM5c       = M5EXD OR M5HoleSpace
LM5XA       = (SIZE (SIZE FIM5c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM5c
LM5X        = ENCLOSE RECTANGLE LM5XA 35.005 35.005
M5HoleD    = M5HoleSpace AND LM5X
AMS.1.M5 {bracket}
CONNECT M5HoleD LM5X
AMS.DN.M5 {bracket}
DISCONNECT
PAD_EXD6 = SIZE PAD_EXD BY 2 INSIDE OF M6xd STEP 0.32
M6EXD = M6xd NOT ( SLT_EXDT OR PAD_EXD6 )
M6InnerHole = HOLES M6EXD INNER
M6BigHole   = SIZE M6InnerHole BY -5
M6Hole      = M6InnerHole OUTSIDE M6BigHole
M6HoleSpace = M6Hole NOT M6EXD
FIM6c       = M6EXD OR M6HoleSpace
LM6XA       = (SIZE (SIZE FIM6c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM6c
LM6X        = ENCLOSE RECTANGLE LM6XA 35.005 35.005
M6HoleD    = M6HoleSpace AND LM6X
AMS.1.M6 {bracket}
CONNECT M6HoleD LM6X
AMS.DN.M6 {bracket}
DISCONNECT
UBM_EXDD    = SIZE UBMi BY 2 INSIDE OF MDxd STEP 0.32
MDEXD       = MDxd NOT ( DPDMY OR UBM_EXDD )
MDInnerHole = HOLES MDEXD INNER
MDBigHole   = SIZE MDInnerHole BY -5
MDHole      = MDInnerHole OUTSIDE MDBigHole
MDHoleSpace = MDHole NOT MDEXD
FIMDc       = MDEXD OR MDHoleSpace
LMDXA       = (SIZE (SIZE FIMDc BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIMDc
LMDX        = ENCLOSE RECTANGLE LMDXA 35.005 35.005
MDHoleD     = MDHoleSpace AND LMDX
AMS.1.MD {bracket}
CONNECT MDHoleD LMDX
AMS.DN.MD {bracket}
DISCONNECT
EPACT = PACT AND SDI
ENACT = NACT AND SDI
ECO = (CO AND SDI) AND OD
EPMOS = EPACT ENCLOSE ALL_GATE
ENMOS = ENACT ENCLOSE ALL_GATE
EGTE = ALL_GATE AND SDI
EGTE_W = EGTE INSIDE EDGE OD
EPSD = EPMOS NOT EGTE
ENSD = ENMOS NOT EGTE
ENSD_NCO = (ENSD NOT INTERACT ECO) NOT INTERACT PTAP
EPSD_NCO = (EPSD NOT INTERACT ECO) NOT INTERACT NTAP
ENSD_WCO = ENSD NOT ENSD_NCO
EPSD_WCO = EPSD NOT EPSD_NCO
ENSD_SRC = ENSD_WCO OUTSIDE RPO
ESD1_GATE = EGTE AND ESD1DMY
ESD1_NCS_GATE = ESD1_GATE NOT INTERACT ENSD_NCO
ESD1_TOL = (ENMOS AND ESD1DMY) INTERACT ENSD_NCO
ESD1_NCS = (ENMOS AND ESD1DMY) NOT INTERACT ENSD_NCO
ENSD_NCO_ESD1DMY = ENSD_NCO INTERACT ESD1DMY
ESD1_TOL_GATE = EGTE INTERACT ENSD_NCO_ESD1DMY
ESD1_TOL_GATE1 = ESD1_TOL_GATE NOT INTERACT ENSD_SRC
ESD1_TOL_GATE2 = ESD1_TOL_GATE INTERACT ENSD_SRC
ESD1_NCS_GATE_W = ESD1_NCS_GATE INSIDE EDGE OD
ESD1_TOL_GATE1_W = ESD1_TOL_GATE1 INSIDE EDGE OD
ESD1_TOL_GATE2_W = ESD1_TOL_GATE2 INSIDE EDGE OD
ESD2_GATE = EGTE AND ESD2DMY
ESD2_REG_GATE = ESD2_GATE NOT INTERACT ENSD_NCO
ESD2_TOL_GATE = ESD2_GATE INTERACT ENSD_NCO
ESD2_TOL_GATE1 = ESD2_TOL_GATE NOT INTERACT ENSD_SRC
ESD2_TOL_GATE2 = ESD2_TOL_GATE INTERACT ENSD_SRC
ESD2_TOL = (ENMOS AND ESD2DMY) INTERACT ENSD_NCO
ESD2_REG = (ENMOS AND ESD2DMY) NOT INTERACT ENSD_NCO
ESD2_REG_GATE_W = ESD2_REG_GATE INSIDE EDGE OD
ESD2_TOL_GATE1_W = ESD2_TOL_GATE1 INSIDE EDGE OD
ESD2_TOL_GATE2_W = ESD2_TOL_GATE2 INSIDE EDGE OD
RPO1 = ((RPO AND SDI) OUTSIDE ESD1DMY) OUTSIDE ESD2DMY
EGTE1 = ((EGTE OUTSIDE ESD1DMY) OUTSIDE ESD2DMY) NOT INTERACT ENSD_NCO
EGTE1_W = EGTE1 INSIDE EDGE OD
ERPO = RPO AND SDI
ERPOH = HOLES ERPO
ERPOA = ERPOH OR ERPO
ECOS = ECO OUTSIDE ERPOA
HEGT = EGTE AND OD2
LEGT = EGTE NOT OD2
HEGN = HEGT AND NP
HEGP = HEGT AND PP
#IFDEF GUIDELINE_ESD
ESD.6g {bracket}
ESD.8g {bracket}
#IFDEF 1.5V
ESD.18g_1.5V {bracket}
#ENDIF
#IFDEF 1.8V
ESD.18g_1.8V {bracket}
#ENDIF
#IFDEF 2.5V
ESD.18g_2.5V_N {bracket}
ESD.18g_2.5V_P {bracket}
#ENDIF
#IFDEF 3.3V
ESD.18g_3.3V_N {bracket}
ESD.18g_3.3V_P {bracket}
#ENDIF
#IFDEF 5V
HEGN1 = HEGN INTERACT ESD
HEGN2 = HEGN NOT HEGN1
ESD.18g_5V_NESD {bracket}
ESD.18g_5V_P {bracket}
ESD.18g_5V_WESD {bracket}
#ENDIF
ESD.19g {bracket}
ESD.20g {bracket}
ESD.20g_A {bracket}
ESD.21g {bracket}
ESD.24g {bracket}
ESD.25g {bracket}
ESD.26g {bracket}
ESD.27g {bracket}
#IFNDEF 5V
ESD.28g {bracket}
#ENDIF
ESD.30g {bracket}
ESD.32g {bracket}
ESD.34g {bracket}
NCS_SD_1 = ((OD INTERACT EGTE) NOT POLY) AND ESD1DMY
NCS_SD = STAMP NCS_SD_1 BY NSDi
NCS_S  = NET AREA RATIO NCS_SD PTAPi >0
NCS_D  = NCS_SD NOT NCS_S
ESD.35g{bracket}
ESD.37g {bracket}
ESD.WARN.1 {bracket}
#IFDEF 5V
ESD.WARN.2 {bracket}
#ENDIF
#IFNDEF 5V
ESD.WARN.3 {bracket}
#ENDIF
#ENDIF
#IFDEF 5V
ESD.W.1{bracket}
ESD.S.1{bracket}
ESD.S.2{bracket}
ESD.C.1{bracket}
ESD.C.2{bracket}
ESD.O.1{bracket}
ESD.C.4 {bracket}
ESD.E.1{bracket}
ESD.R.1 {bracket}
ESD.R.2 {bracket}
#ENDIF
RH = (PORES OR ODRES) INTERACT RPO
RPDMY = (DMN2V OR DMP2V) OR FFOD
RPDMYi    = RPDMY NOT INTERACT RPOi
RPO_RPDMY = RPOi OR RPDMYi
NSDc  = NSDi NOT RPO_RPDMY
PSDc  = PSDi NOT RPO_RPDMY
RWi = PWELi INSIDE DNWi
NWRiT = (NWELi INTERACT RWDMY) NOT RWDMY
SRM = COPY EXCL
UBMn = (UBMi NOT INTERACT PPIi) NOT INTERACT MDi
UBMd = UBMi NOT UBMn
CONNECT NWEL DNW
CONNECT M6xd CBi
CONNECT M6xd UBMn BY CBDi
CONNECT MDxd UBMd
CONNECT M6xd PPIi BY CBDi
CONNECT PPIi UBMd
EMPTYi = CHIP  NOT BULK
NTAPiu = NTAPi NOT EMPTYi
PTAPiu = PTAPi NOT EMPTYi
NSDiu  = NSDc  NOT EMPTYi
PSDiu  = PSDc  NOT EMPTYi
CBiu   = CBi   NOT EMPTYi
UBMniu = UBMn NOT EMPTYi
UBMdiu = UBMd NOT EMPTYi
PWR_M1iu_BY_TEXT = M1xd WITH TEXT VDD_TEXT 40 PRIMARY ONLY
GND_M1iu_BY_TEXT = M1xd WITH TEXT VSS_TEXT 40 PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1xd WITH TEXT PAD_TEXT 40 PRIMARY ONLY
GND_M1iu_TEXT = EXPAND TEXT VDD_TEXT 40 BY 1 PRIMARY ONLY
PWR_M1iu_TEXT = EXPAND TEXT VSS_TEXT 40 BY 1 PRIMARY ONLY
PWR_M2iu_BY_TEXT = M2xd WITH TEXT VDD_TEXT 41 PRIMARY ONLY
GND_M2iu_BY_TEXT = M2xd WITH TEXT VSS_TEXT 41 PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2xd WITH TEXT PAD_TEXT 41 PRIMARY ONLY
GND_M2iu_TEXT = EXPAND TEXT VDD_TEXT 41 BY 1 PRIMARY ONLY
PWR_M2iu_TEXT = EXPAND TEXT VSS_TEXT 41 BY 1 PRIMARY ONLY
PWR_M3iu_BY_TEXT = M3xd WITH TEXT VDD_TEXT 42 PRIMARY ONLY
GND_M3iu_BY_TEXT = M3xd WITH TEXT VSS_TEXT 42 PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3xd WITH TEXT PAD_TEXT 42 PRIMARY ONLY
GND_M3iu_TEXT = EXPAND TEXT VDD_TEXT 42 BY 1 PRIMARY ONLY
PWR_M3iu_TEXT = EXPAND TEXT VSS_TEXT 42 BY 1 PRIMARY ONLY
PWR_M4iu_BY_TEXT = M4xd WITH TEXT VDD_TEXT 43 PRIMARY ONLY
GND_M4iu_BY_TEXT = M4xd WITH TEXT VSS_TEXT 43 PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4xd WITH TEXT PAD_TEXT 43 PRIMARY ONLY
GND_M4iu_TEXT = EXPAND TEXT VDD_TEXT 43 BY 1 PRIMARY ONLY
PWR_M4iu_TEXT = EXPAND TEXT VSS_TEXT 43 BY 1 PRIMARY ONLY
PWR_M5iu_BY_TEXT = M5xd WITH TEXT VDD_TEXT 44 PRIMARY ONLY
GND_M5iu_BY_TEXT = M5xd WITH TEXT VSS_TEXT 44 PRIMARY ONLY
PAD_M5iu_BY_TEXT = M5xd WITH TEXT PAD_TEXT 44 PRIMARY ONLY
GND_M5iu_TEXT = EXPAND TEXT VDD_TEXT 44 BY 1 PRIMARY ONLY
PWR_M5iu_TEXT = EXPAND TEXT VSS_TEXT 44 BY 1 PRIMARY ONLY
PWR_M6iu_BY_TEXT = M6xd WITH TEXT VDD_TEXT 45 PRIMARY ONLY
GND_M6iu_BY_TEXT = M6xd WITH TEXT VSS_TEXT 45 PRIMARY ONLY
PAD_M6iu_BY_TEXT = M6xd WITH TEXT PAD_TEXT 45 PRIMARY ONLY
GND_M6iu_TEXT = EXPAND TEXT VDD_TEXT 45 BY 1 PRIMARY ONLY
PWR_M6iu_TEXT = EXPAND TEXT VSS_TEXT 45 BY 1 PRIMARY ONLY
VARIABLE  LUP_2   20.0
VARIABLE  LUP_2_S 8.0
VARIABLE  LUP_3_1 3.0
VARIABLE  LUP_3_2 6.0
VARIABLE  LUP_3_3 12.0
VARIABLE  LUP_3_4 23.0
VARIABLE  LUP_4   0.42
VARIABLE  LUP_5_1 3.0
VARIABLE  LUP_5_2 6.0
VARIABLE  LUP_5_3 12.0
VARIABLE  LUP_5_4 23.0
VARIABLE  LUP_5_4_1 40.0
VARIABLE  LUP_6   30.0
VARIABLE  LUP_6_SRAM 40.0
VARIABLE  NW_S_1  0.6
ODRES_a = ODRES AND (RH OR RPDMY)
NTAPux = NTAPi NOT INTERACT RNWEL
VDD_CB = NET AREA RATIO CBiu NTAPux > 0
VSS_CB = NET AREA RATIO CBiu PTAPiu > 0
VDD_UBMn = NET AREA RATIO UBMniu NTAPux > 0
VSS_UBMn = NET AREA RATIO UBMniu PTAPiu > 0
VDD_UBMd = NET AREA RATIO UBMdiu NTAPux > 0
VSS_UBMd = NET AREA RATIO UBMdiu PTAPiu > 0
IO_CB  = (CBiu NOT VDD_CB) NOT VSS_CB
IO_UBMn = (UBMniu NOT VDD_UBMn) NOT VSS_UBMn
IO_UBMd = (UBMdiu NOT VDD_UBMd) NOT VSS_UBMd
PSD_PAD = NET AREA RATIO PSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NSD_PAD = NET AREA RATIO NSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
PSD_IOPAD = NET AREA RATIO PSDiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]
NSD_IOPAD = NET AREA RATIO NSDiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]
VDD_VSS_DUMMY = VDDDMY OR VSSDMY
CB_DUMMY = CBiu INTERACT VDD_VSS_DUMMY
UBMn_DUMMY = UBMniu INTERACT VDD_VSS_DUMMY
UBMd_DUMMY = UBMdiu INTERACT VDD_VSS_DUMMY
PSD_VDD_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
NSD_VDD_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
PSD_PAD_TEXT = NET AREA RATIO PSDiu OVER PAD_M6iu_BY_TEXT PAD_M5iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M1iu_BY_TEXT > 0
NSD_PAD_TEXT = NET AREA RATIO NSDiu OVER PAD_M6iu_BY_TEXT PAD_M5iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M1iu_BY_TEXT > 0
PSD_VDD_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER PWR_M6iu_BY_TEXT PWR_M5iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M1iu_BY_TEXT GND_M6iu_BY_TEXT GND_M5iu_BY_TEXT GND_M4iu_BY_TEXT GND_M3iu_BY_TEXT GND_M2iu_BY_TEXT GND_M1iu_BY_TEXT > 0
NSD_VDD_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER PWR_M6iu_BY_TEXT PWR_M5iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M1iu_BY_TEXT GND_M6iu_BY_TEXT GND_M5iu_BY_TEXT GND_M4iu_BY_TEXT GND_M3iu_BY_TEXT GND_M2iu_BY_TEXT GND_M1iu_BY_TEXT > 0
PWR_TEXT = (((( PWR_M1iu_TEXT OR PWR_M2iu_TEXT ) OR PWR_M3iu_TEXT ) OR PWR_M4iu_TEXT ) OR PWR_M5iu_TEXT ) OR PWR_M6iu_TEXT
GND_TEXT = (((( GND_M1iu_TEXT OR GND_M2iu_TEXT ) OR GND_M3iu_TEXT ) OR GND_M4iu_TEXT ) OR GND_M5iu_TEXT ) OR GND_M6iu_TEXT
#IFDEF  CHECK_LATCHUP_BY_TEXT
PSD_IOPAD_ALL = (PSD_IOPAD OR PSD_PAD_TEXT) NOT (PSD_VDD_VSS_PAD_TEXT OR PSD_VDD_VSS_PAD_DUMMY)
NSD_IOPAD_ALL = (NSD_IOPAD OR NSD_PAD_TEXT) NOT (NSD_VDD_VSS_PAD_TEXT OR NSD_VDD_VSS_PAD_DUMMY)
SD_IOPAD = PSD_IOPAD_ALL OR NSD_IOPAD_ALL
MOS = DACT INTERACT ALL_GATE
PMOS_filter = COPY EMPTYi
NMOS_filter = COPY EMPTYi
#ENDIF
#IFNDEF  CHECK_LATCHUP_BY_TEXT
PSD_IOPAD_ALL = PSD_IOPAD  NOT PSD_VDD_VSS_PAD_DUMMY
NSD_IOPAD_ALL = NSD_IOPAD  NOT NSD_VDD_VSS_PAD_DUMMY
SD_IOPAD = PSD_IOPAD_ALL OR NSD_IOPAD_ALL
MOS = DACT INTERACT ALL_GATE
PMOS_filter = MOS INTERACT PSD_PAD == 1 BY NET
NMOS_filter = MOS INTERACT NSD_PAD == 1 BY NET
#ENDIF
DUMMY_MOS = (MOS NOT INTERACT CO) NOT INTERACT (POLY INTERACT CO)
POST_DRIVER_DUMMY_LAYERS = COPY SDI
DACT_real = (DACT NOT INTERACT ODRES_a) NOT INTERACT RNWEL
PACT_real = PACT AND DACT_real
NACT_real = NACT AND DACT_real
POST_DRIVER_ACT1 = DACT_real AND POST_DRIVER_DUMMY_LAYERS
POST_DRIVER_ACT2 = ((DACT_real NOT PMOS_filter) NOT NMOS_filter) INTERACT SD_IOPAD
#IFDEF CHECK_LATCHUP_BY_PAD_CONNECTION
POST_DRIVER_ACT = POST_DRIVER_ACT1 OR POST_DRIVER_ACT2
#ELSE
POST_DRIVER_ACT = COPY POST_DRIVER_ACT1
#ENDIF
NW_inside_guard_ring_pre1 = NWELi NOT NTAPi
NW_inside_guard_ring_pre2 = NW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE NTAPi
NW_inside_guard_ring = NW_inside_guard_ring_pre1 NOT WITH EDGE NW_inside_guard_ring_pre2
PW_inside_guard_ring_pre1 = PWELi NOT PTAPi
PW_inside_guard_ring_pre2 = PW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE PTAPi
PW_inside_guard_ring = PW_inside_guard_ring_pre1 NOT WITH EDGE PW_inside_guard_ring_pre2
NTAP_guard_ring_hole = ((HOLES NTAPi INNER) INSIDE NWELi) OR NW_inside_guard_ring
PTAP_guard_ring_hole = ((HOLES PTAPi INNER) INSIDE PWELi) OR PW_inside_guard_ring
POST_DRIVER_PACT = (POST_DRIVER_ACT INTERACT PSDiu) NOT INSIDE LUPWDMY
POST_DRIVER_NACT = (POST_DRIVER_ACT INTERACT NSDiu) NOT INSIDE LUPWDMY
POST_DRIVER_PMOS = POST_DRIVER_PACT INTERACT ALL_GATE
POST_DRIVER_PMOS_NW = STAMP POST_DRIVER_PMOS BY NWEL
POST_DRIVER_PMOS_NW_HV  = POST_DRIVER_PMOS_NW INTERACT HVGT
POST_DRIVER_PMOS_NW_33V = POST_DRIVER_PMOS_NW_HV INTERACT OD2i
POST_DRIVER_PMOS_NW_25V = POST_DRIVER_PMOS_NW_HV INTERACT OD2i
POST_DRIVER_PMOS_NW_50V = POST_DRIVER_PMOS_NW_HV INTERACT OD2i
POST_DRIVER_PMOS_NW_LV  = POST_DRIVER_PMOS_NW NOT POST_DRIVER_PMOS_NW_HV
POST_DRIVER_PMOS_NWi = STAMP POST_DRIVER_PMOS BY NWELi
POST_DRIVER_PMOS_NWi_HV  = POST_DRIVER_PMOS_NWi INTERACT HVGT
POST_DRIVER_PMOS_NWi_33V = POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
POST_DRIVER_PMOS_NWi_25V = POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
POST_DRIVER_PMOS_NWi_50V = POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
POST_DRIVER_PMOS_NWi_LV  = POST_DRIVER_PMOS_NWi NOT POST_DRIVER_PMOS_NWi_HV
POST_DRIVER_NMOS = POST_DRIVER_NACT INTERACT ALL_GATE
POST_DRIVER_NMOS_RW = STAMP (POST_DRIVER_NMOS INSIDE DNW) BY DNW
POST_DRIVER_NMOS_PW = POST_DRIVER_NMOS NOT POST_DRIVER_NMOS_RW
POST_DRIVER_NMOS_RW_HV  = POST_DRIVER_NMOS_RW INTERACT HVGT
POST_DRIVER_NMOS_RW_33V = POST_DRIVER_NMOS_RW_HV INTERACT OD2i
POST_DRIVER_NMOS_RW_25V = POST_DRIVER_NMOS_RW_HV INTERACT OD2i
POST_DRIVER_NMOS_RW_50V = POST_DRIVER_NMOS_RW_HV INTERACT OD2i
POST_DRIVER_NMOS_RW_LV  = POST_DRIVER_NMOS_RW NOT POST_DRIVER_NMOS_RW_HV
POST_DRIVER_NMOS_PW_HV  = POST_DRIVER_NMOS_PW INTERACT HVGT
POST_DRIVER_NMOS_PW_33V = POST_DRIVER_NMOS_PW_HV INTERACT OD2i
POST_DRIVER_NMOS_PW_25V = POST_DRIVER_NMOS_PW_HV INTERACT OD2i
POST_DRIVER_NMOS_PW_50V = POST_DRIVER_NMOS_PW_HV INTERACT OD2i
POST_DRIVER_NMOS_PW_LV  = POST_DRIVER_NMOS_PW NOT POST_DRIVER_NMOS_PW_HV
DNWc = STAMP DNW BY NWELi
POST_DRIVER_NMOS_RWi = STAMP (POST_DRIVER_NMOS INSIDE DNWc) BY DNWc
POST_DRIVER_NMOS_RWi_HV  = POST_DRIVER_NMOS_RWi INTERACT HVGT
POST_DRIVER_NMOS_RWi_33V = POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
POST_DRIVER_NMOS_RWi_25V = POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
POST_DRIVER_NMOS_RWi_50V = POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
POST_DRIVER_NMOS_RWi_LV  = POST_DRIVER_NMOS_RWi NOT POST_DRIVER_NMOS_RWi_HV
POST_DRIVER_MOS = POST_DRIVER_NMOS OR POST_DRIVER_PMOS
BESIDE_POST_DRIVER = SIZE POST_DRIVER_MOS BY LUP_2
BESIDE_POST_DRIVER_NMOS = (((NACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER) NOT POST_DRIVER_NACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_PMOS = (((PACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER) NOT POST_DRIVER_PACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_1 = SIZE POST_DRIVER_MOS BY LUP_5_4_1
BESIDE_POST_DRIVER_NMOS_1 = (((NACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER_1) NOT POST_DRIVER_NACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_PMOS_1 = (((PACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER_1) NOT POST_DRIVER_PACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_PMOS_NW = STAMP BESIDE_POST_DRIVER_PMOS BY NWEL
BESIDE_POST_DRIVER_PMOS_NW_HV  = BESIDE_POST_DRIVER_PMOS_NW INTERACT HVGT
BESIDE_POST_DRIVER_PMOS_NW_33V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NW_25V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NW_50V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NW_LV  = BESIDE_POST_DRIVER_PMOS_NW NOT BESIDE_POST_DRIVER_PMOS_NW_HV
BESIDE_POST_DRIVER_PMOS_NWi = STAMP BESIDE_POST_DRIVER_PMOS BY NWELi
BESIDE_POST_DRIVER_PMOS_NWi_HV  = BESIDE_POST_DRIVER_PMOS_NWi INTERACT HVGT
BESIDE_POST_DRIVER_PMOS_NWi_33V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NWi_25V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NWi_50V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NWi_LV  = BESIDE_POST_DRIVER_PMOS_NWi NOT BESIDE_POST_DRIVER_PMOS_NWi_HV
BESIDE_POST_DRIVER_NMOS_RW = STAMP (BESIDE_POST_DRIVER_NMOS INSIDE DNW) BY DNW
BESIDE_POST_DRIVER_NMOS_PW = BESIDE_POST_DRIVER_NMOS NOT BESIDE_POST_DRIVER_NMOS_RW
BESIDE_POST_DRIVER_NMOS_RW_HV  = BESIDE_POST_DRIVER_NMOS_RW INTERACT HVGT
BESIDE_POST_DRIVER_NMOS_RW_33V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RW_25V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RW_50V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RW_LV  = BESIDE_POST_DRIVER_NMOS_RW NOT BESIDE_POST_DRIVER_NMOS_RW_HV
BESIDE_POST_DRIVER_NMOS_PW_HV  = BESIDE_POST_DRIVER_NMOS_PW INTERACT HVGT
BESIDE_POST_DRIVER_NMOS_PW_33V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_PW_25V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_PW_50V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_PW_LV  = BESIDE_POST_DRIVER_NMOS_PW NOT BESIDE_POST_DRIVER_NMOS_PW_HV
BESIDE_POST_DRIVER_NMOS_RWi = STAMP (BESIDE_POST_DRIVER_NMOS INSIDE DNWc) BY DNWc
BESIDE_POST_DRIVER_NMOS_RWi_HV  = BESIDE_POST_DRIVER_NMOS_RWi INTERACT HVGT
BESIDE_POST_DRIVER_NMOS_RWi_33V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RWi_25V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RWi_50V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RWi_LV  = BESIDE_POST_DRIVER_NMOS_RWi NOT BESIDE_POST_DRIVER_NMOS_RWi_HV
BESIDE_POST_DRIVER_PMOS_NW_1 = STAMP BESIDE_POST_DRIVER_PMOS_1 BY NWEL
BESIDE_POST_DRIVER_PMOS_NWi_1 = STAMP BESIDE_POST_DRIVER_PMOS_1 BY NWELi
BESIDE_POST_DRIVER_NMOS_RW_1 = STAMP (BESIDE_POST_DRIVER_NMOS_1 INSIDE DNW) BY DNW
BESIDE_POST_DRIVER_NMOS_PW_1 = BESIDE_POST_DRIVER_NMOS_1 NOT BESIDE_POST_DRIVER_NMOS_RW_1
BESIDE_POST_DRIVER_NMOS_RWi_1 = STAMP (BESIDE_POST_DRIVER_NMOS_1 INSIDE DNWc) BY DNWc
#IFDEF GUIDELINE_LUP
LUP.1g {bracket}
LUP.2g {bracket}
#IFDEF 1.8V
LUP.3.1g_1.8V {bracket}
#ENDIF
#IFDEF 1.5V
LUP.3.1g_1.5V {bracket}
#ENDIF
#IFDEF 2.5V
LUP.3.2g_2.5V {bracket}
#ENDIF
#IFDEF 3.3V
LUP.3.3g_3.3V {bracket}
#ENDIF
#IFDEF 5V
LUP.3.4g_5V {bracket}
#ENDIF
LUP.4g {bracket}
#IFDEF 1.8V
LUP.5.1g_1.8V {bracket}
#ENDIF
#IFDEF 1.5V
LUP.5.1g_1.5V {bracket}
#ENDIF
#IFDEF 2.5V
LUP.5.2g_2.5V {bracket}
#ENDIF
#IFDEF 3.3V
LUP.5.3g_3.3V {bracket}
#ENDIF
#IFDEF 5V
LUP.5.4g_5V {bracket}
#ENDIF
#ENDIF
CO_PACT = COi OR (PSDc NOT OUTSIDE COi)
NPUi = NTAPi INTERACT CO_PACT
NPUi_SRAM = NPUi INSIDE SRM
NSTP_OS = SIZE NPUi BY LUP_6 INSIDE OF NWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
NSTP_OS_SRAM = SIZE NPUi_SRAM BY LUP_6_SRAM INSIDE OF NWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
PACT_CHECK = ((PACTi INTERACT COi) INTERACT POLYi) NOT POLYi
PACT_CHECK_NON_SRAM = PACT_CHECK NOT INSIDE SRM
PACT_CHECK_SRAM =  PACT_CHECK INSIDE SRM
CO_NACT = COi OR (NSDc NOT OUTSIDE COi)
PPUi = PTAPi INTERACT CO_NACT
PPUi_SRAM = PPUi INSIDE SRM
PSTP_OS = SIZE PPUi BY LUP_6 INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
PSTP_OS_SRAM = SIZE PPUi_SRAM BY LUP_6_SRAM INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
NACT_CHECK = ((NACTi INTERACT COi) INTERACT POLYi) NOT POLYi
NACT_CHECK_NON_SRAM = NACT_CHECK NOT INSIDE SRM
NACT_CHECK_SRAM =  NACT_CHECK INSIDE SRM
LUP.6 {bracket}
LOGO.S.1 {bracket}
LOGO.O.1 {bracket}
LOGO.R.1 {bracket}
#IFDEF MIX_MODE
PO.W.1_HRI {bracket}
_PO.R.1A.MM {bracket}
_PP.E.6.MM {bracket}
RPO.O.1_HRI {bracket}
#IFNDEF C016
CONNECT	NTAPi NWELi
CONNECT	NTAPi PSDi
CONNECT	PTAPi NSDi
CONNECT	M1xd ILP1i NTAPi PTAPi PSDi NSDi BY COi
CONNECT	M1xd M2xd BY VIA1i
CONNECT	M2xd M3xd BY VIA2i
CONNECT	M3xd M4xd BY VIA3i
CONNECT	M4xd M5xd BY VIA4i
CONNECT	M5xd  M6xd BY VIAt
CONNECT	CTM5i M6xd BY VIAc
CONNECT	M6xd  MDxd BY VIADi
M6T_NIND = M6xd NOT INDDMY
INDDMYI = SIZE INDDMY BY -7
INDM = INDDMY AND M4
INDME = INDM COINCIDENT INSIDE EDGE INDDMY
INDDMYA = INDDMY WITH EDGE INDME <2
INDDMY3 = INDDMYA ENCLOSE M5
INDDMY2 = INDDMY NOT INDDMY3
#IFDEF THICK_20K
UTM20K.W.1 {bracket}
UTM20K.S.1 {bracket}
UTM20K.E.1 {bracket}
UTM20K.E.2 {bracket}
UTM20K.S.2 {bracket}
UTM20K.A.1 {bracket}
UTM20K.R.1 {bracket}
#IFDEF Recommend
UTM20K.C.1 {bracket}
#ENDIF
UTM20K.E.3 {bracket}
UTM20K.I.1 {bracket}
UTM20K.I.2 {bracket}
#ENDIF
#IFDEF THICK_40K
UTM40K.W.1 {bracket}
UTM40K.S.1 {bracket}
UTM40K.E.1 {bracket}
UTM40K.E.2 {bracket}
UTM40K.S.2 {bracket}
UTM40K.A.1 {bracket}
UTM40K.R.1 {bracket}
#IFDEF Recommend
UTM40K.C.1 {bracket}
#ENDIF
UTM40K.E.3 {bracket}
UTM40K.I.1 {bracket}
UTM40K.I.2 {bracket}
#ENDIF
#ENDIF
RW  = DNW NOT NWEL
#IFNDEF C016
DNW.W.1 {bracket}
DNW.S.1 {bracket}
#ENDIF
#IFDEF Recommend
SCONNECT PTAPi PWELi
DNW.S.2 {bracket}
#ENDIF
DNW.O.1 {bracket}
CONNECT NWEL DNW
DNW.C.1 {bracket}
DNW.C.4 {bracket}
#IFDEF Recommend
DNW.E.1 {bracket}
#ENDIF
DNW.E.2 {bracket}
DNW.R.4 {bracket}
DNW.R.5 {bracket}
#IFDEF C016
DNW.W.1 {bracket}
DNW.S.1 {bracket}
#ENDIF
VTM_N.W.1 {bracket}
VTM_N.W.2 {bracket}
VTM_N.W.3 {bracket}
VTM_N.S.1 {bracket}
VTM_N.E.1 {bracket}
VTM_N.C.1 {bracket}
VTM_N.C.2 {bracket}
VTM_N.R.2 {bracket}
VTM_N.R.3 {bracket}
VTM_N.R.4 {bracket}
VTM_N.R.5 {bracket}
VTM_P.W.1 {bracket}
VTM_P.W.2 {bracket}
VTM_P.S.1 {bracket}
VTM_P.E.1 {bracket}
VTM_P.C.1 {bracket}
VTM_P.C.2 {bracket}
VTM_P.R.2 {bracket}
VTM_P.R.3 {bracket}
VTM_P.R.4 {bracket}
VTM_P.R.5 {bracket}
VTM_P.R.6 {bracket}
HRI.W.1 {bracket}
HRI.S.1 {bracket}
HRI.C.1 {bracket}
HRI.C.2 {bracket}
HRI.C.3_C.4 {bracket}
HRI.E.1 {bracket}
HRI.R.1 {bracket}
HRI.R.2 {bracket}
HRI.A.1 {bracket}
TCTM  = CTM5 INTERACT VIA5
DCTM  = CTM5 NOT INTERACT VIA5
BPM5  = SIZE TCTM BY 2 INSIDE OF M5 STEP 0.28*0.7 TRUNCATE 0.28*0.7
DPM5  = M5 INTERACT DCTM
BPM5C = BPM5 COIN EDGE M5
CTM.W.1 {bracket}
CTM.W.2 {bracket}
CTM.S.1 {bracket}
CTM.S.2 {bracket}
CTM.R.2 {bracket}
CTM.W.4 {bracket}
CTM.A.1 {bracket}
CTM.R.5 {bracket}
MIM_M5.W.1 {bracket}
MIM_M5.S.1 {bracket}
MIM_M5.S.2 {bracket}
MIM_M5.E.3  {bracket}
CTMV5 = VIA5 AND CTM5
CBMV5 = (VIA5 AND BPM5) NOT CTM5
CONNECT CTMV5 TCTM
CONNECT CBMV5 BPM5
MIMVIA.S.1 {bracket}
MIMVIA.S.2 {bracket}
MIMVIA.E.1 {bracket}
MIMVIA.E.2 {bracket}
MIMVIA.C.1 {bracket}
MIMVIA.R.1 {bracket}
MIMVIA.R.3 {bracket}
PPOD_SBD_H = (HOLES (((PPOD AND PWEL) AND RFDUMMY) NOT DNW) INNER) ENCLOSE SBDOD
SBD.W.1_SBD.W.1.1 {bracket}
SBD.W.2_SBD.W.2.1 {bracket}
SBD.W.3 {bracket}
SBD.W.4 {bracket}
SBD.S.1 {bracket}
SBD.E.1 {bracket}
SBD.E.2 {bracket}
SBD.O.1 {bracket}
SBD.E.1.1 {bracket}
SBD.E.3 {bracket}
SBD.R.2 {bracket}
SBD.R.3 {bracket}
SBD.R.4 {bracket}
SBD.R.5 {bracket}
#ENDIF
