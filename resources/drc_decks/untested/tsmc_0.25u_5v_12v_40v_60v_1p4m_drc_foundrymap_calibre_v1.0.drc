// *******************************************************************************
// * Calibre DRC COMMAND FILE - CHV25S_7V_12V_20V_24V_40V_45V_60V_4M.04a2 ( 03/22/2013)	 *
// * FOR TSMC 0.25 UM CMOS HIGH VOLTAGE MIXED SIGNAL GENERAL PURPOSE IIA BASED BCD      	         *
// * 1P4M SALICIDE NBL EPI AL USG 2.5/5/7/12/20/24/40/45/60V/VG2.5/5/12V PROCESS         *
// * (DRC COMMAND FILE DOCUMENT:     T-025-CV-DR-015-C1 Rev 0.4a2) 		 *
// * (DESIGN RULE DOCUMENT:          T-025-CV-DR-015 Rev. 0.4)    	         *
// *******************************************************************************


//************************************************************************************
//* TSMC developed this deck using Mentor Graphics proprietary SVRF and TVF formats.
//* The deck is to be used only in Calibre tools.
//************************************************************************************
//  DISCLAIMER
//
//  The information contained herein is provided by TSMC on an "AS IS" basis
//  without any warranty, and TSMC has no obligation to support or otherwise
//  maintain the information.  TSMC disclaims any representation that the
//  information does not infringe any intellectual property rights or proprietary
//  rights of any third parties.  There are no other warranties given by TSMC,
//  whether express, implied or statutory, including, without limitation, implied
//  warranties of merchantability and fitness for a particular purpose.
//
//  STATEMENT OF USE
//
//  This information contains confidential and proprietary information of TSMC.
//  No part of this information may be reproduced, transmitted, transcribed,
//  stored in a retrieval system, or translated into any human or computer
//  language, in any form or by any means, electronic, mechanical, magnetic,
//  optical, chemical, manual, or otherwise, without the prior written permission
//  of TSMC.  This information was prepared for informational purpose and is for
//  use by TSMC's customers only.  TSMC reserves the right to make changes in the
//  information at any time and without notice.
//
//-----------------------------------------------------------------------------------
//
//  NOTICE: (Read Me First!)
//
//  1. If the input GDS file does not include all the layers in the
//     INPUT LAYER BLOCK, for example, they are generated by logic
//     operations, please make sure the consistence with original
//     layer definition.
//  2. The runset is tested and developed on Calibre v2010.4_26.16 (Dec. 2010), 
//     please use this or newer TSMC qualified version of Calibre to execute this runset.
//-----------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//
// REVISION:
//
//        05/16/11 VER. 0.1a_pre051611 R.H.Zhang
//		1) Newly created.
//
//        06/07/11 VER. 0.1a L.Q.Sun
//              1) Official release.
//              2) Modify the rule description of RWDMY.R.2
//              3) Enhanced the rule writing of DPW.E.1.
//              4) Modify the layer definition of PW_RES.
//
//        09/27/11 VER. 0.2a L.Huang
//              1) Only Modify title
//
//	  01/11/12 VER. 0.3a L.Q.Sun
//		1) Add 2T2C MTP (IOLDNMOS and IO CASCODE PMOS) rules:LDPO.C.1,LDPO.E.1,LDOD.S.1,LDOD.O.1,LDOD.C.1,LDOD.E.1,LDOD.W.1,
//	   	   LDNTN.C.1,LDNTN.E.1,LDNTN.R.2,LDNTN.S.1,LDOD.R.1,H18NWDMY.E.1,H18NWDMY.C.1,H18NWDMY.R.1~4,H18NWDMY.S.1~3,MTP.C.1
//		2) Modify rules to waive MTP region to align the DRM update: OD.W.3,OD.C.1~3,OD.E.2,NTN.W.1,NTN.S.1,NTN.C.3,NTN.R.3,
//		   PO.W.2a,PO.R.1,PO.L.1,PP.E.4,NP.C.3,RPO.C.1/3/4/6,RPO.E.1,LAT.3
//		3) Delete rules: SH_N.O.1_PA7G5
//		4) Rename rules: SH_N.O.1_NLD12G12 -> SH_N.O.1 for NLD12G12, HVDMY.R.6 -> HVDMY.R.11
//		5) Modify rules: NBL.R.1,HVDMY2.R.5
//		6) Add rules: SH_N.O.2 for PA7G5, HVDMY.R.6
//		7) Only modify rules description comment according to DRM: HVDMY.R.9,HVDMY.R.8
//		8) Enhanced layerdef of LV_DEVICE
//
//	  10/30/2012 Ver 0.4a L.Q.Sun
//		1) Add rules: HVLUP & HVESD rules, RES.2~5,RES.HRI.1~3,RES.PU5.1/2/4,VIAx.E.4,SDIO.R.1
//		2) Modify rules: LVISO.R.2,ESD.6g,ESD.11g,CTM.R.6
//		3) Enhanced rule:CO.W.1 to waive sealring, VIAx.W.1 to waive VIAtop/VIAD in CB region, HV.R.6 to waive poly res, HVDMY.E.4
//				LDNTN.E.1 & H18NWDMY.R.3
//		4) Modify rule comment: HVOD.R.9
//		5) Delete rule: RES.1
//		6) Rename rule: HVHRI.C.1,HVHRI.R.2~4
//
//	  03/11/2013 Ver 0.4a1 L.Q.Sun
//		1) Update version and release date
//		2) Enhanced HVLUP.13
//
//	  03/22/2013 Ver 0.4a2 X.Yao
//		1) add CTM.R.9
//
//
//************************************************************
//	Dummy layer descriptions
//************************************************************
//
//   1) HOTWL- Hot N-Well
//             N-Well not connected to the most positive
//             voltage Vdd is defined as Hot N-Well. It
//             must follow different width and space rules
//             from the N-Well connected to Vdd (Cold N-
//             Well). Use "HOTWL" layer to exactly cover
//             the Hot N-Well area for correct N-Well DRC.
//
//   2) EXCL - unDRC area
//             If there's any area with different rules
//             and not to be checked in this run, use the
//             "EXCL" layer to exactly cover the area to
//             be excluded.
//
//   3) SDI  - I/O ESD Protection Circuit
//             For I/O guidance rule checking, use "SDi"
//             layer to designate the ESD area to checked.
//             The whole ESD devices should be covered by
//             "SDi".
//
//   4) RWDMY- NWell Resistor
//             The N-Well region covered by both RWDMY and
//             RPO is the NW within OD resistor.
//             The N-Well region covered by only RWDMY is
//             the NW under STI resistor.
//
//   5) DRCDMY- TSMC reserved layer
//      DRCDMY2  For internal usage of TSMC, please don't use
//             this layer.
//
//   6) DPDMY - Dummy Pad area
//            For chip corner dummy pad, use "DPDMY" layer to
//            exactly cover dummy pad area.
//
//   7) PLDMY - Power Line
//            For chip corner power line, use "PLDMY" layer to
//            cover whole power line area.
//
//   8) PLMIi - Fuse structure dummy layer
//	     Use "PLMIi" layer to cover fuse window and 
//	     protection ring structure 
//
//-----------------------------------------------------------------------------------
//
//                      CURRENT STATUS
//
//  RULES NOT IMPLEMENTED:
//
// The following rules are not coded in this command file:
//
// (I) Logic part:
//
// rule                      description/explanation/alternate file
// ------------------------  ----------------------------------------------------
// Part I recommendations    Not coded (page 3 of spec.)
// 
// Antenna rules             Please refer to antenna DRC deck.
//
// Seal ring rules 	     not coded.
//
// Passivation rules         Please refer to Bound PAD DRC deck.
//
// Latch up Guideline        Only 2 & 3 implemented.
//
// IO ESD Protection 	     Only 4, 5, 6, 9 implemented. 
// Guideline
//
// Un-Checkable rules	     LDNTN.R.1 PO.EX.2m HV.R.5 PA24DMY.R.1 HVBJT.R.1 DIODMY.R.1 RWDMY.R.1
//			     RS3TDMY.R.1 RS4TDMY.R.1 NBL.R.5 NWLVT.R.1 H60NW.R.1 VTLVDN.R.1 HVRES.R.1
//			     VIAx.C.1 BJTDMY.R.1 
//
// (II) Mixed-signal part:
//
// BPI, CTP, and DNW related rules are not implemented.
//
// (III) HV part:
//
// 1) GR.R.3 is not checked.
// 2) HV ESD is not checked.
// 3) HVNW.R.1 is not checked.
// 4) MACRO.R.1 
// 5) HVOD.R.5 
// 6) HVCO.R.1 and HVCO.R.2.  
/////////////////////////////////////////////////////////////////////////////////

//-------------------------------------------------------------------------------------------
//	
//  * To correctly use this DRC deck, the following settings are very important in
//    this DRC command file:
//	
//  (0) Calibre v2010.4_26.16 (Dec. 2010) is used to develop and QA this command file. 
//	Please execute the DRC with this or newer TSMC qualified version of Calibre.
//
//  (1) Variable for check SRAM inside layer EXCL:
//
//	By default, we exclude DRC check inside SRAM region covered by exclude layer "EXCL(55)".
//	However, customers could enable this option to check M2 and upward layers inside EXCL
//	in order to check logic rules inside SRAM.
//	Please notice that by turned on, this option will disable the waiving function of EXCL, 
//	and the region covered by EXCL will be examined with M2 and upward layers' rules.
//	Please remove // to unable this function as following:
//
//		#DEFINE CHECK_SRAM_EXCL
//
//  (2) Variable for Thick Top Metal check:
//      
//	By default, we check the 30KA top metal. If customer uses 15KA thick top metal,  
//	please remove // in front of "#DEFINE THICK_15K" and add // in front of "#DEFINE THICK_30K" as following: 
//
//		#DEFINE THICK_15K
//		//#DEFINE THICK_30K
//
//	If customer uses normal top metal, please add // in front of "#DEFINE THICK_30K" and
//	add // in front of "#DEFINE THICK_15K" to switch the options.
//
//		//#DEFINE THICK_15K
//		//#DEFINE THICK_30K
//
//  (3) Variable for substrate to ground check:
//
//	By default, this deck set substrate not tied to ground. If substrate is tied to ground,
//	please add // to disable this option:
//
//		//#DEFINE SUB_NOT_GROUND
//
//  (4) Variable for recommended rule check:
//
//	By default, recommended rules are not checked, but it is suggested to remove // to 
//	enable this option from the point of view of noise isolation and SPICE model accuracy.
//	The recommended rule check includes M{1..4}.E.3R, VIA{1..4}.E.3R and rules.
//
//		#DEFINE RECOMMEND
//
//  (5) Variable for dummy OD&PO rule checking:
//
//	By default, dummy OD&PO are checked by rules in this deck. But some unnecessary rule 
//	checks may induce false alarm. If dummy OD&PO are not required to check, please
//	add // to disable this option:
//
//		//#DEFINE CHECK_DUMMY_ODPO
//
//	Note: If this option is disabled, please make sure the LVS result is correct after 
//	      dummy insertion to prevent from dummy pattern induced layout circuit short.
//
//  (6) Variable CHECK_LATCHUP_BY_TEXT:
//     DRC uses CB/CBD/CB2/UBM layer to recognize PAD, and uses the connection
//     of well strap to distinguish IO PAD and VDD/VSS PAD. So latch-up rules can not be
//     checked in cell level if no CB/CBD/CB2/UBM layer exists. Also,if VDD/VSS pad is not
//     connected to strap, it will be falsely recognized as IO pad. 
//     You can turn on this option to solve these inconveniences. Assign the PAD/VDD/VSS pin name in
//     Variables (PAD_TEXT/VDD_TEXT/VSS_TEXT). Notice that only text by metal pin layer in top cell
//     is used for latch-up check.
//
//     By default, the switch CHECK_LATCHUP_BY_TEXT is off. If you want to recognize VDD/VSS/PAD by pin name,
//     you could remove // this switch as follow:
//
//              #DEFINE CHECK_LATCHUP_BY_TEXT
//
// (7) DISCONNECT_AFTER_RESISTOR : 
//     By default, the connection is broken by resistors for Latch-Up rule checks. 
//     The switches of "DISCONNECT_AFTER_RESISTOR" can control the connectivity of resistor.
//     Turn on this option will disconnect all resistors between pad and device for Latch-Up rule check.
//           	//#DEFINE DISCONNECT_AFTER_RESISTOR
// (8) PARASITIC_ESD:
//       By default, this deck check the _40V_PARASITIC_ESD, if the highest voltage is not 40V in whole chip, please turn off the _40V_PARASITIC_ESD to choose the right voltage switch
//	#DEFINE PARASITIC_ESD           // Turn off to disable check Parasitic ESD rules
//	#DEFINE _40V_PARASITIC_ESD       // Turn off to check 24V_Parasitic,20V_Parasitic,7/12V_Parasitic ESD rules
//	//#DEFINE _24V_PARASITIC_ESD       // Turn on to check 24V_Parasitic ESD rules
//	//#DEFINE _20V_PARASITIC_ESD       // Turn on to check 20V_Parasitic ESD rules
//	//#DEFINE _7_12V_PARASITIC_ESD         // Turn on to check 7/12V_Parasitic ESD rules
//-------------------------------------------------------------------------------------------
// OPTION SETUP
//-----------------
//#DEFINE CHECK_SRAM_EXCL // turn on only when you want check M2 and upward layers in SRAM region covered by EXCL. otherwise please turn off it
//#DEFINE THICK_30K         // turn on only when 30KA Thick Top Metal is used. otherwise please turn off it 
#DEFINE THICK_15K         // turn on only when 15KA Thick Top Metal is used. otherwise please turn off it 
//#DEFINE SUB_NOT_GROUND    // turn on only when substrate is not tied to ground. otherwise please turn off it
//#DEFINE RECOMMEND	  // turn on only when you want to check Recommended rules. otherwise please turn off it
#DEFINE PARASITIC_ESD                 // Turn on to check Parasitic ESD rules
	#DEFINE _40V_PARASITIC_ESD         // Turn off to check 24V_Parasitic,20V_Parasitic,7/12V_Parasitic ESD rules
	//#DEFINE _24V_PARASITIC_ESD         // Turn on to check 24V_Parasitic ESD rules
	//#DEFINE _20V_PARASITIC_ESD         // Turn on to check 20V_Parasitic ESD rules
	//#DEFINE _7_12V_PARASITIC_ESD         // Turn on to check 7/12V_Parasitic ESD rules
#DEFINE CHECK_DUMMY_ODPO  // turn on only when you want check Dummy OD&PO. otherwise please turn off it
#DEFINE DISCONNECT_AFTER_RESISTOR         // turn on to break connection after resistor for Latch-Up rule check. otherwise please turn off it
//#DEFINE CHECK_LATCHUP_BY_TEXT       // Turn on to recognize IO PAD by following text  
VARIABLE PAD_TEXT  "?"       // pin name of PAD
//VARIABLE LU_POWER  "AVDDBG" "AVDDR" "AVDWELL" "VDWELL" "VD33APST" "VDD5V" "TAVD33" "VD33PST" "AVDD" "TAVDD" "TAVD33PST" "TAVDDPST" "AVD33B" "VDD" "AVD33G" "DVDD" "AVDDG" "AVDDB" "VDDG" "VDDPST" "VD33REF" "VD33" "AVD33R" "VDDSA"    // pin name of VDD
//VARIABLE GROUND_NEG_POWER  "VSSPST" "AVS33R" "AVSSUB" "VSSREF" "VSSAPST" "VS33APST" "DVSS" "AVS33G" "AVSSBG" "TAVSS" "AVS33B" "AVSSB" "GND" "VSSG" "VSSUB" "VSS" "AVSS" "TAVSSPST" "AGND" "AVSSR" "AVSSG"    // pin name of VSS 

#IFDEF PARASITIC_ESD 
#IFNDEF _40V_PARASITIC_ESD
#IFNDEF _24V_PARASITIC_ESD
#IFNDEF _20V_PARASITIC_ESD
#IFNDEF _7_12V_PARASITIC_ESD
PARASITIC:WARNING { @ Please turn off PARASITIC_ESD switch, if 40V_PARASITIC_ESD and 24V_PARASITIC_ESD and 20V_PARASITIC_ESD and 7/12V_PARASITIC_ESD switch are all off.
  COPY CHIP
}
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

///////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////SSL PAD TEXT definition//////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

#IFDEF TOP_LEVEL_LVS
TEXT LAYER  MET1TXT MET2TXT MET3TXT MET4TXT MET5TXT MET6TXT MET8TXT
PORT LAYER TEXT  MET1TXT MET2TXT MET3TXT MET4TXT MET5TXT MET6TXT MET8TXT

#IFDEF GOLD_BUMP
#IFNDEF WIRE_BOND
ATTACH	MET8TXT   BUMPMSK
CONNECT	MD   BUMPMSK BY	PASSBUM
#ENDIF
#ENDIF

#IFDEF WIRE_BOND
#IFNDEF GOLD_BUMP
ATTACH	MET8TXT   PASSWIRE
CONNECT	MD   PASSWIRE
#ENDIF
#ENDIF

#IFDEF GOLD_BUMP
#IFDEF WIRE_BOND
ATTACH	MET8TXT   BUMPMSK
CONNECT	MD   BUMPMSK BY	PASSBUM
ATTACH	MET8TXT   PASSWIRE
CONNECT	MD   PASSWIRE
#ENDIF
#ENDIF

#ENDIF

#IFNDEF TOP_LEVEL_LVS
PORT LAYER TEXT MET1TXT MET2TXT MET3TXT MET4TXT MET5TXT MET6TXT MET8TXT
TEXT LAYER MET1TXT MET2TXT MET3TXT MET4TXT MET5TXT MET6TXT MET8TXT
#ENDIF
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

//
// ENVIRONMENT SETUP
//------------------
PRECISION    1000
RESOLUTION     10    // layout grid size 0.01um

//LAYOUT SYSTEM GDSII
LAYOUT PATH "./test.gds"
LAYOUT PRIMARY "test"

DRC RESULTS DATABASE "./calibre_drc.out"
DRC SUMMARY REPORT "./calibre_drc.sum" 
//DRC CHECK TEXT ALL
//DRC MAXIMUM RESULTS ALL

//FLAG OFFGRID YES     // For layout grid check. default grid value is resolution size
//FLAG ACUTE YES
//FLAG SKEW YES
//FLAG NONSIMPLE YES

LAYOUT PROCESS BOX RECORD YES

VARIABLE NW_W_1		1.2
VARIABLE NW_W_2		3.0
VARIABLE NW_S_1		2.0
VARIABLE NW_S_2		0.6
VARIABLE OD_W_1_2	0.3 
VARIABLE OD_W_3		0.5 
VARIABLE OD_S_1		0.4 
VARIABLE OD_C_1		0.15 
VARIABLE OD_C_2_3	0.6
VARIABLE OD_E_2		0.6
VARIABLE OD_C_4     0.6 
VARIABLE OD_C_5		0.15 
VARIABLE RPO_W_1	0.6 
VARIABLE RPO_S_1	0.6 
VARIABLE RPO_C_1	0.3 
VARIABLE RPO_C_2	0.3 
VARIABLE RPO_C_3	0.3 
VARIABLE RPO_C_4	0.3 
VARIABLE RPO_E_1	0.3 
VARIABLE RPO_C_5	0.3 
VARIABLE RPO_A_1	2.0 
VARIABLE RPO_O_1	0.3 
VARIABLE RPO_C_6	0.3 
VARIABLE PO_W_1_2_3	0.24 
VARIABLE PO_W_1a	0.50 
VARIABLE PO_W_2a	0.50 
VARIABLE PO_S_1		0.40 
VARIABLE PO_S_2		0.36 
VARIABLE PO_C_1		0.14
VARIABLE PO_C_2		0.14 

VARIABLE PO_O_1		0.30 
VARIABLE PO_W_4		0.60 
VARIABLE PO_W_5		0.60 
VARIABLE PO_L_1		1.0 
VARIABLE PO_L_2		1.0 
VARIABLE PO_S_4		0.56 
VARIABLE PO_S_5		0.56 
VARIABLE PO_W_7		1.20 
VARIABLE PO_W_8		1.20 
VARIABLE PO_W_9		2.00 
VARIABLE PP_W_1		0.44
VARIABLE PP_S_1		0.44
VARIABLE PP_C_1		0.26
VARIABLE PP_C_2		0.14
VARIABLE PP_C_3		0.32
VARIABLE PP_C_4		0.32
VARIABLE PP_O_1		0.32
VARIABLE PP_E_1		0.26
VARIABLE PP_E_2		0.04
VARIABLE PP_E_4		0.26
VARIABLE H60NW_W_1	3.0
VARIABLE H60NW_W_2	2.0
VARIABLE H60NW_S_1	3.2
VARIABLE H60NW_S_2	2.48
VARIABLE H60NW_E_1	0.0
VARIABLE H60NW_C_1	0.0
VARIABLE NWLVT_W_1	3.0
VARIABLE NWLVT_S_1	3.2
VARIABLE NWLVT_C_1	0.6
VARIABLE NWLVT_C_2	0.8
VARIABLE NWLVT_C_3	0.6
VARIABLE NWLVT_C_4	3.5
VARIABLE NWLVT_C_5	3.2
VARIABLE NWLVT_C_6	3.5
VARIABLE NWLVT_E_1 	1.5
VARIABLE HVDMY2_E_1 	2.0
VARIABLE HVDMY2_S_1 	2.0
VARIABLE HVDMY2_E_3 	8.58
VARIABLE HVDMY2_E_4 	4.0
VARIABLE HVDMY2_E_5 	6.91
VARIABLE HVDMY2_E_6 	3.58
VARIABLE HVDMY2_E_7 	1.5
VARIABLE HVDMY2_E_8 	8.08
VARIABLE HVDMY2_W_1 	8.58
VARIABLE HV40_S_1	2.0
VARIABLE HV40_E_3	3.58
VARIABLE HV40_E_4	1.5
VARIABLE PSUB_W_1 	3.0
VARIABLE PSUB_S_1 	3.2
VARIABLE VTLVDN_W_1 	1.22
VARIABLE VTLVDN_E_1 	0.2
VARIABLE VTLVDN_S_1 	0.6
VARIABLE GRID 			0.01
VARIABLE NBL_W_1 		8.0
VARIABLE NBL_W_2 		13.0
VARIABLE NBL_S_1 		3.58
VARIABLE HVOD_C_12 		1.6
VARIABLE DPW_W_3 		2.0
VARIABLE DPW_E_4 		0.5
VARIABLE DPW_O_1 		1.5
VARIABLE DPW_E_5 		0.3
VARIABLE DPW_E_6 		1.2
VARIABLE DPW_E_7 		0.5
VARIABLE HVNW_W_1 		3.0
VARIABLE HVNW_W_2 		2.52
VARIABLE HVNW_W_3 		1.88
VARIABLE HVNW_W_4 		0.98
VARIABLE HVNW_W_5 		8.58
VARIABLE HVNW_S_1 		3.2
VARIABLE HVNW_S_2 		3.06
VARIABLE HVNW_S_3 		2.48
VARIABLE HVNW_S_4 		3.18
VARIABLE HVNW_S_5 		2.48
VARIABLE HVNW_S_6 		2.0
VARIABLE HVNW_S_7 		1.58
VARIABLE HVPO_C_1_G12 		0.5
VARIABLE HVPO_C_1_G5 		0.7
VARIABLE HVPO_C_7 		1.3
VARIABLE HVPO_C_6 		0.7
VARIABLE HVPO_O_1_G12 		1.0
VARIABLE HVPO_O_1_G5 		0.4
VARIABLE HVPO_W_2_NLD12G5 	1.3
VARIABLE HVPO_W_2_NLD7G5 	0.9
VARIABLE HVPO_W_3_PA7G5 	0.7
VARIABLE HVPO_C_4_NLD60G5_V2 	3.1
VARIABLE HVPO_C_4_NLD45G5 	1.8
VARIABLE HVPO_C_4_NLD40G12 	1.5
VARIABLE HVPO_C_4_NLD40G5 	1.5
VARIABLE HVPO_C_4_NLD24G5 	0.7
VARIABLE HVPO_C_4_NI24G5 	0.9
VARIABLE HVPO_C_4_NDLD24G5 	1.1
VARIABLE HVPO_C_4_NLD20G5 	0.7
VARIABLE HVPO_C_4_PA60G5_V2 	2.8
VARIABLE HVPO_C_4_PA45G5 	1.3
VARIABLE HVPO_C_4_PA40G5 	2.0
VARIABLE HVPO_C_4_PA40G12 	1.0
VARIABLE HVPO_C_4_PA24G5 	0.3
VARIABLE HVPO_C_4_PA12G12 	0.3
VARIABLE HVPO_C_4_PA12G5 	0.2
VARIABLE HVPO_C_2_NLD60G5_V2	0.88
VARIABLE HVPO_C_2_NLD45G5	0.88
VARIABLE HVPO_C_2_NLD40G5	0.5
VARIABLE HVPO_C_2_NLD24G5	0.5
VARIABLE HVPO_C_2_NDLD24G5	0.5
VARIABLE HVPO_C_2_NI24G5	0.5
VARIABLE HVPO_C_2_NLD20G5	1.08
VARIABLE HVPO_C_2_NLD12G5	0.5
VARIABLE HVPO_C_2_NLD7G5	0.76
VARIABLE HVPO_C_2_NLD7G5_FISO	0.76
VARIABLE HVPO_C_2_NLD12G12	0.6
VARIABLE HVPO_C_2_NLD40G12	0.5
VARIABLE HVPO_C_2_PA60G5_V2	0.88
VARIABLE HVPO_C_2_PA45G5	0.88
VARIABLE HVPO_C_2_PA40G5	0.5
VARIABLE HVPO_C_2_PA24G5	0.5
VARIABLE HVPO_C_2_PA12G5	0.5
VARIABLE HVPO_C_2_PA7G5		0.3
VARIABLE HVPO_C_2_PA12G12	0.5
VARIABLE HVPO_C_2_PA40G12	0.5
VARIABLE HVPO_E_4 		0.1
VARIABLE HVPO_E_5 		0.3
VARIABLE HVPO_E_3 		0.5
VARIABLE HVPO_S_1 		1.08
VARIABLE HVRPO_E_2_12V 		0.5
VARIABLE HVRPO_E_2_40V 		0.3
VARIABLE HVRPO_O_2_12V 		0.3
VARIABLE HVRPO_O_2_40V 		0.3
VARIABLE HVRPO_E_1 		0.92
VARIABLE NZENER_W_2		1.5
VARIABLE HVRPO_S_2 		1.5
VARIABLE HVRPO_W_1 		0.6
VARIABLE HVOD_S_1_NLD60G5_V2 	4.1
VARIABLE HVOD_S_1_NLD45G5 	2.4
VARIABLE HVOD_S_1_NLD40G12 	3.0
VARIABLE HVOD_S_1_NLD40G5 	2.2
VARIABLE HVOD_S_1_NLD24G5 	1.1
VARIABLE HVOD_S_1_NI24G5 	1.3
VARIABLE HVOD_S_1_NDLD24G5 	2.1
VARIABLE HVOD_S_1_NLD20G5 	1.0
VARIABLE HVOD_S_1_PA60G5_V2 	3.8
VARIABLE HVOD_S_1_PA45G5 	1.9
VARIABLE HVOD_S_1_PA40G5 	2.3
VARIABLE HVOD_S_1_PA40G12 	1.5
VARIABLE HVOD_S_1_PA24G5 	0.5
VARIABLE HVOD_S_1_PA12G12 	1.2
VARIABLE HVOD_S_1_PA12G5 	0.4
VARIABLE HVOD_O_1_NLD60G5_V2 	0.6
VARIABLE HVOD_O_1_NLD45G5 	0.7
VARIABLE HVOD_O_1_NLD40G12 	0.7
VARIABLE HVOD_O_1_NLD40G5 	0.8
VARIABLE HVOD_O_1_NLD24G5 	0.8
VARIABLE HVOD_O_1_NI24G5 	0.8
VARIABLE HVOD_O_1_NDLD24G5 	0.7
VARIABLE HVOD_O_1_NLD20G5 	1.0
VARIABLE HVOD_O_1_NLD12G12 	0.7
VARIABLE HVOD_C_1_PA60G5_V2 	0.7
VARIABLE HVOD_C_1_PA45G5 	0.8
VARIABLE HVOD_C_1_PA40G5 	0.6
VARIABLE HVOD_C_1_PA40G12 	0.7
VARIABLE HVOD_C_1_PA24G5 	0.8
VARIABLE HVOD_C_1_PA12G12 	0.5
VARIABLE HVOD_C_1_PA12G5 	0.7
VARIABLE HVOD_E_1_NLD40G12 	2.0
VARIABLE HVOD_E_1_NLD40G5 	2.0
VARIABLE HVOD_E_1_NLD24G5 	1.5
VARIABLE HVOD_E_1_NI24G5 	1.5
VARIABLE HVOD_E_1_NDLD24G5 	2.0
VARIABLE HVOD_E_1_NLD20G5 	2.0
VARIABLE HVOD_E_1_NLD12G12 	0.8
VARIABLE HVOD_E_1_NLD12G5 	0.8
VARIABLE HVOD_E_1_NLD7G5_FISO 	0.8
VARIABLE HVOD_E_1_NLD7G5 	2.0
VARIABLE HVOD_E_1_PA7G5 	2.0
VARIABLE HVOD_E_2_NLD7G5 	0.2
VARIABLE HVOD_E_2_NLD7G5_FISO 	0.2
VARIABLE HVOD_E_2_NLD12G5 	0.2
VARIABLE HVOD_E_2_NLD20G5 	0.2
VARIABLE HVOD_C_2_PA60G5_V2 	4.0
VARIABLE HVOD_C_2_PA45G5 	3.5
VARIABLE HVOD_C_2_PA40G5 	2.0
VARIABLE HVOD_C_2_PA40G12 	2.0
VARIABLE HVOD_C_2_PA24G5 	1.5
VARIABLE HVOD_C_2_PA12G12 	1.5
VARIABLE HVOD_C_2_PA12G5 	0.8
VARIABLE HVOD_W_1 		3.0
VARIABLE HVOD_W_1_1 		5.0
VARIABLE HVOD_W_2 		0.58
VARIABLE HVOD_E_2		0.2
VARIABLE HVOD_C_4 		1.5
VARIABLE HVOD_C_11 		4.0
VARIABLE HVOD_C_15 		3.5
VARIABLE HVOD_E_14_PA60G5_V2	6.92
VARIABLE HVOD_E_14_PA45G5	5.92
VARIABLE HVOD_E_15		4.0
VARIABLE HVOD_E_16_12V		0.1
VARIABLE HVOD_E_16_24V		0.2
VARIABLE HVOD_E_18		2.0
VARIABLE HVOD_E_5_PG5		0.72
VARIABLE HVOD_C_6_NG5		1.46
VARIABLE HVOD_C_9		1.16
VARIABLE HVOD_C_5		1.86
VARIABLE HVOD_E_4		2.0
VARIABLE HVOD_R_6		0.64
VARIABLE HVOD_C_7		2.0
VARIABLE HVOD_S_2		1.2
VARIABLE HVOD_W_4		0.45
VARIABLE HVOD_O_2_12V		0.3
VARIABLE HVOD_O_2_24V		0.2
VARIABLE HVOD_E_3		1.5
VARIABLE HVOD_E_3_RES		2.0
VARIABLE HVOD_C_13		2.0
VARIABLE HVOD_E_17		4.0
VARIABLE HVOD_E_13_PA60G5_V2	4.0
VARIABLE HVOD_E_19		3.5
VARIABLE HVOD_E_13_LV_ISO	4.0
VARIABLE HVOD_E_12		4.0
VARIABLE HVOD_C_8_NLD24G5	2.0
VARIABLE HVOD_C_8_NI24G5	1.5
VARIABLE HVOD_E_6		4.0
VARIABLE HVOD_E_7		0.5
VARIABLE HVOD_E_8		0.2
VARIABLE HVOD_E_9_PA12G5	0.2
VARIABLE HVOD_E_9_PA7G5		0.1
VARIABLE HVOD_E_10		0.0
VARIABLE HVOD_S_3		3.0
VARIABLE HVNP_C_1		0.2
VARIABLE HVNP_C_2_NLD12G12	0.3
VARIABLE HVNP_C_2_NLD12G5	0.3
VARIABLE HVNP_C_3_NLD12G12	0.4
VARIABLE HVNP_C_3_NLD12G5	0.6
VARIABLE HVOD_C_14		0.3
VARIABLE HVOD_S_4		0.4
VARIABLE HVPP_E_3		0.0
VARIABLE HVNP_O_1		0.2
VARIABLE HVNP_E_1		0.32
VARIABLE HVNP_C_4		0.32
VARIABLE HVPP_C_2		0.2
VARIABLE HVPP_C_3		1.0
VARIABLE HVPP_C_4		0.2
VARIABLE HVPP_C_5		0.71
VARIABLE HVPP_C_6		0.91
VARIABLE HVPP_O_1		0.2
VARIABLE HVPP_O_2		0.24
VARIABLE HVPP_O_3		0.3
VARIABLE HVPP_O_4_12V		0.3
VARIABLE HVPP_O_4_24V		0.2
VARIABLE HVPP_S_1_12V		1.4
VARIABLE HVPP_S_1_24V		1.4
VARIABLE HVPP_S_1_40V		0.52
VARIABLE HVPP_S_2		5.0
VARIABLE HVPB_W_1		1.48
VARIABLE HVPB_S_1		0.6
VARIABLE HVPB_C_1_A		0.3
VARIABLE HVPB_C_1_NLD7G5	5.5
VARIABLE HVPB_C_1_NLD7G5_FISO	1.8
VARIABLE HVPB_C_2		0.5
VARIABLE HVPB_C_3		0.8
VARIABLE HVPB_O_1		0.2
VARIABLE SH_P_W_3		0.3
VARIABLE SH_P_C_2		0.1
VARIABLE SH_P_S_2		1.6
VARIABLE SH_P_O_1_A		0.15
VARIABLE SH_P_O_1_NI24G5	1.0
VARIABLE SH_P_O_1_NLD20G5	0.05
VARIABLE SH_P_O_1_NLD60G5_V2	0.3
VARIABLE SH_P_O_1_NLD45G5	0.5
VARIABLE SH_P_C_1_A		0.3
VARIABLE SH_P_C_1_NI24G5	0.3
VARIABLE SH_P_C_1_NLD20G5	0.2
VARIABLE SH_P_C_1_ZENER		0.3
VARIABLE SH_P_C_3_PA12G5	0.2
VARIABLE SH_P_C_3_PA7G5		0.1
VARIABLE SH_P_C_4		0.4
VARIABLE SH_N_O_2		0.2
VARIABLE SH_N_E_4		0.2
VARIABLE SH_N_E_5		0.5
VARIABLE SH_N_E_6		0.2
VARIABLE SH_N_C_2		0.3
VARIABLE SH_N_C_3_NLD12G5	0.8
VARIABLE SH_N_C_3_NLD20G5	0.3
VARIABLE SH_N_C_3_NLD7G5	0.1
VARIABLE SH_N_C_3_NLD7G5_FISO	0.1
VARIABLE HVOD_C_16_12V		1.1
VARIABLE HVOD_C_16_24V		2.7
VARIABLE OD2_E_3		1.5
VARIABLE OD2_C_5		1.5
VARIABLE DPW_S_4		1.78
VARIABLE NZENER_W_1		0.82
VARIABLE NZENER_W_1_1		0.66
VARIABLE NZENER_C_1		0.4
VARIABLE NZENER_E_1		0.2
VARIABLE NZENER_O_1		0.1
VARIABLE HVBJT_E_2		0.3
VARIABLE HVBJT_O_1		0.3
VARIABLE HVBJT_E_1_WORPO	0.26
VARIABLE HVBJT_E_1_WIRPO	0.0
VARIABLE HVBJT_E_6		0.5
VARIABLE HVBJT_E_7		0.5
VARIABLE HVBJT_E_11		1.6
VARIABLE HVBJT_S_1_WORPO	2.0
VARIABLE HVBJT_S_1_NHVPWNBL_WIRPO	0.6
VARIABLE HVBJT_S_1_NWHVPWNBL_WIRPO	1.0
VARIABLE HVBJT_S_2_PWHVNWDPW	2.0
VARIABLE HVBJT_S_2_PBHVNWDPW	1.2
VARIABLE HVBJT_S_2_PNP		1.0
VARIABLE HVBJT_S_3		1.5
VARIABLE HVBJT_E_13_WORPO	0.5
VARIABLE HVBJT_E_13_WIRPO	0.1
VARIABLE HVBJT_E_13_PBHVNWDPW	0.0
VARIABLE HVBJT_E_14		0.5
VARIABLE HVBJT_E_15_WORPO	0.5
VARIABLE HVBJT_E_15_WIRPOa	0.1
VARIABLE HVBJT_E_15_WIRPOb	0.0
VARIABLE HVBJT_E_15_PBHVNWDPW	0.0
VARIABLE HVBJT_E_15_LPNP	0.15
VARIABLE HVBJT_E_3_WORPO	2.0
VARIABLE HVBJT_E_3_WIRPOa	1.3
VARIABLE HVBJT_E_3_WIRPOb	1.0
VARIABLE HVBJT_E_4_WORPO	2.0
VARIABLE HVBJT_E_4_WIRPO	1.5
VARIABLE HVBJT_C_2_WORPO	2.0
VARIABLE HVBJT_C_2_WIRPO	1.3
VARIABLE HVBJT_E_8_PWHVNWDPW	2.0
VARIABLE HVBJT_E_8_PBHVNWDPW	0.7
VARIABLE HVBJT_E_8_LPNP		1.5
VARIABLE HVBJT_E_16		1.0
VARIABLE HVBJT_C_4_PWHVNWDPW	2.0
VARIABLE HVBJT_C_4_PBHVNWDPW	0.7
VARIABLE HVBJT_C_4_LPNP		0.5
VARIABLE HVBJT_C_7		1.0
VARIABLE HVBJT_C_6		0.5
VARIABLE HVBJT_E_9_PWHVNWDPW	0.5
VARIABLE HVBJT_E_9_PBHVNWDPW	1.5
VARIABLE HVBJT_C_8_PWHVNWDPW	2.0
VARIABLE HVBJT_C_8_PBHVNWDPW	1.5
VARIABLE HVBJT_C_5		1.0
VARIABLE HVBJT_E_10_PWHVNWDPW	0.5
VARIABLE HVBJT_E_10_PBHVNWDPW	1.5
VARIABLE HVBJT_W_6_NHVPWNBL_WORPO	2.0
VARIABLE HVBJT_W_6_NHVPWNBL_WIRPO	0.58
VARIABLE HVBJT_W_6_PWHVNWDPW	2.0
VARIABLE HVBJT_W_6_PBHVNWDPW	0.58
VARIABLE HVBJT_W_6_LPNP		0.58
VARIABLE HVBJT_W_6_PNP		1.0
VARIABLE HVBJT_W_6_PNP_BGR8	1.0
VARIABLE HVBJT_W_6_NWHVPWNBL_WORPO	1.18
VARIABLE HVBJT_W_6_NWHVPWNBL_WIRPO	0.58
VARIABLE HVBJT_W_7_NHVPWNBL_WORPO	2.0
VARIABLE HVBJT_W_7_NHVPWNBL_WIRPO	0.58
VARIABLE HVBJT_W_7_PWHVNWDPW	2.0
VARIABLE HVBJT_W_7_PBHVNWDPW	0.58
VARIABLE HVBJT_W_7_LPNP		0.58
VARIABLE HVBJT_W_7_PNP		2.0
VARIABLE HVBJT_W_7_PNP_BGR8	2.0
VARIABLE HVBJT_W_7_NWHVPWNBL_WORPO	1.18
VARIABLE HVBJT_W_7_NWHVPWNBL_WIRPO	0.58
VARIABLE WR_R_1R_RPW_W	3.0
VARIABLE WR_R_1R_RPW_Nsq1	10.0
VARIABLE WR_R_1R_RPW_Nsq2	5.0
VARIABLE WR_R_2R_RPOD_W	1.0
VARIABLE WR_R_2R_RPOD_Nsq1	5.0
VARIABLE WR_R_2R_RPOD_Nsq2	3.0
VARIABLE WR_R_3R_RHVPW_W	6.0
VARIABLE WR_R_3R_RHVPW_L	100.0
VARIABLE WR_R_3R_RHVPW_Nsq	5.0
VARIABLE WR_R_3R_RHVNW_W	6.0
VARIABLE WR_R_3R_RHVNW_L	100.0
VARIABLE WR_R_3R_RHVNW_Nsq	5.0
VARIABLE WR_R_4R_RH60NW_W	7.0
VARIABLE WR_R_4R_RH60NW_L	70.0
VARIABLE WR_R_4R_RH60NW_Nsq	5.0
VARIABLE RES_2_W    2.0
VARIABLE RES_2_Nsq  5.0
VARIABLE RES_4_W    2.0
VARIABLE RES_4_Nsq  5.0
VARIABLE VIA2_E_4   0.09
VARIABLE VIA3_E_4   0.09
VARIABLE VIA4_E_4   0.09
VARIABLE RES_1R_W 	2.0
VARIABLE RES_1R_NSQ 	5.0
VARIABLE PO_W_6_NSQ 	5.0
VARIABLE PO_W_10_W 	2.0
VARIABLE PO_W_10_NSQ 	5.0
VARIABLE OD_W_4		0.6
VARIABLE OD_W_5		1.0
VARIABLE DPW_W_1	3.5
VARIABLE DPW_W_2	2.48
VARIABLE DPW_C_1	1.0
VARIABLE DPW_S_1	2.0
VARIABLE DPW_S_2	1.48
VARIABLE DPW_S_3	1.88
VARIABLE DPW_E_1	1.0
VARIABLE DPW_E_2	0.5
VARIABLE DPW_E_3	4.0
VARIABLE HV_S_1		2.0
VARIABLE HV_E_1		3.58
VARIABLE HV_E_2		1.5
VARIABLE HV_C_2		0.6
VARIABLE HV_W_1		3.58
VARIABLE HVDMY_S_1	2.0
VARIABLE HVDMY_E_2	2.0
VARIABLE HVDMY_E_3	3.58
VARIABLE HVDMY_E_4	1.5
VARIABLE SH_P_W_1	1.08
VARIABLE SH_P_W_2	0.58
VARIABLE SH_P_E_1	0.5
VARIABLE SH_P_E_2	0.5
VARIABLE SH_P_E_3	2.0
VARIABLE SH_P_O_1	0.15
VARIABLE SH_P_O_2	0.6
VARIABLE SH_P_C_1	0.3
VARIABLE SH_P_C_3	0.2
VARIABLE SH_P_S_1	0.6
VARIABLE SH_N_W_1	1.22
VARIABLE SH_N_W_2	0.2
VARIABLE SH_N_E_1	1.0
VARIABLE SH_N_S_1	0.6
VARIABLE SH_N_E_2	0.26
VARIABLE SH_N_E_3	0.5
VARIABLE SH_N_W_3	0.62
VARIABLE SH_N_W_4	0.26
VARIABLE HVPO_O_2	0.7
VARIABLE HVPO_W_1	0.6
VARIABLE HVPO_S_2	1.7
VARIABLE HVNW_C_1	0.6
VARIABLE HVNW_C_2	0.15
VARIABLE HVNW_C_3	0.15
VARIABLE HVNW_C_4	0.6
VARIABLE HVNW_C_5	0.6
VARIABLE HVNW_C_6	3.5
VARIABLE HVNW_C_7	2.0
VARIABLE NTN_W_1	3.2
VARIABLE NTN_W_2	2.0
VARIABLE NTN_S_1	3.2
VARIABLE NTN_C_1	0.6
VARIABLE NTN_C_2	3.2
VARIABLE NTN_C_3	0.8
VARIABLE NTN_C_4	11.58
VARIABLE NTN_E_1	1.5
VARIABLE NTN_E_2	0.71
VARIABLE NTN_O_1	1.0
VARIABLE OD2_E_1	0.45
VARIABLE OD2_S_1	0.45
VARIABLE OD2_C_1	0.45
VARIABLE OD2_C_2	0.56
VARIABLE OD2_E_2	0.56
VARIABLE OD2_C_3	0.6
VARIABLE OD2_C_4	2.0
VARIABLE NWR_E_1	1.0 
VARIABLE NWR_E_2	0.3 
VARIABLE NWR_C_1	0.3 
VARIABLE NWR_C_2	0.3 
VARIABLE NWR_C_3	0.3 
VARIABLE NWR_O_1	0.4 
VARIABLE NWR_E_3	0.26 
VARIABLE PWR_O_1	1.0 
VARIABLE RPO_O_2	0.4 


VARIABLE LDPO_C_1	0.8
VARIABLE LDPO_E_1	0.4
VARIABLE LDOD_S_1	0.8
VARIABLE LDOD_O_1	1.0
VARIABLE LDOD_C_1	0.95
VARIABLE LDOD_E_1	1.0
VARIABLE LDOD_W_1	0.8
VARIABLE LDNTN_C_1	0.0
VARIABLE LDNTN_E_1	0.8
VARIABLE LDNTN_S_1	1.8
VARIABLE H18NWDMY_E_1	0.0
VARIABLE H18NWDMY_S_1	3.4
VARIABLE H18NWDMY_S_2	4.0
VARIABLE H18NWDMY_S_3	3.4
VARIABLE H18NWDMY_C_1	4.0
VARIABLE MTP_C_1	0.15

VARIABLE RES_HRI_2	0.26
VARIABLE RES_HRI_3a	0.3
VARIABLE RES_HRI_3b	0.3
VARIABLE RES_HRI_3c	0.3
VARIABLE RES_PU5_1	0.3
VARIABLE RES_PU5_2	0.3












// DRAWN LAYER DEFINITIONS
LAYER  NWELLi      2   // nwell technology
LAYER  ODi         3 11 12
LAYER  OD2i        4   // define thick gate oxides
LAYER  POLYi       13  // polysilicon gates, interconnect
LAYER  N2Vi        61 // 2.5V LDD implant
LAYER  N5Vi        6   // 5V LDD implant
LAYER  PPi         7   // P+ S/D imlant
LAYER  NPi         8   // N+ S/D imlant
LAYER  COi         15  // Define connect for M1 to S/D and Gate
LAYER  M1i         16  // First Metal layer
LAYER  VIA1i       17  // Define connect for M2 to M1
LAYER  M2i         18  // Second Metal layer
LAYER  VIA2i       27  // Define connect for M3 to M2
LAYER  M3i         28  // Third Metal layer
LAYER  VIA3i       29  // Define connect for M4 to M3
LAYER  M4i         31  // Fourth Metal layer
LAYER  VIADi      167  // VIAD Connection of MD and MT for RDL
LAYER  MDi        168  // MD For RDL interconnection
LAYER  CBi         19  // Passivation opening for Bond Pad
LAYER  CB2i       1691  // Passivation-2 opening for Bond Pad
LAYER  MAP  169 DATATYPE 1 1691
LAYER  CBDi       169  // CBD For solder Bump and RDL layer 
LAYER  UBMi       170  // UBM For solder Bump and RDL layer 
LAYER  PPIi       189  // Post passivation RDL layer
LAYER  ESDi        30  // ESD implant layer
LAYER  RPOi        34  // Silicided Block Layer
LAYER  LOGO      200
//
//	Dummy Layers
//
LAYER  MCEL	122	// define the Memory cell region
LAYER  MTP_2T2C    1223	// define the MTP_2T2C IP region
LAYER  MAP 122 DATATYPE 3 1223
LAYER  H18NWDMY    1224	// define the NW region of IONLDMOS and IO CASCODE PMOS
LAYER  MAP 122 DATATYPE 4 1224

LAYER  HTWL        51  // Hot N-Well 
LAYER  RWDMY       52  // Nwell resistor dummy layer
LAYER  EXCLi       55  // Exclude layer
LAYER  DPDMY       65  // DPDUMMY (Dummy Pad)
LAYER  PLDMY       66  // PLDUMMY (Power Line)
LAYER  DRCDMY      60  // DRC waiver (TSMC reserved layer)
LAYER  DRCDMY2     130 // TSMC internal used dummy layer
LAYER  PLMIi	   89  // polymide ( if drawn )
LAYER  SDI     	   58  // IO ESD region dummy layer
LAYER  FWI        235  // Fuse window when x, (x+1) = 3 
LAYER  PMDMY      236  // dummy layer to cover fuse window and protection ring structure
LAYER  VARDMY     138  // dummy layer to cover varactor device
LAYER  WBDMY      183  // dummy layer to cover the CUP pad

LAYER BJTDMY    49
LAYER MAP 49 DATATYPE 2 492
LAYER BJTDMY2    492
LAYER MAP 49 DATATYPE 8 498
LAYER BJTDMY8    498
LAYER MAP 49 DATATYPE 1 491
LAYER BJT4TDMY    491
LAYER MAP 49 DATATYPE 3 493
LAYER BJTMDDMY    493
LAYER MAP 49 DATATYPE 4 494
LAYER BJTMEDMY    494
LAYER MAP 49 DATATYPE 5 495
LAYER BJTSNDMY    495
LAYER DIODMY    37 56
LAYER MAP 56 DATATYPE 1 561
LAYER DIO3TDMY    561

LAYER  DPO        364  // dummy POLY layer
LAYER MAP 13 DATATYPE 1 364
LAYER  DOD        365  // dummy OD layer
LAYER MAP  3 DATATYPE 1 365
LAYER ODBLK      1350    		// DOD blocking for insertion
LAYER MAP 150 DATATYPE 20 1350
LAYER POBLK      1351    		// DPO blocking for insertion
LAYER MAP 150 DATATYPE 21 1351

// LWI layer 
LAYER  LWI        363  // L target window for bump process
LAYER MAP 63 DATATYPE 2 363
LAYER CTMDMY   131	// Cover metal as a capacitor bottom plate
LAYER REST     54	// Poly/OD resistor dummy layer
LAYER RPDUMMY_5V 545	// Dummy layer to define pure 5V resistor
LAYER MAP 54 DATATYPE 5 545
LAYER HR400DMY 541
LAYER MAP 54 DATATYPE 1 541
LAYER HR1KDMY 542
LAYER MAP 54 DATATYPE 2 542
LAYER HR3KDMY 543
LAYER MAP 54 DATATYPE 3 543
LAYER RLDMY    133	// low Poly resistor dummy layer
LAYER RHDMY    132	// high Poly resistor dummy layer
LAYER RLPPDMY  134	// LPP high Poly resistor dummy layer
LAYER VTMPi    	23	// blocking region of PMOS VT implantation 
LAYER VTMNi    	24	// blocking region of NMOS VT implantation
LAYER VTDPi    	25	// VTD_P implantation
LAYER VTDNi    	26	// VTD_N implantation
LAYER NTNi      129	// Native NMOS blocked implantation
LAYER CTPi      14	// capacitor top poly-Si
LAYER BPIi      20	// capacitor bottom plate implantation.
LAYER LPPi      48	// lightly P+ Po1 implantation.
LAYER INDDMY   139 	// dummy layer to define inductor region
LAYER DNWi 	82	// deep NWELL
LAYER NBLi      179
LAYER HVNWi      99
LAYER HVTNi     142
LAYER HVTPi     143
LAYER HVOXi     180
LAYER RRuleAnalog 1823		// marker layer for DFM guidelines for analog circuits
LAYER MAP 182 DATATYPE 3 1823
LAYER LMARK 1824
LAYER MAP 63 DATATYPE 1 1824
LAYER PSUBi     116  //HV PSUB
LAYER HVPBi     186      
LAYER DPWi      187
LAYER MACRODMY 1821 // Dummy layer for nld macro model using in DRC of 0.25um BCD process.
LAYER MAP 182 DATATYPE 1 1821
LAYER PA24DMY 1822  // Dummy layer for PA24G5 in 0.25um BCD process
LAYER MAP 182 DATATYPE 2 1822
LAYER  DSDIO   18250	// dummy layer to define RF device
LAYER MAP 182 DATATYPE 50 18250
LAYER MAP 141 DATATYPE 1 311      
LAYER  HVSHP       311             // PWELL shielding
LAYER MAP 141 DATATYPE 2 312   
LAYER  HVSHN       312             // NWELL shielding 
LAYER MAP 141 DATATYPE 4 314 
LAYER  HVIO        314
LAYER HVDMY2 1881
LAYER MAP 188 DATATYPE 1 1881
LAYER NZENER     137      // Define 5.5v zener inplantation
LAYER HVDMY     188      // Dummy layer to define HV devices with 5V gate oxide
LAYER MAP 188 DATATYPE 2 1882
LAYER HV40i 1882
LAYER MAP 99 DATATYPE 1 991
LAYER H60NWi 991
LAYER MAP 26 DATATYPE 1 2610
LAYER VTLVDNi 2610	// define of 5V depletion implant
LAYER MAP 26 DATATYPE 2 2620
LAYER NWLVTi 2620	// define low Vt 5V PMOS
LAYER NDDDi  21
LAYER MAP 188 DATATYPE 3 1883
LAYER HV45i 1883
LAYER MAP 188 DATATYPE 4 1884
LAYER HVFISODMY 1884

LAYER MAP 255 DATATYPE 4   2554
LAYER	VDDDMY 2554
LAYER MAP 255 DATATYPE 5   2555
LAYER	VSSDMY 2555
LAYER TSVi    251      // TSV region define layer.

LAYER MAP 255 DATATYPE 6   2556
LAYER   STRAPDMY 2556
LAYER MAP 182 DATATYPE 10  18210
LAYER   EMRDMY 18210

LAYER MAP 141 DATATYPE 71   14171
LAYER   HV7DMY 14171
LAYER MAP 141 DATATYPE 72   14172
LAYER   HV12DMY 14172
LAYER MAP 141 DATATYPE 75   14175
LAYER   HV20DMY 14175
LAYER MAP 141 DATATYPE 76   14176
LAYER   HV24DMY 14176
LAYER MAP 141 DATATYPE 78   14178
LAYER   HV40DMY 14178
LAYER MAP 141 DATATYPE 80   14180
LAYER   HV60DMY 14180









LAYER  RFDUMMY   158	// dummy layer to define RF device
//
// Capacitor Top Metal Layers
//
LAYER CTMi   67
LAYER MAP 67 DATATYPE 1 256
LAYER CTM1i   256 	// Capacitor Top Metal-1
LAYER MAP 67 DATATYPE 2 257
LAYER CTM2i   257 	// Capacitor Top Metal-2
LAYER MAP 67 DATATYPE 3 258
LAYER CTM3i   258 	// Capacitor Top Metal-3
LAYER MAP 67 DATATYPE 4 259
LAYER CTM4i   259 	// Capacitor Top Metal-4
//
// Dummy Metal layers & Metal SLot layers
//
LAYER  M1DMY    316
LAYER MAP 16 DATATYPE 1 316      //Mapping (16:1) to 316 for M1DMY
LAYER  M1SLOTi    321 		 // Metal1 slot (if drawn)
LAYER MAP 16 DATATYPE 2 321      //Mapping (16:2) to 321 for M1SLOTi
LAYER  M2DMY    318
LAYER MAP 18 DATATYPE 1 318      //Mapping (18:1) to 318 for M2DMY
LAYER  M2SLOTi    322 		 // Metal2 slot (if drawn)
LAYER MAP 18 DATATYPE 2 322      //Mapping (18:2) to 322 for M2SLOTi
LAYER  M3DMY    328
LAYER MAP 28 DATATYPE 1 328     //Mapping (28:1) to 328 for M3DMY
LAYER  M3SLOTi    323  		// Metal3 slot (if drawn)
LAYER MAP 28 DATATYPE 2 323     //Mapping (28:2) to 323 for M3SLOTi
LAYER  M4DMY    331
LAYER MAP 31 DATATYPE 1 331     //Mapping (31:1) to 331 for M4DMY
LAYER  M4SLOTi    324  		// Metal4 slot (if drawn)
LAYER MAP 31 DATATYPE 2 324     //Mapping (31:2) to 324 for M4SLOTi
LAYER  MDDMY    344             // Dummy MD    
LAYER MAP 168 DATATYPE 1 344    // Mapping (168;1) to 344 for MDDMY
LAYER  MDSLOTi    343           // MD slot (if drawn)
LAYER MAP 168 DATATYPE 2 343    // Mapping (168;2) to 343 for MDSLOTi

LAYOUT TOP LAYER M1i VIA1i M1SLOTi M1DMY
LAYOUT TOP LAYER M2i VIA2i M2SLOTi M2DMY
LAYOUT TOP LAYER M3i VIA3i M3SLOTi M3DMY
LAYOUT TOP LAYER DOD DPO
LAYOUT TOP LAYER MDi VIADi MDSLOTi MDDMY M4i M4SLOTi CBi 
LAYOUT BASE LAYER NBLi DPWi PSUBi HVNWi HVOXi HVSHP HVSHN 
LAYOUT BASE LAYER NWELLi ODi OD2i POLYi PPi NPi COi 
M1x = ( M1i OR M1DMY ) NOT M1SLOTi
M2x = ( M2i OR M2DMY ) NOT M2SLOTi
M3x = ( M3i OR M3DMY ) NOT M3SLOTi
M4x = ( M4i OR M4DMY ) NOT M4SLOTi
MDx = ( MDi OR MDDMY ) NOT MDSLOTi
/////////////////////////////////////////////////////////////////////////////////

// GLOBAL DERIVED LAYERS FOR RULE CHECKS
//--------------------------------------
CHIP         = EXTENT
CHIPx         = MERGE CHIP
BULK	     = SIZE CHIP BY 1.0  

EXCL = EXCLi NOT LOGO
#IFDEF CHECK_SRAM_EXCL
EXCL_S  = CHIP NOT BULK  // an empty layer to disable the usage of EXCL
#ELSE
EXCL_S  = COPY EXCL      // EXCL_S = EXCL
#ENDIF

EXCL_HVESD = SDI AND HVOXi
PWELLi = ((((BULK NOT NWELLi) NOT HVOXi ) NOT HVNWi) NOT H60NWi ) NOT NWLVTi
HVPWi = (( HVOXi NOT HVNWi ) NOT H60NWi) NOT PSUBi
H60PWi = HVDMY2 NOT (( HVNWi OR H60NWi ) OR PSUBi )
HVPW = HVPWi NOT EXCL
H60NW = H60NWi  NOT INSIDE EXCL
H60PW = H60PWi  NOT INSIDE EXCL
NWLVT = NWLVTi  NOT INSIDE EXCL
VTLVDN = VTLVDNi  NOT INSIDE EXCL
HV40 = HV40i NOT EXCL
NDDD = NDDDi NOT EXCL
HV45 = HV45i NOT EXCL

HVPB  = HVPBi  NOT INSIDE EXCL
DPW   = DPWi   NOT INSIDE EXCL 
PSUB  = PSUBi  NOT INSIDE EXCL
HVNW  = HVNWi  NOT INSIDE EXCL
HVOX  = HVOXi  NOT EXCL
NBL   = NBLi   NOT INSIDE EXCL  
HVTP  = HVTPi  NOT EXCL
HVTN  = HVTNi  NOT EXCL

PWELL   =PWELLi NOT INSIDE EXCL

NWELL   = NWELLi NOT INSIDE EXCL
OD2     = OD2i   NOT EXCL
N2V     = N2Vi   NOT EXCL
N5V     = N5Vi   NOT EXCL
PP      = PPi    NOT INSIDE EXCL
NP      = NPi    NOT INSIDE EXCL
CO      = COi    NOT EXCL
M1      = M1x    NOT EXCL
VIA1    = VIA1i  NOT EXCL
M2      = M2x    NOT INSIDE EXCL_S
VIA2    = VIA2i   NOT INSIDE EXCL_S
M3      = M3x    NOT INSIDE EXCL_S
VIA3    = VIA3i   NOT INSIDE EXCL_S
M4	= M4x	  NOT INSIDE EXCL_S
VIAD    = VIADi   NOT INSIDE EXCL_S
MD	= MDx	  NOT INSIDE EXCL_S
ESD     = ESDi   NOT EXCL_S
RPO     = RPOi   NOT EXCL
CB      = CBi    NOT EXCL_S
PLMI    = PLMIi  NOT EXCL_S
FW      = FWI    NOT EXCL_S
LW      = LWI    NOT EXCL_S

NRODi  = ( ODi NOT RPOi ) NOT REST
NPODi  = NPi AND NRODi
PPODi  = PPi AND NRODi
NONWRi = NWELLi NOT INTERACT RWDMY
NOHVNWRi = HVNWi NOT INTERACT RWDMY
NTAPi	= NPODi	AND ((((NONWRi OR NOHVNWRi) OR H60NWi) OR NWLVTi ) NOT HVPBi )    
NTAPi_NBL = NPODi AND (((((NONWRi OR NOHVNWRi) OR H60NWi) OR NWLVTi ) NOT DPW) NOT HVPBi )    
PACTi	= PPODi	AND ((((NONWRi OR NOHVNWRi) OR H60NWi) OR NWLVTi ) NOT HVPBi )	// PMOS/HV_PMOS Device
NACTi	= NPODi	AND ((PWELLi  OR HVPWi) OR HVPBi)	// NMOS/HV_NMOS Device
PTAPi	= PPODi	AND ((PWELLi  OR HVPWi) OR HVPBi)	// PWEL/HVPW Pick-Up

PSDi   = PACTi NOT POLYi
NSDi   = NACTi NOT POLYi

PORES_DMY = ((REST OR RLDMY ) OR RHDMY ) OR RLPPDMY
ILP1i  = (POLYi NOT RPOi ) NOT PORES_DMY

CHIP_CORE = SIZE CHIP BY -10
PADH  = HOLES CB
SCORE    = CHIP_CORE INSIDE PADH
SR_CHIP  = CHIP INTERACT SCORE
SR = SR_CHIP NOT (SIZE SR_CHIP BY -10)
SR_CB = CB AND SR
SR_CO = CO AND SR
SR_V1 = VIA1 AND SR
SR_V2 = VIA2 AND SR
SR_V3 = VIA3 AND SR
SR_VD = VIAD AND SR

#IFDEF CHECK_DUMMY_ODPO
OD      = (ODi  OR  DOD) NOT EXCL
POLY    = (POLYi OR DPO) NOT EXCL
#ELSE
OD      = ODi   NOT EXCL
POLY    = POLYi NOT EXCL
#ENDIF

DNW  = DNWi  NOT INSIDE EXCL
NTN  = NTNi  NOT EXCL
CTP  = CTPi  NOT EXCL
BPI  = BPIi  NOT EXCL
LPP  = LPPi  NOT EXCL
VTMP = VTMPi NOT EXCL
VTMN = VTMNi NOT EXCL
VTDP = VTDPi NOT EXCL
VTDN = VTDNi NOT EXCL

CTM1 = CTM1i NOT EXCL_S
CTM2 = CTM2i NOT EXCL_S
CTM3 = CTM3i NOT EXCL_S
CTM4 = CTM4i NOT EXCL_S

RNWEL	     = NWELL CUT RWDMY	// NWELL resistor (UNDER OD & STI)
HOT_NWELL    = (NWELL AND HTWL) OR RNWEL      // Derive hot NWELL
COLD_NWELL   = NWELL NOT HOT_NWELL  // Derive cold NWELL


ALL_OD   = ODi    OR  DOD
ALL_POLY = POLYi  OR  DPO
POLY_ISO     = POLY NOT OD
ILP1         = POLY_ISO NOT RPO 

CO_DIFF    = CO OUTSIDE POLY_ISO
CO_POLY    = CO NOT OUTSIDE POLY_ISO

NWRES	     = RNWEL INTERACT RPO	// NWELL resistor (UNDER OD)
NONWR        = NWELL NOT INTERACT RWDMY  // NWEL exclude resistor area
ODWR	     = OD INTERACT NWRES	// OD area of NW resistor
NPWR	     = NP INTERACT NWRES	// N+ implant on NW resistor terminals
COWR	     = CO_DIFF INTERACT NWRES	// Contact on NW resistor terminals
RHWR	     = ODWR NOT RPO		// Non-Silicided area of NW resistor

NPOD        = NP AND OD             
PPOD        = PP AND OD

OD_PW        = OD OUTSIDE NONWR         // split up od into two well regions
OD_NW        = OD NOT OUTSIDE NONWR     // check to see about diff crossing nwell edge!! 
HVNW_MOS   = (HVNW OR H60NW) CUT (( POLY AND NPOD) AND HVOX)
ZENER_62_OD = ((((( OD AND DIODMY ) INTERACT HVDMY ) INTERACT POLY ) INTERACT HVPB ) INTERACT HVSHN ) INTERACT HVSHP   
ZENER_62_DIODE = (( ZENER_62_OD AND HVOX ) AND DPW ) AND NBL
ZENER_62_DIODE_M = ZENER_62_DIODE INTERACT POLY > 1
ZENER_62_DIODE_S = ZENER_62_DIODE INTERACT POLY == 1
ZENER_55_OD = (((( OD AND DIODMY ) INTERACT HVDMY ) INTERACT PSUB ) INTERACT HVSHN ) INTERACT RPO   
ZENER_55_DIODE = (( ZENER_55_OD AND HVOX ) AND DPW ) AND NBL
ZENER_OD = ZENER_55_OD OR ZENER_62_OD
ZENER_DIODE = ZENER_55_DIODE OR ZENER_62_DIODE
HVPW_MOS   = (HVPW CUT (( POLY AND PPOD) AND HVOX)) NOT INTERACT ZENER_DIODE  
NTAP	= NPOD	AND (NONWR OR ((((HVNW OR H60NW) NOT HVPB ) NOT HVNW_MOS) OR NWLVT ))	// NWEL/HVNW Pick-Up
PACT	= PPOD	AND (NWELL  OR ((((HVNW OR H60NW) NOT HVPB ) OR  HVPW_MOS) OR NWLVT ))	// PMOS/HV_PMOS Ddevice
NACT	= NPOD	AND (PWELL  OR ((HVPW OR HVPB) OR HVNW_MOS))	// NMOS/HV_NMOS Ddevice
PTAP	= PPOD	AND (PWELL  OR ((HVPW OR HVPB) NOT HVPW_MOS))	// PWEL/HVPW Pick-Up
LV_HVNW = HVNW OUTSIDE HVOXi    
LV_NTAP = NTAP OUTSIDE HVOXi
LV_PTAP = PTAP OUTSIDE HVOXi
LV_NACT = NACT OUTSIDE HVOXi
LV_PACT = PACT OUTSIDE HVOXi

DACT 	     = NACT OR PACT 

PP_BEDGE     = PP INSIDE EDGE OD   // PP edge to form/abut butted tap
NP_BEDGE     = NP INSIDE EDGE OD   // NP edge to form/abut butted tap
BUTT_PTAP    = PTAP TOUCH NACT
NONB_PTAP    = PTAP NOT TOUCH NACT
BUTT_NTAP    = NTAP TOUCH PACT
NONB_NTAP    = NTAP NOT TOUCH PACT

PGATE        = POLY AND LV_PACT
NGATE        = POLY AND LV_NACT
ALL_GATE     = PGATE OR NGATE

GATE_W       = POLY INSIDE EDGE OD
GATE_L 	     = OD INSIDE EDGE POLY
PGATE_W      = PGATE COIN INSIDE EDGE GATE_W
NGATE_W      = NGATE COIN INSIDE EDGE GATE_W

PMOS = PPOD INTERACT ALL_GATE
NMOS = NPOD INTERACT ALL_GATE
PASD = PMOS NOT ALL_GATE    // all P+ s/d
NASD = NMOS NOT ALL_GATE    // all N+ s/d
EPSD = SDI AND PASD     // esd P+ s/d
ENSD = SDI AND NASD     // esd N+ s/d
EPMOS = SDI AND PMOS
ENMOS = SDI AND NMOS

2V_ACTIVE    = OD AND N2V
N2V_EDGE     = N2V INSIDE EDGE OD

5V_ACTIVE    = OD AND N5V
N5V_EDGE     = N5V INSIDE EDGE OD

HVN_GOX      = NPOD AND OD2
HVP_GOX      = PPOD AND OD2
HV_NGATE_W   = GATE_W INSIDE EDGE HVN_GOX
LV_NGATE_W   = GATE_W NOT INSIDE EDGE HVN_GOX
HV_PGATE_W   = GATE_W INSIDE EDGE HVP_GOX
LV_PGATE_W   = GATE_W NOT INSIDE EDGE HVP_GOX
HV_NGATE_L   = GATE_L INSIDE EDGE HVN_GOX
HV_PGATE_L   = GATE_L INSIDE EDGE HVP_GOX
RPO_NOT_SDI = RPO NOT SDI
PORES       = POLY_ISO AND RPO_NOT_SDI  // non-silicided poly resistor
FOD         = (OD OUTSIDE RWDMY) OUTSIDE ALL_GATE
ODRES       = (( FOD AND RPO_NOT_SDI ) NOT BJTDMY ) NOT DIODMY	// OD resistor region

IMP   = PP OR NP

FUSE_LTARGET_WINDOW = (CB OR FW) OR LW
RNGX  = PMDMY NOT FUSE_LTARGET_WINDOW
//FUSE	= CB AND PLMI
//RNGX	= PLMI NOT FUSE



BUTLP = LPP TOUCH LV_NACT
NP_OVP_LPP = NP AND LPP



//IOLDNMOS
IOLDNMOS_GATE_pre= (GATE INTERACT NP) INTERACT H18NWDMY
IOLDNMOS_GATE= COPY IOLDNMOS_GATE_pre           // IOLDNMOS GATE
IOLDNMOS_CH = OD CUT IOLDNMOS_GATE                              // IOLDNMOS's channel OD,including butted pick-up
IOLDNMOS_GATE_OD = IOLDNMOS_CH NOT PP           // IOLDNMOS's Source and Channel
IOLDNMOS_S  = IOLDNMOS_GATE_OD NOT POLY                 // IOLDNMOS's Source
IOLDNMOS_D  = (OD INTERACT NP) INSIDE (NWELL CUT IOLDNMOS_GATE )                                // IOLDNMOS's Drain
IOLDNMOS_SD = IOLDNMOS_S OR IOLDNMOS_D          // IOLDNMOS's Source and Drain
IOLDNMOS_CSD = IOLDNMOS_GATE_OD OR IOLDNMOS_D           // All active OD related to IOLDNMOS,exclude butted pick-up
IOLDNMOS_ALL_OD = IOLDNMOS_CH OR IOLDNMOS_D             // All OD related to IOLDNMOS,including butted pick-up

IOLDNMOS_region1 = EXPAND EDGE IOLDNMOS_GATE_OD OUTSIDE BY GRID
IOLDNMOS_region2 = IOLDNMOS_GATE_OD TOUCH EDGE ( IOLDNMOS_region1 INSIDE POLY )
IOLDNMOS_region  = EXPAND EDGE IOLDNMOS_region2 OUTSIDE BY LDOD_S_1
IOLDNMOS_OD  = (( OD INTERACT IOLDNMOS_GATE ) OR IOLDNMOS_D ) OR IOLDNMOS_region                // The merged region of the Channel OD and Drain
LV_DEVICE = (((((( RNWEL OR PORES_DMY) OR ODRES ) OR BJTDMY ) OR DIODMY ) OR VARDMY) OR ALL_GATE ) OUTSIDE HVOXi
// ; For HV devices DRC check
// ;************************************************************************************  
GATE = POLY AND ( OD NOT ZENER_OD )  

HVOD = OD AND HVOX
LVOD = OD OUTSIDE HVOX
HVPO = POLY AND HVOX
HVGATE = GATE AND HVOX 

HGATE_W = HVPO INSIDE EDGE HVOD    //GATE_W for HV MOS


// all ring
PPOD_NNBL = ( PPOD NOT NBL ) NOT ALL_HVPMOS_OD
P_HOLE = ( HOLES PPOD_NNBL ) NOT PPOD_NNBL  
P_RING = PPOD_NNBL TOUCH P_HOLE
P_ISO_RING1 = SIZE P_RING BY 0.57/2 UNDEROVER
P_ISO_HOLE = ( HOLES P_ISO_RING1 ) NOT P_RING
P_ISO_RING = P_ISO_RING1 TOUCH P_ISO_HOLE

PPOD_HVPW_NNBL = (( PPOD AND HVPW ) NOT NBL ) NOT ALL_HVPMOS_OD 
HVP_ISO_H = ( HOLES PPOD_HVPW_NNBL INNER ) NOT PPOD_HVPW_NNBL
HVP_RING  = PPOD_HVPW_NNBL TOUCH HVP_ISO_H
HVP_ISO_RING1 = SIZE HVP_RING BY 0.57/2 UNDEROVER
HVP_ISO_HOLE = HOLES HVP_ISO_RING1 INNER
HVP_ISO_RING = HVP_ISO_RING1 TOUCH HVP_ISO_HOLE 
HVP_ISO_HCHECK = ( HOLES PPOD_HVPW_NNBL ) NOT PPOD_HVPW_NNBL



NPOD_NA = NPOD NOT ALL_HVNMOS_OD
N_HOLE = ( HOLES NPOD_NA ) NOT NPOD_NA
N_RING = NPOD_NA TOUCH N_HOLE
N_ISO_RING1 = SIZE N_RING BY 0.57/2 UNDEROVER
N_ISO_HOLE = ( HOLES N_ISO_RING1 ) NOT N_RING 
N_ISO_RING = N_ISO_RING1 TOUCH N_ISO_HOLE

NPOD_HVNW = ( NPOD  AND HVNW ) NOT ALL_HVNMOS_OD  
HVNW_ISO_H = ( HOLES  NPOD_HVNW INNER ) NOT NPOD_HVNW  
HVNW_ISO_RING1 = NPOD_HVNW TOUCH HVNW_ISO_H
HVNW_ISO_RING2 = SIZE HVNW_ISO_RING1 BY 0.57/2 UNDEROVER
HVNW_ISO_HOLE = HOLES HVNW_ISO_RING2 INNER
HVNW_ISO_RING = HVNW_ISO_RING2 TOUCH HVNW_ISO_HOLE

NPOD_HVNW_NBL = (( NPOD  AND HVNW ) AND NBL ) NOT ALL_HVNMOS_OD  
NBL_ISO_H = ( HOLES  NPOD_HVNW_NBL INNER ) NOT NPOD_HVNW_NBL  
NBL_ISO_RING1 = NPOD_HVNW_NBL TOUCH NBL_ISO_H
NBL_ISO_RING2 = SIZE NBL_ISO_RING1 BY 0.57/2 UNDEROVER
NBL_ISO_HOLE = HOLES NBL_ISO_RING2 INNER
NBL_ISO_RING = NBL_ISO_RING2 TOUCH NBL_ISO_HOLE

LV_H60NW = H60NW OUTSIDE HVOXi
LV_H60NW_HOLE1 = ( HOLES LV_H60NW ) NOT LV_H60NW
LV_H60NW_HOLE = LV_H60NW_HOLE1 INTERACT NBL
LV_H60NW_RING = LV_H60NW TOUCH LV_H60NW_HOLE

PPOD_H60PW_NNBL = (( PPOD AND H60PW ) NOT NBL ) NOT ALL_HVPMOS_OD 
HV60P_ISO_H = ( HOLES PPOD_H60PW_NNBL INNER ) NOT PPOD_H60PW_NNBL
HV60P_RING  = PPOD_H60PW_NNBL TOUCH HV60P_ISO_H
HV60P_ISO_RING1 = SIZE HV60P_RING BY 0.57/2 UNDEROVER
HV60P_ISO_HOLE = HOLES HV60P_ISO_RING1 INNER
HV60P_ISO_RING = HV60P_ISO_RING1 TOUCH HV60P_ISO_HOLE 
HV60P_ISO_HCHECK = ( HOLES PPOD_H60PW_NNBL ) NOT PPOD_H60PW_NNBL

//HV N/P MOS GATE
HVNW_CUT = HVNW INTERACT ( HVGATE CUT HVNW )
H60NW_DPW = H60NW OR DPW
NBL_PA60 = NBL INTERACT ( DONUT H60NW ) 
HVPO_HVPB  = HVPO INTERACT HVPB
HVOD_HVSHP = HVOD INTERACT HVSHP
DPW_HVSHP =  DPW OR HVOD_HVSHP 
//NLD60G5_V2
NLD60G5_V2_GATE_pre = (HVGATE INTERACT NP) INTERACT H60NW
NLD60G5_V2_GATE = NLD60G5_V2_GATE_pre NOT INTERACT HV45		// NLD60G5_V2 GATE
NLD60G5_V2_CH = OD CUT NLD60G5_V2_GATE 				// NLD60G5_V2's channel OD,including butted pick-up 	
NLD60G5_V2_GATE_OD = NLD60G5_V2_CH NOT PP		// NLD60G5_V2's Source and Channel
NLD60G5_V2_S  = NLD60G5_V2_GATE_OD NOT POLY			// NLD60G5_V2's Source
NLD60G5_V2_D  = (OD INTERACT NP) INSIDE ((H60NW NOT HVPB) CUT NLD60G5_V2_GATE)	// NLD60G5_V2's Drain
NLD60G5_V2_SD = NLD60G5_V2_S OR NLD60G5_V2_D		// NLD60G5_V2's Source and Drain
NLD60G5_V2_CSD = NLD60G5_V2_GATE_OD OR NLD60G5_V2_D		// All active OD related to NLD60G5_V2,exclude butted pick-up
NLD60G5_V2_ALL_OD = NLD60G5_V2_CH OR NLD60G5_V2_D		// All OD related to NLD60G5_V2,including butted pick-up

NLD60G5_V2_region1 = EXPAND EDGE NLD60G5_V2_GATE_OD OUTSIDE BY GRID 
NLD60G5_V2_region2 = NLD60G5_V2_GATE_OD TOUCH EDGE ( NLD60G5_V2_region1 INSIDE POLY )
NLD60G5_V2_region  = EXPAND EDGE NLD60G5_V2_region2 OUTSIDE BY HVOD_S_1_NLD60G5_V2 
NLD60G5_V2_OD  = (( OD INTERACT NLD60G5_V2_GATE ) OR NLD60G5_V2_D ) OR NLD60G5_V2_region 		// The merged region of the Channel OD and Drain
NON_BUTT_NLD60G5_V2_GATE_OD = NLD60G5_V2_GATE_OD NOT TOUCH PPOD
NON_BUTT_NLD60G5_V2_OD_pre = NON_BUTT_NLD60G5_V2_GATE_OD NOT TOUCH EDGE ( NON_BUTT_NLD60G5_V2_GATE_OD INSIDE EDGE POLY )
NON_BUTT_NLD60G5_V2_OD_region = EXPAND EDGE NON_BUTT_NLD60G5_V2_OD_pre OUTSIDE BY HVOD_S_4    
NON_BUTT_NLD60G5_V2_OD_pick = PPOD TOUCH NON_BUTT_NLD60G5_V2_OD_region
NON_BUTT_NLD60G5_V2_OD = ((((( OD INTERACT NLD60G5_V2_GATE) INTERACT NON_BUTT_NLD60G5_V2_GATE_OD) OR NLD60G5_V2_D ) OR NLD60G5_V2_region ) OR NON_BUTT_NLD60G5_V2_OD_region ) OR NON_BUTT_NLD60G5_V2_OD_pick 
NLD60G5_V2_OD_1 = NLD60G5_V2_OD OR NON_BUTT_NLD60G5_V2_OD
//NLD45G5
NLD45G5_GATE_pre = ((HVGATE INTERACT NP) INTERACT H60NW) INTERACT HV45
NLD45G5_GATE = COPY NLD45G5_GATE_pre		// NLD45G5 GATE
NLD45G5_CH = OD CUT NLD45G5_GATE 				// NLD45G5's channel OD,including butted pick-up 	
NLD45G5_GATE_OD = NLD45G5_CH NOT PP		// NLD45G5's Source and Channel
NLD45G5_S  = NLD45G5_GATE_OD NOT POLY			// NLD45G5's Source
NLD45G5_D  = (OD INTERACT NP) INSIDE ((H60NW NOT HVPB) CUT NLD45G5_GATE)	// NLD45G5's Drain
NLD45G5_SD = NLD45G5_S OR NLD45G5_D		// NLD45G5's Source and Drain
NLD45G5_CSD = NLD45G5_GATE_OD OR NLD45G5_D		// All active OD related to NLD45G5,exclude butted pick-up
NLD45G5_ALL_OD = NLD45G5_CH OR NLD45G5_D		// All OD related to NLD45G5,including butted pick-up

NLD45G5_region1 = EXPAND EDGE NLD45G5_GATE_OD OUTSIDE BY GRID 
NLD45G5_region2 = NLD45G5_GATE_OD TOUCH EDGE ( NLD45G5_region1 INSIDE POLY )
NLD45G5_region  = EXPAND EDGE NLD45G5_region2 OUTSIDE BY HVOD_S_1_NLD45G5 
NLD45G5_OD  = (( OD INTERACT NLD45G5_GATE ) OR NLD45G5_D ) OR NLD45G5_region 		// The merged region of the Channel OD and Drain
//NLD40G12
NLD40G12_GATE_pre = (HVGATE INTERACT NP) INTERACT DPW
NLD40G12_GATE = ((NLD40G12_GATE_pre NOT INTERACT HVSHN) NOT INTERACT HVSHP) NOT INTERACT VTDN		// NLD40G12 GATE
NLD40G12_CH = OD CUT NLD40G12_GATE 				// NLD40G12's channel OD,including butted pick-up 	
NLD40G12_GATE_OD = NLD40G12_CH NOT PP		// NLD40G12's Source and Channel
NLD40G12_S  = NLD40G12_GATE_OD NOT POLY			// NLD40G12's Source
NLD40G12_D  = (OD INTERACT NP) INSIDE ((HVNW NOT HVPB) CUT NLD40G12_GATE)	// NLD40G12's Drain
NLD40G12_SD = NLD40G12_S OR NLD40G12_D		// NLD40G12's Source and Drain
NLD40G12_CSD = NLD40G12_GATE_OD OR NLD40G12_D		// All active OD related to NLD40G12,exclude butted pick-up
NLD40G12_ALL_OD = NLD40G12_CH OR NLD40G12_D		// All OD related to NLD40G12,including butted pick-up

NLD40G12_region1 = EXPAND EDGE NLD40G12_GATE_OD OUTSIDE BY GRID 
NLD40G12_region2 = NLD40G12_GATE_OD TOUCH EDGE ( NLD40G12_region1 INSIDE POLY )
NLD40G12_region  = EXPAND EDGE NLD40G12_region2 OUTSIDE BY HVOD_S_1_NLD40G12 
NLD40G12_OD  = (( OD INTERACT NLD40G12_GATE ) OR NLD40G12_D ) OR NLD40G12_region 		// The merged region of the Channel OD and Drain
//NLD40G5
NLD40G5_GATE_pre = (((HVGATE INTERACT NP) INTERACT HVSHP) INTERACT DPW) INTERACT HVPB
NLD40G5_GATE = (NLD40G5_GATE_pre NOT INTERACT RPO) NOT INTERACT HVFISODMY		// NLD40G5 GATE
NLD40G5_CH = OD CUT NLD40G5_GATE 				// NLD40G5's channel OD,including butted pick-up 	
NLD40G5_GATE_OD = NLD40G5_CH NOT PP		// NLD40G5's Source and Channel
NLD40G5_S  = NLD40G5_GATE_OD NOT POLY			// NLD40G5's Source
NLD40G5_D  = (OD INTERACT NP) INSIDE ((HVNW NOT HVPB) CUT NLD40G5_GATE)	// NLD40G5's Drain
NLD40G5_SD = NLD40G5_S OR NLD40G5_D		// NLD40G5's Source and Drain
NLD40G5_CSD = NLD40G5_GATE_OD OR NLD40G5_D		// All active OD related to NLD40G5,exclude butted pick-up
NLD40G5_ALL_OD = NLD40G5_CH OR NLD40G5_D		// All OD related to NLD40G5,including butted pick-up

NLD40G5_region1 = EXPAND EDGE NLD40G5_GATE_OD OUTSIDE BY GRID 
NLD40G5_region2 = NLD40G5_GATE_OD TOUCH EDGE ( NLD40G5_region1 INSIDE POLY )
NLD40G5_region  = EXPAND EDGE NLD40G5_region2 OUTSIDE BY HVOD_S_1_NLD40G5 
NLD40G5_OD  = (( OD INTERACT NLD40G5_GATE ) OR NLD40G5_D ) OR NLD40G5_region 		// The merged region of the Channel OD and Drain
//NLD24G5
NLD24G5_GATE_pre = ((HVGATE INTERACT NP) INTERACT HVSHP) INTERACT NBL
NLD24G5_GATE = (NLD24G5_GATE_pre NOT INTERACT DPW) NOT INTERACT H60NW		// NLD24G5 GATE
NLD24G5_CH = OD CUT NLD24G5_GATE 				// NLD24G5's channel OD,including butted pick-up 	
NLD24G5_GATE_OD = NLD24G5_CH NOT PP		// NLD24G5's Source and Channel
NLD24G5_S  = NLD24G5_GATE_OD NOT POLY			// NLD24G5's Source
NLD24G5_D  = (OD INTERACT NP) INSIDE ((HVNW NOT HVPB) CUT NLD24G5_GATE)	// NLD24G5's Drain
NLD24G5_SD = NLD24G5_S OR NLD24G5_D		// NLD24G5's Source and Drain
NLD24G5_CSD = NLD24G5_GATE_OD OR NLD24G5_D		// All active OD related to NLD24G5,exclude butted pick-up
NLD24G5_ALL_OD = NLD24G5_CH OR NLD24G5_D		// All OD related to NLD24G5,including butted pick-up

NLD24G5_region1 = EXPAND EDGE NLD24G5_GATE_OD OUTSIDE BY GRID 
NLD24G5_region2 = NLD24G5_GATE_OD TOUCH EDGE ( NLD24G5_region1 INSIDE POLY )
NLD24G5_region  = EXPAND EDGE NLD24G5_region2 OUTSIDE BY HVOD_S_1_NLD24G5 
NLD24G5_OD  = (( OD INTERACT NLD24G5_GATE ) OR NLD24G5_D ) OR NLD24G5_region 		// The merged region of the Channel OD and Drain
//NI24G5
NI24G5_GATE_pre = (HVGATE INTERACT NP) INTERACT DPW
NI24G5_GATE = (NI24G5_GATE_pre NOT INTERACT HVPB) NOT INTERACT VARDMY		// NI24G5 GATE
NI24G5_CH = OD CUT NI24G5_GATE 				// NI24G5's channel OD,including butted pick-up 	
NI24G5_GATE_OD = NI24G5_CH NOT PP		// NI24G5's Source and Channel
NI24G5_S  = NI24G5_GATE_OD NOT POLY			// NI24G5's Source
NI24G5_D  = (OD INTERACT NP) INSIDE (HVNW CUT NI24G5_GATE )				// NI24G5's Drain
NI24G5_SD = NI24G5_S OR NI24G5_D		// NI24G5's Source and Drain
NI24G5_CSD = NI24G5_GATE_OD OR NI24G5_D		// All active OD related to NI24G5,exclude butted pick-up
NI24G5_ALL_OD = NI24G5_CH OR NI24G5_D		// All OD related to NI24G5,including butted pick-up

NI24G5_region1 = EXPAND EDGE NI24G5_GATE_OD OUTSIDE BY GRID 
NI24G5_region2 = NI24G5_GATE_OD TOUCH EDGE ( NI24G5_region1 INSIDE POLY )
NI24G5_region  = EXPAND EDGE NI24G5_region2 OUTSIDE BY HVOD_S_1_NI24G5 
NI24G5_OD  = (( OD INTERACT NI24G5_GATE ) OR NI24G5_D ) OR NI24G5_region 		// The merged region of the Channel OD and Drain
//NDLD24G5
NDLD24G5_GATE_pre = (HVGATE INTERACT NP) INTERACT VTDN
NDLD24G5_GATE = (NDLD24G5_GATE_pre NOT INTERACT HVSHN) NOT INTERACT HVSHP		// NDLD24G5 GATE
NDLD24G5_CH = OD CUT NDLD24G5_GATE 				// NDLD24G5's channel OD,including butted pick-up 	
NDLD24G5_GATE_OD = NDLD24G5_CH NOT PP		// NDLD24G5's Source and Channel
NDLD24G5_S  = NDLD24G5_GATE_OD NOT POLY			// NDLD24G5's Source
NDLD24G5_D  = (OD INTERACT NP) INSIDE ((HVNW NOT HVPB) CUT NDLD24G5_GATE)	// NDLD24G5's Drain
NDLD24G5_SD = NDLD24G5_S OR NDLD24G5_D		// NDLD24G5's Source and Drain
NDLD24G5_CSD = NDLD24G5_GATE_OD OR NDLD24G5_D		// All active OD related to NDLD24G5,exclude butted pick-up
NDLD24G5_ALL_OD = NDLD24G5_CH OR NDLD24G5_D		// All OD related to NDLD24G5,including butted pick-up

NDLD24G5_region1 = EXPAND EDGE NDLD24G5_GATE_OD OUTSIDE BY GRID 
NDLD24G5_region2 = NDLD24G5_GATE_OD TOUCH EDGE ( NDLD24G5_region1 INSIDE POLY )
NDLD24G5_region  = EXPAND EDGE NDLD24G5_region2 OUTSIDE BY HVOD_S_1_NDLD24G5 
NDLD24G5_OD  = (( OD INTERACT NDLD24G5_GATE ) OR NDLD24G5_D ) OR NDLD24G5_region 		// The merged region of the Channel OD and Drain
//NLD20G5
NLD20G5_GATE_pre = (((HVGATE INTERACT NP) INTERACT HVFISODMY) INTERACT HVNW_CUT) INTERACT HVSHP
NLD20G5_GATE = COPY NLD20G5_GATE_pre		// NLD20G5 GATE
NLD20G5_CH = OD CUT NLD20G5_GATE 				// NLD20G5's channel OD,including butted pick-up 	
NLD20G5_GATE_OD = NLD20G5_CH NOT PP		// NLD20G5's Source and Channel
NLD20G5_S  = NLD20G5_GATE_OD NOT POLY			// NLD20G5's Source
NLD20G5_D  = (OD INTERACT NP) INSIDE ((HVNW NOT HVPB) CUT NLD20G5_GATE)	// NLD20G5's Drain
NLD20G5_SD = NLD20G5_S OR NLD20G5_D		// NLD20G5's Source and Drain
NLD20G5_CSD = NLD20G5_GATE_OD OR NLD20G5_D		// All active OD related to NLD20G5,exclude butted pick-up
NLD20G5_ALL_OD = NLD20G5_CH OR NLD20G5_D		// All OD related to NLD20G5,including butted pick-up

NLD20G5_region1 = EXPAND EDGE NLD20G5_GATE_OD OUTSIDE BY GRID 
NLD20G5_region2 = NLD20G5_GATE_OD TOUCH EDGE ( NLD20G5_region1 INSIDE POLY )
NLD20G5_region  = EXPAND EDGE NLD20G5_region2 OUTSIDE BY HVOD_S_1_NLD20G5 
NLD20G5_OD  = (( OD INTERACT NLD20G5_GATE ) OR NLD20G5_D ) OR NLD20G5_region 		// The merged region of the Channel OD and Drain
//NLD12G12
NLD12G12_GATE_pre = (HVGATE INTERACT NP) INTERACT HVSHN
NLD12G12_GATE = (NLD12G12_GATE_pre NOT INTERACT HVSHP) NOT INTERACT VARDMY	// NLD12G12 GATE
NLD12G12_CH = OD CUT NLD12G12_GATE			// OD cut gate, including butted pick-up 
NLD12G12_GATE_OD = NLD12G12_CH NOT PP 		// OD cut gate,exclude butted pick-up
NLD12G12_SD = NLD12G12_GATE_OD NOT POLY			// NLD12G12's Source and Drain
NLD12G12_S  = NLD12G12_SD NOT INTERACT HVSHN	// NLD12G12's Source 
NLD12G12_D  = NLD12G12_SD INTERACT HVSHN 	// NLD12G12's Drain 

//NLD12G5
NLD12G5_GATE_pre = ((HVGATE INTERACT NP) INTERACT RPO) INTERACT HVSHP
NLD12G5_GATE = COPY NLD12G5_GATE_pre	// NLD12G5 GATE
NLD12G5_CH = OD CUT NLD12G5_GATE			// OD cut gate, including butted pick-up 
NLD12G5_GATE_OD = NLD12G5_CH NOT PP 		// OD cut gate,exclude butted pick-up
NLD12G5_SD = NLD12G5_GATE_OD NOT POLY			// NLD12G5's Source and Drain
NLD12G5_S  = NLD12G5_SD INTERACT HVSHP	// NLD12G5's Source
NLD12G5_D  = NLD12G5_SD NOT INTERACT HVSHP	// NLD12G5's Drain

//NLD7G5_FISO
NLD7G5_FISO_GATE_pre = ((HVGATE INTERACT NP) INTERACT HVSHP) INTERACT HVFISODMY
NLD7G5_FISO_GATE = NLD7G5_FISO_GATE_pre NOT INTERACT HVNW_CUT	// NLD7G5_FISO GATE
NLD7G5_FISO_CH = OD CUT NLD7G5_FISO_GATE			// OD cut gate, including butted pick-up 
NLD7G5_FISO_GATE_OD = NLD7G5_FISO_CH NOT PP 		// OD cut gate,exclude butted pick-up
NLD7G5_FISO_SD = NLD7G5_FISO_GATE_OD NOT POLY			// NLD7G5_FISO's Source and Drain
NLD7G5_FISO_S  = NLD7G5_FISO_SD INTERACT HVSHP	// NLD7G5_FISO's Source
NLD7G5_FISO_D  = NLD7G5_FISO_SD NOT INTERACT HVSHP	// NLD7G5_FISO's Drain

//NLD7G5
NLD7G5_GATE_pre = (HVGATE INTERACT NP) INTERACT HVSHP
NLD7G5_GATE = (NLD7G5_GATE_pre NOT INTERACT HVNW_CUT) NOT INTERACT H60NW_DPW	// NLD7G5 GATE
NLD7G5_CH = OD CUT NLD7G5_GATE			// OD cut gate, including butted pick-up 
NLD7G5_GATE_OD = NLD7G5_CH NOT PP 		// OD cut gate,exclude butted pick-up
NLD7G5_SD = NLD7G5_GATE_OD NOT POLY			// NLD7G5's Source and Drain
NLD7G5_S  = NLD7G5_SD INTERACT HVSHP	// NLD7G5's Source
NLD7G5_D  = NLD7G5_SD NOT INTERACT HVSHP	// NLD7G5's Drain



//PA60G5_V2
PA60G5_V2_GATE_pre = ((HVGATE INTERACT PP) INTERACT NBL_PA60) INTERACT HVSHN
PA60G5_V2_GATE = PA60G5_V2_GATE_pre NOT INTERACT HV45		// PA60G5_V2 GATE
PA60G5_V2_CH = OD CUT PA60G5_V2_GATE 				// PA60G5_V2's channel OD,including butted pick-up 	
PA60G5_V2_GATE_OD = PA60G5_V2_CH NOT NP		// PA60G5_V2's Source and Channel
PA60G5_V2_S  = PA60G5_V2_GATE_OD NOT POLY			// PA60G5_V2's Source
PA60G5_V2_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA60G5_V2_GATE )				// PA60G5_V2's Drain
PA60G5_V2_SD = PA60G5_V2_S OR PA60G5_V2_D		// PA60G5_V2's Source and Drain
PA60G5_V2_CSD = PA60G5_V2_GATE_OD OR PA60G5_V2_D		// All active OD related to PA60G5_V2,exclude butted pick-up
PA60G5_V2_ALL_OD = PA60G5_V2_CH OR PA60G5_V2_D		// All OD related to PA60G5_V2,including butted pick-up

PA60G5_V2_region1 = EXPAND EDGE PA60G5_V2_GATE_OD OUTSIDE BY GRID 
PA60G5_V2_region2 = PA60G5_V2_GATE_OD TOUCH EDGE ( PA60G5_V2_region1 INSIDE POLY )
PA60G5_V2_region  = EXPAND EDGE PA60G5_V2_region2 OUTSIDE BY HVOD_S_1_PA60G5_V2 
PA60G5_V2_OD  = (( OD INTERACT PA60G5_V2_GATE ) OR PA60G5_V2_D ) OR PA60G5_V2_region 		// The merged region of the Channel OD and Drain
//PA45G5
PA45G5_GATE_pre = ((HVGATE INTERACT PP) INTERACT NBL_PA60) INTERACT HV45
PA45G5_GATE = COPY PA45G5_GATE_pre		// PA45G5 GATE
PA45G5_CH = OD CUT PA45G5_GATE 				// PA45G5's channel OD,including butted pick-up 	
PA45G5_GATE_OD = PA45G5_CH NOT NP		// PA45G5's Source and Channel
PA45G5_S  = PA45G5_GATE_OD NOT POLY			// PA45G5's Source
PA45G5_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA45G5_GATE )				// PA45G5's Drain
PA45G5_SD = PA45G5_S OR PA45G5_D		// PA45G5's Source and Drain
PA45G5_CSD = PA45G5_GATE_OD OR PA45G5_D		// All active OD related to PA45G5,exclude butted pick-up
PA45G5_ALL_OD = PA45G5_CH OR PA45G5_D		// All OD related to PA45G5,including butted pick-up

PA45G5_region1 = EXPAND EDGE PA45G5_GATE_OD OUTSIDE BY GRID 
PA45G5_region2 = PA45G5_GATE_OD TOUCH EDGE ( PA45G5_region1 INSIDE POLY )
PA45G5_region  = EXPAND EDGE PA45G5_region2 OUTSIDE BY HVOD_S_1_PA45G5 
PA45G5_OD  = (( OD INTERACT PA45G5_GATE ) OR PA45G5_D ) OR PA45G5_region 		// The merged region of the Channel OD and Drain
//PA40G12
PA40G12_GATE_pre = HVGATE INTERACT PP
PA40G12_GATE = (PA40G12_GATE_pre NOT INTERACT HVPO_HVPB) NOT INTERACT HVSHN		// PA40G12 GATE
PA40G12_CH = OD CUT PA40G12_GATE 				// PA40G12's channel OD,including butted pick-up 	
PA40G12_GATE_OD = PA40G12_CH NOT NP		// PA40G12's Source and Channel
PA40G12_S  = PA40G12_GATE_OD NOT POLY			// PA40G12's Source
PA40G12_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA40G12_GATE )				// PA40G12's Drain
PA40G12_SD = PA40G12_S OR PA40G12_D		// PA40G12's Source and Drain
PA40G12_CSD = PA40G12_GATE_OD OR PA40G12_D		// All active OD related to PA40G12,exclude butted pick-up
PA40G12_ALL_OD = PA40G12_CH OR PA40G12_D		// All OD related to PA40G12,including butted pick-up

PA40G12_region1 = EXPAND EDGE PA40G12_GATE_OD OUTSIDE BY GRID 
PA40G12_region2 = PA40G12_GATE_OD TOUCH EDGE ( PA40G12_region1 INSIDE POLY )
PA40G12_region  = EXPAND EDGE PA40G12_region2 OUTSIDE BY HVOD_S_1_PA40G12 
PA40G12_OD  = (( OD INTERACT PA40G12_GATE ) OR PA40G12_D ) OR PA40G12_region 		// The merged region of the Channel OD and Drain
//PA40G5
PA40G5_GATE_pre = (HVGATE INTERACT PP) INTERACT HVSHN
PA40G5_GATE = ((PA40G5_GATE_pre NOT INTERACT NBL_PA60) NOT INTERACT PA24DMY) NOT INTERACT DPW_HVSHP		// PA40G5 GATE
PA40G5_CH = OD CUT PA40G5_GATE 				// PA40G5's channel OD,including butted pick-up 	
PA40G5_GATE_OD = PA40G5_CH NOT NP		// PA40G5's Source and Channel
PA40G5_S  = PA40G5_GATE_OD NOT POLY			// PA40G5's Source
PA40G5_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA40G5_GATE )				// PA40G5's Drain
PA40G5_SD = PA40G5_S OR PA40G5_D		// PA40G5's Source and Drain
PA40G5_CSD = PA40G5_GATE_OD OR PA40G5_D		// All active OD related to PA40G5,exclude butted pick-up
PA40G5_ALL_OD = PA40G5_CH OR PA40G5_D		// All OD related to PA40G5,including butted pick-up

PA40G5_region1 = EXPAND EDGE PA40G5_GATE_OD OUTSIDE BY GRID 
PA40G5_region2 = PA40G5_GATE_OD TOUCH EDGE ( PA40G5_region1 INSIDE POLY )
PA40G5_region  = EXPAND EDGE PA40G5_region2 OUTSIDE BY HVOD_S_1_PA40G5 
PA40G5_OD  = (( OD INTERACT PA40G5_GATE ) OR PA40G5_D ) OR PA40G5_region 		// The merged region of the Channel OD and Drain
//PA24G5
PA24G5_GATE_pre = ((HVGATE INTERACT PP) INTERACT HVSHN) INTERACT PA24DMY
PA24G5_GATE = COPY PA24G5_GATE_pre		// PA24G5 GATE
PA24G5_CH = OD CUT PA24G5_GATE 				// PA24G5's channel OD,including butted pick-up 	
PA24G5_GATE_OD = PA24G5_CH NOT NP		// PA24G5's Source and Channel
PA24G5_S  = PA24G5_GATE_OD NOT POLY			// PA24G5's Source
PA24G5_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA24G5_GATE )				// PA24G5's Drain
PA24G5_SD = PA24G5_S OR PA24G5_D		// PA24G5's Source and Drain
PA24G5_CSD = PA24G5_GATE_OD OR PA24G5_D		// All active OD related to PA24G5,exclude butted pick-up
PA24G5_ALL_OD = PA24G5_CH OR PA24G5_D		// All OD related to PA24G5,including butted pick-up

PA24G5_region1 = EXPAND EDGE PA24G5_GATE_OD OUTSIDE BY GRID 
PA24G5_region2 = PA24G5_GATE_OD TOUCH EDGE ( PA24G5_region1 INSIDE POLY )
PA24G5_region  = EXPAND EDGE PA24G5_region2 OUTSIDE BY HVOD_S_1_PA24G5 
PA24G5_OD  = (( OD INTERACT PA24G5_GATE ) OR PA24G5_D ) OR PA24G5_region 		// The merged region of the Channel OD and Drain
//PA12G12
PA12G12_GATE_pre = (HVGATE INTERACT PP) INTERACT HVPO_HVPB
PA12G12_GATE = PA12G12_GATE_pre NOT INTERACT HVSHN		// PA12G12 GATE
PA12G12_CH = OD CUT PA12G12_GATE 				// PA12G12's channel OD,including butted pick-up 	
PA12G12_GATE_OD = PA12G12_CH NOT NP		// PA12G12's Source and Channel
PA12G12_S  = PA12G12_GATE_OD NOT POLY			// PA12G12's Source
PA12G12_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA12G12_GATE )				// PA12G12's Drain
PA12G12_SD = PA12G12_S OR PA12G12_D		// PA12G12's Source and Drain
PA12G12_CSD = PA12G12_GATE_OD OR PA12G12_D		// All active OD related to PA12G12,exclude butted pick-up
PA12G12_ALL_OD = PA12G12_CH OR PA12G12_D		// All OD related to PA12G12,including butted pick-up

PA12G12_region1 = EXPAND EDGE PA12G12_GATE_OD OUTSIDE BY GRID 
PA12G12_region2 = PA12G12_GATE_OD TOUCH EDGE ( PA12G12_region1 INSIDE POLY )
PA12G12_region  = EXPAND EDGE PA12G12_region2 OUTSIDE BY HVOD_S_1_PA12G12 
PA12G12_OD  = (( OD INTERACT PA12G12_GATE ) OR PA12G12_D ) OR PA12G12_region 		// The merged region of the Channel OD and Drain
//PA12G5
PA12G5_GATE_pre = ((HVGATE INTERACT PP) INTERACT DPW) INTERACT HVSHN
PA12G5_GATE = COPY PA12G5_GATE_pre		// PA12G5 GATE
PA12G5_CH = OD CUT PA12G5_GATE 				// PA12G5's channel OD,including butted pick-up 	
PA12G5_GATE_OD = PA12G5_CH NOT NP		// PA12G5's Source and Channel
PA12G5_S  = PA12G5_GATE_OD NOT POLY			// PA12G5's Source
PA12G5_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA12G5_GATE )				// PA12G5's Drain
PA12G5_SD = PA12G5_S OR PA12G5_D		// PA12G5's Source and Drain
PA12G5_CSD = PA12G5_GATE_OD OR PA12G5_D		// All active OD related to PA12G5,exclude butted pick-up
PA12G5_ALL_OD = PA12G5_CH OR PA12G5_D		// All OD related to PA12G5,including butted pick-up

PA12G5_region1 = EXPAND EDGE PA12G5_GATE_OD OUTSIDE BY GRID 
PA12G5_region2 = PA12G5_GATE_OD TOUCH EDGE ( PA12G5_region1 INSIDE POLY )
PA12G5_region  = EXPAND EDGE PA12G5_region2 OUTSIDE BY HVOD_S_1_PA12G5 
PA12G5_OD  = (( OD INTERACT PA12G5_GATE ) OR PA12G5_D ) OR PA12G5_region 		// The merged region of the Channel OD and Drain
//PA7G5
PA7G5_GATE_pre = ((HVGATE INTERACT PP) INTERACT HVSHN) INTERACT HVOD_HVSHP
PA7G5_GATE = COPY PA7G5_GATE_pre	// PA7G5 GATE
PA7G5_CH = OD CUT PA7G5_GATE			// OD cut gate, including butted pick-up 
PA7G5_GATE_OD = PA7G5_CH NOT NP 		// OD cut gate,exclude butted pick-up
PA7G5_SD = PA7G5_GATE_OD NOT POLY			// PA7G5's Source and Drain
PA7G5_S  = PA7G5_SD INTERACT HVSHN	// PA7G5's Source
PA7G5_D  = PA7G5_SD NOT INTERACT HVSHN	// PA7G5's Drain

NON_BUTT_PA7G5_GATE_OD = PA7G5_GATE_OD NOT TOUCH NPOD
NON_BUTT_PA7G5_OD_pre = (NON_BUTT_PA7G5_GATE_OD NOT TOUCH EDGE ( NON_BUTT_PA7G5_GATE_OD INSIDE EDGE POLY )) INSIDE EDGE HVSHN
NON_BUTT_PA7G5_OD_region = EXPAND EDGE NON_BUTT_PA7G5_OD_pre OUTSIDE BY HVOD_S_4    
NON_BUTT_PA7G5_OD_pick = NPOD TOUCH NON_BUTT_PA7G5_OD_region
NON_BUTT_PA7G5_OD = ( PA7G5_CH OR NON_BUTT_PA7G5_OD_region ) OR NON_BUTT_PA7G5_OD_pick
PA7G5_OD_1 = PA7G5_CH OR NON_BUTT_PA7G5_OD

HVGATE_G5_N = (((((((( NLD60G5_V2_GATE OR NLD45G5_GATE ) OR NLD40G5_GATE ) OR NLD24G5_GATE ) OR NDLD24G5_GATE )  OR NI24G5_GATE ) OR NLD20G5_GATE ) OR NLD12G5_GATE ) OR NLD7G5_GATE ) OR  NLD7G5_FISO_GATE
HVGATE_G12_N = NLD12G12_GATE OR NLD40G12_GATE
HVGATE_G5_P = ((((PA60G5_V2_GATE OR PA45G5_GATE ) OR PA40G5_GATE ) OR PA24G5_GATE ) OR PA12G5_GATE ) OR PA7G5_GATE
HVGATE_G12_P = PA40G12_GATE OR PA12G12_GATE 

HV_GATE_G12 = HVGATE_G12_N OR HVGATE_G12_P
HVGATE_G5 = HVGATE_G5_N OR HVGATE_G5_P
HV_GATE_N = HVGATE_G5_N OR HVGATE_G12_N
HV_GATE_P = HVGATE_G5_P OR HVGATE_G12_P
ALL_GATE_N     = NGATE OR HV_GATE_N
ALL_GATE_P     = PGATE OR HV_GATE_P
ALL_HVGATE = HV_GATE_N OR HV_GATE_P 
EXGATE_NP    = SIZE ((SIZE ALL_GATE_N BY 0.02) AND OD) BY 0.3
EXGATE_PP    = SIZE ((SIZE ALL_GATE_P BY 0.02) AND OD) BY 0.3


HV_NMOS_D = (((((((((( NLD60G5_V2_D OR NLD45G5_D ) OR NLD40G5_D ) OR NLD24G5_D ) OR NDLD24G5_D )  OR NI24G5_D ) OR NLD20G5_D ) OR NLD12G5_D ) OR NLD7G5_D ) OR  NLD7G5_FISO_D ) OR NLD12G12_D ) OR NLD40G12_D
HV_PMOS_D = ((((((PA60G5_V2_D OR PA45G5_D ) OR PA40G5_D ) OR PA24G5_D ) OR PA12G5_D ) OR PA7G5_D ) OR PA40G12_D ) OR PA12G12_D
HV_NMOS_S = (((((((((( NLD60G5_V2_S OR NLD45G5_S ) OR NLD40G5_S ) OR NLD24G5_S ) OR NDLD24G5_S )  OR NI24G5_S ) OR NLD20G5_S ) OR NLD12G5_S ) OR NLD7G5_S ) OR  NLD7G5_FISO_S ) OR NLD12G12_S ) OR NLD40G12_S
HV_PMOS_S = ((((((PA60G5_V2_S OR PA45G5_S ) OR PA40G5_S ) OR PA24G5_S ) OR PA12G5_S ) OR PA7G5_S ) OR PA40G12_S ) OR PA12G12_S

HV_NMOS_OD_REGION = (((((((((( NLD60G5_V2_OD OR NLD45G5_OD ) OR NLD40G5_OD ) OR NLD24G5_OD ) OR NDLD24G5_OD )  OR NI24G5_OD ) OR NLD20G5_OD ) OR NLD12G5_CH ) OR NLD7G5_CH ) OR  NLD7G5_FISO_CH ) OR NLD12G12_CH ) OR NLD40G12_OD
HV_PMOS_OD_REGION = ((((((PA60G5_V2_OD OR PA45G5_OD ) OR PA40G5_OD ) OR PA24G5_OD ) OR PA12G5_OD ) OR PA7G5_CH ) OR PA40G12_OD ) OR PA12G12_OD

ALL_HVNMOS_OD = ( NPOD INTERACT HV_GATE_N ) OR HV_NMOS_D
ALL_HVPMOS_OD = ( PPOD INTERACT HV_GATE_P ) OR HV_PMOS_D
ALL_HVMOS_OD = ALL_HVNMOS_OD OR ALL_HVPMOS_OD  

HN_ACTIVE = (( NPOD NOT (HVNW OR H60NW) ) OR ALL_HVNMOS_OD ) AND HVOX  // HV N+ ACTIVE 
HP_ACTIVE = (( PPOD AND ((HVNW OR H60NW) NOT  HVPB)) OR ALL_HVPMOS_OD ) AND HVOX  // HV P+ ACTIVE
HN_PICKUP = ( NPOD NOT ALL_HVNMOS_OD ) AND (HVNW OR H60NW)
HP_PICKUP = (( PPOD NOT ALL_HVPMOS_OD ) NOT ((HVNW OR H60NW) NOT HVPB)) AND HVOX
HNTAP = NPOD AND ( (HVNW OR H60NW) NOT INTERACT RWDMY )

H60NW_NG5_BUTS = H60NW TOUCH INSIDE EDGE ( H60NW INSIDE EDGE NLD60G5_V2_GATE )
HVNW_NG5_BUTS = HVNW TOUCH INSIDE EDGE ( HVNW INSIDE EDGE HVGATE_G5_N ) 
HVNW_PG5_BUTS = HVNW TOUCH INSIDE EDGE ( HVNW INSIDE EDGE HVGATE_G5_P )
HVNW_NG5_NBUTS = HVNW NOT TOUCH INSIDE EDGE ( HVNW INSIDE EDGE HVGATE_G5_N) 
HVNW_PG5_NBUTS = HVNW NOT TOUCH INSIDE EDGE ( HVNW INSIDE EDGE HVGATE_G5_P )     
    
BUTT_NLD40G5_S = NLD40G5_S TOUCH PPOD
BUTT_NLD24G5_S = NLD24G5_S TOUCH PPOD
BUTT_NDLD24G5_S = NDLD24G5_S TOUCH PPOD
BUTT_NLD60G5_V2_S = NLD60G5_V2_S TOUCH PPOD
BUTT_NLD12G5_S = NLD12G5_S TOUCH PPOD
BUTT_NLD45G5_S = NLD45G5_S TOUCH PPOD
BUTT_NI24G5_S = NI24G5_S TOUCH PPOD
BUTT_NLD20G5_S = NLD20G5_S TOUCH PPOD
BUTT_NLD7G5_S = NLD7G5_S TOUCH PPOD
BUTT_NLD7G5_FISO_S = NLD7G5_FISO_S TOUCH PPOD
BUTT_NLDXXG5_S = (((((((( BUTT_NLD40G5_S OR  BUTT_NLD24G5_S ) OR BUTT_NDLD24G5_S) OR BUTT_NLD60G5_V2_S ) OR BUTT_NLD12G5_S ) OR BUTT_NLD45G5_S ) OR BUTT_NI24G5_S ) OR BUTT_NLD20G5_S ) OR BUTT_NLD7G5_S ) OR BUTT_NLD7G5_FISO_S 
BUTT_PA40G5_S = PA40G5_S TOUCH NPOD  
BUTT_PA24G5_S = PA24G5_S TOUCH NPOD
BUTT_PA60G5_V2_S = PA60G5_V2_S TOUCH NPOD
BUTT_PA45G5_S = PA45G5_S TOUCH NPOD
BUTT_PA12G5_S = PA12G5_S TOUCH NPOD
BUTT_PA7G5_S = PA7G5_S TOUCH NPOD
BUTT_PAXXG5_S = ((((BUTT_PA40G5_S OR BUTT_PA24G5_S) OR BUTT_PA60G5_V2_S ) OR BUTT_PA45G5_S ) OR BUTT_PA7G5_S ) OR BUTT_PA12G5_S
BUTT_NLD40G5_TAP = PPOD TOUCH  NLD40G5_S 
BUTT_NLD24G5_TAP = PPOD TOUCH  NLD24G5_S 
BUTT_NDLD24G5_TAP = PPOD TOUCH  NDLD24G5_S 
BUTT_NLD60G5_V2_TAP = PPOD TOUCH  NLD60G5_V2_S 
BUTT_NLD12G5_TAP = PPOD TOUCH  NLD12G5_S 
BUTT_NLD45G5_TAP = PPOD TOUCH  NLD45G5_S 
BUTT_NI24G5_TAP = PPOD TOUCH  NI24G5_S 
BUTT_NLD20G5_TAP = PPOD TOUCH  NLD20G5_S 
BUTT_NLD7G5_TAP = PPOD TOUCH  NLD7G5_S 
BUTT_NLD7G5_FISO_TAP = PPOD TOUCH  NLD7G5_FISO_S 
BUTT_NLDXXG5_TAP = (((((((( BUTT_NLD40G5_TAP OR  BUTT_NLD24G5_TAP ) OR BUTT_NDLD24G5_TAP) OR BUTT_NLD60G5_V2_TAP ) OR BUTT_NLD12G5_TAP ) OR BUTT_NLD45G5_TAP ) OR BUTT_NI24G5_TAP ) OR BUTT_NLD20G5_TAP ) OR BUTT_NLD7G5_TAP ) OR BUTT_NLD7G5_FISO_TAP 
BUTT_PA40G5_TAP = NPOD TOUCH  PA40G5_S   
BUTT_PA24G5_TAP = NPOD TOUCH  PA24G5_S 
BUTT_PA60G5_V2_TAP = NPOD TOUCH  PA60G5_V2_S 
BUTT_PA45G5_TAP = NPOD TOUCH  PA45G5_S 
BUTT_PA12G5_TAP = NPOD TOUCH  PA12G5_S 
BUTT_PA7G5_TAP = NPOD TOUCH  PA7G5_S 
BUTT_PAXXG5_TAP = ((((BUTT_PA40G5_TAP OR BUTT_PA24G5_TAP) OR BUTT_PA60G5_V2_TAP ) OR BUTT_PA45G5_TAP ) OR BUTT_PA7G5_TAP ) OR BUTT_PA12G5_TAP
NPG5_S_BUT = OD INTERACT ( BUTT_NLDXXG5_S OR BUTT_PAXXG5_S )

//BJT
BJT_HVNW = HVNW AND BJTDMY
BJT_HVNW_H = HOLES BJT_HVNW INNER
BJT_HVNW_R = BJT_HVNW TOUCH BJT_HVNW_H
BJT_HVNW_ALL = BJT_HVNW OR BJT_HVNW_H
BJT_HVPW = HVPW AND BJTDMY
BJT_HVPW_H = HOLES BJT_HVPW INNER
BJT_HVPW_R = BJT_HVPW TOUCH BJT_HVPW_H
BJT_HVPW_ALL = BJT_HVPW OR BJT_HVPW_H
    
NHVPWNBL_BJT_E = (((( NPOD AND HVOX ) NOT INTERACT RPO ) NOT INTERACT HVSHN ) NOT INTERACT HVNW ) INTERACT BJTDMY
NHVPWNBL_BJT_B = BJT_HVPW INTERACT NHVPWNBL_BJT_E
NHVPWNBL_BJT_C = BJT_HVNW_ALL INTERACT NHVPWNBL_BJT_E
NHVPWNBL_BJT_BOD = PPOD AND ( NHVPWNBL_BJT_B NOT NHVPWNBL_BJT_E )
NHVPWNBL_BJT_BODH =  HOLES NHVPWNBL_BJT_BOD   
NHVPWNBL_BJT_COD = NPOD AND ( NHVPWNBL_BJT_C NOT NHVPWNBL_BJT_B )
NHVPWNBL_BJT_CODH =  HOLES NHVPWNBL_BJT_COD   


NHVPWNBL_RPO_BJT_E = ((( NPOD AND HVOX ) INTERACT RPO ) NOT INTERACT HVSHN ) INTERACT BJTDMY
NHVPWNBL_RPO_BJT_B = BJT_HVPW INTERACT NHVPWNBL_RPO_BJT_E
NHVPWNBL_RPO_BJT_C = BJT_HVNW_ALL INTERACT NHVPWNBL_RPO_BJT_E
NHVPWNBL_RPO_BJT_BOD = PPOD AND ( NHVPWNBL_RPO_BJT_B NOT NHVPWNBL_RPO_BJT_E )
NHVPWNBL_RPO_BJT_BODH =  HOLES NHVPWNBL_RPO_BJT_BOD   
NHVPWNBL_RPO_BJT_COD = NPOD AND ( NHVPWNBL_RPO_BJT_C NOT NHVPWNBL_RPO_BJT_B )
NHVPWNBL_RPO_BJT_CODH =  HOLES NHVPWNBL_RPO_BJT_COD   


NWHVPWNBL_BJT_E = (((( NPOD AND HVOX ) NOT INTERACT RPO ) INTERACT HVSHN ) NOT INTERACT HVNW ) INTERACT BJTDMY
NWHVPWNBL_BJT_B = BJT_HVPW INTERACT NWHVPWNBL_BJT_E
NWHVPWNBL_BJT_C = BJT_HVNW_ALL INTERACT NWHVPWNBL_BJT_E
NWHVPWNBL_BJT_BOD = PPOD AND ( NWHVPWNBL_BJT_B NOT NWHVPWNBL_BJT_E )
NWHVPWNBL_BJT_BODH =  HOLES NWHVPWNBL_BJT_BOD   
NWHVPWNBL_BJT_COD = NPOD AND ( NWHVPWNBL_BJT_C NOT NWHVPWNBL_BJT_B )
NWHVPWNBL_BJT_CODH =  HOLES NWHVPWNBL_BJT_COD   


NWHVPWNBL_RPO_BJT_S_E = (((( NPOD AND HVOX ) INTERACT RPO ) INTERACT HVSHN ) INTERACT BJTDMY ) NOT ( BJTMEDMY OR BJTMDDMY ) 
NWHVPWNBL_RPO_BJT_S_B = BJT_HVPW INTERACT NWHVPWNBL_RPO_BJT_S_E
NWHVPWNBL_RPO_BJT_S_C = BJT_HVNW_ALL INTERACT NWHVPWNBL_RPO_BJT_S_E
NWHVPWNBL_RPO_BJT_S_BOD = PPOD AND ( NWHVPWNBL_RPO_BJT_S_B NOT NWHVPWNBL_RPO_BJT_S_E )
NWHVPWNBL_RPO_BJT_S_BODH =  HOLES NWHVPWNBL_RPO_BJT_S_BOD   
NWHVPWNBL_RPO_BJT_S_COD = NPOD AND ( NWHVPWNBL_RPO_BJT_S_C NOT NWHVPWNBL_RPO_BJT_S_B )
NWHVPWNBL_RPO_BJT_S_CODH =  HOLES NWHVPWNBL_RPO_BJT_S_COD   


NWHVPWNBL_RPO_BJT_E_pre = ((( NPOD AND HVOX ) INTERACT RPO ) INTERACT HVSHN ) INTERACT BJTDMY  
NWHVPWNBL_RPO_BJT_B_pre = ((( HOLES HVNW INNER ) INTERACT BJTDMY ) INTERACT HVSHN ) INTERACT HVSHP

NWHVPWNBL_RPO_BJT_DUAL_B = NWHVPWNBL_RPO_BJT_B_pre INTERACT NWHVPWNBL_RPO_BJT_E_pre == 2 
NWHVPWNBL_RPO_BJT_DUAL_E = NWHVPWNBL_RPO_BJT_E_pre INTERACT NWHVPWNBL_RPO_BJT_DUAL_B
NWHVPWNBL_RPO_BJT_DUAL_C = BJT_HVNW_ALL INTERACT NWHVPWNBL_RPO_BJT_DUAL_E
NWHVPWNBL_RPO_BJT_DUAL_BOD = PPOD AND ( NWHVPWNBL_RPO_BJT_DUAL_B NOT NWHVPWNBL_RPO_BJT_DUAL_E )
NWHVPWNBL_RPO_BJT_DUAL_BODH =  HOLES NWHVPWNBL_RPO_BJT_DUAL_BOD   
NWHVPWNBL_RPO_BJT_DUAL_COD = NPOD AND ( NWHVPWNBL_RPO_BJT_DUAL_C NOT NWHVPWNBL_RPO_BJT_DUAL_B )
NWHVPWNBL_RPO_BJT_DUAL_CODH =  HOLES NWHVPWNBL_RPO_BJT_DUAL_COD   


NWHVPWNBL_RPO_BJT_OCTAD_B = NWHVPWNBL_RPO_BJT_B_pre INTERACT NWHVPWNBL_RPO_BJT_E_pre == 8
NWHVPWNBL_RPO_BJT_OCTAD_E = NWHVPWNBL_RPO_BJT_E_pre INTERACT NWHVPWNBL_RPO_BJT_OCTAD_B
NWHVPWNBL_RPO_BJT_OCTAD_C = BJT_HVNW_ALL INTERACT NWHVPWNBL_RPO_BJT_OCTAD_E
NWHVPWNBL_RPO_BJT_OCTAD_BOD = PPOD AND ( NWHVPWNBL_RPO_BJT_OCTAD_B NOT NWHVPWNBL_RPO_BJT_OCTAD_E )
NWHVPWNBL_RPO_BJT_OCTAD_BODH =  HOLES NWHVPWNBL_RPO_BJT_OCTAD_BOD   
NWHVPWNBL_RPO_BJT_OCTAD_COD = NPOD AND ( NWHVPWNBL_RPO_BJT_OCTAD_C NOT NWHVPWNBL_RPO_BJT_OCTAD_B )
NWHVPWNBL_RPO_BJT_OCTAD_CODH =  HOLES NWHVPWNBL_RPO_BJT_OCTAD_COD   


NWHVPWNBL_RPO_BJT_BGR8_B_pre1 = NWHVPWNBL_RPO_BJT_B_pre INTERACT (SIZE ((NWHVPWNBL_RPO_BJT_B_pre INTERACT NWHVPWNBL_RPO_BJT_E_pre ) INTERACT BJTSNDMY) BY 9.74+GRID )
NWHVPWNBL_RPO_BJT_BGR8_B_pre2 = NWHVPWNBL_RPO_BJT_B_pre INTERACT (((SIZE NWHVPWNBL_RPO_BJT_B_pre BY 9.74/2 OVERUNDER ) AND BJTMDDMY ) INTERACT NWHVPWNBL_RPO_BJT_E_pre == 9 ) 
NWHVPWNBL_RPO_BJT_BGR8_B  = NWHVPWNBL_RPO_BJT_BGR8_B_pre1 OR NWHVPWNBL_RPO_BJT_BGR8_B_pre2
NWHVPWNBL_RPO_BJT_BGR8_E = NWHVPWNBL_RPO_BJT_E_pre INTERACT NWHVPWNBL_RPO_BJT_BGR8_B
NWHVPWNBL_RPO_BJT_BGR8_C = BJT_HVNW_ALL INTERACT NWHVPWNBL_RPO_BJT_BGR8_E
NWHVPWNBL_RPO_BJT_BGR8_BOD = PPOD AND ( NWHVPWNBL_RPO_BJT_BGR8_B NOT NWHVPWNBL_RPO_BJT_BGR8_E )
NWHVPWNBL_RPO_BJT_BGR8_BODH =  HOLES NWHVPWNBL_RPO_BJT_BGR8_BOD   
NWHVPWNBL_RPO_BJT_BGR8_COD = NPOD AND ( NWHVPWNBL_RPO_BJT_BGR8_C NOT NWHVPWNBL_RPO_BJT_BGR8_B )
NWHVPWNBL_RPO_BJT_BGR8_CODH =  HOLES NWHVPWNBL_RPO_BJT_BGR8_COD   


PWHVNWDPW_BJT_E = ((( PPOD AND HVOX ) NOT INTERACT RPO ) INTERACT HVNW ) INTERACT BJTDMY
PWHVNWDPW_BJT_B = BJT_HVNW INTERACT PWHVNWDPW_BJT_E
PWHVNWDPW_BJT_C = BJT_HVPW_ALL INTERACT PWHVNWDPW_BJT_E
PWHVNWDPW_BJT_BOD = NPOD AND ( PWHVNWDPW_BJT_B NOT PWHVNWDPW_BJT_E )
PWHVNWDPW_BJT_BODH =  HOLES PWHVNWDPW_BJT_BOD   
PWHVNWDPW_BJT_COD = PPOD AND ( PWHVNWDPW_BJT_C NOT PWHVNWDPW_BJT_B )
PWHVNWDPW_BJT_CODH =  HOLES PWHVNWDPW_BJT_COD  


PBHVNWDPW_BJT_E = ((( PPOD AND HVOX ) INTERACT RPO ) INTERACT DPW ) INTERACT BJTDMY
PBHVNWDPW_BJT_B = BJT_HVNW INTERACT PBHVNWDPW_BJT_E
PBHVNWDPW_BJT_C = BJT_HVPW_ALL INTERACT PBHVNWDPW_BJT_E
PBHVNWDPW_BJT_BOD = NPOD AND ( PBHVNWDPW_BJT_B NOT PBHVNWDPW_BJT_E )
PBHVNWDPW_BJT_BODH =  HOLES PBHVNWDPW_BJT_BOD   
PBHVNWDPW_BJT_COD = PPOD AND ( PBHVNWDPW_BJT_C NOT PBHVNWDPW_BJT_B )
PBHVNWDPW_BJT_CODH =  HOLES PBHVNWDPW_BJT_COD  


LPNP_BJT_E = ((( PPOD AND HVOX ) INTERACT RPO ) INTERACT NBL ) INTERACT BJTDMY
LPNP_BJT_B = BJT_HVNW_ALL INTERACT LPNP_BJT_E 
LPNP_BJT_C = ((( HOLES BJT_HVPW INNER ) OR BJT_HVPW ) AND BJTDMY ) INTERACT LPNP_BJT_E 
LPNP_BJT_BOD = NPOD AND ( LPNP_BJT_B NOT LPNP_BJT_E )
LPNP_BJT_BODH =  HOLES LPNP_BJT_BOD   
LPNP_BJT_COD = PPOD AND ( LPNP_BJT_C NOT LPNP_BJT_E )
LPNP_BJT_CODH =  HOLES LPNP_BJT_COD  


PNP_BJT_E = ((( PPOD INTERACT NWELL ) INTERACT RPO ) INTERACT BJTDMY ) NOT ( BJTMEDMY OR BJTMDDMY )
PNP_BJT_B = ( NWELL AND BJTDMY ) INTERACT PNP_BJT_E
PNP_BJT_C = (( HOLES ( PWELL AND BJTDMY )) OR ( PWELL AND BJTDMY ) ) INTERACT PNP_BJT_E 
PNP_BJT_BOD = NPOD AND ( PNP_BJT_B NOT PNP_BJT_E )
PNP_BJT_BODH =  HOLES PNP_BJT_BOD   
PNP_BJT_COD = PPOD AND ( PNP_BJT_C NOT PNP_BJT_B )
PNP_BJT_CODH =  HOLES PNP_BJT_COD  


PNP_BJT_BGR8_E_pre = (( PPOD INTERACT NWELL ) INTERACT RPO ) INTERACT BJTDMY 
PNP_BJT_BGR8_B_pre = ( NWELL AND BJTDMY ) INTERACT PNP_BJT_BGR8_E_pre

PNP_BJT_BGR8_B = PNP_BJT_BGR8_B_pre INTERACT PNP_BJT_BGR8_E_pre == 9
PNP_BJT_BGR8_E = PNP_BJT_BGR8_E_pre INTERACT PNP_BJT_BGR8_B
PNP_BJT_BGR8_C = (( HOLES ( PWELL AND BJTDMY )) OR ( PWELL AND BJTDMY ) ) INTERACT PNP_BJT_BGR8_E
PNP_BJT_BGR8_BOD = NPOD AND ( PNP_BJT_BGR8_B NOT PNP_BJT_BGR8_E )
PNP_BJT_BGR8_BODH =  HOLES PNP_BJT_BGR8_BOD   
PNP_BJT_BGR8_COD = PPOD AND ( PNP_BJT_BGR8_C NOT PNP_BJT_BGR8_B )
PNP_BJT_BGR8_CODH =  HOLES PNP_BJT_BGR8_COD  


ALL_NWHVPWNBL_RPO_BJT_E = (( NWHVPWNBL_RPO_BJT_S_E OR NWHVPWNBL_RPO_BJT_DUAL_E ) OR NWHVPWNBL_RPO_BJT_OCTAD_E ) OR NWHVPWNBL_RPO_BJT_BGR8_E

ALL_NWHVPWNBL_RPO_BJT_B = (( NWHVPWNBL_RPO_BJT_S_B OR NWHVPWNBL_RPO_BJT_DUAL_B ) OR NWHVPWNBL_RPO_BJT_OCTAD_B ) OR NWHVPWNBL_RPO_BJT_BGR8_B

ALL_NWHVPWNBL_RPO_BJT_BOD = (( NWHVPWNBL_RPO_BJT_S_BOD OR NWHVPWNBL_RPO_BJT_DUAL_BOD ) OR NWHVPWNBL_RPO_BJT_OCTAD_BOD ) OR NWHVPWNBL_RPO_BJT_BGR8_BOD

ALL_NWHVPWNBL_RPO_BJT_BODH = (( NWHVPWNBL_RPO_BJT_S_BODH OR NWHVPWNBL_RPO_BJT_DUAL_BODH ) OR NWHVPWNBL_RPO_BJT_OCTAD_BODH ) OR NWHVPWNBL_RPO_BJT_BGR8_BODH

ALL_NWHVPWNBL_RPO_BJT_C = (( NWHVPWNBL_RPO_BJT_S_C OR NWHVPWNBL_RPO_BJT_DUAL_C ) OR NWHVPWNBL_RPO_BJT_OCTAD_C ) OR NWHVPWNBL_RPO_BJT_BGR8_C

ALL_NWHVPWNBL_RPO_BJT_COD = (( NWHVPWNBL_RPO_BJT_S_COD OR NWHVPWNBL_RPO_BJT_DUAL_COD ) OR NWHVPWNBL_RPO_BJT_OCTAD_COD ) OR NWHVPWNBL_RPO_BJT_BGR8_COD

ALL_NWHVPWNBL_RPO_BJT_CODH = (( NWHVPWNBL_RPO_BJT_S_CODH OR NWHVPWNBL_RPO_BJT_DUAL_CODH ) OR NWHVPWNBL_RPO_BJT_OCTAD_CODH ) OR NWHVPWNBL_RPO_BJT_BGR8_CODH


ALL_RPO_BJT_E = ((((((( NHVPWNBL_RPO_BJT_E OR NWHVPWNBL_RPO_BJT_S_E ) OR NWHVPWNBL_RPO_BJT_DUAL_E ) OR NWHVPWNBL_RPO_BJT_OCTAD_E ) OR NWHVPWNBL_RPO_BJT_BGR8_E ) OR PBHVNWDPW_BJT_E ) OR LPNP_BJT_E ) OR PNP_BJT_E ) OR PNP_BJT_BGR8_E
ALL_BJT = ((ALL_RPO_BJT_E OR NHVPWNBL_BJT_E ) OR NWHVPWNBL_BJT_E ) OR PWHVNWDPW_BJT_E
ALL_HVBJT = ALL_BJT NOT (PNP_BJT_E OR PNP_BJT_BGR8_E )
BJT_RPO = RPO INTERACT ALL_RPO_BJT_E
NODPW_BJT = ((( NPOD AND HVOX ) NOT INTERACT HVNW ) AND NBL ) INTERACT BJTDMY
PODPW_BJT = ((( PPOD AND HVOX ) AND HVNWNOPO ) NOT NBL ) INTERACT BJTDMY
// diode
HVNWNOPO = HVNW NOT INTERACT POLY
HVPWNOPO = HVPW NOT INTERACT POLY
PP_SCHOTTKY      = PP INTERACT SCHOTTKY_DIODE
PP_SCHOTTKY_HOLE = HOLES PP_SCHOTTKY INNER
HVNW_SCHOTTKY    = HVNW INTERACT SCHOTTKY_DIODE 
SBD_12V = (((( OD INTERACT PP ) INTERACT HVNW ) INTERACT RPO ) INTERACT HVSHP) AND DIODMY  

SBD_24V = ((((( OD INTERACT PP ) INTERACT HVNW ) NOT INTERACT RPO ) INTERACT DPW) INTERACT HVSHP ) AND DIODMY  

SBD_40V = (((( OD INTERACT PP ) INTERACT HVNW ) INTERACT RPO ) NOT INTERACT HVSHP) AND DIODMY  

SBD_ALL = ( SBD_12V OR SBD_24V ) OR SBD_40V
SCHOTTKY_DIODE = COPY SBD_ALL
SBD_POLY = POLY TOUCH ( ( HOLES POLY INNER ) INTERACT SBD_24V )
HVSHN_ZENER      = HVSHN INTERACT ZENER_DIODE
HVSHN_ZENER_HOLE = HOLES HVSHN_ZENER INNER
HVSHP_ZENER      = HVSHP INTERACT ZENER_DIODE
HVSHP_ZENER_HOLE = HOLES HVSHP_ZENER INNER
POLY_ZENER       = POLY INTERACT ZENER_DIODE
POLY_ZENER_HOLE  = HOLES POLY_ZENER INNER

// N+/HVPW  P+/HVNW DIODE
NODHVPW_NI = ((((NPOD AND HVOX) NOT INTERACT HVNW) NOT INTERACT NBL) NOT INTERACT H60NW ) INTERACT DIODMY
PODHVNW_PI = (((((PPOD AND HVOX) AND HVNWNOPO) NOT INTERACT HVSHP)NOT INTERACT NBL) NOT INTERACT HVPB) INTERACT DIODMY

NODHVPW_POD = (((PPOD AND HVOX) NOT INTERACT HVNW)NOT INTERACT NBL) INTERACT DIODMY
NODHVPW_POD_H = HOLES NODHVPW_POD INNER
NODHVPW_POD_HOLE = NODHVPW_POD_H ENCLOSE NODHVPW_NI
NODHVPW_POD_R = NODHVPW_POD TOUCH NODHVPW_POD_HOLE

PODHVNW_NOD = (((NPOD AND HVOX) AND HVNWNOPO) NOT INTERACT NBL ) INTERACT DIODMY
PODHVNW_NOD_H = HOLES PODHVNW_NOD INNER
PODHVNW_NOD_HOLE = PODHVNW_NOD_H ENCLOSE PODHVNW_PI
PODHVNW_NOD_R = PODHVNW_NOD TOUCH PODHVNW_NOD_HOLE

NODPW_DIODE = ((( NPOD AND HVOX ) NOT INTERACT HVNW ) NOT NBL ) INTERACT DIODMY
PODNW_DIODE = ((( PPOD AND HVOX ) AND HVNWNOPO ) NOT NBL ) INTERACT DIODMY
PODPW_DIODE = ((((( PPOD NOT INTERACT HVSHP ) AND HVOX ) AND HVPWNOPO ) AND NBL ) INTERACT DIODMY ) NOT DONUT
NBLPSUB_DIODE = (((( NPOD AND HVOX ) AND HVNWNOPO ) AND NBL ) INTERACT DIODMY ) NOT DONUT
PWPEPINBL_DIODE = ((((( PPOD AND HVOX ) AND NBL ) INTERACT HVSHP ) INTERACT DIODMY ) NOT ZENER_DIODE ) NOT DONUT
ALL_DIODE = ((((( NODPW_DIODE OR PODNW_DIODE ) OR PODPW_DIODE ) OR NBLPSUB_DIODE ) OR PWPEPINBL_DIODE) OR SBD_ALL ) OR ZENER_DIODE 
ALL_3T_DIODE = (( PWPEPINBL_DIODE OR PODNW_DIODE ) OR PODPW_DIODE ) OR SBD_ALL 
// Resistor
RPODRPOISO = (( PPOD AND REST ) AND HVNW ) AND RPO
RPWODISO = ((DPW AND RWDMY ) AND RPO) AND OD
RHVNW = HVNW AND RWDMY 
RHVPW = HVPW AND RWDMY 
RH60NW = H60NW AND RWDMY 
Block = ((CBi OR PMDMY ) OR LOGO ) OR LMARK


PNP_7_DMY = HV7DMY  INTERACT SDI
PNP_12_DMY = HV12DMY INTERACT SDI
PNP_12G12_DMY = HV12DMY INTERACT SDI
PNP_20_DMY = HV20DMY INTERACT SDI
PNP_24_DMY = HV24DMY INTERACT SDI
PNP_40_DMY = HV40DMY INTERACT SDI
PNP_40G12_DMY = HV40DMY INTERACT SDI
PNP_45_DMY = HV45 INTERACT SDI
PNP_60_DMY = HV60DMY INTERACT SDI

//HV ESD DIO
ESD_HVDIO = (HVDMY AND DIODMY) INTERACT SDI
ESD_HVDIO_60 = ESD_HVDIO AND HVDMY2
ESD_HVDIO_40 = ESD_HVDIO NOT HVDMY2

CATH_ESD_HVDIO_60 = (NPOD AND ESD_HVDIO) AND H60NW
ANO_ESD_HVDIO_60 = (PPOD AND ESD_HVDIO) AND H60PW

ANO_ESD_HVDIO_40 = (PPOD AND ESD_HVDIO) AND NBL
CATH_ESD_HVDIO_40 = (NPOD AND ESD_HVDIO) AND NBL

CATH_ESD_DIO = CATH_ESD_HVDIO_60 OR CATH_ESD_HVDIO_40
ANO_ESD_DIO = ANO_ESD_HVDIO_60 OR ANO_ESD_HVDIO_40
CATH_ANO_ESD_DIO = ANO_ESD_DIO OR CATH_ESD_DIO
Finger_ESD_DIO = ANO_ESD_HVDIO_40 OR CATH_ESD_HVDIO_60
Finger_L_ESD_DIO = LENGTH Finger_ESD_DIO > HVESD_W_7 + GRID
Finger_W_ESD_DIO = LENGTH Finger_ESD_DIO <= HVESD_W_7 + GRID

ESD_HVDIO_merge_pre = ESD_HVDIO AND OD
ESD_HVDIO_merge_H = HOLES ESD_HVDIO_merge_pre
ESD_HVDIO_merge_R = ESD_HVDIO_merge_pre TOUCH ESD_HVDIO_merge_H
ESD_HVDIO_merge = ESD_HVDIO_merge_R OR ESD_HVDIO_merge_H

// HV ESD
HV_ESD_PNP = ((HVOX OR HV7DMY) AND SDI) NOT DIODMY
HV_ESD_PNP_G5 = HV_ESD_PNP AND ((HVDMY OR HVDMY2) OR HV7DMY)
HV_ESD_PNP_G12 = HV_ESD_PNP NOT (HVDMY OR HVDMY2)
PP_SH_N = PP AND HVSHN
PP_SH_P = PP AND HVSHP
NP_SH_N = NP AND HVSHN
NP_NOSHN = NP NOT HVSHN

NP_NO_EMRDMY = NP NOT EMRDMY
PP_NO_EMRDMY = PP NOT EMRDMY

HV_ESD = (HVOX OR HV7DMY) AND SDI

// HV 7V_ESD
CLM_DMY_PNP_7 = HV_ESD_PNP_G5 AND HV7DMY
EMIOD_ESD_PNP_7 = ((EMRDMY AND OD) AND CLM_DMY_PNP_7 ) AND NWELL
COLOD_ESD_PNP_7 = ((PP_NO_EMRDMY AND OD) AND CLM_DMY_PNP_7 ) AND NWELL

BASOD_ESD_PNP_7_pre = ((NP_NO_EMRDMY AND OD) AND CLM_DMY_PNP_7 ) AND NWELL
BASOD_ESD_PNP_7_H = HOLES BASOD_ESD_PNP_7_pre INNER
BASOD_ESD_PNP_7 = BASOD_ESD_PNP_7_pre TOUCH BASOD_ESD_PNP_7_H

COL_EMI_ESD_PNP_7 = EMIOD_ESD_PNP_7 OR COLOD_ESD_PNP_7
COL_EMI_ESD_merge_PNP_7 = SIZE COL_EMI_ESD_PNP_7 BY HVESD_S_1_PNP_7/2 OVERUNDER

PPOD_H_BJT_PNP_7 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_7
PPOD_R_BJT_PNP_7 = PPOD TOUCH PPOD_H_BJT_PNP_7

COL_BAS_EMI_OD_PNP_7 = COL_EMI_ESD_PNP_7 OR BASOD_ESD_PNP_7

HVESD_merge_PNP_7 = BASOD_ESD_PNP_7 OR BASOD_ESD_PNP_7_H

// HV 12V_ESD
CLM_DMY_PNP_12 = HV_ESD_PNP_G5 AND HV12DMY
EMIOD_ESD_PNP_12 = ((EMRDMY AND OD) AND CLM_DMY_PNP_12 ) AND HVNW
COLOD_ESD_PNP_12 = ((PP_NO_EMRDMY AND OD) AND CLM_DMY_PNP_12 ) AND HVNW

BASOD_ESD_PNP_12_pre = ((NP_NO_EMRDMY AND OD) AND CLM_DMY_PNP_12 ) AND HVNW
BASOD_ESD_PNP_12_H = HOLES BASOD_ESD_PNP_12_pre INNER
BASOD_ESD_PNP_12 = BASOD_ESD_PNP_12_pre TOUCH BASOD_ESD_PNP_12_H

COL_EMI_ESD_PNP_12 = EMIOD_ESD_PNP_12 OR COLOD_ESD_PNP_12
COL_EMI_ESD_merge_PNP_12 = SIZE COL_EMI_ESD_PNP_12 BY HVESD_S_1_PNP_12/2 OVERUNDER

PPOD_H_BJT_PNP_12 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_12
PPOD_R_BJT_PNP_12 = PPOD TOUCH PPOD_H_BJT_PNP_12

COL_BAS_EMI_OD_PNP_12 = COL_EMI_ESD_PNP_12 OR BASOD_ESD_PNP_12

HVESD_merge_PNP_12 = BASOD_ESD_PNP_12 OR BASOD_ESD_PNP_12_H

// HV 20V_ESD
CLM_DMY_PNP_20 = HV_ESD_PNP_G5 AND HV20DMY
EMIOD_ESD_PNP_20 = ((PP_SH_N AND OD) AND CLM_DMY_PNP_20 ) AND NBL
COLOD_ESD_PNP_20 = ((PP_SH_P AND OD) AND CLM_DMY_PNP_20 ) AND NBL

BASOD_ESD_PNP_20_pre = ((NP_NOSHN AND OD) AND CLM_DMY_PNP_20 ) AND NBL
BASOD_ESD_PNP_20_H = HOLES BASOD_ESD_PNP_20_pre INNER
BASOD_ESD_PNP_20 = BASOD_ESD_PNP_20_pre TOUCH BASOD_ESD_PNP_20_H

COL_EMI_ESD_PNP_20 = EMIOD_ESD_PNP_20 OR COLOD_ESD_PNP_20
COL_EMI_ESD_merge_PNP_20 = SIZE COL_EMI_ESD_PNP_20 BY HVESD_S_1_PNP_20/2 OVERUNDER

PPOD_H_BJT_PNP_20 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_20
PPOD_R_BJT_PNP_20 = PPOD TOUCH PPOD_H_BJT_PNP_20

COL_BAS_EMI_OD_PNP_20 = COL_EMI_ESD_PNP_20 OR BASOD_ESD_PNP_20

HVESD_merge_PNP_20 = BASOD_ESD_PNP_20 OR BASOD_ESD_PNP_20_H

// HV 24V_ESD
CLM_DMY_PNP_24 = HV_ESD_PNP_G5 AND HV24DMY
EMIOD_ESD_PNP_24 = ((PP_SH_N AND OD) AND CLM_DMY_PNP_24 ) AND NBL
COLOD_ESD_PNP_24 = ((PP_SH_P AND OD) AND CLM_DMY_PNP_24 ) AND NBL

BASOD_ESD_PNP_24_pre = ((NP_NOSHN AND OD) AND CLM_DMY_PNP_24 ) AND NBL
BASOD_ESD_PNP_24_H = HOLES BASOD_ESD_PNP_24_pre INNER
BASOD_ESD_PNP_24 = BASOD_ESD_PNP_24_pre TOUCH BASOD_ESD_PNP_24_H

COL_EMI_ESD_PNP_24 = EMIOD_ESD_PNP_24 OR COLOD_ESD_PNP_24
COL_EMI_ESD_merge_PNP_24 = SIZE COL_EMI_ESD_PNP_24 BY HVESD_S_1_PNP_24/2 OVERUNDER

PPOD_H_BJT_PNP_24 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_24
PPOD_R_BJT_PNP_24 = PPOD TOUCH PPOD_H_BJT_PNP_24

COL_BAS_EMI_OD_PNP_24 = COL_EMI_ESD_PNP_24 OR BASOD_ESD_PNP_24

HVESD_merge_PNP_24 = BASOD_ESD_PNP_24 OR BASOD_ESD_PNP_24_H

// HV 40V_ESD
CLM_DMY_PNP_40 = HV_ESD_PNP_G5 AND HV40DMY
EMIOD_ESD_PNP_40 = ((PP_SH_N AND OD) AND CLM_DMY_PNP_40 ) AND NBL
COLOD_ESD_PNP_40 = ((PP_SH_P AND OD) AND CLM_DMY_PNP_40 ) AND NBL

BASOD_ESD_PNP_40_pre = ((NP_NOSHN AND OD) AND CLM_DMY_PNP_40 ) AND NBL
BASOD_ESD_PNP_40_H = HOLES BASOD_ESD_PNP_40_pre INNER
BASOD_ESD_PNP_40 = BASOD_ESD_PNP_40_pre TOUCH BASOD_ESD_PNP_40_H

COL_EMI_ESD_PNP_40 = EMIOD_ESD_PNP_40 OR COLOD_ESD_PNP_40
COL_EMI_ESD_merge_PNP_40 = SIZE COL_EMI_ESD_PNP_40 BY HVESD_S_1_PNP_40/2 OVERUNDER

PPOD_H_BJT_PNP_40 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_40
PPOD_R_BJT_PNP_40 = PPOD TOUCH PPOD_H_BJT_PNP_40

COL_BAS_EMI_OD_PNP_40 = COL_EMI_ESD_PNP_40 OR BASOD_ESD_PNP_40

HVESD_merge_PNP_40 = BASOD_ESD_PNP_40 OR BASOD_ESD_PNP_40_H

// HV 45V_ESD
H60NW_NBL = H60NW OR NBL
CLM_DMY_PNP_45 = HV_ESD_PNP_G5 AND HV45
EMIOD_ESD_PNP_45 = ((PP_SH_N AND OD) AND CLM_DMY_PNP_45 ) AND H60NW_NBL
COLOD_ESD_PNP_45 = ((PP_SH_P AND OD) AND CLM_DMY_PNP_45 ) AND H60NW_NBL

BASOD_ESD_PNP_45_pre = ((NP_NOSHN AND OD) AND CLM_DMY_PNP_45 ) AND H60NW_NBL
BASOD_ESD_PNP_45_H = HOLES BASOD_ESD_PNP_45_pre INNER
BASOD_ESD_PNP_45 = BASOD_ESD_PNP_45_pre TOUCH BASOD_ESD_PNP_45_H

COL_EMI_ESD_PNP_45 = EMIOD_ESD_PNP_45 OR COLOD_ESD_PNP_45
COL_EMI_ESD_merge_PNP_45 = SIZE COL_EMI_ESD_PNP_45 BY HVESD_S_1_PNP_45/2 OVERUNDER

PPOD_H_BJT_PNP_45 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_45
PPOD_R_BJT_PNP_45 = PPOD TOUCH PPOD_H_BJT_PNP_45

COL_BAS_EMI_OD_PNP_45 = COL_EMI_ESD_PNP_45 OR BASOD_ESD_PNP_45

HVESD_merge_PNP_45 = BASOD_ESD_PNP_45 OR BASOD_ESD_PNP_45_H

// HV 60V_ESD
CLM_DMY_PNP_60 = HV_ESD_PNP_G5 AND HV60DMY
EMIOD_ESD_PNP_60 = ((PP_SH_N AND OD) AND CLM_DMY_PNP_60 ) AND NBL
COLOD_ESD_PNP_60 = ((PP_SH_P AND OD) AND CLM_DMY_PNP_60 ) AND NBL

BASOD_ESD_PNP_60_pre = ((NP_NOSHN AND OD) AND CLM_DMY_PNP_60 ) AND NBL
BASOD_ESD_PNP_60_H = HOLES BASOD_ESD_PNP_60_pre INNER
BASOD_ESD_PNP_60 = BASOD_ESD_PNP_60_pre TOUCH BASOD_ESD_PNP_60_H

COL_EMI_ESD_PNP_60 = EMIOD_ESD_PNP_60 OR COLOD_ESD_PNP_60
COL_EMI_ESD_merge_PNP_60 = SIZE COL_EMI_ESD_PNP_60 BY HVESD_S_1_PNP_60/2 OVERUNDER

PPOD_H_BJT_PNP_60 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_60
PPOD_R_BJT_PNP_60 = PPOD TOUCH PPOD_H_BJT_PNP_60

COL_BAS_EMI_OD_PNP_60 = COL_EMI_ESD_PNP_60 OR BASOD_ESD_PNP_60

HVESD_merge_PNP_60 = BASOD_ESD_PNP_60 OR BASOD_ESD_PNP_60_H

// HV 40VG12_ESD
CLM_DMY_PNP_40G12 = HV_ESD_PNP_G12 AND HV40DMY
EMIOD_ESD_PNP_40G12 = ((PP_SH_N AND OD) AND CLM_DMY_PNP_40G12 ) AND NBL
COLOD_ESD_PNP_40G12 = ((PP_SH_P AND OD) AND CLM_DMY_PNP_40G12 ) AND NBL

BASOD_ESD_PNP_40G12_pre = ((NP_NOSHN AND OD) AND CLM_DMY_PNP_40G12 ) AND NBL
BASOD_ESD_PNP_40G12_H = HOLES BASOD_ESD_PNP_40G12_pre INNER
BASOD_ESD_PNP_40G12 = BASOD_ESD_PNP_40G12_pre TOUCH BASOD_ESD_PNP_40G12_H

COL_EMI_ESD_PNP_40G12 = EMIOD_ESD_PNP_40G12 OR COLOD_ESD_PNP_40G12
COL_EMI_ESD_merge_PNP_40G12 = SIZE COL_EMI_ESD_PNP_40G12 BY HVESD_S_1_PNP_40G12/2 OVERUNDER

PPOD_H_BJT_PNP_40G12 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_40G12
PPOD_R_BJT_PNP_40G12 = PPOD TOUCH PPOD_H_BJT_PNP_40G12

COL_BAS_EMI_OD_PNP_40G12 = COL_EMI_ESD_PNP_40G12 OR BASOD_ESD_PNP_40G12

HVESD_merge_PNP_40G12 = BASOD_ESD_PNP_40G12 OR BASOD_ESD_PNP_40G12_H

// HV 12VG12_ESD
CLM_DMY_PNP_12G12 = HV_ESD_PNP_G12 AND HV12DMY
EMIOD_ESD_PNP_12G12 = ((EMRDMY AND OD) AND CLM_DMY_PNP_12G12 ) AND HVNW
COLOD_ESD_PNP_12G12 = ((PP_NO_EMRDMY AND OD) AND CLM_DMY_PNP_12G12 ) AND HVNW

BASOD_ESD_PNP_12G12_pre = ((NP_NO_EMRDMY AND OD) AND CLM_DMY_PNP_12G12 ) AND HVNW
BASOD_ESD_PNP_12G12_H = HOLES BASOD_ESD_PNP_12G12_pre INNER
BASOD_ESD_PNP_12G12 = BASOD_ESD_PNP_12G12_pre TOUCH BASOD_ESD_PNP_12G12_H

COL_EMI_ESD_PNP_12G12 = EMIOD_ESD_PNP_12G12 OR COLOD_ESD_PNP_12G12
COL_EMI_ESD_merge_PNP_12G12 = SIZE COL_EMI_ESD_PNP_12G12 BY HVESD_S_1_PNP_12G12/2 OVERUNDER

PPOD_H_BJT_PNP_12G12 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_12G12
PPOD_R_BJT_PNP_12G12 = PPOD TOUCH PPOD_H_BJT_PNP_12G12

COL_BAS_EMI_OD_PNP_12G12 = COL_EMI_ESD_PNP_12G12 OR BASOD_ESD_PNP_12G12

HVESD_merge_PNP_12G12 = BASOD_ESD_PNP_12G12 OR BASOD_ESD_PNP_12G12_H


 HVESD_EOD =  (((((((EMIOD_ESD_PNP_7 OR EMIOD_ESD_PNP_12) OR EMIOD_ESD_PNP_20) OR EMIOD_ESD_PNP_24) OR EMIOD_ESD_PNP_40) OR EMIOD_ESD_PNP_45) OR EMIOD_ESD_PNP_60) OR EMIOD_ESD_PNP_40G12) OR EMIOD_ESD_PNP_12G12
 HVESD_BOD =  (((((((BASOD_ESD_PNP_7 OR BASOD_ESD_PNP_12) OR BASOD_ESD_PNP_20) OR BASOD_ESD_PNP_24) OR BASOD_ESD_PNP_40) OR BASOD_ESD_PNP_45) OR BASOD_ESD_PNP_60) OR BASOD_ESD_PNP_40G12) OR BASOD_ESD_PNP_12G12
 HVESD_COD =  (((((((COLOD_ESD_PNP_7 OR COLOD_ESD_PNP_12) OR COLOD_ESD_PNP_20) OR COLOD_ESD_PNP_24) OR COLOD_ESD_PNP_40) OR COLOD_ESD_PNP_45) OR COLOD_ESD_PNP_60) OR COLOD_ESD_PNP_40G12) OR COLOD_ESD_PNP_12G12
 HVESD_EC =  (((((((COL_EMI_ESD_PNP_7 OR COL_EMI_ESD_PNP_12) OR COL_EMI_ESD_PNP_20) OR COL_EMI_ESD_PNP_24) OR COL_EMI_ESD_PNP_40) OR COL_EMI_ESD_PNP_45) OR COL_EMI_ESD_PNP_60) OR COL_EMI_ESD_PNP_40G12) OR COL_EMI_ESD_PNP_12G12
 HVESD_merge =  (((((((HVESD_merge_PNP_7 OR HVESD_merge_PNP_12) OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_24) OR HVESD_merge_PNP_40) OR HVESD_merge_PNP_45) OR HVESD_merge_PNP_60) OR HVESD_merge_PNP_40G12) OR HVESD_merge_PNP_12G12
 HVESD_EC_merge =  (((((((COL_EMI_ESD_merge_PNP_7 OR COL_EMI_ESD_merge_PNP_12) OR COL_EMI_ESD_merge_PNP_20) OR COL_EMI_ESD_merge_PNP_24) OR COL_EMI_ESD_merge_PNP_40) OR COL_EMI_ESD_merge_PNP_45) OR COL_EMI_ESD_merge_PNP_60) OR COL_EMI_ESD_merge_PNP_40G12) OR COL_EMI_ESD_merge_PNP_12G12
 HVESD_BH =  (((((((BASOD_ESD_PNP_7_H OR BASOD_ESD_PNP_12_H) OR BASOD_ESD_PNP_20_H) OR BASOD_ESD_PNP_24_H) OR BASOD_ESD_PNP_40_H) OR BASOD_ESD_PNP_45_H) OR BASOD_ESD_PNP_60_H) OR BASOD_ESD_PNP_40G12_H) OR BASOD_ESD_PNP_12G12_H

HVESD_ISO_H = (HOLES PPOD INNER) ENCLOSE HVESD_BOD
HVESD_ISO_RING = PPOD TOUCH HVESD_ISO_H
HVESD_EC_gap = (HVESD_EC_merge NOT HVESD_EOD) NOT HVESD_COD
HVESD_EC_OUT = HVESD_EC INTERACT HVESD_EC_gap == 1



// reminder rule for tape out
DRM.R.1 { @ DRM.R.1 is a warning message to remind the users not to lack the related DRMs. Please refer to DRM.R.1 in the DRM for the detail.
    COPY CHIPx
}



NLD24G5_OD_1 = SIZE NLD24G5_OD BY 2.99/2 UNDEROVER
NI24G5_OD_1 = SIZE NI24G5_OD BY 2.99/2 UNDEROVER
NLD12G5_OD_1       = SIZE NLD12G5_CH BY 2.99/2 UNDEROVER 
MAC_OD       =  (((((((((((NLD60G5_V2_OD_1 OR NLD45G5_OD ) OR NLD40G12_OD  ) OR NLD40G5_OD ) OR NLD24G5_OD_1 ) OR NI24G5_OD_1 ) OR NDLD24G5_OD ) OR NLD20G5_OD ) OR NLD12G12_CH ) OR  NLD12G5_OD_1 ) OR NLD7G5_FISO_CH ) OR NLD7G5_CH )  AND MACRODMY
MAC_OD_D       =   (((((((((((NLD60G5_V2_D OR NLD45G5_D ) OR NLD40G12_D  ) OR NLD40G5_D ) OR NLD24G5_D ) OR NI24G5_D ) OR NDLD24G5_D ) OR NLD20G5_D ) OR NLD12G12_D ) OR  NLD12G5_D ) OR NLD7G5_FISO_D ) OR NLD7G5_D ) AND MACRODMY
MAC_OD_S       =   (((((((((((NLD60G5_V2_S OR NLD45G5_S ) OR NLD40G12_S  ) OR NLD40G5_S ) OR NLD24G5_S ) OR NI24G5_S ) OR NDLD24G5_S ) OR NLD20G5_S ) OR NLD12G12_S ) OR  NLD12G5_S ) OR NLD7G5_FISO_S ) OR NLD7G5_S )  AND MACRODMY
MAC_OD_A = MAC_OD INTERACT GATE > 1
MAC_LD_A     =   MAC_OD_A NOT POLY
MAC_LD_B     =   MAC_LD_A TOUCH POLY == 1

MACRO.R.2 { @ The finger number of NLDMOS inside MACRODMY must be even numbers.
    A = MAC_LD_B INTERACT MAC_OD_D
    B = MAC_LD_B INTERACT MAC_OD_S
    ( MAC_OD_A INTERACT A ) INTERACT B
}
MACRO.R.3 { @ The layout of NLDMOS inside MACRODMY must be drain-outward.
   ( MAC_LD_B INTERACT MAC_OD ) INTERACT MAC_OD_S
}
MACRO.R.4 { @ MACRODMY must cover all HVMOS
    ALL_HVGATE NOT MACRODMY
    ALL_HVMOS_OD NOT MACRODMY
}

//===============LVISO rule check================================

LVISO.R.1 { @ Each LV device region must be surrounded by HVPW and P+ isolation ring. 
            @ Please note that P+ isolation ring must be connected to the most negative voltage .
	LV_DEVICE NOT INSIDE HVP_ISO_HCHECK		
}
HVNW_NBL = (HVNWi INTERACT NTAPi_NBL) INSIDE NBL
HVNW_NBL_NW = HVNW_NBL OR (NWELLi OR NWLVTi)
SCONNECT NTAPi HVNW_NBL_NW
LVISO.R.2 { @ NBL for LV isolation, i.e. NBL not HV, must be picked up using HVNW and N+ 
            @ isolation ring. Please note that N+ isolation ring must be connected to the 
	    @ same potential of all NW inside the N+ isolation ring. 
      ( NBL NOT HVOX ) NOT INTERACT NBL_ISO_RING
      NBLi INTERACT HVNW_NBL_NW BY NET > 1		  
}
LVISO.R.3 { @ 2.5V NW and 5V NW have to be isolated in separate NBL(except NBL and DPW). 
      X = ( GATE NOT OD2 ) NOT HVOX
      Y = GATE AND OD2
      (( NBL_ISO_HOLE NOT DPW ) ENCLOSE X ) ENCLOSE Y 
}
LVISO.R.4 { @ Each hot NW has to be isolated in separate NBL(except NBL and DPW).
     ( NBL NOT DPW ) INTERACT HOT_NWELL >1 
}
LVISO.R.5 { @ PNPS inside NBL is not allowed
      BJTOD2 =  OD2 AND BJTDMY   
      ( PPOD INTERACT BJTOD2 ) AND NBL
      ( NWELL INTERACT BJTOD2 ) AND NBL 
}
LVISO.R.6 { @For 60v application, each LV device region must be surrounded by H60PW and P+ isolation ring.H60PW is formed by {HVDMY2 NOT H60NW} 
            @ Please note that P+ isolation ring must be connected to the most negative voltage .
        LV_DEVICE_60V = LV_DEVICE INSIDE LV_H60NW_HOLE
	LV_DEVICE_60V NOT INSIDE HV60P_ISO_HCHECK		
}
LVISO.R.7 { @For 60v application, H60NW must surrounded HVNW and N+ pickup ring.  
        A = (NBL_ISO_RING OUTSIDE HVOX) INSIDE HV60P_ISO_HCHECK  
	B = LV_H60NW_RING OR LV_H60NW_HOLE
        A NOT INSIDE B
}
LVISO.R.8 { @ Hot NW and cold NW have to be isolated in separate NBL(except NBL and DPW)
       ((NBL_ISO_HOLE NOT DPW ) ENCLOSE HOT_NWELL) ENCLOSE COLD_NWELL 
}

// ;------------ NBL -------------------
// ;
NBL.W.1 { @ Min.width of NBL >= ^NBL_W_1 um ,except PA7G5
    A = NBL NOT INTERACT PA7G5_GATE
   INT A < NBL_W_1 ABUT<90 SINGULAR REGION
}


#IFDEF SUB_NOT_GROUND
NBL.R.1 { @ If the substrate is not tied to ground, all LV devices must be isolated by NBL,
          @ and surrounded by HVNW and N+ isolation ring. is checked by LVISO.R.2
    B = (PP AND NWELL) AND BJTDMY
    C = LV_DEVICE NOT RNWEL
    A = C NOT INTERACT B
    A NOT NBL
}
#ENDIF
NBL.R.2	{ @ NW resistor/PNP(P+/NW/Psub) inside NBL is not allowed.    
   RNWEL AND NBLi 
}
//PNP(P+/NW/Psub) inside NBL not allowed has been checked by LVISO.R.5

NBL.R.3 { @ NBL must be surrounded by P+OD isolation ring.
    LV_NBL = NBL INTERACT LV_DEVICE
    HV_NBL = NBL NOT LV_NBL
    HV_NBL NOT HVP_ISO_HOLE
    HVP_ISO_HOLE INTERACT NBL >1
    LV_NBL NOT HVP_ISO_HCHECK
    HVP_ISO_HCHECK INTERACT NBL >1	
}  


NBL.R.4	{ @ NBL is must for all HV N/P MOS exclude NLD60G5_V2. NLD45G5, NLD7G5 non-iso
   A = ALL_HVGATE NOT NBL
   A NOT (( NLD60G5_V2_GATE OR NLD45G5_GATE ) OR NLD7G5_GATE )    
}
NBL.W.2 { @ Min.width of NBL inside HVDMY2 except PA40G5_SOA >= ^NBL_W_2 um
   X = (NBL INSIDE HVDMY2) NOT INTERACT (PA40G5_GATE INTERACT HV40)
   INT X < NBL_W_2 ABUT<90 SINGULAR REGION
}
NBL.S.1	{ @ Min. space between two NBL regions >= ^NBL_S_1 um
  EXT NBL < NBL_S_1 ABUT<90 SINGULAR REGION
}

// OD CHECKS
//==============
OD.W.1_OD.W.2 { @ Minimum active width, transistor and interconnect >= ^OD_W_1_2 um
  INT OD < OD_W_1_2 SINGULAR ABUT < 90 REGION 
}

OD.W.3 { @ Butting OD edge with one segment >= ^OD_W_3 um
   A = LENGTH PP_BEDGE >= OD_W_3      // Gets edges segments that are OK
   B = EXPAND EDGE PP_BEDGE         // Create polygon from separate edges
       INSIDE BY 0.004              // by expanding toward tap and extending
       EXTEND BY 0.004              // endpoints by small database unit.
   (B NOT WITH EDGE A) NOT INTERACT (MTP_2T2C AND MCEL)		// All edges not including an OK edge
   C = LENGTH NP_BEDGE >= OD_W_3
   D = EXPAND EDGE NP_BEDGE
       INSIDE BY 0.004
       EXTEND BY 0.004
   (D NOT WITH EDGE C) NOT INTERACT (MTP_2T2C AND MCEL)
}
OD.S.1_OD.S.2NB { @ Minimum active spacing >= ^OD_S_1 um
    // OD.S.2 for Non-Butting case
  EXT OD < OD_S_1 ABUT < 90 SINGULAR REGION 
}
OD.S.2 { @ Min. N+OD to P+OD >= 0um
  NPOD AND PPOD
}  
OD.C.1{ @ NWELL olap n active tie down >= ^OD_C_1 um
  A = ENC NPOD NONWR < OD_C_1 SINGULAR ABUT <90 REGION
  A NOT INTERACT IOLDNMOS_GATE
  B = NPOD CUT NONWR
  B NOT INTERACT IOLDNMOS_GATE
}
OD.C.2_OD.C.3{ @ Minimum nwell to n+ active spacing >= ^OD_C_2_3 um
  A = EXT NPOD NONWR < OD_C_2_3 SINGULAR ABUT <90 REGION
  A NOT INTERACT IOLDNMOS_GATE
  B = NPOD CUT NONWR
  B NOT INTERACT IOLDNMOS_GATE
}
OD.E.2{ @ NWELL olap p active >= ^OD_E_2 um 
  A = ENC PPOD NONWR < OD_E_2 SINGULAR ABUT <90 REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
  (PPOD CUT NONWR) NOT INTERACT (MTP_2T2C AND MCEL)
}
OD.C.5{ @ NWELL space to p active tie >= ^OD_C_5 um
  EXT PPOD NONWR < OD_C_5 SINGULAR ABUT <90 REGION
      PPOD CUT NONWR
}
OD.R.warn { @ DOD overlap with POLY or OD is not allowed 
    DOD AND POLYi
    DOD AND ODi	
}

// OD.S.2I -- By Definition butted diffs are spaced 0.00 apart
// OD.C.6 is taken care of by PP/NP.C.3




OD.W.4 { @ Minimun width of OD region for low Vt 5.0 NMOS and PMOS >= ^OD_W_4 um
  A = GATE_W INSIDE EDGE NTN
  B = GATE_W INSIDE EDGE NWLVT
  PATH LENGTH A < OD_W_4
  PATH LENGTH B < OD_W_4

}
OD.W.5 { @ Minimun width of OD region for 5v depletion NMOS  >= ^OD_W_5 um
  A = GATE_W INSIDE EDGE VTLVDN 
  PATH LENGTH A < OD_W_5
}





HVOD.S.1_NLD60G5_V2 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NLD60G5_V2 um For NLD60G5_V2
     A = OD COIN INSIDE EDGE  NLD60G5_V2_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE H60NW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NLD60G5_V2
     E NOT TOUCH NLD60G5_V2_D 
}
HVOD.S.1_NLD45G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NLD45G5 um For NLD45G5
     A = OD COIN INSIDE EDGE  NLD45G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE H60NW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NLD45G5
     E NOT TOUCH NLD45G5_D 
}
HVOD.S.1_NLD40G12 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NLD40G12 um For NLD40G12
     A = OD COIN INSIDE EDGE  NLD40G12_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVNW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NLD40G12
     E NOT TOUCH NLD40G12_D 
}
HVOD.S.1_NLD40G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NLD40G5 um For NLD40G5
     A = OD COIN INSIDE EDGE  NLD40G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVNW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NLD40G5
     E NOT TOUCH NLD40G5_D 
}
HVOD.S.1_NLD24G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NLD24G5 um For NLD24G5
     A = OD COIN INSIDE EDGE  NLD24G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVNW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NLD24G5
     E NOT TOUCH NLD24G5_D 
}
HVOD.S.1_NI24G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NI24G5 um For NI24G5
     A = OD COIN INSIDE EDGE  NI24G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVNW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NI24G5
     E NOT TOUCH NI24G5_D 
}
HVOD.S.1_NDLD24G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NDLD24G5 um For NDLD24G5
     A = OD COIN INSIDE EDGE  NDLD24G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVNW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NDLD24G5
     E NOT TOUCH NDLD24G5_D 
}
HVOD.S.1_NLD20G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_NLD20G5 um For NLD20G5
     A = OD COIN INSIDE EDGE  NLD20G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVNW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_NLD20G5
     E NOT TOUCH NLD20G5_D 
}

HVOD.S.1_PA60G5_V2 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA60G5_V2 um For PA60G5_V2
     A = OD COIN INSIDE EDGE  PA60G5_V2_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA60G5_V2
     E NOT TOUCH PA60G5_V2_D 
}
HVOD.S.1_PA45G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA45G5 um For PA45G5
     A = OD COIN INSIDE EDGE  PA45G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA45G5
     E NOT TOUCH PA45G5_D 
}
HVOD.S.1_PA40G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA40G5 um For PA40G5
     A = OD COIN INSIDE EDGE  PA40G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA40G5
     E NOT TOUCH PA40G5_D 
}
HVOD.S.1_PA40G12 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA40G12 um For PA40G12
     A = OD COIN INSIDE EDGE  PA40G12_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA40G12
     E NOT TOUCH PA40G12_D 
}
HVOD.S.1_PA24G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA24G5 um For PA24G5
     A = OD COIN INSIDE EDGE  PA24G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA24G5
     E NOT TOUCH PA24G5_D 
}
HVOD.S.1_PA12G12 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA12G12 um For PA12G12
     A = OD COIN INSIDE EDGE  PA12G12_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA12G12
     E NOT TOUCH PA12G12_D 
}
HVOD.S.1_PA12G5 { @Maximum and minimum space between channel OD and source/drain OD== ^HVOD_S_1_PA12G5 um For PA12G5
     A = OD COIN INSIDE EDGE  PA12G5_GATE
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B INSIDE HVPW 
     D = OD COIN OUTSIDE EDGE C
     E = EXPAND EDGE D OUTSIDE BY HVOD_S_1_PA12G5
     E NOT TOUCH PA12G5_D 
}

HVOD.O.1_NLD60G5_V2 { @ Minimum and maximum overlap of H60NW over channel OD.== ^HVOD_O_1_NLD60G5_V2 um For NLD60G5_V2
     X = NLD60G5_V2_GATE AND H60NW
     INT NLD60G5_V2_GATE H60NW < HVOD_O_1_NLD60G5_V2 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD60G5_V2/2 UNDEROVER 
}
HVOD.O.1_NLD45G5 { @ Minimum and maximum overlap of H60NW over channel OD.== ^HVOD_O_1_NLD45G5 um For NLD45G5
     X = NLD45G5_GATE AND H60NW
     INT NLD45G5_GATE H60NW < HVOD_O_1_NLD45G5 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD45G5/2 UNDEROVER 
}
HVOD.O.1_NLD40G12 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NLD40G12 um For NLD40G12
     X = NLD40G12_GATE AND HVNW
     INT NLD40G12_GATE HVNW < HVOD_O_1_NLD40G12 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD40G12/2 UNDEROVER 
}
HVOD.O.1_NLD40G5 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NLD40G5 um For NLD40G5
     X = NLD40G5_GATE AND HVNW
     INT NLD40G5_GATE HVNW < HVOD_O_1_NLD40G5 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD40G5/2 UNDEROVER 
}
HVOD.O.1_NLD24G5 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NLD24G5 um For NLD24G5
     X = NLD24G5_GATE AND HVNW
     INT NLD24G5_GATE HVNW < HVOD_O_1_NLD24G5 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD24G5/2 UNDEROVER 
}
HVOD.O.1_NI24G5 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NI24G5 um For NI24G5
     X = NI24G5_GATE AND HVNW
     INT NI24G5_GATE HVNW < HVOD_O_1_NI24G5 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NI24G5/2 UNDEROVER 
}
HVOD.O.1_NDLD24G5 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NDLD24G5 um For NDLD24G5
     X = NDLD24G5_GATE AND HVNW
     INT NDLD24G5_GATE HVNW < HVOD_O_1_NDLD24G5 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NDLD24G5/2 UNDEROVER 
}
HVOD.O.1_NLD20G5 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NLD20G5 um For NLD20G5
     X = NLD20G5_GATE AND HVNW
     INT NLD20G5_GATE HVNW < HVOD_O_1_NLD20G5 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD20G5/2 UNDEROVER 
}
HVOD.O.1_NLD12G12 { @ Minimum and maximum overlap of HVNW over channel OD.== ^HVOD_O_1_NLD12G12 um For NLD12G12
     X = NLD12G12_GATE AND HVNW
     INT NLD12G12_GATE HVNW < HVOD_O_1_NLD12G12 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVOD_O_1_NLD12G12/2 UNDEROVER 
}

HVOD.C.1_PA60G5_V2 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA60G5_V2 um For PA60G5_V2
     X = PA60G5_V2_GATE NOT HVNW
     INT X < HVOD_C_1_PA60G5_V2 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA60G5_V2/2 UNDEROVER
     PA60G5_V2_GATE INSIDE HVNW  
}
HVOD.C.1_PA45G5 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA45G5 um For PA45G5
     X = PA45G5_GATE NOT HVNW
     INT X < HVOD_C_1_PA45G5 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA45G5/2 UNDEROVER
     PA45G5_GATE INSIDE HVNW  
}
HVOD.C.1_PA40G5 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA40G5 um For PA40G5
     X = PA40G5_GATE NOT HVNW
     INT X < HVOD_C_1_PA40G5 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA40G5/2 UNDEROVER
     PA40G5_GATE INSIDE HVNW  
}
HVOD.C.1_PA40G12 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA40G12 um For PA40G12
     X = PA40G12_GATE NOT HVNW
     INT X < HVOD_C_1_PA40G12 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA40G12/2 UNDEROVER
     PA40G12_GATE INSIDE HVNW  
}
HVOD.C.1_PA24G5 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA24G5 um For PA24G5
     X = PA24G5_GATE NOT HVNW
     INT X < HVOD_C_1_PA24G5 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA24G5/2 UNDEROVER
     PA24G5_GATE INSIDE HVNW  
}
HVOD.C.1_PA12G12 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA12G12 um For PA12G12
     X = PA12G12_GATE NOT HVNW
     INT X < HVOD_C_1_PA12G12 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA12G12/2 UNDEROVER
     PA12G12_GATE INSIDE HVNW  
}
HVOD.C.1_PA12G5 { @Minimum and maximum clearance from HVNW to channel OD.== ^HVOD_C_1_PA12G5 um For PA12G5
     X = PA12G5_GATE NOT HVNW
     INT X < HVOD_C_1_PA12G5 ABUT < 90 SINGULAR REGION
     SIZE X BY HVOD_C_1_PA12G5/2 UNDEROVER
     PA12G5_GATE INSIDE HVNW  
}

HVOD.E.1_NLD40G12 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD40G12 um For NLD40G12
     ENC NLD40G12_D HVNW < HVOD_E_1_NLD40G12 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NLD40G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD40G5 um For NLD40G5
     ENC NLD40G5_D HVNW < HVOD_E_1_NLD40G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NLD24G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD24G5 um For NLD24G5
     ENC NLD24G5_D HVNW < HVOD_E_1_NLD24G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NI24G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NI24G5 um For NI24G5
     ENC NI24G5_D HVNW < HVOD_E_1_NI24G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NDLD24G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NDLD24G5 um For NDLD24G5
     ENC NDLD24G5_D HVNW < HVOD_E_1_NDLD24G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NLD20G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD20G5 um For NLD20G5
     ENC NLD20G5_D HVNW < HVOD_E_1_NLD20G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NLD12G12 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD12G12 um For NLD12G12
     A = HVNW NOT TOUCH INSIDE EDGE (HVNW INSIDE EDGE NLD12G12_GATE )
     ENC NLD12G12_D A < HVOD_E_1_NLD12G12 ABUT < 90 REGION
}
HVOD.E.1_NLD12G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD12G5 um For NLD12G5
     ENC NLD12G5_D HVNW < HVOD_E_1_NLD12G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NLD7G5_FISO { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD7G5_FISO um For NLD7G5_FISO
     ENC NLD7G5_FISO_D HVNW < HVOD_E_1_NLD7G5_FISO ABUT < 90 SINGULAR REGION
}
HVOD.E.1_NLD7G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_NLD7G5 um For NLD7G5
     ENC NLD7G5_D HVNW < HVOD_E_1_NLD7G5 ABUT < 90 SINGULAR REGION
}
HVOD.E.1_PA7G5 { @Minimum extension from HVNW edge to N+ drain OD region inside HVNW>= ^HVOD_E_1_PA7G5 um For PA7G5
     ENC PA7G5_D HVNW < HVOD_E_1_PA7G5 ABUT < 90 SINGULAR REGION
}

HVOD.C.2_PA60G5_V2 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA60G5_V2 um For PA60G5_V2
     EXT PA60G5_V2_D HVNW < HVOD_C_2_PA60G5_V2 ABUT < 90 SINGULAR REGION
}
HVOD.C.2_PA45G5 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA45G5 For PA45G5
     X = HVNW NOT TOUCH INSIDE EDGE ( HVNW INSIDE EDGE PA45G5_GATE )
     EXT PA45G5_D X < HVOD_C_2_PA45G5 ABUT < 90 REGION
}
HVOD.C.2_PA40G5 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA40G5 um For PA40G5
     EXT PA40G5_D HVNW < HVOD_C_2_PA40G5 ABUT < 90 SINGULAR REGION
}
HVOD.C.2_PA40G12 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA40G12 um For PA40G12
     EXT PA40G12_D HVNW < HVOD_C_2_PA40G12 ABUT < 90 SINGULAR REGION
}
HVOD.C.2_PA24G5 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA24G5 For PA24G5
     X = HVNW NOT TOUCH INSIDE EDGE ( HVNW INSIDE EDGE PA24G5_GATE )
     EXT PA24G5_D X < HVOD_C_2_PA24G5 ABUT < 90 REGION
}
HVOD.C.2_PA12G12 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA12G12 um For PA12G12
     EXT PA12G12_D HVNW < HVOD_C_2_PA12G12 ABUT < 90 SINGULAR REGION
}
HVOD.C.2_PA12G5 { @Minimum clearance from HVNW edge to P+ drain OD region outside HVNW>= ^HVOD_C_2_PA12G5 um For PA12G5
     EXT PA12G5_D HVNW < HVOD_C_2_PA12G5 ABUT < 90 SINGULAR REGION
}

HVOD.W.2  { @Minimum width of HVOD>= ^HVOD_W_2 um
     INT HVOD < HVOD_W_2 ABUT < 90 SINGULAR REGION
}
HVOD.C.4  { @ Minimum clearance from a HVPW Pickup exclude butted P+OD of NLD40G12,NLD12G12,NLD40G5,NLD24G5, NI24G5, NDLD24G5
            @ NLD20G5, NLD7G5, NLD7G5_FISO and PA7G5 to the HVNW edge>= ^HVOD_C_4 um
		A = ( PPOD AND DIODMY ) TOUCH (( HOLES PPOD INNER ) INTERACT ZENER_55_DIODE )
     X = EXT HP_PICKUP HVNW < HVOD_C_4 ABUT < 90 SINGULAR REGION  
     ( X NOT INTERACT NPOD ) NOT INTERACT (( SBD_40V OR A ) OR  ( BJT_HVNW_ALL INTERACT ((( ALL_NWHVPWNBL_RPO_BJT_E OR NHVPWNBL_RPO_BJT_E ) OR PBHVNWDPW_BJT_E) OR LPNP_BJT_E )))
}
HVOD.C.11 {@Min.clearance from H60NW pick-up outside H60NW to H60NW edge >= ^HVOD_C_11 um
           @ (exclude butted P+OD of NLD60G5_V2)
    H60NW_A = H60NW NOT INTERACT ( NLD45G5_GATE OR ( NBL_PA60 INTERACT  PA45G5_GATE ) )
    A = EXT HP_PICKUP H60NW_A < HVOD_C_11 ABUT < 90 SINGULAR REGION  
    A NOT INTERACT NPOD 
}
HVOD.C.15 {@Min.clearance from H60NW pick-up outside H60NW to H60NW edge >= ^HVOD_C_15 um
           @ (exclude butted P+OD of NLD45G5 and PA45G5)
    H60NW_45V = H60NW INTERACT ( NLD45G5_GATE OR ( NBL_PA60 INTERACT  PA45G5_GATE ) )
    A = EXT HP_PICKUP H60NW_45V < HVOD_C_15 ABUT < 90 SINGULAR REGION  
    A NOT INTERACT NPOD 
}
HVOD.E.14_PA60G5_V2 {@Min.extension from H60NW to the (HVNW pickup AND SH_N) for PA60G5_V2 >= ^HVOD_E_14_PA60G5_V2 um
     A = HN_PICKUP AND (HVNW INTERACT PA60G5_V2_GATE)
     B = HVSHN INTERACT PA60G5_V2_GATE
     C = A TOUCH INSIDE EDGE (A INSIDE EDGE B) 
     EXT H60NW C < HVOD_E_14_PA60G5_V2 ABUT < 90 REGION
}
HVOD.E.14_PA45G5 {@Min.extension from H60NW to the (HVNW pickup AND SH_N) for PA45G5 >= ^HVOD_E_14_PA45G5 um
     A = HN_PICKUP AND (HVNW INTERACT PA45G5_GATE)
     B = HVSHN INTERACT PA45G5_GATE
     C = A TOUCH INSIDE EDGE (A INSIDE EDGE B) 
     EXT H60NW C < HVOD_E_14_PA45G5 ABUT < 90 REGION
}
HVOD.E.15 {@Min extension of SH_P beyond SH_P pickup (exclude butted P+OD) for Non_isolated NLD7G5 >= ^HVOD_E_15 um 
     A = HP_PICKUP INTERACT (( HOLES HP_PICKUP INNER ) INTERACT NLD7G5_GATE )
     B = ENC A HVSHP < HVOD_E_15 ABUT < 90 SINGULAR REGION
     B NOT INTERACT NPOD 

}
HVOD.E.3  { @Minimum extension from a HVNW Pickup to the HVNW edge>= ^HVOD_E_3 um (except HVOD.E.13)
    A = ENC HN_PICKUP HVNW_PG5_NBUTS < HVOD_E_3 ABUT < 90 REGION
    A NOT INTERACT ( BJT_HVNW_ALL INTERACT (( ALL_NWHVPWNBL_RPO_BJT_E OR NHVPWNBL_RPO_BJT_E ) OR PBHVNWDPW_BJT_E ))
}
HVOD.E.13_PA60G5_V2  { @Minimum extension from a HVNW Pickup to the HVNW edge>= ^HVOD_E_13_PA60G5_V2 um for PA60G5_V2 
   HVNW_PA60_NBUTS = (HVNW INTERACT PA60G5_V2_GATE ) NOT TOUCH INSIDE EDGE ( HVNW INSIDE EDGE  PA60G5_V2_GATE )	
   ENC HN_PICKUP HVNW_PA60_NBUTS < HVOD_E_13_PA60G5_V2 ABUT < 90 REGION
}
HVOD.E.19  { @Minimum extension from a HVNW Pickup to the HVNW edge>= ^HVOD_E_19 um for PA45G5 
   HVNW_PA45_NBUTS = (HVNW INTERACT PA45G5_GATE ) NOT TOUCH INSIDE EDGE ( HVNW INSIDE EDGE  PA45G5_GATE )	
   ENC HN_PICKUP HVNW_PA45_NBUTS < HVOD_E_19 ABUT < 90 REGION
}
HVOD.E.13_LV_ISO  { @Minimum extension from a HVNW Pickup to the HVNW edge>= ^HVOD_E_13_LV_ISO um for LV isolation
   HVNW_ISO = LV_HVNW INTERACT NBL_ISO_RING
   HVNW_ISO_60V = HVNW_ISO INSIDE HV60P_ISO_HCHECK 
   ENC HN_PICKUP HVNW_ISO_60V < HVOD_E_13_LV_ISO ABUT < 90 SINGULAR REGION
}
HVOD.C.8_NLD24G5 { @ Minimum clearance from a HVNW edge to the channel OD of NLD24G5 >= ^HVOD_C_8_NLD24G5 um
     A = OD INTERACT NLD24G5_GATE
     EXT A HVNW_NG5_NBUTS < HVOD_C_8_NLD24G5 ABUT < 90 REGION
}
HVOD.C.8_NI24G5 { @ Minimum clearance from a HVNW edge to the channel OD of NI24G5 >= ^HVOD_C_8_NI24G5 um
     A = OD INTERACT NI24G5_GATE
     EXT A HVNW_NG5_NBUTS < HVOD_C_8_NI24G5 ABUT < 90 REGION
}
HVOD.E.6 {@Min.extension from H60NW edge to N+ drain OD region inside H60NW (except H60NW edge cutting PO for NLD45G5) >= ^HVOD_E_6 For NLD60G5_V2  and NLD45G5
    ENC NLD60G5_V2_D H60NW < HVOD_E_6 ABUT < 90 SINGULAR REGION
	A = H60NW NOT TOUCH EDGE ( H60NW INSIDE EDGE NLD45G5_GATE )
    ENC NLD45G5_D A < HVOD_E_6 ABUT < 90 REGION
}
HVOD.E.7 {@Min.and Max.extension from HVNW edge to N+ drain OD region inside HVNW == ^HVOD_E_7 For NLD60G5_V2
    A = NLD60G5_V2_D NOT TOUCH EDGE NLD60G5_V2_region 
    B = EXPAND EDGE A OUTSIDE BY HVOD_E_7 + GRID
    B INSIDE HVNW
    ENC A HVNW < HVOD_E_7 ABUT < 90 REGION
}
HVOD.E.8 {@Min.and Max.extension from HVNW edge to N+ drain OD region inside HVNW == ^HVOD_E_8
                 @towards channel direction For NLD60G5_V2
    A = NLD60G5_V2_D TOUCH EDGE NLD60G5_V2_region 
    B = EXPAND EDGE A OUTSIDE BY HVOD_E_8 + GRID
    B INSIDE HVNW
    ENC NLD60G5_V2_D HVNW < HVOD_E_8 ABUT < 90 SINGULAR REGION
}
HVOD.E.9_PA12G5 {@Min.and Max.extension from SH_P edge to P+ drain OD region inside HVPW == ^HVOD_E_9_PA12G5 For PA12G5
    A = PA12G5_D NOT TOUCH EDGE PA12G5_region 
    B = EXPAND EDGE A OUTSIDE BY HVOD_E_9_PA12G5 + GRID
    B INSIDE HVSHP
    ENC A HVSHP < HVOD_E_9_PA12G5 ABUT < 90 REGION
}
HVOD.E.9_PA7G5 {@Min.and Max.extension from SH_P edge to P+ drain OD region inside HVPW == ^HVOD_E_9_PA7G5 For PA7G5
    A = PA7G5_D NOT TOUCH EDGE PA7G5_GATE 
    B = EXPAND EDGE A OUTSIDE BY HVOD_E_9_PA7G5 + GRID
    B INSIDE HVSHP
    ENC A HVSHP < HVOD_E_9_PA7G5 ABUT < 90 REGION
}
HVOD.E.10 {@Min.and Max.extension from SH_P edge to P+ drain OD region inside HVPW == ^HVOD_E_10 um
                 @towards channel direction For PA12G5
    A = PA12G5_D TOUCH EDGE PA12G5_region 
    A NOT COIN EDGE HVSHP
}
HVOD.E.2_NLD12G12 { @Minimum and maximum clearance from SH_N to Drain OD == ^HVOD_E_2 For NLD12G12
     A = HVSHN INSIDE EDGE NLD12G12_GATE_OD 
     B = ( HVSHN INTERACT NLD12G12_GATE_OD ) NOT TOUCH INSIDE EDGE A
     C = EXPAND EDGE B INSIDE BY HVOD_E_2  EXTEND BY -HVOD_E_2
     C NOT TOUCH OD
}
HVOD.E.2_NLD12G5 { @Minimum and maximum clearance from SH_N to Drain OD == ^HVOD_E_2 For NLD12G5
     A = HVSHN INSIDE EDGE NLD12G5_CH 
     B = ( HVSHN INTERACT NLD12G5_CH ) NOT TOUCH INSIDE EDGE A
     C = EXPAND EDGE B INSIDE BY HVOD_E_2  EXTEND BY -HVOD_E_2
     C NOT TOUCH OD
}
HVOD.E.2_NLD20G5 { @Minimum and maximum clearance from SH_N to Drain OD == ^HVOD_E_2 For NLD20G5
     A = HVSHN INSIDE EDGE NLD20G5_OD 
     B = ( HVSHN INTERACT NLD20G5_OD ) NOT TOUCH INSIDE EDGE A
     C = EXPAND EDGE B INSIDE BY HVOD_E_2  EXTEND BY -HVOD_E_2
     C NOT TOUCH OD
}
HVOD.E.2_NLD7G5 { @Minimum and maximum clearance from SH_N to Drain OD == ^HVOD_E_2 For NLD7G5
     A = HVSHN INSIDE EDGE NLD7G5_CH 
     B = ( HVSHN INTERACT NLD7G5_CH ) NOT TOUCH INSIDE EDGE A
     C = EXPAND EDGE B INSIDE BY HVOD_E_2  EXTEND BY -HVOD_E_2
     C NOT TOUCH OD
}
HVOD.E.2_NLD7G5_FISO { @Minimum and maximum clearance from SH_N to Drain OD == ^HVOD_E_2 For NLD7G5_FISO
     A = HVSHN INSIDE EDGE NLD7G5_FISO_CH 
     B = ( HVSHN INTERACT NLD7G5_FISO_CH ) NOT TOUCH INSIDE EDGE A
     C = EXPAND EDGE B INSIDE BY HVOD_E_2  EXTEND BY -HVOD_E_2
     C NOT TOUCH OD
}

HVOD.E.16_12V {@Min.and Max.extension of SH_P beyond OD for Schottky diode == ^HVOD_E_16_12V um For SBD 12V 
    A = (HOLES (HVSHP INTERACT SBD_12V )) OR  (HVSHP INTERACT SBD_12V )
    B = SIZE SBD_12V BY HVOD_E_16_12V
    A XOR B
}
HVOD.E.16_24V {@Min.and Max.extension of SH_P beyond OD for Schottky diode == ^HVOD_E_16_24V um For SBD 24V 
    A = (HOLES (HVSHP INTERACT SBD_24V )) OR  (HVSHP INTERACT SBD_24V )
    B = SIZE SBD_24V BY HVOD_E_16_24V
    A XOR B
}
HVOD.E.18 {@Min extension of HVNW beyond N+OD for Schottky diode >= ^HVOD_E_18 um For SBD 12V 
    A = HVNW INTERACT SBD_12V
    ENC NPOD A < HVOD_E_18 ABUT<90 SINGULAR REGION
}
HVOD.O.2_12V {@Min and Max overlap of SH_P outter ring cutting OD and OD Schottky diode == ^HVOD_O_2_12V um For SBD 12V 
    A = SIZE ( SBD_12V NOT HVSHP ) BY HVOD_W_4/2 OVERUNDER 
    B = SBD_12V NOT A
    INT B < HVOD_O_2_12V ABUT< 90 SINGULAR REGION
    SIZE B BY HVOD_O_2_12V/2 UNDEROVER
}
HVOD.O.2_24V {@Min and Max overlap of SH_P outter ring cutting OD and OD Schottky diode == ^HVOD_O_2_24V um For SBD 24V 
    A = SIZE ( SBD_24V NOT HVSHP ) BY HVOD_W_4/2 OVERUNDER 
    B = SBD_24V NOT A
    INT B < HVOD_O_2_24V ABUT< 90 SINGULAR REGION
    SIZE B BY HVOD_O_2_24V/2 UNDEROVER
}
HVOD.W.1  { @Minimum width of channel OD and source/drain OD in parallel 
            @with channel width direction of HV devices	>= ^HVOD_W_1 um 
     A = ( HVPO NOT VARDMY ) INSIDE EDGE HVOD 
     PATH LENGTH A > 0 <  HVOD_W_1 
     NOT ENCLOSE RECTANGLE ALL_HVMOS_OD HVOD_W_2 HVOD_W_1
}
HVOD.W.1.1  { @Minimum width of channel OD and source/drain OD in parallel 
            @with channel width direction of PA7G5 >= ^HVOD_W_1_1 um 
     A = ( HVPO INTERACT PA7G5_GATE ) INSIDE EDGE HVOD 
     PATH LENGTH A > 0 <  HVOD_W_1 
     NOT ENCLOSE RECTANGLE PA7G5_CH HVOD_W_2 HVOD_W_1_1
}
HVOD.E.5_PG5 { @ Minimum extension from a HVNW Pickup to the HVNW edge 
               @ in the channel region.>= ^HVOD_E_5_PG5 um for PA60G5_V2, PA40G5 and PA24G5 and PA12G5.
     ENC HN_PICKUP HVNW_PG5_BUTS < HVOD_E_5_PG5 ABUT < 90 REGION 
}
//HVOD.E.5 G12 device is checked by HVOD.E.3
HVOD.C.6_NG5 { @ Minimum clearance from a HV N+ACTIVE to HVNW edge 
               @ in the channel region. >= ^HVOD_C_6_NG5 um for NLD60G5_V2, NLD40G5,NLD24G5 and NDLD24G5.
     EXT HN_ACTIVE HVNW_NG5_BUTS < HVOD_C_6_NG5 ABUT < 90 REGION
     EXT HN_ACTIVE H60NW_NG5_BUTS < HVOD_C_6_NG5 ABUT < 90 REGION
}
//HVOD.C.6 G12 device is checked by HVOD.C.5
HVOD.C.9 { @ Minimum clearance from a HV P+ACTIVE to the HVNW edge    
           @ in the channel region.>= ^HVOD_C_9 um for PA40G5 and PA24G5.
     ENC HP_ACTIVE HVNW_PG5_BUTS < HVOD_C_9 ABUT < 90 REGION
}
//HVOD.C.9 G12 device is checked by HVOD.E.4
HVOD.R.6 { @ Minimum area of HVOD must be larger than 0.8x0.8um >= ^HVOD_R_6 um2
     AREA HVOD < HVOD_R_6
}
HVOD.C.5  { @Minimum clearance from a HV N+ACTIVE to HVNW edge>= ^HVOD_C_5 um
     A = EXT HN_ACTIVE HVNW_NG5_NBUTS < HVOD_C_5 ABUT < 90 REGION
     A NOT INTERACT NI24G5_GATE
}
HVOD.E.4  { @Minimum extension from a HV P+ACTIVE to the HVNW edge>= ^HVOD_E_4 um
     X = ENC HP_ACTIVE HVNW_PG5_NBUTS < HVOD_E_4 ABUT < 90 REGION
     X NOT SBD_40V
}
HVOD.C.7 { @ Minimum clearance from HVNW edge to inner OD inside schottky diode >= ^HVOD_C_7 um
     EXT SBD_ALL HVNW < HVOD_C_7 ABUT < 90 SINGULAR REGION       
}
HVOD.S.2 { @ Minimum and Maxmum space between OD to OD inside schottky diode. == ^HVOD_S_2 um
     EXT SBD_40V < HVOD_S_2 ABUT < 90 SINGULAR REGION 
     X = SIZE SBD_40V BY HVOD_S_2/2 OVERUNDER      
     Y = EXT SBD_40V == HVOD_S_2 REGION OPPOSITE
     X NOT INTERACT Y
}    
HVOD.W.4 { @ Minimum and Maxmum width of ( PP INSIDE HVNW ) (except outter ring cutting OD) in multi-finger direction for schottky diode. == ^HVOD_W_4 um
    A = SIZE ( SBD_12V NOT HVSHP ) BY HVOD_W_4/2 OVERUNDER 
    B = SIZE ( SBD_24V NOT HVSHP ) BY HVOD_W_4/2 OVERUNDER 
    C = ( PP AND HVNW ) AND ( A OR B ) 
    INT C < HVOD_W_4 ABUT< 90 SINGULAR REGION
    SIZE C BY HVOD_W_4/2 UNDEROVER
}    
HVOD.E.12 {@Minimum extension from a H60NW Pickup to the H60NW edge>= ^HVOD_E_12 um
    H60NW_PICKUP = HN_PICKUP AND H60NW
   ENC H60NW_PICKUP H60NW < HVOD_E_12 ABUT < 90 SINGULAR REGION
}
HVOD.R.1  { @The source (N+ OD) and bulk (P+ OD) of NLD60G5_V2, NLD45G5, NLD40G12, NLD12G12,NLD40G5, NLD24G5, NI24G5, NLD20G5, NDLD24G5, NLD12G5, NLD7G5 and NLD7G5_FISO must be butted together.
     NLD45G5_S NOT TOUCH PPOD
     NLD40G5_S NOT TOUCH PPOD
     NLD40G12_S NOT TOUCH PPOD
     NLD24G5_S NOT TOUCH PPOD
     NDLD24G5_S NOT TOUCH PPOD
     NI24G5_S NOT TOUCH PPOD
     NLD20G5_S NOT TOUCH PPOD
     NLD12G5_S NOT TOUCH PPOD
     NLD12G12_S NOT TOUCH PPOD
     NLD7G5_FISO_S NOT TOUCH PPOD
     NLD7G5_S NOT TOUCH PPOD
}
HVOD.R.2  { @Each HV PMOS has to be surrounded by its own N+ isolation ring. 
            @Each N+ isolation ring must to be connected to the most positive voltage
            @40V_VDD in 40v area, or 12V_VDD in 12v area or 24V_VDD in 24v area. HV PMOS with multi-finger,
	    @common source/drain structures may share the same N+OD ring.
     A = ALL_HVPMOS_OD NOT INTERACT PA7G5_GATE
     A NOT INSIDE NBL_ISO_HOLE
     NBL_ISO_HOLE INTERACT (HV_PMOS_OD_REGION NOT INTERACT PA7G5_GATE ) > 1
}
HVOD.R.3  { @Each HV NMOS has to be surrounded by P+ isolation ring. Each P+ isolation
            @ring must to be connected to the most negative voltage 40V_VSS in 40v area, or
            @12V_VSS in 12v areaor24V_VDD in 24v area HV NMOS with multi-finger, common source/drain structures
	    @may share the same P+OD ring.
     NLD7G5_P_ISO_HOLE = ( HOLES ((PPOD AND HVSHP ) AND PSUB ) INNER ) INTERACT NLD7G5_GATE
     A = NLD7G5_P_ISO_HOLE OR HVP_ISO_HOLE
     ALL_HVNMOS_OD NOT INSIDE A
     A INTERACT ((HV_NMOS_OD_REGION NOT NLD60G5_V2_OD ) OR NLD60G5_V2_OD_1 ) > 1
}
HVOD.R.4  { @HVOD and PO must be a rectangle. A concave HVOD and PO is not allowed
     X = ( HVOD AND POLY ) NOT ZENER_DIODE  
     NOT RECTANGLE X     
}
HVOD.C.12 { @ min clearance from a HVNW pickup to DPW >= ^HVOD_C_12 um
    A = HN_PICKUP INTERACT (HVNW INTERACT RPWODISO)
    EXT A DPW <  HVOD_C_12 ABUT < 90 SINGULAR REGION
}
HVOD.C.13 { @ min clearance from hvnw  to { P+OD INTERACT RWDMY } >= ^HVOD_C_13 um
    A = PPOD INTERACT RWDMY
    EXT A HVNW < HVOD_C_13 ABUT < 90 SINGULAR REGION
}
HVOD.E.3_RES { @  min ext from a HVNW pickup inside HVNW to HVNW edge >= ^HVOD_E_3_RES um
    A = HVNW INTERACT RHVNW 
    ENC HN_PICKUP A < HVOD_E_3_RES ABUT < 90 SINGULAR REGION
}
HVOD.E.17 { @ min extension from H60NW pickup to H60NW edge >= ^HVOD_E_17 um
    ENC HN_PICKUP H60NW  < HVOD_E_17 ABUT < 90 SINGULAR REGION
}
HVOD.C.14 { @Min and Max clearance from PO to {N+ OD inside DPW} for 24V schottky diode == ^HVOD_C_14 um
    A = POLY TOUCH ((HOLES POLY INNER) INTERACT SBD_24V)  
    B = ((HOLES NPOD INNER) INTERACT SBD_24V) AND DPW
    C = SIZE ( A OR ( HOLES A )) BY HVOD_C_14
    C XOR B
}
HVOD.C.16_12V { @ Maximum and minimum clearance of P+ OD to N+ OD of 12V schottky diode == ^HVOD_C_16_12V um
    A = ( ( HOLES NPOD INNER )  INTERACT SBD_12V )  AND DIODMY
    B = SIZE SBD_12V BY HVOD_C_16_12V
    A XOR B
}
HVOD.C.16_24V { @ Maximum and minimum clearance of P+ OD to N+ OD of 24V schottky diode == ^HVOD_C_16_24V um
    A = (( HOLES NPOD INNER )  INTERACT SBD_24V )  AND DIODMY
    B = SIZE SBD_24V BY HVOD_C_16_24V
    A XOR B
}
HVOD.R.7 { @  Minimum and Maxmum number of HVOD area for 40V Schottky junction in a Schottky diode ==5
     X = SIZE SBD_40V BY HVOD_S_2/2 OVERUNDER      
     X NOT INTERACT SBD_40V == 5 
     SBD_40V INTERACT HVNW > 1  
}
HVOD.R.8 { @  Minimum and Maxmum number of {SH_P NOT (PO SIZING 0.5)} for 24V Schottky junction in a Schottky diode ==5
     A = POLY TOUCH ((HOLES POLY INNER) INTERACT SBD_24V)
    B = ( HVSHP INTERACT SBD_24V ) NOT ( SIZE A BY 0.5 )
    SBD_24V NOT INTERACT B == 5
}
HVOD.R.9 { @  Minimum and Maxmum number of {SH_P NOT RPO} for 12V Schottky junction in a Schottky diode == 3
    A = ( HVSHP INTERACT SBD_12V ) NOT RPO
    SBD_12V NOT INTERACT A == 3
}
HVOD.S.4 { @ min and Max space between Bulk OD and Channel OD for NLD60G5_V2 and HVPMOS (non-butted source structure) == ^HVOD_S_4 um
    NON_BUTT_NLD60G5_V2_OD_region NOT TOUCH PPOD
    NON_BUTT_PA7G5_OD_region NOT TOUCH NPOD
    A = ( HVGATE_G5_P OR HVGATE_G12_P ) NOT PA7G5_GATE
    B = ( OD CUT A ) NOT TOUCH NPOD
    C = B NOT TOUCH EDGE ( B INSIDE EDGE POLY )
    D = EXPAND EDGE C OUTSIDE BY HVOD_S_4
    D NOT TOUCH NPOD
}
HVOD.S.3A { @ Minimum and Maxmum space between N+OD to P+OD for 
            @ N+/HVPW  diode == ^HVOD_S_3 um
     A = SIZE NODHVPW_NI BY HVOD_S_3
     A NOT TOUCH NODHVPW_POD_R	       
}
HVOD.S.3B { @ Minimum and Maxmum space between N+OD to P+OD for 
            @ P+/HVNW diode == ^HVOD_S_3 um
     A = SIZE PODHVNW_PI BY HVOD_S_3
     A NOT TOUCH PODHVNW_NOD_R 	       
}

// ;------------ HVNW -------------------
// ;




HVNW.C.1 { @Minimum clearance from HVNW to NW with the same potential in LV area, 
           @merge if spacing is smaller than >= ^HVNW_C_1 um
     EXT LV_HVNW NWELLi < HVNW_C_1 ABUT>0 <90 SINGULAR REGION
}
HVNW.C.2 { @Minimum clearance from HVNW edge to a N+OD region which is inside NW in LV area>= ^HVNW_C_2 um
     EXT HVNW LV_NTAP < HVNW_C_2 ABUT < 90 SINGULAR REGION
}
HVNW.C.3 { @Minimum clearance from HVNW edge to a P+OD region which is outside NW in LV area>= ^HVNW_C_3 um
     A = LV_PTAP NOT INTERACT OD_PW_RES
     EXT HVNW A < HVNW_C_3 ABUT < 90 SINGULAR REGION	 
}
HVNW.C.4 { @Minimum clearance from HVNW edge to a N+OD region which is outside NW in LV area>= ^HVNW_C_4 um
     EXT HVNW LV_NACT < HVNW_C_4 ABUT < 90 SINGULAR REGION
}
HVNW.C.5 { @Minimum clearance from HVNW edge to a P+OD region which is inside NW in LV area>= ^HVNW_C_5 um
     EXT HVNW LV_PACT < HVNW_C_5 ABUT < 90 SINGULAR REGION
}
 DPW_NBL_HOLE = NBL_ISO_HOLE ENCLOSE DPW
 DPW_NBL_RNG = NBL_ISO_RING TOUCH DPW_NBL_HOLE
HVNW.C.6 { @Minimum clearance from HVNW to NW with different potential in LV area except HVNW.C.7 >= ^HVNW_C_6 um
     A = (HVNWi OUTSIDE HVOXi) NOT INTERACT DPW_NBL_RNG	
     B = NWELLi OUTSIDE DPW_NBL_HOLE
     EXT A B < HVNW_C_6 ABUT <90 SINGULAR REGION NOT CONNECTED 
}
HVNW.C.7 { @Min.clearance from HVNW to NW with different potential in LV isolation with NBL and DPW >= ^HVNW_C_7 um
     A = HVNWi INTERACT DPW_NBL_RNG	
     B = NWELLi INSIDE DPW_NBL_HOLE
     EXT A B < HVNW_C_7 ABUT <90 SINGULAR REGION NOT CONNECTED
}

HVNW.E.1 { @Maximum and minimum extension from HVNW edge to NBL region which is inside NBL==0.00
     A = NBL INTERACT HVNW
     A OUTSIDE EDGE HVNW
     A INSIDE EDGE HVNW
     A COIN OUTSIDE EDGE HVNW
}
//HVNW.R.1 is not checked by drc 
HVNW.R.2 { @For HV diodes, HVNW must be surrounded by P+OD isolation ring.
     X = HOLES HVNWNOPO INNER
     Y = ( HVNWNOPO OR X ) INTERACT ALL_DIODE
     Y NOT INSIDE HVP_ISO_HOLE
     NODPW_DIODE NOT INSIDE HVP_ISO_HOLE	 
}
HVNW.R.2A { @For HV BJT, HVNW must be surrounded by P+OD isolation ring.
     X = HOLES HVNWNOPO INNER
     Y = ( HVNWNOPO OR X ) INTERACT ALL_HVBJT
     Y NOT INSIDE HVP_ISO_HOLE
}
HVNW.R.3 { @each lv region HVNW  outside edge must butted with HVOX except HVNW inside HVNW ring or lv 60v isolation ring 
    LV_hvnw_check1 = ( HOLES LV_HVNW ) OR LV_HVNW
    LV_hvnw_check = LV_hvnw_check1 NOT INSIDE LV_H60NW_HOLE
    NOT COIN OUTSIDE EDGE LV_hvnw_check HVOXi
}

HVNW_PG5 = HVNW INTERACT HVGATE_G5_P
HVNW.W.1 { @Minimum width of HVNW >= ^HVNW_W_1 um
    X = (( HVNW NOT INTERACT NLD12G12_D ) NOT INTERACT SBD_40V) NOT INTERACT NLD60G5_V2_D 
     Y = INT X < HVNW_W_1 ABUT < 90 SINGULAR REGION
     A = HVNW_PG5 TOUCH INSIDE EDGE ( HVNW_PG5 INSIDE EDGE HVGATE_G5_P )  
     B = INT A < HVNW_W_1 ABUT < 90 REGION 
     Y NOT B 
}
HVNW.W.2 { @Minimum width of HVNW in Drain OD of NLD12G12>= ^HVNW_W_2 um
     X = HVNW INTERACT NLD12G12_D
     INT X < HVNW_W_2 ABUT < 90 SINGULAR REGION
}
HVNW.W.3 { @ Minimum width of HVNW interact channel OD of PA40G5 and
           @ PA24G5, (only along channel length direction).>= ^HVNW_W_3 um
     HVNW_PG5_N12 = HVNW_PG5 NOT PA12G5_GATE
     A = HVNW_PG5_N12 TOUCH INSIDE EDGE ( HVNW_PG5 INSIDE EDGE HVGATE_G5_P )  
     INT A < HVNW_W_3 ABUT < 90 REGION 
}
HVNW.W.4 { @Minimum width of HVNW interact drain OD of NLD60G5_V2 >= ^HVNW_W_4 um
     A = HVNW INTERACT NLD60G5_V2_D
     INT A < HVNW_W_4 ABUT < 90 SINGULAR REGION	 
}
HVNW.W.5 { @Minimum width of HVNW For lv isolation in 60V application >= ^HVNW_W_5 um
    A = LV_HVNW INSIDE  LV_H60NW_HOLE 
    INT A < HVNW_W_5 ABUT < 90 SINGULAR REGION
}
HVNW.S.1 { @Minimum space between two HVNW regions with different or same potential>= ^HVNW_S_1 um
     A = (HV_NMOS_D OR PA24G5_GATE ) OR PA12G5_GATE
     X = HVNW NOT INTERACT (( A OR SBD_40V ) OR LPNP_BJT_C )
     EXT X < HVNW_S_1 ABUT < 90 SINGULAR REGION
}
HVNW.S.2 { @Minimum space between two HVNW regions interact Drain OD of NLD40G12 
           @and NLD12G12.>= ^HVNW_S_2 um
     X = HVNW INTERACT ( NLD40G12_D OR NLD12G12_D ) 
     EXT X < HVNW_S_2 ABUT < 90 SINGULAR REGION
}
HVNW_NG5 = HVNW INTERACT (( NLD40G5_D OR NLD24G5_D ) OR NDLD24G5_D)
HVNW.S.3 { @ Minimum space between two HVNW regions interact Drain OD of NLD40G5, NLD24G5 and NDLD24G5. >= ^HVNW_S_3 um
     EXT HVNW_NG5 < HVNW_S_3 ABUT < 90 SINGULAR REGION
}
HVNW.S.4 { @ Minimum space between two HVNW regions interact channel OD of PA24G5>= ^HVNW_S_4 um
     HVNW_PA24G5 = HVNW INTERACT PA24G5_GATE 
     EXT HVNW_PA24G5 < HVNW_S_4 ABUT < 90 SINGULAR REGION
}
HVNW.S.5 { @ Minimum space between two HVNW regions interact channel OD of PA12G5>= ^HVNW_S_5 um
     HVNW_PA12G5 = HVNW INTERACT PA12G5_GATE 
     EXT HVNW_PA12G5 < HVNW_S_5 ABUT < 90 SINGULAR REGION
}
HVNW.S.6 { @ Minimum space between two HVNW regions of a SCHOTTKY diode>= ^HVNW_S_6 um
     HVNW_SCHOTTKY = HVNW INTERACT SBD_40V 
     EXT HVNW_SCHOTTKY < HVNW_S_6 ABUT < 90 SINGULAR REGION
}
HVNW.S.7 { @ Minimum space between two HVNW regions of a PB/HVNW/PB BJT>= ^HVNW_S_7 um
     A = HVNW INTERACT LPNP_BJT_C 
     EXT A < HVNW_S_7 ABUT < 90 SINGULAR REGION
}

// NWLVT checks
//=============

NWLVT.W.1 {@ Minimum width of a NWLVT region >= ^NWLVT_W_1 um
    INT NWLVT < NWLVT_W_1  SINGULAR ABUT<90 REGION
}
NWLVT.S.1 {@ Minimum space between two NWLVT regions >= ^NWLVT_S_1 um
    EXT NWLVT < NWLVT_S_1 ABUT<90 SINGULAR REGION
}
NWLVT.C.1 {@ Minimum clearance between NWLVT region and HV region >= ^NWLVT_C_1 um,Butted is allowed. 
    EXT NWLVT HVOX < NWLVT_C_1 SINGULAR ABUT >0 <90 REGION
    NWLVT AND HVOX   
}
NWLVT.C.2 {@ MInimum clearance between NWLVT and OD outside NWLVT>= ^NWLVT_C_2 um
    EXT OD NWLVT < NWLVT_C_2 SINGULAR ABUT <90 REGION
    OD CUT NWLVT    
}
NWLVT.C.3 {@ Minimum clearance between NWLVT region and Nwell edge >= ^NWLVT_C_3 um with same potential.Butted is allowed
    EXT NWLVT NWELL < NWLVT_C_3 SINGULAR ABUT >0 <90 REGION
    NWLVT AND NWELLi    
}
NWLVT.C.4 {@ Minimum clearance between NWLVT region and Nwell edge >= ^NWLVT_C_4 um with different potential
    NWLVT_C = STAMP NWLVT BY NWLVTi
    EXT NWLVT_C NWELLi < NWLVT_C_4 SINGULAR ABUT <90 REGION NOT CONNECTED
}
NWLVT.C.5 {@ Minimum clearance between NWLVT region and HVNW edge >= ^NWLVT_C_5 um with same potential.Butted is allowed
    EXT NWLVT HVNWi < NWLVT_C_5 SINGULAR ABUT >0 <90 REGION
    NWLVT AND HVNWi    
}
NWLVT.C.6 {@ Minimum clearance between NWLVT region and HVNW edge >= ^NWLVT_C_6 um with different potential
    NWLVT_C = STAMP NWLVT BY NWLVTi
    EXT NWLVT_C HVNWi < NWLVT_C_6 SINGULAR ABUT <90 REGION NOT CONNECTED
}


NWLVT.E.1 {@ Minimum extension from NWLVT region beyond OD region>= ^NWLVT_E_1 um
    ENC OD NWLVT < NWLVT_E_1 SINGULAR ABUT<90 REGION
}
//NWLVT.R.1 { NWLVT is must for 5V PMOS (pch5 lvt). } is un-checkable
NWLVT.R.2 {@ NWLVT has to be fully inside OD2
    NWLVT NOT OD2
}
NWLVT.R.3 {@ NVLT inside OD is not allowed
    NWLVT INSIDE OD
}
NWLVT.R.4 {@ OD cut NWLVT is not allowed.
    OD CUT NWLVT
}
NWLVT.R.5 {@ NVLT butted OD is not allowed.
    NWLVT TOUCH OD
}

//================H60NW RULES CHECK===================
H60NW.W.1 {@ Minimum width of H60NW >= ^H60NW_W_1 um 
    A = H60NW NOT INTERACT ( NBL INTERACT PA45G5_GATE )
   INT A < H60NW_W_1 ABUT < 90 SINGULAR REGION 
}
H60NW.W.2 {@ Minimum width of H60NW for PA45G5_V2 >= ^H60NW_W_2 um
    A =  H60NW INTERACT ( NBL INTERACT PA45G5_GATE ) 
   INT A < H60NW_W_2 ABUT < 90 SINGULAR REGION 
}
H60NW.S.1 {@ Minimum space of H60NW >= ^H60NW_S_1 um except NLD60G5_V2 and NLD45G5
   A = H60NW NOT INTERACT ( NLD60G5_V2_D OR NLD45G5_D )
   EXT A < H60NW_S_1 ABUT < 90 SINGULAR REGION    
}
H60NW.S.2 {@ Minimum space of H60NW interact NLD60G5_V2 or NLD45G5 drain OD >= ^H60NW_S_2 um
   A = H60NW INTERACT ( NLD60G5_V2_D OR NLD45G5_D )     
   EXT A < H60NW_S_2 ABUT < 90 SINGULAR REGION 
}
H60NW.E.1 {@ Minimum  and maximum extention from H60NW edge to NBL which is inside NBL = ^H60NW_E_1  um 
   B = NBL CUT H60NW
   B OUTSIDE EDGE H60NW
   B INSIDE EDGE H60NW
   B COIN OUTSIDE EDGE H60NW
}    
H60NW.C.1 {@ Minimum  and maximum clearance from H60NW edge to NBL For PA60G5_V2 and PA45G5  = ^H60NW_C_1  um 
    A = NBL INTERACT ( PA60G5_V2_GATE OR PA45G5_GATE )
    A NOT COIN OUTSIDE EDGE H60NW
}    
H60NW.R.2 {@For each H60NW in LV region ,H60NW outside edge must butted with hvdmy2}
   LV_H60NW_CHECK = ( HOLES LV_H60NW ) OR LV_H60NW
   LV_H60NW_CHECK NOT COIN OUTSIDE EDGE HVDMY2
}    





//  DPW CHECKS
//==============
DPW.W.1 { @ Min. DPW width >= ^DPW_W_1 um (except DPW.W.2, DPW.W.3)
    A = DPW NOT INTERACT ( PA12G5_GATE OR NI24G5_GATE )
    INT A < DPW_W_1 ABUT<90 SINGULAR REGION
}
DPW.W.2 { @ Min. DPW width For PA12G5 >= ^DPW_W_2 um
    A = DPW INTERACT PA12G5_GATE
    INT A < DPW_W_2 ABUT<90 SINGULAR REGION
}
DPW.W.3 { @ Min. DPW width For NI24G5 >= ^DPW_W_3 um
    A = DPW INTERACT NI24G5_GATE
    INT A < DPW_W_3 ABUT<90 SINGULAR REGION
}
DPW.C.1 { @ Minimum clearance from DPW to HVNW outside DPW >= ^DPW_C_1 um
    A = DPW NOT INTERACT (( ZENER_DIODE OR PA12G5_GATE ) OR PW_RES)
    EXT A HVNW < DPW_C_1 ABUT<90 SINGULAR REGION
}
DPW_NG5 = DPW TOUCH INSIDE EDGE ( DPW INSIDE EDGE ( NLD40G5_GATE OR NDLD24G5_GATE ))
DPW_PA12G5 = DPW TOUCH INSIDE EDGE ( DPW INSIDE EDGE  PA12G5_GATE )
DPW_NI24G5 = DPW TOUCH INSIDE EDGE ( DPW INSIDE EDGE  NI24G5_OD )
DPW_NLD20G5 = DPW TOUCH INSIDE EDGE ( DPW INSIDE EDGE  NLD20G5_GATE )
DPW.S.1	{ @ Minimum spacing of DPW.>= ^DPW_S_1 um
    A = EXT DPW < DPW_S_1 ABUT<90 SINGULAR REGION
    B = EXT DPW_NG5 < DPW_S_1 ABUT<90 REGION
    C = EXT DPW_PA12G5 < DPW_S_1 ABUT<90 REGION
    D = EXT DPW_NI24G5 < DPW_S_1 ABUT<90 REGION
    E = EXT DPW_NLD20G5 < DPW_S_1 ABUT<90 REGION
    A NOT ((( B OR C ) OR D ) OR E )
}
DPW.S.2 { @ Minimum spacing of DPW interact channel OD of NLD40G5 and NDLD24G5 and NLD20G5>= ^DPW_S_2 um
    EXT DPW_NG5 < DPW_S_2 ABUT < 90 REGION 	
    EXT DPW_NLD20G5 < DPW_S_2 ABUT < 90 REGION 	
}
DPW.S.3 { @ Minimum spacing of DPW interact channel OD of PA12G5 >= ^DPW_S_3 um
    EXT DPW_PA12G5 < DPW_S_3 ABUT < 90 REGION 	
}
DPW.S.4 { @ Minimum spacing of DPW interact channel OD of NI24G5>= ^DPW_S_4 um
    EXT DPW_NI24G5 < DPW_S_4 ABUT < 90 REGION 	
}
DPW.E.1	{ @ Minimum extension from P+ OD edge to DPW inside OD for DPW/NBL diode>= ^DPW_E_1 um
   X = (( DPW INTERACT NBL ) INSIDE DIODMY ) NOT INTERACT ( ZENER_DIODE OR SBD_24V )
    Y = PPOD INTERACT X     
    X NOT Y
    ENC X PPOD < DPW_E_1 ABUT<90 SINGULAR REGION
}
DPW.E.2	{ @ Maximum and minimum extension of DPW region beyond HVNW region in drain OD 
          @ of NLD40G12 and NLD12G12 ,NLD40G5 ,NDLD24G5, NLD12G5, NLD20G5 and NLD7G5_FISO == ^DPW_E_2 um
    X = (( DPW INTERACT HVNW ) INTERACT HVGATE ) NOT INTERACT ( PA12G5_GATE OR NI24G5_GATE )
    Y = HVNW INTERACT X
    Z = SIZE X BY -DPW_E_2
    Y XOR Z   
}
DPW.E.4	{ @ Maximum and minimum extension of DPW region beyond HVNW region in channel OD of NI24G5 = ^DPW_E_4 um  
   A = DPW TOUCH INSIDE EDGE ( DPW INSIDE EDGE NI24G5_GATE )
   B = EXPAND EDGE A INSIDE BY DPW_E_4
   B NOT TOUCH HVNW
}
DPW.O.1	{ @ Maximum and minimum overlap of DPW and HVNW for NI24G5 = ^DPW_O_1 um  
   A = ( DPW INTERACT NI24G5_GATE ) AND HVNW 
   INT A < DPW_O_1 ABUT<90 SINGULAR REGION
   SIZE A BY DPW_O_1/2 UNDEROVER
}
DPW.E.5	{ @ Maximum and minimum extension of DPW region beyond channel OD in channel width direction of NI24G5 = ^DPW_E_5 um  
   A = ( DPW INTERACT NI24G5_GATE ) NOT TOUCH INSIDE EDGE ( DPW INSIDE EDGE NI24G5_OD )
   B = EXPAND EDGE A INSIDE BY DPW_E_5
   B NOT TOUCH NI24G5_GATE
}
DPW.E.6	{ @ Maximum and minimum extension of DPW beyond SH_N  for 5.5V Zener diode  = ^DPW_E_6 um  
   A = HVSHN INTERACT ZENER_55_DIODE
   B = DPW INTERACT ZENER_55_DIODE
   C = SIZE A BY DPW_E_6
   B XOR C
}
DPW.E.7	{ @ Maximum and minimum extension of DPW beyond HVNW for 24V Schottky diode  = ^DPW_E_7 um  
   A = HVNW INTERACT SBD_24V
   B = DPW INTERACT SBD_24V
   C = SIZE A BY DPW_E_7
   B XOR C
}
DPW.E.3 { @ Minimum extension of DPW region beyond HVNW (base) of PW/HVNW/DPW BJT >= ^DPW_E_3 um
    X = ( DPW INTERACT PWHVNWDPW_BJT_C ) AND BJTDMY
    ENC HVNW X < DPW_E_3  ABUT <90 SINGULAR REGION	
}
DPW.C.2 { @ Minimum and Maximum clearance from DPW edge to HVNW edge of 6.2v Zener diode and PA12G5 & iso PW resis == 0um 
    A = ( ZENER_62_DIODE OR PA12G5_GATE ) OR PW_RES
    ( DPW INTERACT A) AND HVNW
    ( DPW INTERACT A) NOT COIN OUTSIDE EDGE HVNW
}
DPW.R.1 { @ DPW is must for NBL+DPW lv isolation structure 
    	  @ DPW must be further surrounded by HVNW and N+  isolation ring	
    A = DPW NOT INTERACT HVOXi
    LV_NBL = NBL INTERACT LV_DEVICE	      
    LV_NBL_60V = LV_NBL INSIDE HV60P_ISO_HCHECK
    LV_NBL_60V NOT INTERACT A
    A NOT INSIDE NBL_ISO_HOLE

}



// ;------------  HV LAYER    ----------------
// ;

HV.S.1 { @ Minimum space between two HV regions	>= ^HV_S_1 um
   EXT HVOX < HV_S_1 ABUT < 90 SINGULAR REGION
}
HV.E.1 { @ Minimum extension of HV beyond HVNW inside HV>= ^HV_E_1 um
    A = HVNW NOT PBHVNWDPW_BJT_B
   ENC A HVOX < HV_E_1 ABUT < 90 SINGULAR REGION  
}
HV.E.2 { @ Minimum extension of HV beyond P+ isolation >= ^HV_E_2 um
   ENC PPOD HVOX < HV_E_2 ABUT < 90 SINGULAR REGION   
}
HV.W.1 { @ Minimum width of {HV butted HVNW} >= ^HV_W_1 um
    A = HVOX TOUCH HVNW
    INT A < HV_W_1 ABUT < 90 SINGULAR REGION	
}
HV.C.1 { @ Minimum and maximum clearance from HV edge to NBL outside HV. That is, 
         @ the edge of HV layer has to be butted with the edge of NBL for LV isolation.	==0.0 (except in lv 60v isolation ring)
    NBL_NOT_60V  = ( NBL NOT INSIDE HVOX ) NOT INSIDE LV_H60NW_HOLE
   NBL_NOT_60V NOT COIN OUTSIDE EDGE HVOX
}
HV.C.2 { @ Minimum clearance from HV to NW outside HV or NBL
         @ (non-isolated LV NW). Make them butted if the
	 @ clearance is less than this rule.>= ^HV_C_2 um
   X = ( NWELL NOT HVOX ) NOT INTERACT NBL
   EXT HVOX X < HV_C_2 ABUT >0 < 90 SINGULAR REGION
}
HV.R.1 { @ { HVNW OR H60NW } is not allowed to cut HV. Butted is allowed			
   HVNWi CUT HVOXi
  H60NWi CUT HVOXi
}
HV.R.2 { @ OD and PO are not allowed to cut HV. Butted is not allowed			
   ODi CUT HVOXi
   POLYi CUT HVOXi
   ODi TOUCH HVOXi
   POLYi TOUCH HVOXi
}
HV.R.4 { @ OD2 Or NW are not allowed to overlap HV. butted is allowed.
    OD2i AND HVOXi
    NWELLi AND HVOXi
}

HV.R.6 { @ LV MOS, LV Diode, LV BJT, LV OD resistor, LV well resistor and LV varactor are not allowed to overlap HVDMY. The HVDMY overlap N+/PW diode is un-checkable.
   OD2i AND HVOXi  // 5V LV device 
   NWELLi AND HVOXi  //  Varactor &  P+NW diode & pmos
   GATE_CHECK = (((POLY CUT OD ) AND NP ) NOT INTERACT ( HVNW OR H60NW )) NOT ( VARDMY OR DIODMY )
   GATE_CHECK AND HVOXi      // nmos gate
   RPDUMMY_LV = ( REST OR ( RHDMY OR RLDMY )) NOT INTERACT  RLPPDMY
   (OD INTERACT RPDUMMY_LV) AND HVOXi       // OD resistor
   (PNP_BJT_C OR ( HOLES PNP_BJT_C INNER )) AND HVOXi		// LV PNP
   (PNP_BJT_BGR8_C OR ( HOLES PNP_BJT_BGR8_C INNER )) AND HVOXi	// LV PNP 
   PW_RES INTERACT HVOXi
   RPODRPOISO INTERACT HVOXi
}

//================HVDMY RULES CHECK===================
HVDMY.R.1 { @ HVDMY must be fully inside HV
      HVDMY NOT HVOX
}
HV_DIO_G12 = (DIODMY INTERACT HVOX) NOT INTERACT HVDMY
HV_RES_G12 = (RWDMY INTERACT HVOX) NOT INTERACT HVDMY
HV_BJT_G12 = (BJTDMY INTERACT HVOX) NOT INTERACT HVDMY
HV_VAR_G12 = (VARDMY INTERACT HVOX) NOT INTERACT HVDMY
CHIP_G12 = CHIP INTERACT ((((HV_GATE_G12 OR HV_BJT_G12) OR HV_DIO_G12) OR HV_RES_G12) OR HV_VAR_G12)
HVDMY_G5 = HVDMY NOT INTERACT CHIP_G12
HVDMY_G12 = HVDMY INTERACT CHIP_G12
HVDMY.E.1 { @ Minimum and maximum extension of HV over HVDMY, if
            @ G12 option is not selected ==0
      X = HVDMY_G5 INTERACT HVOX 
      Y = HVOX INTERACT HVDMY_G5
      X XOR Y
}
HVDMY.E.2 { @ Minimum extension of HV over HVDMY, if G12 option is
            @ selected. Butted if smaller than this rule.>= ^HVDMY_E_2 um
      ENC HVDMY_G12 HVOX < HVDMY_E_2 ABUT >0 < 90 SINGULAR REGION
}
HVDMY.S.1 { @ Minimum space between two HVDMY regions>= ^HVDMY_S_1 um 
      EXT HVDMY < HVDMY_S_1 ABUT < 90 SINGULAR REGION 
}
HVDMY.E.3 { @ Minimum extension of HVDMY beyond HVNW inside HVDMY >= ^HVDMY_E_3 um
    A = HVNW NOT PBHVNWDPW_BJT_B
    ENC A HVDMY < HVDMY_E_3 ABUT < 90 SINGULAR REGION
}
HVDMY.E.4 { @ Minimum extension of HVDMY beyond P+ OD  >= ^HVDMY_E_4 um
      ENC PPOD HVDMY < HVDMY_E_4 ABUT < 90 SINGULAR REGION 
}
HVDMY.R.2 { @ { HVNW OR H60NW } is not allowed to cut HVDMY. (Butted is allowed)
      HVNW CUT HVDMY
      H60NW CUT HVDMY
}
HVDMY.R.3 { @ OD and PO are not allowed to cut HVDMY. (Butted is NOT allowed)
      OD CUT HVDMY
      POLY CUT HVDMY
      OD TOUCH HVDMY 
      POLY TOUCH HVDMY 
}
HVDMY.R.11 { @ OD2 Or NW are not allowed to overlap HVDMY,butted is allowed.
    OD2i AND HVDMY
    NWELLi AND HVDMY
}
HVDMY.R.6 { @ HVDMY layer (GDS CAD layer 188) must cover DPW for PB/HVNW/DPW devices
    (DPW INTERACT PBHVNWDPW_BJT_E) NOT HVDMY 
}
HVDMY.R.5 { @ HVDMY layer (GDS CAD layer 188) must cover all HV G5 devices
      (( NLD40G5_S OR NLD40G5_D ) OR NLD40G5_GATE ) NOT HVDMY 
      (( PA40G5_S  OR  PA40G5_D ) OR PA40G5_GATE )  NOT HVDMY
      (( NLD24G5_S OR NLD24G5_D ) OR NLD24G5_GATE ) NOT HVDMY    
      (( NDLD24G5_S OR NDLD24G5_D ) OR NDLD24G5_GATE ) NOT HVDMY
      (( PA24G5_S  OR  PA24G5_D ) OR PA24G5_GATE )  NOT HVDMY
      (( NLD60G5_V2_S  OR  NLD60G5_V2_D ) OR NLD60G5_V2_GATE )  NOT HVDMY
      (( PA60G5_V2_S  OR  PA60G5_V2_D ) OR PA60G5_V2_GATE )  NOT HVDMY
      (( NLD12G5_S OR NLD12G5_D ) OR NLD12G5_GATE ) NOT HVDMY    
      (( PA12G5_S  OR  PA12G5_D ) OR PA12G5_GATE )  NOT HVDMY
      (( NLD45G5_S OR NLD45G5_D ) OR NLD45G5_GATE ) NOT HVDMY
      (( PA45G5_S  OR  PA45G5_D ) OR PA45G5_GATE )  NOT HVDMY
      (( NI24G5_S  OR  NI24G5_D ) OR NI24G5_GATE )  NOT HVDMY
      (( NLD20G5_S  OR  NLD20G5_D ) OR NLD20G5_GATE )  NOT HVDMY
      (( NLD7G5_S  OR  NLD7G5_D ) OR NLD7G5_GATE )  NOT HVDMY
      (( NLD7G5_FISO_S  OR  NLD7G5_FISO_D ) OR NLD7G5_FISO_GATE )  NOT HVDMY
      (( PA7G5_S  OR  PA7G5_D ) OR PA7G5_GATE )  NOT HVDMY
      NHVPWNBL_RPO_BJT_E NOT HVDMY
      PBHVNWDPW_BJT_E NOT HVDMY
      LPNP_BJT_E NOT HVDMY
      NWHVPWNBL_BJT_E  NOT HVDMY
      SBD_ALL  NOT HVDMY
      ZENER_DIODE    NOT HVDMY
      
}
HVDMY.R.7 { @ BJT4TDMY must cover NPN BJT with 4 terminals 
    (((((ALL_NWHVPWNBL_RPO_BJT_C NOT NWHVPWNBL_RPO_BJT_BGR8_C ) OR NHVPWNBL_BJT_C ) OR NHVPWNBL_RPO_BJT_C ) OR NWHVPWNBL_BJT_C ) OR LPNP_BJT_B ) NOT BJT4TDMY
}
HVDMY.R.8 { @ BJTMDDMY must cover 8:1 NW/HVPW/NBL BJT
    NWHVPWNBL_RPO_BJT_BGR8_C NOT BJTMDDMY
}
HVDMY.R.9 { @ BJTMEDMY must cover 8:1 P+/NW/PSub BJT and mlti-emitter NW/HVPW/NBL BJT
    NWHVPWNBL_RPO_BJT_DUAL_C NOT BJTMEDMY
    NWHVPWNBL_RPO_BJT_OCTAD_C NOT BJTMEDMY
    PNP_BJT_BGR8_C NOT BJTMEDMY
}
HVDMY.R.10 { @ BJTSNDMY must cover central separate nodes in 8:1 BJT
    A_pre =  SIZE NWHVPWNBL_RPO_BJT_BGR8_E BY 15.5/2 OVERUNDER
    A = NWHVPWNBL_RPO_BJT_BGR8_E NOT WITH EDGE (NWHVPWNBL_RPO_BJT_BGR8_E COIN EDGE A_pre)
    A NOT BJTSNDMY 
    B_pre = SIZE PNP_BJT_BGR8_E BY 3.0/2 OVERUNDER
    B = PNP_BJT_BGR8_E NOT WITH EDGE (PNP_BJT_BGR8_E COIN EDGE B_pre)
    B NOT BJTSNDMY 
}


//================HVDMY2 RULES CHECK===================
HVDMY2.E.1 { @ Minimum extension of HVDMY over HVDMY2,  >= ^HVDMY2_E_1 um
      ENC HVDMY2 HVDMY < HVDMY2_E_1 ABUT >0< 90 SINGULAR REGION
}
HVDMY2.S.1 { @ Minimum space between two HVDMY2 regions>= ^HVDMY2_S_1 um 
      EXT HVDMY2 < HVDMY2_S_1 ABUT < 90 SINGULAR REGION 
}
H60NW_NLD60G5_EDGE = H60NW TOUCH INSIDE EDGE ( H60NW INSIDE EDGE NLD60G5_V2_GATE )
H60NW_PA45G5 = H60NW TOUCH ((HOLES H60NW INNER )  INTERACT PA45G5_GATE  )
H60NW_NLD45G5_EDGE = H60NW TOUCH INSIDE EDGE ( H60NW INSIDE EDGE NLD45G5_GATE )
H60NW_NLD45G5 = H60NW INTERACT NLD45G5_GATE 
HVDMY2.E.3 { @ Minimum extension of HVDMY2 beyond H60NW inside HVDMY2 >= ^HVDMY2_E_3 um (except HVDMY2.E.5 .E.8)
     A = ENC H60NW HVDMY2 < HVDMY2_E_3 ABUT < 90 SINGULAR REGION
     B = ENC H60NW_NLD60G5_EDGE HVDMY2 < HVDMY2_E_3 ABUT < 90 REGION
     C = ENC H60NW_PA45G5 HVDMY2 < HVDMY2_E_3 ABUT < 90 SINGULAR REGION
     D = ENC H60NW_NLD45G5 HVDMY2 < HVDMY2_E_3 ABUT < 90 REGION
     A NOT (( B OR C ) OR D )
}
HVDMY2.E.4 { @ Minimum extension of HVDMY2 beyond P+ OD except PA40G5_SOA >= ^HVDMY2_E_4 um
    (ENC PPOD HVDMY2 < HVDMY2_E_4 ABUT < 90 SINGULAR REGION) NOT HV40
}
HVDMY2.E.5 { @ Minimum extension of HVDMY2 beyond H60NW inside HVDMY2 towards source direction of NLD60G5>= ^HVDMY2_E_5 um
      ENC H60NW_NLD60G5_EDGE  HVDMY2 < HVDMY2_E_5 ABUT < 90 REGION
      ENC H60NW_NLD45G5_EDGE  HVDMY2 < HVDMY2_E_5 ABUT < 90 REGION
}
HVDMY2.E.6 { @ Minimum extension of HVDMY2 beyond HVNW inside HVDMY2 >= ^HVDMY2_E_6 um
      ENC HVNW  HVDMY2 < HVDMY2_E_6 ABUT < 90 REGION
}
HVDMY2.E.7 { @ Minimum extension of HVDMY2 beyond P+ OD for PA40G5_SOA >= ^HVDMY2_E_7 um
    A = HVDMY2 INTERACT HV40
    ENC PPOD A < HVDMY2_E_7 ABUT < 90 SINGULAR REGION
}
HVDMY2.E.8 { @ Minimum extension of HVDMY2 beyond H60NW inside HVDMY2 >= ^HVDMY2_E_8 um for NLD45G5 and PA45G5
     ENC H60NW_PA45G5 HVDMY2 < HVDMY2_E_8 ABUT < 90 SINGULAR REGION 
     A = ENC H60NW_NLD45G5 HVDMY2 < HVDMY2_E_8 ABUT < 90 REGION
     B = ENC H60NW_NLD45G5_EDGE  HVDMY2 < HVDMY2_E_8 ABUT < 90 REGION
     A NOT B
}

HVDMY2.W.1 { @ Minimum width of {HVDMY2 butted H60NW} >= ^HVDMY2_W_1 um
      A = HVDMY2 TOUCH H60NW
      INT A < HVDMY2_W_1 ABUT < 90 SINGULAR REGION
}
HVDMY2.R.1 { @ HVDMY2 must be fully inside HV
      HVDMY2 NOT HVOX
}
HVDMY2.R.2 { @ HVNW is not allowed to cut HVDMY2. (Butted is allowed)
      HVNW CUT HVDMY2
      H60NW CUT HVDMY2
}
HVDMY2.R.3 { @ OD and PO are not allowed to cut HVDMY2. (Butted is NOT allowed)
      OD CUT HVDMY2
      POLY CUT HVDMY2
      OD TOUCH HVDMY2 
      POLY TOUCH HVDMY2
}
HVDMY2.R.6 { @ OD2 Or NW are not allowed to overlap HVDMY2, butted is allowed
    OD2i AND HVDMY2
    NWELLi AND HVDMY2
}
HVDMY2.R.5 { @ HVDMY2 layer (GDS CAD layer 188;1) must cover NLD60G5_V2 & PA60G5_V2 & PA40G5_SOA
      (( NLD60G5_V2_S OR NLD60G5_V2_D ) OR NLD60G5_V2_GATE ) NOT HVDMY2 
      (( PA60G5_V2_S  OR  PA60G5_V2_D ) OR PA60G5_V2_GATE )  NOT HVDMY2
      (( NLD45G5_S OR NLD45G5_D ) OR NLD45G5_GATE ) NOT HVDMY2 
      (( PA45G5_S  OR  PA45G5_D ) OR PA45G5_GATE )  NOT HVDMY2
	RH60NW NOT HVDMY2
      (PA40G5_GATE INTERACT HV40) NOT INTERACT HVDMY2
 }


//================HV40 RULES CHECK===================
HV40.S.1 { @ Minimum space between two HV40 regions>= ^HV40_S_1 um 
      EXT HV40 < HV40_S_1 ABUT < 90 SINGULAR REGION 
}
HV40.E.3 { @ Minimum extension of HV40 beyond HVNW inside HV40 >= ^HV40_E_3 um 
     ENC HVNW HV40 < HV40_E_3 ABUT < 90 SINGULAR REGION
     HVNW CUT HV40
}
HV40.E.4 { @ Minimum extension of HV40 beyond P+ OD >= ^HV40_E_4 um
      ENC PPOD HV40 < HV40_E_4 ABUT < 90 SINGULAR REGION 
}
HV40.R.1 { @ HV40 must be fully inside HV
      HV40 NOT HVOX
}
HV40.R.2 { @ HVNW, H60NW is not allowed to cut HV40. (Butted is allowed)
      HVNW CUT HV40
      H60NW CUT HV40
}
HV40.R.3 { @ OD and PO are not allowed to cut HV40. (Butted is NOT allowed)
      OD CUT HV40
      POLY CUT HV40
      OD TOUCH HV40 
      POLY TOUCH HV40
}
HV40.R.4 { @ HV40 layer (GDS CAD layer 188;2) must cover PA40G5_SOA
      (PA40G5_GATE INTERACT HVDMY2) NOT INTERACT HV40
}
HV40.R.5 { @ OD2 Or NW are not allowed to overlap HV40, butted is allowed
    OD2i AND HV40
    NWELLi AND HV40
}


//  PSUB CHECK
//================================

PSUB.W.1 { @Minimum width of a PSUB region >= ^PSUB_W_1 um 
    INT PSUB < PSUB_W_1 ABUT < 90 SINGULAR REGION
}
PSUB.S.1 { @Minimum space of PSUB region >= ^PSUB_S_1 um
    EXT PSUB < PSUB_S_1 ABUT < 90 SINGULAR REGION
}



// SH_P -- PW shielding 
//=============
SH_P.W.1 { @ Minimum width of a SH_P region >= ^SH_P_W_1 um (except SH_P.W.2)
     A = (PPOD AND DIODMY) TOUCH (( HOLES (PPOD NOT INTERACT SBD_24V) INNER ) INTERACT SBD_24V) 
     B = A OR (HOLES A INNER)
     HVSHP_CHECK = HVSHP NOT INTERACT ((((((( ZENER_DIODE OR PA12G5_OD ) OR PA7G5_CH ) OR SBD_12V ) OR B ) OR ALL_NWHVPWNBL_RPO_BJT_B ) OR  PBHVNWDPW_BJT_COD ) OR NHVPWNBL_RPO_BJT_B )
     INT HVSHP_CHECK < SH_P_W_1 ABUT < 90 SINGULAR REGION 	 
}
SH_P.W.2 { @ Minimum width of a SH_P region >= ^SH_P_W_2 um For PA12G5
     HVSHP_PA12G5 = HVSHP INTERACT PA12G5_OD
     INT HVSHP_PA12G5 < SH_P_W_2 ABUT < 90 SINGULAR REGION 	 
}

SH_P.E.1 { @ Minimum & Maximum extension of SH_P to P+ OD for PW/HVNW diode and PW/HVNW_G5 diode. == ^SH_P_E_1 um
       A = ((HVSHP INTERACT DIODMY ) NOT INTERACT ZENER_DIODE) NOT INTERACT NBL
       B = PPOD INTERACT A
       D = SIZE B BY SH_P_E_1
       D XOR A
}

SH_P.E.2 { @ Minimum and maximum extension of SH_P to P+ OD (emitter) for PW/HVNW/DPW 
           @ and SH_P to P+ OD (base) for NW/HVPW/NBL BJT== ^SH_P_E_2 um
     X =  HVSHP INTERACT ( PWHVNWDPW_BJT_B OR NWHVPWNBL_BJT_E  )
     Y = SIZE X BY -SH_P_E_2
     Z = PPOD INTERACT X
     Y XOR Z
}
SH_P.E.3 { @ Minimum and maximum extension of SH_P to P+ OD (base) for N+/PW/NBL BJT== ^SH_P_E_3 um
     A = (( HVSHP INTERACT BJTDMY ) INTERACT NBL ) INTERACT PSUB
     B = PPOD INTERACT A
     C = HOLES B
     D = B OR C
     E = SIZE D BY SH_P_E_3
     A XOR E
}
SH_P.R.1 { @ SH_P must be fully inside HV
     HVSHP NOT HVOX
}
SH_P.S.1 { @ Minimum space between two SH_P region >= ^SH_P_S_1 um
    EXT HVSHP < SH_P_S_1 ABUT < 90 SINGULAR REGION
}





SH_P.W.3 { @ Minimum and maximum width of {SH_P and PO} for 24V Schottky diode = ^SH_P_W_3 um
     A = ( HVSHP AND POLY ) INTERACT ( POLY INTERACT ((HOLES POLY INNER) INTERACT SBD_24V ) )
     INT A < SH_P_W_3 ABUT <90 SINGULAR REGION	 
     SIZE A BY SH_P_W_3/2 UNDEROVER
}
SH_P.O.1_A { @ Minimum and maximum overlap of SH_P and PO inside channel OD of  NLD40G5, NLD24G5, NLD12G5, NLD7G5 and NLD7G5_FISO == ^SH_P_O_1_A um
     A = (((  NLD40G5_GATE OR NLD24G5_GATE) OR NLD12G5_GATE) OR NLD7G5_GATE) OR NLD7G5_FISO_GATE 
     X = HVSHP AND A
     INT HVSHP A < SH_P_O_1_A ABUT <90 SINGULAR REGION	 
     SIZE X BY SH_P_O_1_A/2 UNDEROVER
}
SH_P.O.1_NLD20G5 { @ Minimum and maximum overlap of SH_P and PO inside channel OD of NLD20G5 == ^SH_P_O_1_NLD20G5 um
     A = COPY NLD20G5_GATE
     X = HVSHP AND A
     INT HVSHP A < SH_P_O_1_NLD20G5 ABUT <90 SINGULAR REGION	 
     SIZE X BY SH_P_O_1_NLD20G5/2 UNDEROVER
}
SH_P.O.1_NLD60G5_V2 {@Minimum and maximum overlap of SH_P and PO inside channel OD of NLD60G5_V2 == ^SH_P_O_1_NLD60G5_V2 um
     X = HVSHP AND NLD60G5_V2_GATE
     INT HVSHP NLD60G5_V2_GATE < SH_P_O_1_NLD60G5_V2 ABUT <90 SINGULAR REGION	 
     SIZE X BY SH_P_O_1_NLD60G5_V2/2 UNDEROVER
}
SH_P.O.1_NLD45G5 {@Minimum and maximum overlap of SH_P and PO inside channel OD of NLD45G5 == ^SH_P_O_1_NLD45G5 um
     X = HVSHP AND NLD45G5_GATE
     INT HVSHP NLD45G5_GATE < SH_P_O_1_NLD45G5 ABUT <90 SINGULAR REGION	 
     SIZE X BY SH_P_O_1_NLD45G5/2 UNDEROVER
}
HVSHP_NG5 = HVSHP INTERACT (((((( NLD40G5_GATE OR NLD24G5_GATE ) OR NLD60G5_V2_GATE) OR NLD12G5_GATE ) OR NLD45G5_GATE ) OR NLD7G5_GATE ) OR NLD7G5_FISO_GATE ) 
SH_P.C.1_A { @ Minimum and maximum clearance of SH_P to channel OD of NLD60G5_V2, NLD45G5, NLD40G5, NLD24G5, NLD12G5, NLD7G5 and NLD7G5_FISO == ^SH_P_C_1_A um
     A = HVSHP_NG5 NOT TOUCH INSIDE EDGE ( HVSHP_NG5 INSIDE EDGE (((((( NLD40G5_GATE OR NLD24G5_GATE ) OR NLD60G5_V2_GATE) OR NLD12G5_GATE ) OR NLD45G5_GATE ) OR NLD7G5_GATE ) OR NLD7G5_FISO_GATE ) )
     B = EXPAND EDGE A INSIDE BY SH_P_C_1_A EXTEND BY -SH_P_C_1_A 
     B NOT TOUCH OD 
     ENC OD HVSHP_NG5 < SH_P_C_1_A ABUT <90 SINGULAR REGION
}
SH_P.C.1_NI24G5 { @ Minimum and maximum clearance of SH_P to channel OD of NLD24G5 == ^SH_P_C_1_NI24G5 um
     HVSHP_NI24G5 = HVSHP INTERACT NI24G5_GATE
     A = HVSHP_NI24G5 NOT TOUCH INSIDE EDGE ( HVSHP_NI24G5 INSIDE EDGE  NI24G5_GATE )
     B = EXPAND EDGE A INSIDE BY SH_P_C_1_NI24G5 EXTEND BY -SH_P_C_1_NI24G5 
     B NOT TOUCH OD 
     ENC OD HVSHP_NI24G5 < SH_P_C_1_NI24G5 ABUT <90 SINGULAR REGION
}
SH_P.C.1_NLD20G5 { @ Minimum and maximum clearance of SH_P to channel OD of NLD20G5 == ^SH_P_C_1_NLD20G5 um
     HVSHP_NLD20G5 = HVSHP INTERACT NLD20G5_GATE
     A = HVSHP_NLD20G5 NOT TOUCH INSIDE EDGE ( HVSHP_NLD20G5 INSIDE EDGE  NLD20G5_GATE )
     B = EXPAND EDGE A INSIDE BY SH_P_C_1_NLD20G5 EXTEND BY -SH_P_C_1_NLD20G5 
     B NOT TOUCH OD 
     ENC OD HVSHP_NLD20G5 < SH_P_C_1_NLD20G5 ABUT <90 SINGULAR REGION
}
SH_P.C.1_ZENER { @ Minimum and maximum clearance of SH_P to OD for 6.2v Zener diode== ^SH_P_C_1_ZENER um
     X = HVSHP_ZENER OR HVSHP_ZENER_HOLE
     Y = SIZE X BY - SH_P_C_1_ZENER
     Y XOR ZENER_62_DIODE
}
SH_P.C.2 { @ Minimum and maximum clearance of SH_P to the POLY of 6.2v zener diode == ^SH_P_C_2 um
    X = POLY_ZENER OR POLY_ZENER_HOLE
    Y = SIZE X BY SH_P_C_2	
    Y XOR HVSHP_ZENER_HOLE
}
SH_P.C.4 { @ Minimum and maximum clearance from HVNW to {SH_P INTERACT channel OD} of NLD24G5 == ^SH_P_C_4 um
     A = HVSHP INSIDE EDGE  NI24G5_GATE
     B = EXPAND EDGE A OUTSIDE BY SH_P_C_4 
     B NOT TOUCH HVNW 
}
SH_P.C.3_PA12G5 { @ Minimum and maximum clearance of SH_P to the PO of a PA12G5 == ^SH_P_C_3_PA12G5 um
    A = INSIDE EDGE HVSHP PA12G5_OD
    B = HVSHP TOUCH EDGE A
    C = EXPAND EDGE B OUTSIDE BY SH_P_C_3_PA12G5
    C NOT TOUCH POLY 
}
SH_P.C.3_PA7G5 { @ Minimum and maximum clearance of SH_P to the PO of a PA7G5 == ^SH_P_C_3_PA7G5 um
    A = INSIDE EDGE HVSHP PA7G5_CH
    B = HVSHP TOUCH EDGE A
    C = EXPAND EDGE B OUTSIDE BY SH_P_C_3_PA7G5
    C NOT TOUCH POLY 
}
SH_P.S.2 { @ Minimum and maximum space between {SH_P AND PO} to OD for 24V schottky diode == ^SH_P_S_2 um
    X = HOLES ( SBD_POLY  AND HVSHP ) INNER
    Y = SIZE SBD_24V BY SH_P_S_2	
    Y XOR X
}

// NW shielding 
//=============
SH_N.W.1 { @ Minimum width of a SH_N region >= ^SH_N_W_1 um (except SH_N.W.2 SH_N.W.3 and SH_N.W.4)
	HVSHN_SBD = (HVSHN AND NPOD ) TOUCH (( HOLES ( HVSHN AND NPOD ) INNER ) INTERACT (SBD_12V OR SBD_24V ) )
    X = HVSHN NOT INTERACT ((((((((( ZENER_DIODE OR NLD12G5_SD ) OR PBHVNWDPW_BJT_BOD ) OR LPNP_BJT_BOD ) OR NHVPWNBL_RPO_BJT_COD ) OR ALL_NWHVPWNBL_RPO_BJT_COD ) OR HVSHN_SBD ) OR NLD7G5_D ) OR NLD7G5_FISO_D ) OR NLD20G5_D )
    INT X < SH_N_W_1 ABUT < 90 SINGULAR REGION	
}
SH_N.E.1 { @ Minimum extension from OD edge to SH_N inside OD for HVPB/NW diode	>= ^SH_N_E_1 um
     HVSHN_D = ENC HVSHN PPOD < SH_N_E_1 ABUT < 90 SINGULAR REGION
     HVSHN_D INTERACT DIODMY
}
SH_N.S.1 { @ Minimum space between two SH_N region >= ^SH_N_S_1 um
    EXT HVSHN < SH_N_S_1 ABUT < 90 SINGULAR REGION
}

SH_N.R.1 { @ SH_N must be fully inside HV
     HVSHN NOT HVOX
}
SH_N.W.2 { @ Minimum and maximum extension width of SH_N to PO for in a 6.2v Zener diode == ^SH_N_W_2 um
    INT ( HVSHN INTERACT ZENER_62_DIODE ) < SH_N_W_2 ABUT < 90 SINGULAR REGION
    SIZE ( HVSHN INTERACT ZENER_62_DIODE ) BY SH_N_W_2/2 UNDEROVER
}
HVSHN_BJT_E      = HVSHN INTERACT NODPW_BJT
NPOD_HVSHN_BJT_E = NPOD INTERACT HVSHN_BJT_E
HVSHN_BJT_B      = HVSHN INTERACT (((( NPOD AND HVOX ) INTERACT HVNW ) AND NBL ) INTERACT BJTDMY)
NPOD_HVSHN_BJT_B =  NPOD INTERACT HVSHN_BJT_B   
SH_N.E.2 { @ Minimum and maximum extension of SH_N to N+ OD (emitter) for NW/HVPW/NBL BJT == ^SH_N_E_2 um
    X = SIZE NWHVPWNBL_BJT_E BY SH_N_E_2
    X XOR ( HVSHN INTERACT NWHVPWNBL_BJT_E )
}
SH_N.E.3 { @ Minimum and maximum extension of SH_N to N+ OD (Collector) for NW/HVPW/NBL BJT == ^SH_N_E_3 um
    X = SIZE NWHVPWNBL_BJT_COD BY SH_N_E_3
    X XOR ( HVSHN INTERACT NWHVPWNBL_BJT_COD )
}
SH_N.W.3 { @ Minimum width of SH_N in NLD12G5 >= ^SH_N_W_3 um
    A = NLD12G5_SD INTERACT HVGATE ==1
    B = HVSHN INTERACT A 
    INT B < SH_N_W_3 ABUT<90 SINGULAR REGION
}
SH_N.W.4 { @ Minimum width of SH_N in NLD12G5 >= ^SH_N_W_4 um
    A = NLD12G5_SD INTERACT HVGATE >1
    B = HVSHN INTERACT A 
    INT B < SH_N_W_4 ABUT<90 SINGULAR REGION
}



    

SH_N.O.1 { @ Maximum and minimum overlap of SH_N over Poly of NLD12G12 == 0.0 um
    A = NLD12G12_GATE COIN OUTSIDE EDGE NLD12G12_D
    A NOT COIN EDGE ( HVSHN INTERACT  NLD12G12_D )
}
SH_N.O.2 { @ Minimum overlap of SH_N over Poly of PA7G5 == ^SH_N_O_2 um
    X = ( POLY AND HVSHN ) INTERACT PA7G5_GATE
    INT X < SH_N_O_2 ABUT < 90 SINGULAR REGION
}
SH_N.E.4 { @ Minimum and maximum extension from HVNW to SH_N inside channel OD of PA40G5, PA24G5, PA60G5, PA45G5 and PA12G5. == ^SH_N_E_4 um    
    A = HVSHN INSIDE EDGE (((( PA40G5_GATE OR PA24G5_GATE ) OR PA60G5_V2_GATE) OR PA12G5_GATE ) OR PA45G5_GATE ) 
    B = EXPAND EDGE A OUTSIDE BY SH_N_E_4	   
    B NOT TOUCH HVPW
}
SH_N.E.5 { @ Minimum and maximum extension of PO beyond SH_N in channel length derection == ^SH_N_E_5 um    
    A = HVSHN INSIDE EDGE PA7G5_GATE
    B = EXPAND EDGE A OUTSIDE BY SH_N_E_5	   
    B NOT TOUCH PA7G5_D
}
HVSHN_PG5 = HVSHN INTERACT ((((( PA40G5_GATE OR PA24G5_GATE ) OR PA60G5_V2_GATE) OR PA12G5_GATE ) OR PA45G5_GATE ) OR PA7G5_GATE )
SH_N.C.2 { @ Minimum and maximum clearance of SH_N to channel OD (and N+ isolation ring) of PA40G5, PA24G5, PA60G5 and PA12G5 . == ^SH_N_C_2 um
     A = HVSHN_PG5 NOT TOUCH INSIDE EDGE ( HVSHN_PG5 INSIDE EDGE ((((( PA40G5_GATE OR PA24G5_GATE ) OR PA60G5_V2_GATE) OR PA12G5_GATE) OR PA45G5_GATE ) OR PA7G5_GATE ))  
     B = EXPAND EDGE A INSIDE BY SH_N_C_2 EXTEND BY - SH_N_C_2
     ( B NOT TOUCH ((((( PA40G5_S OR PA24G5_S ) OR PA60G5_V2_S) OR PA12G5_S) OR PA45G5_S ) OR PA7G5_S )) NOT TOUCH NPOD 
}
SH_N.C.3_NLD12G5 { @ Maximum and minimum clearance of SH_N to Poly of NLD12G5== ^SH_N_C_3_NLD12G5 um
    A = EXPAND EDGE NLD12G5_GATE OUTSIDE BY GRID
    B = A INSIDE RPO	
    C = POLY TOUCH EDGE B
    D = EXPAND EDGE C OUTSIDE BY SH_N_C_3_NLD12G5
    D NOT TOUCH HVSHN
}
SH_N.C.3_NLD20G5 { @ Maximum and minimum clearance of SH_N to Poly of NLD20G5== ^SH_N_C_3_NLD20G5 um
    A = HVSHN INSIDE EDGE NLD20G5_OD
    B = EXPAND EDGE A OUTSIDE BY SH_N_C_3_NLD20G5
    B NOT TOUCH ( POLY INTERACT  NLD20G5_GATE )
}
SH_N.C.3_NLD7G5 { @ Maximum and minimum clearance of SH_N to Poly of NLD7G5== ^SH_N_C_3_NLD7G5 um
    A = HVSHN INSIDE EDGE NLD7G5_CH
    B = EXPAND EDGE A OUTSIDE BY SH_N_C_3_NLD7G5
    B NOT TOUCH ( POLY INTERACT  NLD7G5_GATE )
}
SH_N.C.3_NLD7G5_FISO { @ Maximum and minimum clearance of SH_N to Poly of NLD7G5_FISO== ^SH_N_C_3_NLD7G5_FISO um
    A = HVSHN INSIDE EDGE NLD7G5_FISO_CH
    B = EXPAND EDGE A OUTSIDE BY SH_N_C_3_NLD7G5_FISO
    B NOT TOUCH ( POLY INTERACT  NLD7G5_FISO_GATE )
}
SH_N.E.6 { @ Minimum and maximum extension of PSUB beyond SH_N of 5.5v zener diode == ^SH_N_E_6 um    
    A = SIZE ( HVSHN INTERACT ZENER_55_DIODE ) BY SH_N_E_6
    B = PSUB INTERACT ZENER_55_DIODE
    A XOR B
}



// NWELL CHECKS
//=============
CONNECT    NTAPi NWELLi
CONNECT    NTAPi HVNWi
CONNECT    NTAPi PSDi
CONNECT    PTAPi NSDi
CONNECT    NBLi NTAPi_NBL
CONNECT    NTAPi_NBL NWELLi
CONNECT    NTAPi_NBL HVNWi
CONNECT    NTAPi_NBL PSDi
SCONNECT    NTAPi_NBL NWLVTi
CONNECT    M1x NTAPi_NBL BY COi
CONNECT	   M1x COi
SCONNECT    NTAPi NWLVTi 


CONNECT    M1x ILP1i NTAPi PTAPi PSDi NSDi BY COi

CONNECT    M1x M2x BY VIA1i
CONNECT    M2x M3x BY VIA2i
//Exclude the via upon CTM region
VIAt   = VIA3i NOT INTERACT CTM3i
VIAc   = VIA3i AND CTM3i
CONNECT    M3x M4x BY VIAt 
CONNECT    M4x CTM3i BY VIAc
CONNECT    M4x MDx BY VIADi

NW.W.1 { @ Minimum cold NWELL width >= ^NW_W_1 um
  INT COLD_NWELL < NW_W_1 ABUT < 90 SINGULAR REGION
}
NW.W.2 { @ Minimum hot NWELL width >= ^NW_W_2 um
  INT HOT_NWELL < NW_W_2 ABUT < 90 SINGULAR REGION
}

// using HTWL mark layer and connectivity for nwell spacing
NW.S.1 { @ Minimum different potential NWELL space >= ^NW_S_1 um
  NWEL_NODAL = STAMP NWELL BY NWELLi
  EXT NWEL_NODAL < NW_S_1 ABUT < 90 SINGULAR REGION NOT CONNECTED    
  EXT RNWEL < NW_S_1 SINGULAR REGION ABUT < 90     // NWELL as resistor
  EXT RNWEL NWELL < NW_S_1 ABUT < 90 SINGULAR REGION 
}
NW.S.2 { @ Minimum same potential NWELL space >= ^NW_S_2 um
  EXT NWELL < NW_S_2 SINGULAR REGION ABUT < 90 
}
NW.R.1 { @ NW overlaps HVNW is not allowed. (butted is allowed).
  NWELL AND HVNW 
}

NW.R.2 { @ NW overlaps H60NW is not allowed. (butted is allowed).
  NWELL AND H60NW 
}


// NWELL (within OD) RESISTOR CHECKS
//====================================

NWR.E.1 {@ Minimum extension of OD to NW>= ^NWR_E_1 um
  ENC NWRES ODWR < NWR_E_1 ABUT<90 SINGULAR REGION
  NWRES CUT ODWR    
}
NWR.E.2 {@ Minimum extension of salicide NW to CO>= ^NWR_E_2 um
  ENC COWR NWRES < NWR_E_2 ABUT<90 SINGULAR REGION
  COWR CUT NWRES    
}
NWR.C.1 {@ Minimum clearance from RPO to related NW>= ^NWR_C_1 um
  ENC NWRES RHWR < NWR_C_1 ABUT<90 REGION SINGULAR
}
NWR.C.2 {@ Minimum clearance from RPO to related  OD>= ^NWR_C_2 um
  ENC ODWR RPO < NWR_C_2 ABUT<90 SINGULAR REGION
}
NWR.C.3 {@ Minimum clearance from RPO to CO in RPO hole>= ^NWR_C_3 um
  ENC COWR RHWR < NWR_C_3 ABUT<90 SINGULAR REGION
  COWR CUT RHWR    
}
NWR.O.1 {@ Minimum overlap of RPO to NP>= ^NWR_O_1 um
    INT NPWR RPO < NWR_O_1 ABUT < 90 SINGULAR REGION
    X = RPO INTERACT NWRES
    H = HOLES X INNER
    H NOT NPWR
}
NWR.R.1 {@ LDD and P+/N+ implant inside NW resistance region is not allowed.
  RWDMY AND NPOD
  RWDMY AND PPOD
  RWDMY AND 2V_ACTIVE
  RWDMY AND 5V_ACTIVE

  RWDMY AND LPP
  RWDMY AND NDDD
}
//NWEL under STI
NWRES_STI = RNWEL NOT INTERACT RPO	// NWEL resistor (UNDER STI)
ODWR_STI  = OD INTERACT NWRES_STI
NPWR_STI  = NP INTERACT NWRES_STI
NWR.E.3 { @ Min. extension of NP to OD (NWEL resistor under STI) >= ^NWR_E_3 um
  ENC ODWR_STI NPWR_STI < NWR_E_3 ABUT < 90 SINGULAR REGION
  ODWR_STI NOT NPWR_STI
}

#IFDEF SUB_NOT_GROUND
NWR.R.2 {@ NW resistor not allowed if substrate not tied to ground
  COPY NWRES
}
#ENDIF

NWR.R.3{@ Only one NW inside NWROD is allowed in one OD.
   A = ODWR INTERACT (NWRES AND ODWR)>1
   NWRES INTERACT A     
}
NWR.R.4{@ Only two NPS in NWROD is allowed in one od.
 A = ODWR INTERACT (NP INTERACT NWRES) > 2
 B = ODWR INTERACT (NP INTERACT NWRES) < 2
 NP INTERACT (A OR B)
 ODWR NOT INTERACT ( NP INTERACT NWRES)
}
RPONWR_H = HOLES RPO INNER
NWR.R.5 { @ ONLY TWO RPO HOLES IN NWROD ARE ALLOWED.
   A = ODWR INTERACT RPONWR_H > 2
   B = ODWR INTERACT RPONWR_H < 2
   C = ODWR NOT INTERACT RPONWR_H 
   RPONWR_H INTERACT ((A OR B) OR C)
}
NWR.R.6 { @ DRC can flag no OD space for NW has parallel length > 0
  A = (EXT NWRES < 5 OPPOSITE REGION NOTCH) NOT NWRES
  A INSIDE ODWR    
}


// PWELL RESISTOR CHECKS
//====================================
PW_RES_0 = (((PWELL AND DPW) AND NBL) AND RWDMY) INTERACT RPO
PW_RES = (((PWELL AND DPW) AND NBL) INTERACT PW_RES_0) INTERACT RPO
OD_PW_RES = OD INTERACT PW_RES
PP_PW_RES = PP INTERACT OD_PW_RES
CO_PW_RES = CO_DIFF INSIDE OD_PW_RES
HVNW_PW_RES = HVNW INTERACT OD_PW_RES
DPW_PW_RES = DPW INTERACT PW_RES
RPO_PW_RES = RPO INTERACT OD_PW_RES
RPOH_PW_RES = OD_PW_RES NOT RPO
PWR.O.1 {@ Minimum overlap of OD to HVNW >= ^PWR_O_1 um
  INT OD_PW_RES HVNW < PWR_O_1 ABUT < 90 SINGULAR REGION
}
RPO.O.2 {@ Minimum overlap of RPO to PP >= ^RPO_O_2 um
  INT PP_PW_RES RPO < RPO_O_2 ABUT < 90 SINGULAR REGION
  H = HOLES RPO_PW_RES INNER
  H NOT PP_PW_RES
}
PWR.C.2 {@ Minimum clearance from RPO to related DPW>=0.3um
  EXT RPO_PW_RES DPW_PW_RES < 0.3 ABUT<90 REGION SINGULAR
}
// PWR.R.1 @ LDD(2VN,5VN for 2.5/5v process), LPP and P+/N+ implant inside 
//          @ PW resistor not allowed
// PWR.R.1 is checked by NWR.R.1	     

PWR.R.2{@ Only one DPW inside PWROD is allowed in one OD.
   A = OD_PW_RES INTERACT (DPW_PW_RES AND OD_PW_RES)>1
   DPW_PW_RES INTERACT A     
}
PWR.R.3{@ Only two PPS in PWROD is allowed in one od.
 A = OD_PW_RES INTERACT PP_PW_RES != 2
 PP INTERACT A  
 OD_PW_RES NOT INTERACT PP_PW_RES
}

PWR.R.4 { @ only TWO RPO holes IN PWROD ARE ALLOWED.
   A = OD_PW_RES INTERACT RPONWR_H !=2
   B = OD_PW_RES NOT INTERACT RPONWR_H 
   RPONWR_H INTERACT (A OR B)
}
PWR.R.5 { @ DRC can flag no OD space for PW has parallel length > 0
  A = (EXT PW_RES < 5 OPPOSITE REGION NOTCH) NOT PW_RES
  A INSIDE OD_PW_RES    
}


// VTD_N checks
//==============
VTDN.W.1 { @ Min. width of a VTDN region >= 1.22um
  INT VTDN < 1.22 ABUT < 90 SINGULAR REGION
}
VTDN.E.1 { @ Min.& Max. extension of channel OD to VTDN for NDLD24G5 == 0.2um
  A = OD INTERACT NDLD24G5_GATE 
  B = VTDN INTERACT A
  D = SIZE A BY 0.2
  D XOR B
  A CUT VTDN
}
VTDN.S.1 { @ Minimum space between two VTDN region >=0.6 um
    EXT VTDN < 0.6 ABUT < 90 SINGULAR REGION
}

//    VTLVDN CHECK
//======================
VTLVDN.W.1 { @ Min. width of a VTLVDN region >= ^VTLVDN_W_1 um
  INT VTLVDN < VTLVDN_W_1 ABUT < 90 SINGULAR REGION
}
VTLVDN.E.1 { @ Min. extension of VTLVDN beyond OD >= ^VTLVDN_E_1 um
  ENC OD VTLVDN < VTLVDN_E_1 SINGULAR ABUT<90 REGION
      OD CUT VTLVDN
}
VTLVDN.S.1 { @ Minimum space between two VTLVDN region >= ^VTLVDN_S_1 um
    EXT VTLVDN < VTLVDN_S_1 ABUT < 90 SINGULAR REGION
}

NTN_PICKUP = (( PPOD AND NTN ) INTERACT DPW ) AND NBL
NTN_HOLE = ( HOLES NTN_PICKUP ) NOT NTN_PICKUP
NTN_PICKUP_RING = NTN_PICKUP TOUCH NTN_HOLE
NTN_RING = NTN INTERACT NTN_PICKUP_RING
NTN.W.1 {@ Minimum width of a NTN region >= ^NTN_W_1 um (except NTN.W.2) 
    A = NTN NOT NTN_RING
    B = A NOT (MTP_2T2C AND ((MCEL OR NTN) OR H18NWDMY))
    C = B NOT IOLDNMOS_OD
    INT C < NTN_W_1 SINGULAR ABUT<90 REGION
}
NTN.S.1 {@ Minimum space between two NTN regions >= ^NTN_S_1 um
    A = NTN NOT (MTP_2T2C AND ((MCEL OR NTN) OR H18NWDMY))
    B = A NOT IOLDNMOS_OD
    EXT B < NTN_S_1 ABUT<90 SINGULAR REGION
}
NTN.C.1 {@ Minimum clearance between NTN region and Nwell edge >= ^NTN_C_1 um,Butted is allowed. 
    EXT NTN NWELL < NTN_C_1 SINGULAR ABUT>0 <90 REGION
    NTN AND NWELL    
}
NTN.C.2 {@ MInimum clearance between NTN outside NBL and HV >= ^NTN_C_2 um,Butted is allowed.
    A = NTN NOT NBL 
    EXT A HVOX < NTN_C_2 SINGULAR ABUT >0 <90 REGION
}
NTN.C.3 {@ MInimum clearance between NTN and OD outside NTN>= ^NTN_C_3 um
    A = EXT OD NTN < NTN_C_3 SINGULAR ABUT<90 REGION
    B = OD CUT NTN
    C = (A OR B) NOT INTERACT (MTP_2T2C AND ((MCEL OR NTN) OR H18NWDMY))
    C NOT IOLDNMOS_OD
}
NTN.C.4 {@ MInimum clearance between NTN and HVDMY2 outside NTN>= ^NTN_C_4 um
    EXT HVDMY2 NTN < NTN_C_4 SINGULAR ABUT<90 REGION
}
NTN.E.1 {@ Minimum extension from NTN region beyond OD region>= ^NTN_E_1 um (except NTN.E.2)
    A = NTN NOT NTN_RING
    ENC OD A < NTN_E_1 SINGULAR ABUT<90 REGION
}
NTN.E.2 {@ Minimum extension from NTN region beyond OD region>= ^NTN_E_2 um
    ENC OD NTN_RING < NTN_E_2 SINGULAR ABUT<90 REGION
}
NTN.R.1 {@ NTN has to be fully inside OD2
    NTN NOT OD2
}
NTN.O.1 {@ Minimum overlap of NTN to DPW for lv isolation >= ^NTN_O_1 um
    A = DPW NOT INTERACT HVOXi
    INT NTN_RING A < NTN_O_1 SINGULAR ABUT<90 REGION
}
NTN.W.2 {@ Minimum width of  NTN for lv isolation >= ^NTN_W_2 um
    INT NTN_RING < NTN_W_2 SINGULAR ABUT<90 REGION
}

NTN.R.2 {@ NTN inside OD is not allowed 
   NTN INSIDE OD 
}
NTN.R.3 {@ OD cut NTN is not allowed
   A = OD CUT NTN
   A NOT IOLDNMOS_OD
}
NTN.R.4 {@ NTN butted OD is not allowed
   NTN TOUCH OD
}


// OD2 CHECKS
//===============
OD2.E.1 { @ Minimum OD2 olap OD >= ^OD2_E_1 um
  // This only applies to active OD
  CHECK_EDGE_N = ENC [LV_NACT] OD2 < OD2_E_1 SINGULAR ABUT <90 
  CHECK_EDGE_N NOT COIN OUTSIDE EDGE LV_PTAP    
  CHECK_EDGE_P = ENC [LV_PACT] OD2 < OD2_E_1 SINGULAR ABUT <90 
  CHECK_EDGE_P NOT COIN OUTSIDE EDGE LV_NTAP    
  OD2 INSIDE DACT          // OD2 totally inside OD
  Y = DACT INTERACT OD2
  Z = Y NOT OD2
  Z OUTSIDE ALL_GATE
}
OD2.S.1 { @ Minimum OD2 spacing >= ^OD2_S_1 um
  // Merge if space < 0.45 um
  EXT OD2 < OD2_S_1 SINGULAR ABUT <90 REGION
}
OD2.C.1 { @ Minimum clearance between an active 
          @ OD region and an OD2 region>= ^OD2_C_1 um
  EXT OD2 LV_NACT < OD2_C_1 SINGULAR ABUT <90 REGION
  EXT OD2 LV_PACT < OD2_C_1 SINGULAR ABUT <90 REGION
}
OD2.C.2 { @ Minimum OD2 space to gate >= ^OD2_C_2 um
  A = OD2 INSIDE EDGE DACT
  EXT A GATE_W < OD2_C_2 ABUT <90
}
OD2.E.2 { @ Minimum enclosure of gate by OD2 >= ^OD2_E_2 um
  OD2_BEDGE    = OD2 INSIDE EDGE OD
  ENC GATE_W OD2_BEDGE < OD2_E_2 ABUT <90 
  HVGT         = ALL_GATE AND OD2
  HVGT TOUCH EDGE OD2
  ALL_GATE CUT OD2
}
OD2.C.3 { @ Minimum clearance from OD2 to HVNW >= ^OD2_C_3 um. Butted is allowed.
    EXT OD2 HVNW < OD2_C_3 SINGULAR ABUT>0 <90 REGION
}
OD2.C.4 { @ Minimum clearance from OD2 to NWLVT >= ^OD2_C_4 um. Butted is allowed.
    EXT OD2 NWLVT < OD2_C_4 SINGULAR ABUT>0 <90 REGION
}
OD2.E.3 { @ Minimum extension of OD2 beyond OD for isolated P+ resistor >= ^OD2_E_3 um
    A = OD2 INTERACT RPODRPOISO
    ENC OD A < OD2_E_3 SINGULAR ABUT <90 REGION
}
OD2.C.5 { @ Minimum clearance from OD2 to HVNW pickup for isolated P+ resistor >= ^OD2_C_5 um.
    A = OD2 INTERACT RPODRPOISO
    EXT A HN_PICKUP < OD2_C_5 SINGULAR ABUT <90 REGION
}




//=========HVPB (PBODY) RULES CHECK================
HVPB.W.1 {@ Minimum dimension of a HVPB region.	>= ^HVPB_W_1 um
     INT HVPB < HVPB_W_1 ABUT < 90 SINGULAR REGION
}
HVPB.S.1 { @ Minimum spacing of HVPB regions>= ^HVPB_S_1 um
     EXT HVPB < HVPB_S_1 ABUT < 90 SINGULAR REGION
}
HVPB.C.1_A {@ Minimum clearance from HVPB to P+ bulk ring	>= ^HVPB_C_1_A um
     X = EXT HVPB HP_PICKUP < HVPB_C_1_A ABUT < 90 SINGULAR REGION 
     X NOT INTERACT ZENER_DIODE
}
HVPB.C.1_NLD7G5_FISO {@ Minimum clearance from HVPB to P+ bulk ring	>= ^HVPB_C_1_NLD7G5_FISO um
     A = HVPB INTERACT NLD7G5_FISO_SD
     EXT A HP_PICKUP < HVPB_C_1_NLD7G5_FISO ABUT < 90 SINGULAR REGION 
}
HVPB.C.1_NLD7G5 {@ Minimum clearance from HVPB to P+ bulk ring	>= ^HVPB_C_1_NLD7G5 um
     A = HVPB INTERACT NLD7G5_SD
     EXT A HP_PICKUP < HVPB_C_1_NLD7G5 ABUT < 90 SINGULAR REGION 
}
HVPB.C.2 {@ Maximum and minimum clearance of HVPB to channel OD, except the edge overlaying PO
          @ refer to HVPB.O.1 == ^HVPB_C_2 um
     X = HVPB INSIDE EDGE POLY
     Y = (HVPB INTERACT OD) NOT COIN INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPB_C_2 EXTEND BY - HVPB_C_2 
     POD_HVPB = (((((PPOD AND HVOX ) AND HVNWNOPO) INTERACT HVSHN) INTERACT HVPB) NOT INTERACT NBL) INTERACT DIODMY
     HVPB_POD = HVPB INTERACT POD_HVPB
     (Z NOT TOUCH OD) NOT HVPB_POD
     ENC OD HVPB < HVPB_C_2 ABUT < 90 SINGULAR REGION
} 	      
HVPB.C.3 {@ Minimum clearance from HVPB to drain OD ring for NLD12G5 >= ^HVPB_C_3 um
     EXT HVPB NLD12G5_D < HVPB_C_3 ABUT < 90 SINGULAR REGION
}
HVPB.O.1 {@ Maximum and minimum overlap of HVPB over PO	== ^HVPB_O_1 um
     X = HVPB AND POLY
     INT HVPB POLY < HVPB_O_1 ABUT < 90 SINGULAR REGION	 
     SIZE X BY HVPB_O_1/2 UNDEROVER
}
//HVPB.E.2 is checked by HVPB.C.2
HVPB.R.1 {@ OD not PO is not allowed to cut HVPB,i.e.OD not PO has to be completely inside HVPB
     ( OD NOT POLY ) CUT HVPB 
}

// PO check
//==========

PO.W.1_PO.W.2_PO.W.3 { @ Minimum poly width (interconnect, 2.5v gates) >= ^PO_W_1_2_3 um
  INT GATE_W < PO_W_1_2_3 ABUT < 90 REGION
  A = POLY_ISO NOT INTERACT PA12G5_GATE 
  INT A < PO_W_1_2_3 SINGULAR ABUT < 90 REGION 
}
PO.W.1a { @ Minimum poly gate length 5v pmos >= ^PO_W_1a um
  INT HV_PGATE_W < PO_W_1a ABUT < 90 REGION
}
PO.W.2a { @ Minimum poly gate length 5v nmos >= ^PO_W_2a um
  A = INT HV_NGATE_W < PO_W_2a ABUT < 90 REGION
  B = MTP_2T2C AND MCEL
  A NOT INTERACT B
}
PO.S.1_PO.S.7 { @ Minimum POLY space on OD with/without contact >= ^PO_S_1 um
  EXT GATE_W < PO_S_1 ABUT < 90 REGION
}
PO.S.2 { @ Minimum poly interconnect space >= ^PO_S_2 um
  EXT POLY < PO_S_2 SINGULAR ABUT < 90 REGION
}
PO.C.1 { @ Minimum poly on field space to active >= ^PO_C_1 um
  EXT POLY OD < PO_C_1 ABUT < 90 SINGULAR REGION
}
PO.C.2 {  @ Minimum active ohang gate >= ^PO_C_2 um
  ENC POLY OD < PO_C_2 SINGULAR ABUT < 90 REGION
}
PO.O.1 { @ Minimum gate ohang active >= ^PO_O_1 um
  A = POLY NOT INTERACT PA12G5_GATE
  ENC OD A < PO_O_1 SINGULAR ABUT < 90 REGION
}
PO.R.1 { @ 90 degree gate not allowed
  A = MTP_2T2C AND MCEL
  X = (( POLY NOT VARDMY ) NOT ZENER_DIODE) NOT A
  Y = X INSIDE EDGE OD
  EXT Y < 0.05 ABUT == 90 INTERSECTING ONLY
  INT Y < 0.05 ABUT == 90 INTERSECTING ONLY
}
PO.R.2 {@ Maximum length of poly between two contacts is 50um when poly width <= 0.35um
  LONG_PO = AREA ILP1 > 0.2*50
  CHECK_PO = LONG_PO INTERACT CO_POLY
  CHECK_CO = CO_POLY INTERACT CHECK_PO
  CO_A = SIZE CHECK_CO BY 50 / 2 INSIDE OF CHECK_PO STEP 0.36 
  PO_A = CHECK_PO INTERACT CO_A == 1
  PO_B = CHECK_PO INTERACT CO_A > 1
  CO_B = CO_A INTERACT PO_A
  CO_C = SIZE CO_B BY 50 / 2 INSIDE OF PO_A STEP 0.36 
  BAD = (PO_A NOT CO_C) OR (PO_B NOT CO_A)
  BAD_EDGE = BAD COIN INSIDE EDGE POLY
  ERROR = INT BAD_EDGE <= 0.35 ABUT < 90 REGION
  CHECK_PO INTERACT ERROR
}

SD       = OD NOT ALL_GATE       // Source/drain, include butted pickup
COSD     = SD ENCLOSE CO_DIFF    // Source/drain with contact
POS3EDGE = ALL_GATE COINCIDENT OUTSIDE EDGE COSD

PO.L.1 { @ Max. PO length in contacted OD with 0.4 space <= ^PO_L_1 um
  A = POS3EDGE OUTSIDE EDGE (MTP_2T2C AND MCEL)
  EXT A == 0.4 OPPOSITE PROJ > PO_L_1
}
PO.L.2 { @ Max. length of 45 degree bent PO 
  Z = GATE_W ANGLE == 45
  LENGTH Z > 1.0
}
PO.R.3 {@ Min poly area coverage >= 14%
  DENSITY ALL_POLY < 0.14 PRINT POLY_DENSITY.log
}

HRDMY	= RHDMY OR RLPPDMY	// high resistance resistor dummy
ARDMY	= HRDMY OR RLDMY	// all resistor dummy
CPO1	= POLY_ISO INTERACT CTP	// Po1 as capacitor bottom plate
IRP1	= POLY_ISO NOT CPO1		
RES_PO1 = IRP1 INTERACT ARDMY	// Po1 as resistor
PORES1	= IRP1 AND RPO		
HREP	= PORES1 AND HRDMY	// high resistance poly resistor
NLP1	= CPO1 OR HREP		// Po1 as capacitor & high resistance resistor
LRP1	= POLY NOT NLP1		// Po1 as interconnection & low resistance resistor
LREP	= LRP1 AND RLDMY	// low resistance poly resistor
/////////////////////////////////////////////
///////////resistor Nsq check
/////////////////////////////////////////////
    HRIRES	= ( PORES1 AND RLPPDMY ) AND HR400DMY	// HRI 400 POLY resistor for GP process 
    HREP_RH	= PORES1 AND RHDMY	// High resistor POLY resistor for GPIIA  
    HRIRES_L = EXPAND EDGE (HRIRES NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
    HREP_RH_L	= EXPAND EDGE (HREP_RH NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
    HRIRES_W = EXPAND EDGE (HRIRES INSIDE EDGE POLY) BY 0.001
    HREP_RH_W = EXPAND EDGE (HREP_RH INSIDE EDGE POLY) BY 0.001
    CONNECT HRIRES_L HRIRES_W
    CONNECT HREP_RH_L HREP_RH_W


PO.W.4 { @ low resistance poly resistor width >= ^PO_W_4 um
  INT LREP < PO_W_4 ABUT < 90 SINGULAR
}
PO.W.5 { @ poly capacitor bottom plate width >= ^PO_W_5 um
  INT CPO1 < PO_W_5 ABUT < 90 SINGULAR
}
PO.W.6 { @ high resistance poly resistor width >= 0.5um and Nsq >= ^PO_W_6_NSQ for GPIIA 
  INT HREP_RH < 0.5 ABUT < 90 SINGULAR REGION
  NET AREA RATIO HREP_RH_L HREP_RH_W < PO_W_6_NSQ
}
PO.W.7 { @ Min. width of a PO region inside NTN,
             @ for the channel length of low Vt 5.0 NMOS >= ^PO_W_7 um
  GATE_W_NTN = HV_NGATE_W INSIDE EDGE NTN
  INT GATE_W_NTN < PO_W_7 ABUT < 90
}
PO.W.8 { @ Min. width of a PO region inside NWLVT,
             @ for the channel length of low Vt 5.0 PMOS >= ^PO_W_8 um
  GATE_W_NWLVT = HV_PGATE_W INSIDE EDGE NWLVT
  INT GATE_W_NWLVT < PO_W_8 ABUT < 90
}
PO.W.9 { @ Min. width of a PO region inside VTLVDN,
             @ for the channel length of 5.0 depletion NMOS >= ^PO_W_9 um
  GATE_W_VTLVDN = HV_NGATE_W INSIDE EDGE VTLVDN
  INT GATE_W_VTLVDN < PO_W_9 ABUT < 90
}

PO_RES_3K = (PORES1 AND RLPPDMY) AND (( HR400DMY OR HR1KDMY ) OR HR3KDMY )
PO_RES_3K_A_pre = INT PO_RES_3K <= 0.5  REGION OPPOSITE
PO_RES_3K_A = ((POLY INTERACT PO_RES_3K_A_pre) AND RLPPDMY) AND (( HR400DMY OR HR1KDMY ) OR HR3KDMY )
PO_RES_3K_B = PO_RES_3K NOT PO_RES_3K_A 
PO_RES_3K_A_L = EXPAND EDGE (PO_RES_3K_A NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
PO_RES_3K_A_W = EXPAND EDGE (PO_RES_3K_A INSIDE EDGE POLY) BY 0.001

PO_RES_3K_B_L = EXPAND EDGE (PO_RES_3K_B NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
PO_RES_3K_B_W = EXPAND EDGE (PO_RES_3K_B INSIDE EDGE POLY) BY 0.001

CONNECT PO_RES_3K_A_L PO_RES_3K_A_W
CONNECT PO_RES_3K_B_L PO_RES_3K_B_W

PO.W.10 {@  Square number Nsq (length/width) of 400/1K/3K ohm/sq HRI resistor, DRC only check rectangle resistor
         @ 0.5 >= width >=0.24, Nsq >= 10
	 @ width > 0.5, Nsq>= 5    
   NET AREA RATIO PO_RES_3K_A_L PO_RES_3K_A_W < 10
   NET AREA RATIO PO_RES_3K_B_L PO_RES_3K_B_W < 5
}

PO.S.4 { @ capacitor & high resistor space >= ^PO_S_4 um
  EXT NLP1 < PO_S_4  ABUT < 90 SINGULAR
}
PO.S.5 { @ Po1 to capacitor & high resistor space >= ^PO_S_5 um
  EXT LRP1 CPO1 < PO_S_5 ABUT < 90 SINGULAR
  EXT LRP1 HREP < PO_S_5 ABUT >0< 90 SINGULAR
}

// PO.S.6 checked by PO.S.7_PO.S.4

PO.R.4 { @ capacitor/reisistor on OD not allowed.
  CPO1 INTERACT OD
  HREP INTERACT OD
  LREP INTERACT OD
}
PO.I.1 { @ Poly interconnection not doped
  A = ((( POLY INTERACT COi ) NOT OD ) OUTSIDE CB ) NOT INTERACT ( NLD12G12_GATE OR NLD12G5_GATE )
  B = A NOT PP
  C = B NOT NP
  D = C NOT LPP
  E = D NOT BPI
  SIZE E BY 0.05 UNDEROVER
  (NP AND PP) AND POLY_ISO
}
PO.R.warn { @ DPO overlap with POLY or OD is not allowed 
    DPO AND POLYi
    DPO AND ODi	
}


HVPO.W.1 { @ Minimum and maximum Width of PO in a Zener diode == ^HVPO_W_1 um
     INT POLY_ZENER < HVPO_W_1 ABUT < 90  SINGULAR REGION
     SIZE POLY_ZENER BY HVPO_W_1/2 UNDEROVER	 
}
HVPO.S.2 { @ Minimum and maximum spacing between two PO regions in the multi-finger direction of the Zener diode == ^HVPO_S_2 um
     INT POLY_ZENER_HOLE < HVPO_S_2 ABUT < 90  SINGULAR REGION
     SIZE POLY_ZENER_HOLE BY HVPO_S_2/2 UNDEROVER
}
// HVPO.S.3 is checked by HVPO.S.2 @ Minimum spacing between two PO regions in the width direction of the Zener diode >=1.7um

HVPO.C.1_G12 { @ Maximum and minimum clearance from HVNW to PO to define channel length== ^HVPO_C_1_G12 um
     X = HVGATE_G12_N NOT HVNW  
     INT X < HVPO_C_1_G12 ABUT < 90  SINGULAR REGION
     SIZE X BY HVPO_C_1_G12/2 UNDEROVER
     HVGATE_G12_N INSIDE HVNW
}
HVPO.C.1_G5 { @ Maximum and minimum clearance from HVNW to PO to define channel length== ^HVPO_C_1_G5 um
     X = (((NLD40G5_GATE OR NLD24G5_GATE) OR NDLD24G5_GATE ) OR  NLD20G5_GATE ) NOT HVNW  
     INT X < HVPO_C_1_G5 ABUT < 90  SINGULAR REGION
     SIZE X BY HVPO_C_1_G5/2 UNDEROVER
     (((NLD40G5_GATE OR NLD24G5_GATE) OR NDLD24G5_GATE ) OR  NLD20G5_GATE ) INSIDE HVNW
}
HVPO.C.7 { @ Minimum clearance from HVNW to PO to define channel length >= ^HVPO_C_7 um
     X = NI24G5_GATE NOT HVNW  
     INT X < HVPO_C_7 ABUT < 90  SINGULAR REGION
     NI24G5_GATE INSIDE HVNW
}
HVPO.C.6 { @ Maximum and minimum clearance from H60NW to PO to define channel length== ^HVPO_C_6 um
     X = ( NLD60G5_V2_GATE OR NLD45G5_GATE ) NOT H60NW  
     INT X < HVPO_C_6 ABUT < 90  SINGULAR REGION
     SIZE X BY HVPO_C_6/2 UNDEROVER
     ( NLD60G5_V2_GATE OR NLD45G5_GATE ) INSIDE H60NW
}
HVPO.O.1_G5 { @ Minimum overlap of HVNW under PO to defined channel length>= ^HVPO_O_1_G5 um
    INT HVGATE_G5_P HVNW < HVPO_O_1_G5 ABUT < 90  SINGULAR REGION
}
HVPO.O.1_G12 { @ Minimum overlap of HVNW under PO to defined channel length>= ^HVPO_O_1_G12 um
    INT HVGATE_G12_P HVNW < HVPO_O_1_G12 ABUT < 90  SINGULAR REGION
}
HVPO.W.2_NLD12G5 { @ Maximum and minimum width of PO to define channel length of NLD12G5 == ^HVPO_W_2_NLD12G5 um
     INT NLD12G5_GATE < HVPO_W_2_NLD12G5 ABUT < 90 SINGULAR REGION
     SIZE NLD12G5_GATE BY HVPO_W_2_NLD12G5/2 UNDEROVER
}
HVPO.W.2_NLD7G5 { @ Maximum and minimum width of PO to define channel length of NLD7G5 == ^HVPO_W_2_NLD7G5 um
     INT NLD7G5_GATE < HVPO_W_2_NLD7G5 ABUT < 90 SINGULAR REGION
     SIZE NLD7G5_GATE BY HVPO_W_2_NLD7G5/2 UNDEROVER
     INT NLD7G5_FISO_GATE < HVPO_W_2_NLD7G5 ABUT < 90 SINGULAR REGION
     SIZE NLD7G5_FISO_GATE BY HVPO_W_2_NLD7G5/2 UNDEROVER
}
HVPO.W.3_PA7G5 { @ Minimum width of PO to define channel length of PA7G5 >= ^HVPO_W_3_PA7G5 um
     INT PA7G5_GATE < HVPO_W_3_PA7G5 ABUT < 90 SINGULAR REGION
}
HVPO.C.4_NLD60G5_V2 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NLD60G5_V2 == ^HVPO_C_4_NLD60G5_V2 um
     X = EXT NLD60G5_V2_GATE NLD60G5_V2_D < HVOD_S_1_NLD60G5_V2 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NLD60G5_V2
     Z NOT TOUCH NLD60G5_V2_GATE
}
HVPO.C.4_NLD45G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NLD45G5 == ^HVPO_C_4_NLD45G5 um
     X = EXT NLD45G5_GATE NLD45G5_D < HVOD_S_1_NLD45G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NLD45G5
     Z NOT TOUCH NLD45G5_GATE
}
HVPO.C.4_NLD40G12 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NLD40G12 == ^HVPO_C_4_NLD40G12 um
     X = EXT NLD40G12_GATE NLD40G12_D < HVOD_S_1_NLD40G12 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NLD40G12
     Z NOT TOUCH NLD40G12_GATE
}
HVPO.C.4_NLD40G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NLD40G5 == ^HVPO_C_4_NLD40G5 um
     X = EXT NLD40G5_GATE NLD40G5_D < HVOD_S_1_NLD40G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NLD40G5
     Z NOT TOUCH NLD40G5_GATE
}
HVPO.C.4_NLD24G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NLD24G5 == ^HVPO_C_4_NLD24G5 um
     X = EXT NLD24G5_GATE NLD24G5_D < HVOD_S_1_NLD24G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NLD24G5
     Z NOT TOUCH NLD24G5_GATE
}
HVPO.C.4_NI24G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NI24G5 == ^HVPO_C_4_NI24G5 um
     X = EXT NI24G5_GATE NI24G5_D < HVOD_S_1_NI24G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NI24G5
     Z NOT TOUCH NI24G5_GATE
}
HVPO.C.4_NDLD24G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NDLD24G5 == ^HVPO_C_4_NDLD24G5 um
     X = EXT NDLD24G5_GATE NDLD24G5_D < HVOD_S_1_NDLD24G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NDLD24G5
     Z NOT TOUCH NDLD24G5_GATE
}
HVPO.C.4_NLD20G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for NLD20G5 == ^HVPO_C_4_NLD20G5 um
     X = EXT NLD20G5_GATE NLD20G5_D < HVOD_S_1_NLD20G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_NLD20G5
     Z NOT TOUCH NLD20G5_GATE
}

HVPO.C.4_PA60G5_V2 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA60G5_V2 == ^HVPO_C_4_PA60G5_V2 um
     X = EXT PA60G5_V2_GATE PA60G5_V2_D < HVOD_S_1_PA60G5_V2 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA60G5_V2
     Z NOT TOUCH PA60G5_V2_GATE
}
HVPO.C.4_PA45G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA45G5 == ^HVPO_C_4_PA45G5 um
     X = EXT PA45G5_GATE PA45G5_D < HVOD_S_1_PA45G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA45G5
     Z NOT TOUCH PA45G5_GATE
}
HVPO.C.4_PA40G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA40G5 == ^HVPO_C_4_PA40G5 um
     X = EXT PA40G5_GATE PA40G5_D < HVOD_S_1_PA40G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA40G5
     Z NOT TOUCH PA40G5_GATE
}
HVPO.C.4_PA40G12 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA40G12 == ^HVPO_C_4_PA40G12 um
     X = EXT PA40G12_GATE PA40G12_D < HVOD_S_1_PA40G12 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA40G12
     Z NOT TOUCH PA40G12_GATE
}
HVPO.C.4_PA24G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA24G5 == ^HVPO_C_4_PA24G5 um
     X = EXT PA24G5_GATE PA24G5_D < HVOD_S_1_PA24G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA24G5
     Z NOT TOUCH PA24G5_GATE
}
HVPO.C.4_PA12G12 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA12G12 == ^HVPO_C_4_PA12G12 um
     X = EXT PA12G12_GATE PA12G12_D < HVOD_S_1_PA12G12 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA12G12
     Z NOT TOUCH PA12G12_GATE
}
HVPO.C.4_PA12G5 { @ Maximum and minimum clearance of PO to channel OD in channel length direction    
                   @ for PA12G5 == ^HVPO_C_4_PA12G5 um
     X = EXT PA12G5_GATE PA12G5_D < HVOD_S_1_PA12G5 + GRID REGION OPPOSITE
     Y = POLY INSIDE EDGE X
     Z = EXPAND EDGE Y INSIDE BY HVPO_C_4_PA12G5
     Z NOT TOUCH PA12G5_GATE
}
HVPO.O.2  { @ Maximum and minimum overlap of HVNW under PO in channel length direction == ^HVPO_O_2 um
     X = NLD12G12_GATE AND HVNW  
     INT NLD12G12_GATE HVNW < HVPO_O_2 ABUT < 90  SINGULAR REGION	 
     SIZE X BY HVPO_O_2/2 UNDEROVER
}
HVPO.C.2_NLD60G5_V2  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD60G5_V2 um
     X = POLY INTERACT NLD60G5_V2_GATE
     Y = ENC NLD60G5_V2_OD X < HVPO_C_2_NLD60G5_V2 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD45G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD45G5 um
     X = POLY INTERACT NLD45G5_GATE
     Y = ENC NLD45G5_OD X < HVPO_C_2_NLD45G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD40G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD40G5 um
     X = POLY INTERACT NLD40G5_GATE
     Y = ENC NLD40G5_OD X < HVPO_C_2_NLD40G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD24G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD24G5 um
     X = POLY INTERACT NLD24G5_GATE
     Y = ENC NLD24G5_OD X < HVPO_C_2_NLD24G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NDLD24G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NDLD24G5 um
     X = POLY INTERACT NDLD24G5_GATE
     Y = ENC NDLD24G5_OD X < HVPO_C_2_NDLD24G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NI24G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NI24G5 um
     X = POLY INTERACT NI24G5_GATE
     Y = ENC NI24G5_OD X < HVPO_C_2_NI24G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD20G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD20G5 um
     X = POLY INTERACT NLD20G5_GATE
     Y = ENC NLD20G5_OD X < HVPO_C_2_NLD20G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD12G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD12G5 um
     X = POLY INTERACT NLD12G5_GATE
     Y = ENC NLD12G5_CH X < HVPO_C_2_NLD12G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD7G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD7G5 um
     X = POLY INTERACT NLD7G5_GATE
     Y = ENC NLD7G5_CH X < HVPO_C_2_NLD7G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD7G5_FISO  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD7G5_FISO um
     X = POLY INTERACT NLD7G5_FISO_GATE
     Y = ENC NLD7G5_FISO_CH X < HVPO_C_2_NLD7G5_FISO ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD12G12  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD12G12 um
     X = POLY INTERACT NLD12G12_GATE
     Y = ENC NLD12G12_CH X < HVPO_C_2_NLD12G12 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_NLD40G12  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_NLD40G12 um
     X = POLY INTERACT NLD40G12_GATE
     Y = ENC NLD40G12_OD X < HVPO_C_2_NLD40G12 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA60G5_V2  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA60G5_V2 um
     X = POLY INTERACT PA60G5_V2_GATE
     Y = ENC PA60G5_V2_OD X < HVPO_C_2_PA60G5_V2 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA45G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA45G5 um
     X = POLY INTERACT PA45G5_GATE
     Y = ENC PA45G5_OD X < HVPO_C_2_PA45G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA40G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA40G5 um
     X = POLY INTERACT PA40G5_GATE
     Y = ENC PA40G5_OD X < HVPO_C_2_PA40G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA24G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA24G5 um
     X = POLY INTERACT PA24G5_GATE
     Y = ENC PA24G5_OD X < HVPO_C_2_PA24G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA12G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA12G5 um
     X = POLY INTERACT PA12G5_GATE
     Y = ENC PA12G5_OD X < HVPO_C_2_PA12G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA7G5  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA7G5 um
     X = POLY INTERACT PA7G5_GATE
     Y = ENC PA7G5_CH X < HVPO_C_2_PA7G5 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA12G12  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA12G12 um
     X = POLY INTERACT PA12G12_GATE
     Y = ENC PA12G12_OD X < HVPO_C_2_PA12G12 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}
HVPO.C.2_PA40G12  { @ Minimum clearance of PO to channel OD in channel width direction >= ^HVPO_C_2_PA40G12 um
     X = POLY INTERACT PA40G12_GATE
     Y = ENC PA40G12_OD X < HVPO_C_2_PA40G12 ABUT < 90  SINGULAR REGION	 
     Y NOT INSIDE HVPW
}

HVPO.E.4 { @ Min and Max extension of (PO INSIDE SH_N hole) beyond SH_N for the 6.2v Zener diode == ^HVPO_E_4 um
   A = (( POLY NOT HVSHN ) INTERACT ZENER_62_DIODE ) AND (HOLES ( HVSHN INTERACT ZENER_62_DIODE ) INNER )
   INT A < HVPO_E_4 ABUT < 90 SINGULAR REGION
   SIZE A BY HVPO_E_4/2 UNDEROVER
}
HVPO.E.5 { @ Min and Max extension of (PO OUTSIDE SH_N hole) beyond SH_N for the 6.2v Zener diode == ^HVPO_E_5 um
   A = (( POLY NOT HVSHN ) INTERACT ZENER_62_DIODE ) NOT (HOLES ( HVSHN INTERACT ZENER_62_DIODE ) INNER )
   INT A < HVPO_E_5 ABUT < 90 SINGULAR REGION
   SIZE A BY HVPO_E_5/2 UNDEROVER
}
HVPO.E.3 { @ Min and Max extension of PO beyond { SH_N AND PO} for the 24v schottky diode == ^HVPO_E_3 um
    A = POLY TOUCH ((HOLES POLY INNER) INTERACT SBD_24V)
    B = (HOLES (HVSHP AND A )) OR (HVSHP AND A )
    C = SIZE B BY HVPO_E_3
    C XOR (A OR (HOLES A))
}
HVPO.R.1 { @ In HV area, PO region is not allowed used for high voltage interconnection. 
           @ (Poly interact more than one {PO and OD} region is not allowed)
    HVPO INTERACT GATE > 1  
}
HVPO.S.1 { @ Minimum PO spacing inside channel OD (for G5 MOS in multi-finger layout).>= ^HVPO_S_1 um
     POLY_G5 = POLY INTERACT  HVGATE_G5
     A = POLY_G5 TOUCH INSIDE EDGE ( POLY_G5 COIN INSIDE EDGE HVGATE_G5 ) 
     B = EXT A < HVPO_S_1 ABUT < 90 REGION
     B NOT INTERACT ((NLD7G5_D OR PA7G5_D ) OR NLD7G5_FISO_D )
}
HVPO.R.2 { @ the finger number of PA7G5 must be even numbers(minimun number = 2 )
    A = (PA7G5_OD_1 NOT POLY ) TOUCH POLY == 1
    B = A INTERACT PA7G5_S
    C = A INTERACT PA7G5_D
    (PA7G5_OD_1 INTERACT B ) INTERACT C
}


//  HV HRI poly resistor check
//=================================================
PORES_HRI = HREP INTERACT RLPPDMY
PORES_HRI_HV = PORES_HRI INTERACT HVOX
PO_HVHRI = POLY INTERACT PORES_HRI_HV
CO_HRI = CO INTERACT (POLY INTERACT PORES_HRI)

HVHRI.C.1 { @ HV HRI poly clearence to OD >= 0.6
    EXT PO_HVHRI OD <0.6 ABUT <90 SINGULAR REGION
}

HVHRI.R.2 { @ HV HRI should sorrounded by the isolation ring and other device can not share the same guardring
    A = PO_HVHRI NOT INSIDE HVNW_ISO_HOLE
    A NOT INSIDE HVP_ISO_HOLE 
    B = ( HVNW_ISO_HOLE INTERACT PO_HVHRI ) OR ( HVP_ISO_HOLE INTERACT PO_HVHRI )
    C = (( ALL_HVMOS_OD OR ALL_DIODE ) OR ALL_BJT ) OR LV_DEVICE
    C INTERACT B
}

HVHRI.R.2A { @ HV HRI in HVPW  should sorrounded by the P+OD isolation ring
    A = PO_HVHRI INTERACT HVPW
    A NOT INSIDE HVP_ISO_HOLE
}

HVHRI.R.2B { @ HV HRI in HVNW  should sorrounded by the N+OD isolation ring
    A = PO_HVHRI INTERACT HVNW
    A NOT INSIDE HVNW_ISO_HOLE
}

HVHRI.R.3 { @ HV HRI CUT HVNW is not allowed
    PO_HVHRI CUT HVNW
}

HVHRI.R.4 { @ LPP & RPO is must for HV HRI 
    PO_HVHRI NOT INTERACT LPP
}
//RPO is must for HV HRI not need DRC check

RES.HRI.1 { @ RLPPDMY and PP must be butted (overlap is not allow).
  (RLPPDMY AND PP) AND POLY
  RLPPDMY TOUCH (PP INTERACT PORES_HRI) < 2
  A = PP INSIDE EDGE (POLY INTERACT PORES_HRI)
  A NOT COIN OUTSIDE EDGE RLPPDMY
}

#IFDEF RECOMMEND
RES.HRI.2 { @ Min extension of RLPPDMY beyond HRI poly resistor >= ^RES_HRI_2
  A = POLY INTERACT PORES_HRI
  ENC A RLPPDMY < RES_HRI_2 ABUT < 90 SINGULAR REGION
}

RES.HRI.3a { @ Min and max overlap of PP for HRI poly resistor end implant and RPO == ^RES_HRI_3a
  X = POLY_ISO INTERACT RLPPDMY
  Y = RPO INSIDE EDGE X
  INT PP Y < RES_HRI_3a ABUT < 90
  Y OUTSIDE EDGE PP	// not overlap by P+ not allowed.
  Z = EXPAND EDGE Y INSIDE BY RES_HRI_3a
  PPPO = PP AND POLY
  A = PPPO AND PORES
  B = A INTERACT RLPPDMY
  B NOT Z
}

RES.HRI.3b { @ Min and max clearence from RPO to CO for HRI poly resistor == ^RES_HRI_3b
	     @ DRC only check this rule when poly width >= 0.58um
  A = PORES_HRI WITH WIDTH >= 0.58
  B = POLY INTERACT A
  CO_CHECK = CO INTERACT B
  RPO_E  = RPO INSIDE EDGE B
  RPO_EX = EXPAND EDGE RPO_E OUTSIDE BY RES_HRI_3b
  RPO_EX AND CO_CHECK
  RPO_EX NOT INTERACT CO_CHECK
  CO_CHECK NOT INTERACT RPO_EX
}

RES.HRI.3c { @ Min and max space between two CO region on HRI poly resistor == ^RES_HRI_3c
  EXT CO_HRI < RES_HRI_3c ABUT < 90  SINGULAR REGION
  A = (POLY INTERACT PORES_HRI) NOT RPO
  B = SIZE CO_HRI BY RES_HRI_3c/2 OVERUNDER
  A INTERACT B != 1
}
#ENDIF

RWDMY.R.2 { @ RWDMY must be inside butted with resistor wells in resistor width direction and outside butted with (PPOD or NPOD) in resistor length direction.
    A = RWDMY NOT COIN EDGE (( NWELLi OR HVNWi ) OR H60NWi )
    A NOT TOUCH OUTSIDE EDGE (PPOD OR NPOD)
}
DIO3TDMY.R.1 { @ DIO3TDMY(CAD layer 56;1) must cover all 3-terminal diode devices
    ALL_3T_DIODE NOT DIO3TDMY
}
#IFDEF RECOMMEND
////////////////////////////////
// WELL Resistor CHECK
////////////////////////////////
RPWODISO_A_pre =  INT RPWODISO < 5.0  REGION OPPOSITE
RPWODISO_A = RPWODISO INTERACT RPWODISO_A_pre
RPWODISO_B = RPWODISO NOT RPWODISO_A
RPODRPOISO_A_pre =  INT RPODRPOISO < 2.0  REGION OPPOSITE
RPODRPOISO_A = RPODRPOISO INTERACT RPODRPOISO_A_pre
RPODRPOISO_B = RPODRPOISO NOT RPODRPOISO_A
     RPWODISO_A_L = EXPAND EDGE ( RPWODISO_A NOT INSIDE EDGE DPW ) BY 0.001 CORNER FILL
     RPWODISO_A_W = EXPAND EDGE ( RPWODISO_A INSIDE EDGE DPW ) BY 0.001
     CONNECT RPWODISO_A_L RPWODISO_A_W
     RPWODISO_B_L = EXPAND EDGE ( RPWODISO_B NOT INSIDE EDGE DPW ) BY 0.001 CORNER FILL
     RPWODISO_B_W = EXPAND EDGE ( RPWODISO_B INSIDE EDGE DPW ) BY 0.001
     CONNECT RPWODISO_B_L RPWODISO_B_W
     RPODRPOISO_A_L = EXPAND EDGE ( RPODRPOISO_A NOT INSIDE EDGE OD ) BY 0.001 CORNER FILL
     RPODRPOISO_A_W = EXPAND EDGE ( RPODRPOISO_A INSIDE EDGE OD ) BY 0.001
     CONNECT RPODRPOISO_A_L RPODRPOISO_A_W
     RPODRPOISO_B_L = EXPAND EDGE ( RPODRPOISO_B NOT INSIDE EDGE OD ) BY 0.001 CORNER FILL
     RPODRPOISO_B_W = EXPAND EDGE ( RPODRPOISO_B INSIDE EDGE OD ) BY 0.001
     CONNECT RPODRPOISO_B_L RPODRPOISO_B_W
     RHVPW_L = EXPAND EDGE ( RHVPW NOT INSIDE EDGE HVPW ) BY 0.001 CORNER FILL
     RHVPW_W = EXPAND EDGE ( RHVPW INSIDE EDGE HVPW ) BY 0.001
     CONNECT RHVPW_L RHVPW_W
     RHVNW_L = EXPAND EDGE ( RHVNW NOT INSIDE EDGE HVNW ) BY 0.001 CORNER FILL
     RHVNW_W = EXPAND EDGE ( RHVNW INSIDE EDGE HVNW ) BY 0.001
     CONNECT RHVNW_L RHVNW_W
     RH60NW_L = EXPAND EDGE ( RH60NW NOT INSIDE EDGE H60NW ) BY 0.001 CORNER FILL
     RH60NW_W = EXPAND EDGE ( RH60NW INSIDE EDGE H60NW ) BY 0.001
     CONNECT RH60NW_L RH60NW_W
WR.R.1R_RPW { @ For HV WELL RESISTOR, recommended width ,length and Nsq
    INT RPWODISO < WR_R_1R_RPW_W ABUT < 90 SINGULAR REGION
     NET AREA RATIO RPWODISO_A_L RPWODISO_A_W < WR_R_1R_RPW_Nsq1
     NET AREA RATIO RPWODISO_B_L RPWODISO_B_W < WR_R_1R_RPW_Nsq2
}
WR.R.2R_RPOD { @ For HV WELL RESISTOR, recommended width ,length and Nsq
    INT RPODRPOISO < WR_R_2R_RPOD_W ABUT < 90 SINGULAR REGION
     NET AREA RATIO RPODRPOISO_A_L RPODRPOISO_A_W < WR_R_2R_RPOD_Nsq1
     NET AREA RATIO RPODRPOISO_B_L RPODRPOISO_B_W < WR_R_2R_RPOD_Nsq2
}
WR.R.3R_RHVPW { @ For HV WELL RESISTOR, recommended width ,length and Nsq
    INT RHVPW < WR_R_3R_RHVPW_W ABUT < 90 SINGULAR REGION
     NET AREA RATIO RHVPW_L RHVPW_W < WR_R_3R_RHVPW_Nsq
     NET AREA RHVPW_L < WR_R_3R_RHVPW_L*0.001*2*2
}
WR.R.3R_RHVNW { @ For HV WELL RESISTOR, recommended width ,length and Nsq
    INT RHVNW < WR_R_3R_RHVNW_W ABUT < 90 SINGULAR REGION
     NET AREA RATIO RHVNW_L RHVNW_W < WR_R_3R_RHVNW_Nsq
     NET AREA RHVNW_L < WR_R_3R_RHVNW_L*0.001*2*2
}
WR.R.4R_RH60NW { @ For HV WELL RESISTOR, recommended width ,length and Nsq
    INT RH60NW < WR_R_4R_RH60NW_W ABUT < 90 SINGULAR REGION
     NET AREA RATIO RH60NW_L RH60NW_W < WR_R_4R_RH60NW_Nsq
     NET AREA RH60NW_L < WR_R_4R_RH60NW_L*0.001*2*2
}
    
#ENDIF


////////////////////////////////
// Poly/OD Resistor CHECK
////////////////////////////////
    PORESC = ( PORES INTERACT PORES_DMY ) NOT INTERACT RLPPDMY
    ODRESC = ( ODRES INTERACT REST ) NOT INTERACT RLPPDMY
    PORESC_L = EXPAND EDGE (PORESC NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
    PORESC_W = EXPAND EDGE (PORESC INSIDE EDGE POLY) BY 0.001
    ODRESC_L = EXPAND EDGE (ODRESC NOT INSIDE EDGE OD) BY 0.001 CORNER FILL
    ODRESC_W = EXPAND EDGE (ODRESC INSIDE EDGE OD) BY 0.001
    CONNECT PORESC_L PORESC_W
    CONNECT ODRESC_L ODRESC_W
#IFDEF RECOMMEND
RES.2 {@ For poly resistor, it is strongly recommended that the poly resistor width >= ^RES_2_W um,
        @ length >= 5.0um, and the resistor square number Nsq >= ^RES_2_Nsq,
        @ DRC will check the width and Nsq 1um and 5 for poly resistor & 2um and 5 for OD resistor,
  INT PORESC < RES_2_W ABUT < 90 SINGULAR REGION
  NET AREA RATIO PORESC_L PORESC_W < RES_2_Nsq 
}
RES.3 { @ To use rectangle shape resistor for SPICE simulation accuracy.
	NOT RECTANGLE PORES
	NOT RECTANGLE ODRES
}
RES.4 {@ For OD resistor, it is strongly recommended that the resistor width>= ^RES_4_W um and the resistor square number Nsq >= ^RES_4_Nsq.
        @ DRC will check the width and Nsq 1um and 5 for poly resistor & 2um and 5 for OD resistor, 
  INT ODRESC < RES_4_W ABUT < 90 SINGULAR REGION
  NET AREA RATIO ODRESC_L ODRESC_W < RES_4_Nsq
}
RES.5 {@ Poly resistor cuts NW is not allowed.
	PORES CUT NWELL
}
#ENDIF

ODPO_RES_5V = (POLY_ISO OR FOD) INTERACT RPDUMMY_5V
RES.PU5.1 { @ min clearance from RPDUMMY_5V to CO >= ^RES_PU5_1
  EXT RPDUMMY_5V CO < RES_PU5_1
}
RES.PU5.2 { @ min and max extension of RPDUMMY_5V beyond OD/PO == ^RES_PU5_2
  ENC ODPO_RES_5V RPDUMMY_5V < RES_PU5_2 ABUT < 90 SINGULAR REGION
  A = RPDUMMY_5V NOT ODPO_RES_5V 
  ODPO_RES_5V NOT INTERACT A
  SIZE A BY RES_PU5_2/2 UNDEROVER
}

//RES.PU5.3 is uncheckable due to no switch to define Pure5V flow in 025GENII

RES.PU5.4 { @ OD2 is must for OD/Poly resistors of pure 5V (Except rppolyhri, rppolyhri_dis,rppolyhri1k, rppolyhri1k_dis,rppolyhri3k,rppolyhri3k_dis)
  ODPO_RES_5V NOT INTERACT OD2
}

// NP CHECKS
//============

NP.W.1{ @ NP width >= 0.44um
  INT NP < 0.44 SINGULAR ABUT < 90 REGION 
}
NP.S.1{ @ NP space >= 0.44um
  EXT NP < 0.44 ABUT < 90 SINGULAR REGION
}
NP.C.1 { @ NP space to p active in nwell >= 0.26um
   X = EXT NP PACT < 0.26 ABUT<90 SINGULAR REGION
   Y = NP AND PACT
   Z = X OR Y
   Z NOT INTERACT BUTT_NTAP
}
NP.C.2 { @ NP space to p active in pwell >=0.14um
   EXT NP NONB_PTAP < 0.14 ABUT<90 SINGULAR INSIDE ALSO REGION
   X = EXT [NP] BUTT_PTAP < 0.14 ABUT< 90 OPPOSITE
   Y = NP INSIDE EDGE BUTT_PTAP
   X NOT COIN OUTSIDE EDGE PP
   Y NOT COIN OUTSIDE EDGE PP
}
NP.C.3 { @ NP space to pgate >= 0.32um
  A = EXGATE_PP AND NP
  A NOT INTERACT (MTP_2T2C AND MCEL)
}
NP.C.4 { @ NP olap ngate >= 0.32um
  ENC GATE_W NP_BEDGE < 0.32 ABUT <90 REGION
}
// NP.C.5 is checked by OD.S.2
// NP.C.6 is checked by PO.I.1
NP.O.1 { @ NP extends into n active >= 0.32um
  INT NP OD < 0.32 ABUT>0<90 SINGULAR REGION  
}
NP_NLD12G12_H = HOLES ( NP INTERACT NLD12G12_GATE ) INNER
NP_NLD12G5_H = (HOLES ( NP INTERACT NLD12G5_GATE ) INNER ) INTERACT RPO
NP.E.1{ @ NP olap n active pwell >= 0.26um
  NP_CHECK = ( ( NP OR NP_NLD12G12_H ) OR NP_NLD12G5_H ) NOT INTERACT ZENER_DIODE
  X = NACT NOT ODWR  
  Y = ENC [X] NP_CHECK < 0.004 SINGULAR ABUT == 0
  Z = EXPAND EDGE Y OUTSIDE BY 0.004
  Z NOT INTERACT PPOD
  A = ENC X NP < 0.26 SINGULAR ABUT>0<90 REGION
  B = NP TOUCH INSIDE EDGE ( NP INSIDE EDGE NLD12G5_D )
  C = ENC X B < 0.26 ABUT>0<90 REGION
  A NOT C
}
NP.E.2{ @ NP olap NTAP >= 0.04um
   ENC NONB_NTAP NP < 0.04 SINGULAR ABUT<90 REGION
   X = ENC BUTT_NTAP [NP] < 0.04 ABUT<90
   X NOT COIN OUTSIDE EDGE PP
}
NP.E.4 { @ Min. extension of NP over non-silicided POLY resistor >= 0.26um
  ENC PORES NP < 0.26 SINGULAR ABUT <90 REGION
  PORES NOT IMP
}



DRC UNSELECT CHECK NP.E.4
//#disable NP.E.4
NP.E.4.MM { @ Min. extension of NP over POLY resistor >= 0.26um
  X = POLY_ISO AND RPO
  Y = POLY_ISO AND RLDMY
  Z = ( X OR Y ) NOT INTERACT ( NLD12G12_GATE  OR NLD12G5_GATE )
  ENC Z NP < 0.26 SINGULAR ABUT <90 REGION
  (Z NOT LPP) NOT IMP
}
// NP.C.5 is checked by OD.S.2
// NP.C.6 is checked by PO.I.1
// NP.R.1 is checked by OD.S.2
// NP.R.2 is checked by _PO.I.1.MM







HVNP.E.1 { @ Minimum ext of NP to PO inside channel OD of NLD40G5/NLD24G5/NDLD24G5/NLD60G5_V2/NLD45G5/NI24G5/NLD20G5/NLD7G5/NLD7G5_FISO/PA7G5 >= ^HVNP_E_1 um
     INT  BUTT_NLDXXG5_S < HVNP_E_1 ABUT <90 SINGULAR REGION
}
HVNP.C.4 { @ Minimum extension of PP over PO inside channel OD of PA40G5/PA24G5/PA60G5_V2/PA45G5 >= ^HVNP_C_4 um
     INT  BUTT_PAXXG5_S < HVNP_C_4 ABUT <90 SINGULAR REGION
}
HVNP.C.1 { @ Maximum and minimum clearance from an NP edge to a PO gate edge of NLD12G12/NLD12G5,  
           @ in channel length direction. == ^HVNP_C_1 um
     X = (( POLY INTERACT ( NLD12G12_GATE OR NLD12G5_GATE )) NOT NP ) INTERACT ( NLD12G12_GATE OR NLD12G5_GATE )
     INT X < HVNP_C_1 ABUT < 90 SINGULAR REGION
     SIZE X BY HVNP_C_1/2 UNDEROVER
     ( POLY INTERACT NLD12G12_GATE ) INSIDE NP 
}
HVNP.C.2_NLD12G12 { @ Maximum and minimum clearance from NP to drain-OD of NLD12G12/NLD12G5, in channel width 
           @ direction== ^HVNP_C_2_NLD12G12 um
     X = NP INTERACT NLD12G12_GATE
     Y = ( HOLES X ) NOT X 
     Z = Y NOT OD
     INT Z < HVNP_C_2_NLD12G12 ABUT < 90 SINGULAR REGION
     SIZE Z BY HVNP_C_2_NLD12G12/2 UNDEROVER
     Y INSIDE OD
}
HVNP.C.2_NLD12G5 { @ Maximum and minimum clearance from NP to drain-OD of NLD12G12/NLD12G5, in channel width 
           @ direction== ^HVNP_C_2_NLD12G5 um
     X = NP INTERACT NLD12G5_GATE
     Y = (( HOLES X ) NOT X ) INTERACT RPO
     Z = Y NOT OD
     INT Z < HVNP_C_2_NLD12G5 ABUT < 90 SINGULAR REGION
     SIZE Z BY HVNP_C_2_NLD12G5/2 UNDEROVER
     Y INSIDE OD
}
HVNP.C.3_NLD12G12  { @ Maximum and minimum clearance on drain OD from NP to poly gate of NLD12G12/NLD12G5, 
            @ in channel length direction== ^HVNP_C_3_NLD12G12 um for NLD12G12 
     X = OD INTERACT  NLD12G12_GATE 
     Y = X NOT POLY 
     Z = ( Y NOT NP ) NOT PP
     INT Z < HVNP_C_3_NLD12G12 ABUT < 90 SINGULAR REGION
     SIZE Z BY HVNP_C_3_NLD12G12/2 UNDEROVER
     ( NLD12G12_D NOT Z ) TOUCH POLY
}
HVNP.C.3_NLD12G5  { @ Maximum and minimum clearance on drain OD from NP to poly gate of NLD12G12/NLD12G5, 
            @ in channel length direction== ^HVNP_C_3_NLD12G5 um for NLD12G5
     X = OD INTERACT  NLD12G5_GATE 
     Y = X NOT POLY 
     Z = ( Y NOT NP ) NOT PP
     INT Z < HVNP_C_3_NLD12G5 ABUT < 90 SINGULAR REGION
     SIZE Z BY HVNP_C_3_NLD12G5/2 UNDEROVER
     ( NLD12G5_D NOT Z ) TOUCH POLY
}
HVNP.O.1 { @ Minimum and maximum overalp of NP over PO of 6.2v Zener diode == ^HVNP_O_1 um    
     A = ( NP AND POLY ) AND ZENER_62_DIODE
     INT A < HVNP_O_1 ABUT <90 SINGULAR REGION	 
     SIZE A BY HVNP_O_1/2 UNDEROVER	 
}
HVNP.E.2 { @ Minimum and maximum extension of SH_N beyond the outer N+ OD ring for 12V Schottky diode
     A = NPOD TOUCH (( HOLES (( NPOD NOT DPW ) INTERACT DIODMY ) INNER ) INTERACT ( SBD_12V OR SBD_24V ))
     B = HVSHN INTERACT A 
     A XOR B
}


// PP CHECKS
//============

PP.W.1{ @ Minimum width of an PP region >= ^PP_W_1 um
  INT PP < PP_W_1 SINGULAR ABUT < 90 REGION 
}
PP.S.1{ @ Minimum space between two PP regions Merge if the space is less than ^PP_S_1 um
  EXT PP < PP_S_1 ABUT < 90 SINGULAR REGION
}
PP.C.1 { @ Minimum clearance from an PP region to an N+ active OD region>= ^PP_C_1 um 
   X = EXT PP NACT < PP_C_1 ABUT <90 SINGULAR REGION
   Y = PP AND NACT	
   Z = ( X NOT INTERACT ZENER_DIODE ) OR Y
   Z NOT INTERACT BUTT_PTAP
}
PP.C.2 { @ PP space to non-butting ntap edge >= ^PP_C_2 um
    EXT PP NONB_NTAP < PP_C_2 ABUT<90 SINGULAR INSIDE ALSO REGION
    X = EXT [PP] BUTT_NTAP < PP_C_2 ABUT<90 OPPOSITE
    Y = PP INSIDE EDGE BUTT_NTAP
    X NOT COIN OUTSIDE EDGE NP
    Y NOT COIN OUTSIDE EDGE NP
}
PP.C.3 { @ Minimum clearance from an PP edge to a N-Channel PO gate.>= ^PP_C_3 um
  EXGATE_NP AND PP
}
PP.C.4 { @ Minimum clearance from an PP edge to a P-Channel PO gate >= ^PP_C_4 um
  ENC PGATE_W PP_BEDGE < PP_C_4 ABUT < 90 REGION 
}
// PP.C.5 is checked by OD.S.2
// PP.C.6 is checked by PO.I.1
PP.O.1 { @ Minimum overlap from an PP edge to an ODregion>= ^PP_O_1 um
    A = OD NOT (SBD_12V OR SBD_24V)
  INT A PP < PP_O_1 ABUT>0<90 SINGULAR REGION 
}
PP.E.1{ @ Minimum extension of an PP region beyond a P+ active OD region.>= ^PP_E_1 um
   X = PACT NOT INTERACT OD_PW_RES
   A = ENC X PP < PP_E_1 SINGULAR ABUT>0<90 REGION
   A NOT INTERACT SCHOTTKY_DIODE    
   Y = ENC [X] PP < 0.004 SINGULAR ABUT == 0
   Z = EXPAND EDGE Y OUTSIDE BY 0.004
   ( Z NOT INTERACT SCHOTTKY_DIODE ) NOT INTERACT NPOD
   OD COIN INSIDE EDGE IMP // IMP cannot coincident OD except butting diffusion edge. PP.E.1,2/NP.E.1,2
}
PP.E.2{ @ PP olap PTAP >= ^PP_E_2
    Y = HOLES ( PP INTERACT ZENER_DIODE) INNER
   A =  ((( PP OR Y) NOT INTERACT SCHOTTKY_DIODE) NOT INTERACT OD_PW_RES ) NOT SR	
   ENC NONB_PTAP A < PP_E_2 SINGULAR ABUT<90 REGION
   X = ENC BUTT_PTAP [PP] < PP_E_2 ABUT<90
   X NOT COIN OUTSIDE EDGE NP
}
PP.E.4 { @ Minimum extension of PP region beyond a PO as a resistor. 
         @ RPO PO without NP or PP implant is not allowed.>= ^PP_E_4 um
  A = ENC PORES PP < PP_E_4 SINGULAR ABUT <90 REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
}
PP.R.1 { @ OD must be fully covered by {NP OR PP} except: a. OD without interacting {CO OR PO}
         @ b. NW resistor
       A = CO OR POLY 
       B = OD NOT INTERACT A  
       C = (B OR ODWR) OR OD_PW_RES
       X = NP INTERACT ( NLD12G12_GATE OR NLD12G5_GATE )
       Y = ( HOLES X INNER ) OR X
       (((( OD NOT ZENER_OD ) NOT SCHOTTKY_DIODE ) NOT C ) NOT IMP ) NOT Y 
}       


DRC UNSELECT CHECK PP.E.4
PP.E.4.MM { @ Min. extension of PP over POLY resistor < ^PP_E_4 um
  X = POLY_ISO AND RPO
  Y = POLY_ISO AND RLDMY
  Z = X OR Y
  A = ENC Z PP < PP_E_4 SINGULAR ABUT <90 REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
}
//PP.C.5 is checked by OD.S.2
//PP.C.6 is checked by PO.I.1
//PP.R.2 is checked by PO.I.1





//HVPP.E.1 and HVPP.C.1 is checked by HVNP.E.1 and HVNP.C.4
PP_SCHOTTKY_ALL  = PP_SCHOTTKY OR PP_SCHOTTKY_HOLE
SCHOTTKY_DIODE_E = EXPAND EDGE SCHOTTKY_DIODE OUTSIDE BY GRID
HVPP.C.2 { @ Min and Max clearance of PP to OD of 40v schottky diode in the multi-finger direction == ^HVPP_C_2 um
     X = LENGTH (PP_SCHOTTKY_ALL INTERACT SBD_40V ) > 5.87 // 4.99+0.44*2=5.87
     Y = (PP_SCHOTTKY_ALL INTERACT SBD_40V ) TOUCH INSIDE EDGE X 
     Z = EXPAND EDGE Y OUTSIDE BY  HVPP_C_2
     Z NOT TOUCH (SCHOTTKY_DIODE_E INTERACT SBD_40V )
}
HVPP.C.3 { @ Min and Max clearance of PP to OD of 40v schottky diode opposite to multi-finger direction == ^HVPP_C_3 um
     X = LENGTH PP_SCHOTTKY_ALL > 1.39 < 1.41 //0.51+0.44*2=1.39, 0.53+0.44*2=1.41
     Y = PP_SCHOTTKY_ALL TOUCH INSIDE EDGE X 
     Z = EXPAND EDGE Y OUTSIDE BY HVPP_C_3
     Z NOT TOUCH SCHOTTKY_DIODE_E
}
HVPP.C.4 { @ Min and Max clearance of PP to HVNW of 40v schottky diode == ^HVPP_C_4 um
    A = ( PP AND SBD_40V ) OR ( HOLES ( PP AND SBD_40V ))
    B = SIZE ( HVNW AND SBD_40V ) BY HVPP_C_4
    A XOR B
}
HVPP.C.5 { @ Min clearance from  HVNW to P+ OD for 5.5v zener diode >= ^HVPP_C_5 um
    A = ( PPOD AND DIODMY ) TOUCH (( HOLES PPOD INNER ) INTERACT ZENER_55_DIODE )
    EXT A HVNW < HVPP_C_5 ABUT <90 SINGULAR REGION
}
HVPP.C.6 { @ Min clearance from  SH_N to P+ OD for 5.5v zener diode >= ^HVPP_C_6 um
    A = ( PPOD AND DIODMY ) TOUCH (( HOLES PPOD INNER ) INTERACT ZENER_55_DIODE )
    EXT A HVSHN < HVPP_C_6 ABUT <90 SINGULAR REGION
}
HVPP.O.2 { @ Min and Max overlap of PP and HVNW of 40v schottky diode == ^HVPP_O_2 um
    A = ( PP AND HVNW ) AND SBD_40V
    INT A < HVPP_O_2 SINGULAR ABUT < 90 REGION
    SIZE A BY HVPP_O_2/2 UNDEROVER
}
HVPP.E.2 { @ Min and Max extension of (SH_P AND OD) beyond (PP AND OD ) for 12V and 24V Schottky diode == 0 um
    A = PP AND ( SBD_12V OR SBD_24V )
    B = HVSHP AND ( SBD_12V OR SBD_24V )
    A XOR B
}
HVPP.E.3 { @ Min and Max extension of SH_P  beyond the outer P+ OD ring  for 24V Schottky diode == 0 um
    A = PPOD TOUCH (( HOLES ( PPOD NOT INTERACT SBD_24V ) INNER ) INTERACT SBD_24V )
    B = HVSHP INTERACT A 
    A XOR B
}
HVPP.O.1 { @ Min and Max overlap of PP and POLY of 6.2v zener diode == ^HVPP_O_1 um 
    A = ( PP AND POLY ) AND ZENER_62_DIODE
    INT A < HVPP_O_1 SINGULAR ABUT < 90 REGION
    SIZE A BY HVPP_O_1/2 UNDEROVER
}
HVPP.O.3 { @ Min and Max overlap of PP and RPO of 5.5v zener diode == ^HVPP_O_3 um 
    A = ( PP AND RPO ) AND ZENER_55_DIODE
    INT A < HVPP_O_3 SINGULAR ABUT < 90 REGION
    SIZE A BY HVPP_O_3/2 UNDEROVER
}
HVPP.O.4_12V { @ Min and Max overlap of PP outter ring cutting OD and OD of 12V schottky diode == ^HVPP_O_4_12V um 
    A = SIZE ( SBD_12V NOT PP ) BY HVOD_W_4/2 OVERUNDER 
    B = SBD_12V NOT A
    INT B < HVPP_O_4_12V SINGULAR ABUT < 90 REGION
    SIZE B BY HVPP_O_4_12V/2 UNDEROVER
}
HVPP.O.4_24V { @ Min and Max overlap of PP outter ring cutting OD and OD of 24V schottky diode == ^HVPP_O_4_24V um 
    A = SIZE ( SBD_24V NOT PP ) BY HVOD_W_4/2 OVERUNDER 
    B = SBD_24V NOT A
    INT B < HVPP_O_4_24V SINGULAR ABUT < 90 REGION
    SIZE B BY HVPP_O_4_24V/2 UNDEROVER
}
HVPP.S.1_12V { @ Min and Max space between two PP regions in multi-finger direction for schottky diode == ^HVPP_S_1_12V um
    A = HOLES (PP AND SBD_12V ) 
    INT A < HVPP_S_1_12V SINGULAR ABUT < 90 REGION
    SIZE A BY HVPP_S_1_12V/2 UNDEROVER
}
HVPP.S.1_24V { @ Min and Max space between two PP regions in multi-finger direction for schottky diode == ^HVPP_S_1_24V um
    A = HOLES (PP AND SBD_24V ) 
    INT A < HVPP_S_1_24V SINGULAR ABUT < 90 REGION
    SIZE A BY HVPP_S_1_24V/2 UNDEROVER
}
HVPP.S.1_40V { @ Min and Max space between two PP regions in multi-finger direction for schottky diode == ^HVPP_S_1_40V um
    A = HOLES (PP AND SBD_40V ) 
    INT A < HVPP_S_1_40V SINGULAR ABUT < 90 REGION
    SIZE A BY HVPP_S_1_40V/2 UNDEROVER
}
HVPP.S.2 { @ Min space between two PP regions opposite to multi-finger direction for schottky diode >= ^HVPP_S_2 um
     NOT ENCLOSE RECTANGLE PP_SCHOTTKY_HOLE HVPP_S_1_40V HVPP_S_2 ORTHOGONAL ONLY  
}


//NZENER rule check
NZENER.W.1 { @ Minimum and maximum width of NZENER (outter ring ) not interact RPO for 5.5v Zener diode = ^NZENER_W_1 um
    A = (NZENER NOT INTERACT RPO ) INTERACT ZENER_55_DIODE
    B = SIZE A BY NZENER_W_1_1/2 UNDEROVER
    INT B < NZENER_W_1 ABUT <90 SINGULAR REGION
    SIZE B BY NZENER_W_1/2 UNDEROVER
}
NZENER.W.1.1 { @ Minimum and maximum width of NZENER (inside outter ring ) not interact RPO for 5.5v Zener diode = ^NZENER_W_1_1 um
    A = ( ZENER_55_DIODE INTERACT RPO > 1 ) NOT ( NZENER NOT INTERACT RPO )
    EXT A < NZENER_W_1_1  ABUT < 90 SINGULAR REGION
    X = SIZE A BY NZENER_W_1_1/2 OVERUNDER
    Y = EXT A == NZENER_W_1_1 REGION OPPOSITE
    X NOT INTERACT Y
}
NZENER.W.2 { @ Minimum and maximum width of NZENER interact RPO for 5.5v Zener diode == ^NZENER_W_2 um
     A = ( NZENER INTERACT RPO ) INTERACT ZENER_55_DIODE
     INT  A < NZENER_W_2 ABUT < 90  SINGULAR REGION
     SIZE A BY NZENER_W_2/2 UNDEROVER
}
//NZENER.W.3 is checked by NZENER.W.2
NZENER.C.1 { @ Minimum and maximum clearance of NZENER to SH_N for 5.5v Zener diode = ^NZENER_C_1 um
    A = ( NZENER INTERACT ZENER_55_DIODE ) OR ( HOLES ( NZENER INTERACT ZENER_55_DIODE ) INNER )
    B = SIZE A BY NZENER_C_1 
    C = HVSHN INTERACT ZENER_55_DIODE
    B XOR C
}
NZENER.E.1 { @ Minimum and maximum extension of OD beyond  NZENER for 5.5v Zener diode = ^NZENER_E_1 um
    A = SIZE ZENER_55_DIODE BY NZENER_E_1
    B = (NZENER OR ( HOLES NZENER INNER ) ) INTERACT ZENER_55_DIODE
    A XOR B
}
NZENER.O.1 { @ Minimum and maximum  overlap of NZENER and RPO for 5.5v Zener diode = ^NZENER_O_1 um
    A = ( NZENER AND RPO ) INTERACT ZENER_55_DIODE
    INT A < NZENER_O_1 ABUT <90 SINGULAR REGION
    SIZE A BY NZENER_O_1/2 UNDEROVER
}

// LPP checks
//============

LPP.W.1 { @ LPP width >= 0.44um.
  INT LPP < 0.44 ABUT < 90 SINGULAR REGION
}
LPP.S.1 { @ LPP space >= 0.44um
  EXT LPP < 0.44 ABUT < 90 SINGULAR REGION
}
LPP.C.1 { @ LPP to Nact space >= 0.30um
  X = EXT LPP LV_NACT < 0.30 ABUT < 90 SINGULAR REGION
  X NOT INTERACT BUTT_PTAP
}
LPP.C.3 { @ LPP to Ngate space >= 0.32um
  BUTLP AND EXGATE_NP
}
LPP.C.4 { @ LPP edge to Pgate to define S/D width >= 0.32um
  X = EXGATE_PP AND OD
  Y = X CUT LPP
  Y NOT LPP
}
LPP.O.1 { @ overlap of LPP & diff >= 0.32um
  INT LPP OD < 0.32 ABUT > 0 < 90 SINGULAR REGION
}
LPP.E.1 { @ LPP enclose Pact >= 0.26um.
  ENC OD_NW LPP < 0.26 ABUT>0<90 SINGULAR 
  Y = ENC [OD_NW] LPP < 0.26 ABUT==0
  Z = EXPAND EDGE Y OUTSIDE BY 0.004
  Z NOT INTERACT NPOD
}
LPP.E.2 { @ LPP enclose Ptap >= 0.10um
  ENC OD_PW LPP < 0.10 ABUT>0<90 SINGULAR
  Y = ENC [OD_PW] LPP < 0.10 ABUT==0
  Z = EXPAND EDGE Y OUTSIDE BY 0.004
  Z NOT INTERACT NPOD
}
LPP.E.3 { @ LPP enclose Po1-resistor >= 0.26um
  ENC RES_PO1 LPP < 0.26 ABUT < 90 SINGULAR REGION
}
LPP.C.5 { @ LPP to NP OD >= 0.0um
  LPP AND NPOD
}
LPP.R.1 { @ Overlap of a NP and a LPP on an OD region is not allowed.
  NP_OVP_LPP AND OD
}
LPP.R.2 { @ Overlap of NP and LPP on same Po1 region (non-OD) not allowed
  NP_OVP_LPP AND POLY_ISO
}
LPP.R.3 { @ In one database, having both rppohri_1000 and rppohri_400 and rppohri_3000 are not allowed.
  ( CHIP INTERACT HR400DMY ) INTERACT HR1KDMY
  ( CHIP INTERACT HR400DMY ) INTERACT HR3KDMY
  ( CHIP INTERACT HR3KDMY ) INTERACT HR1KDMY
}

// RPO checks
//===========
RPO.W.1{ @ Minimum RPO width >= ^RPO_W_1 um
  INT RPO < RPO_W_1 SINGULAR ABUT < 90 REGION
}
RPO.S.1{ @ Minimum RPO space >= ^RPO_S_1 um
  EXT RPO < RPO_S_1 ABUT < 90 SINGULAR REGION
}
RPO.C.1{ @ Minimum RPO space to OD >= ^RPO_C_1 um
  A = RPO INTERACT NLD12G5_GATE
  B = A NOT INSIDE EDGE NLD12G5_GATE
  C = EXT RPO OD < RPO_C_1 SINGULAR ABUT <90 REGION
  D = EXT B OD < RPO_C_1 ABUT <90 REGION
  (C NOT D) NOT INTERACT (MTP_2T2C AND MCEL)
}
RPO.C.2{ @ Minimum RPO space to co on OD >= ^RPO_C_2 um
  EXT RPO CO < RPO_C_2 ABUT < 90 SINGULAR REGION
  RPO AND CO    
}
RPO.C.3{ @ Minimum RPO space to gate,except ESD region >= ^RPO_C_3 um
  X = (ALL_GATE NOT DRCDMY2) NOT (MTP_2T2C AND MCEL)
  Y = EXT RPO X < RPO_C_3 ABUT < 90 SINGULAR REGION  
  Y NOT SDI
  ( RPO AND X ) NOT SDI
}
RPO.C.4{ @ Minimum RPO overhang OD, RPO fully inside OD not allowed >= ^RPO_C_4 um
  A = ENC OD RPO < RPO_C_4 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
  (RPO INSIDE ( OD NOT ZENER_55_DIODE )) NOT INTERACT (MTP_2T2C AND MCEL)
}
RPO.E.1{ @ Minimum OD overhang RPO >= ^RPO_E_1 um
  A = ENC RPO OD < RPO_E_1 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
}
RPO.C.5{ @ Minimum RPO overhang POLY, RPO fully inside PO not allowed >= ^RPO_C_5 um
  X = RPO NOT INTERACT GATE  
  ENC POLY_ISO X < RPO_C_5 ABUT < 90 SINGULAR REGION
  RPO INSIDE POLY
}
RPO.A.1 { @ Min RPO area >= ^RPO_A_1 um*um
  AREA RPO < RPO_A_1
}

RPO.O.1 { @ Min. overlap of P+ on LPP for high-res >= ^RPO_O_1 um 
  X = IRP1 INTERACT LPP
  Y = RPO INSIDE EDGE X
  INT PP Y < RPO_O_1 ABUT < 90 
  Y OUTSIDE EDGE PP	// not overlap by P+ not allowed.
}
RPO.C.6 { @ Minimum RPO space to field Poly  >= ^RPO_C_6 um
  A = EXT RPO POLY_ISO < RPO_C_6 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
}




NLD12G12_RPO = RPO INTERACT NLD12G12_GATE 
NLD12G5_RPO = RPO INTERACT NLD12G5_GATE 
HVRPO.O.1_NLD12G12 { @ Maximum and minimum overlap of RPO over PO of NLD12G12, in channel 
            @ length direction==0.32
      X = NLD12G12_RPO AND POLY
      INT NLD12G12_RPO POLY< 0.32 ABUT < 90 SINGULAR REGION
      SIZE X BY 0.32/2 UNDEROVER 
}
HVRPO.C.1_NLD12G12 { @ Maximum and minimum clearance from a RPO to a PO of NLD12G12, in channel
            @ length direction==0.28
     X = NLD12G12_RPO NOT POLY
      INT X < 0.28 ABUT < 90 SINGULAR REGION
      SIZE X BY 0.28/2 UNDEROVER 
}
HVRPO.C.2_NLD12G12 { @ Minimum clearance from a RPO to a drain OD of NLD12G12, in channel
            @ length direction>=0.3
      ENC OD  NLD12G12_RPO < 0.3 ABUT < 90 SINGULAR REGION
}
HVRPO.O.1_NLD12G5 { @ Maximum and minimum overlap of RPO over PO of NLD12G5, in channel 
            @ length direction==0.30
      X = NLD12G5_RPO AND POLY
      INT NLD12G5_RPO POLY< 0.30 ABUT < 90 SINGULAR REGION
      SIZE X BY 0.30/2 UNDEROVER 
}
HVRPO.C.1_NLD12G5 { @ Maximum and minimum clearance from a RPO to a PO of NLD12G5, in channel
            @ length direction==0.48
     X = NLD12G5_RPO NOT POLY
      INT X < 0.48 ABUT < 90 SINGULAR REGION
      SIZE X BY 0.48/2 UNDEROVER 
}
HVRPO.C.2_NLD12G5 { @ Minimum clearance from a RPO to a drain OD of NLD12G5, in channel
            @ length direction>=0.3
      ENC OD  NLD12G5_RPO < 0.3 ABUT < 90 SINGULAR REGION
}


HVRPO.E.2_12V { @ Minimum and Maximum extension of RPO beyond OD for 12V schottky diode == ^HVRPO_E_2_12V um
      A = SIZE SBD_12V BY HVRPO_E_2_12V 
      B = ( HOLES ( RPO INTERACT SBD_12V )  INNER ) OR ( RPO INTERACT SBD_12V )
      A XOR B
}
HVRPO.E.2_40V { @ Minimum and Maximum extension of RPO beyond OD for 40V schottky diode == ^HVRPO_E_2_40V um
      X = SIZE SBD_40V BY HVOD_S_2 OVERUNDER
      A = SIZE X BY HVRPO_E_2_40V 
      B = ( HOLES ( RPO INTERACT SBD_40V )  INNER ) OR ( RPO INTERACT SBD_40V )
      A XOR B
}
HVRPO.O.2_12V { @ Minimum and Maximum overlap of RPO and OD for 12V schottky diode == ^HVRPO_O_2_12V um
      A =  RPO AND SBD_12V
      INT A < HVRPO_O_2_12V SINGULAR ABUT < 90 REGION
      SIZE A BY HVRPO_O_2_12V/2 UNDEROVER
}
HVRPO.O.2_40V { @ Minimum and Maximum overlap of RPO and OD for 40V schottky diode == ^HVRPO_O_2_40V um
      A =  RPO AND SBD_40V
      INT A < HVRPO_O_2_40V SINGULAR ABUT < 90 REGION
      SIZE A BY HVRPO_O_2_40V/2 UNDEROVER
}
HVRPO.E.1 { @ Minimum and Maximum extension of RPO beyond OD for 5.5V zener diode == ^HVRPO_E_1 um
      A = ( HOLES ( RPO INTERACT ZENER_55_DIODE )  INNER ) OR ( RPO INTERACT ZENER_55_DIODE )
      B = SIZE A BY HVRPO_E_1 
      ZENER_55_DIODE XOR B
}
HVRPO.W.1 { @ Minimum and Maximum width of RPO  for 5.5V zener diode == ^HVRPO_W_1 um
      A = RPO INTERACT ZENER_55_DIODE
      INT A < HVRPO_W_1 SINGULAR ABUT < 90 REGION
      SIZE A BY HVRPO_W_1/2 UNDEROVER
}

// CO checks
//===============
CO_CORE = CO NOT SR_CO
CO.W.1 { @ Minimum and maximum width of a CO region== 0.30um
  NOT RECTANGLE CO_CORE == 0.30 BY == 0.30 ORTHOGONAL ONLY
}
CO.S.1 { @ Minimum space between two CO regions >= 0.30um
  EXT CO < 0.30 ABUT < 90  SINGULAR REGION
}
CO.C.1 { @ Minimum clearance from a CO on OD region to a PO gate>=0.22um
   EXT CO_DIFF GATE < 0.22 SINGULAR ABUT <90 REGION
       CO_DIFF AND GATE
}
CO.C.2 { @ Minimum clearance from a CO on PO region to an OD region>= 0.28um
  EXT CO_POLY OD < 0.28 SINGULAR ABUT <90 REGION
}
CO.E.1 { @ Minimum extension of an OD region beyond a OD CO region.>=0.14um
  ENC CO_DIFF OD < 0.14 SINGULAR ABUT <90 REGION
      CO_DIFF NOT OD
}
CO.E.2 { @ Minimum extension of a PO region beyond a Poly CO region>=0.14um     
  ENC CO_POLY POLY_ISO < 0.14 SINGULAR ABUT <90 REGION
  CO_POLY CUT POLY_ISO
}
CO.E.3_CO.E.4 { @ Minimum extension of a PP region beyond a OD CO region>= 0.18um
   X = ENC CO_DIFF PP < 0.18 SINGULAR ABUT <90 REGION
   (( X NOT TOUCH BUTT_NLDXXG5_S ) NOT TOUCH BUTT_PAXXG5_TAP ) NOT INTERACT SCHOTTKY_DIODE
   Y = ENC CO_DIFF NP < 0.18 SINGULAR ABUT <90 REGION
   (( Y NOT TOUCH BUTT_PAXXG5_S ) NOT TOUCH BUTT_NLDXXG5_TAP) NOT INTERACT SCHOTTKY_DIODE
   ( IMP NOT INSIDE EDGE ( NPG5_S_BUT OR SCHOTTKY_DIODE )) INSIDE EDGE CO_DIFF
}
// CO.R.1 is checked by CO.C.1 
// CO.R.2 is checked by CO.W.1

// M1 checks
//=============


M1.W.1 { @ M1 width >= 0.32
  INT M1 < 0.32 SINGULAR REGION ABUT < 90
}
M1.S.1 { @ M1 spacing >= 0.32
  EXT M1  < 0.32 ABUT < 90 SINGULAR REGION
}
M1.S.2 { @ Wide M1 to M1 spacing >= 0.60
  M1_S5 = SHRINK (SHRINK (SHRINK (SHRINK M1 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_G5 = GROW (GROW (GROW (GROW M1_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_Wide = M1_G5 AND M1
  M1_Exp = SIZE M1_Wide BY 1 INSIDE OF M1 STEP 0.224
  M1_Branch = M1_Exp NOT M1_Wide
  M1_Branch_edge = M1_Branch COIN INSIDE EDGE M1
  M1_Check = M1 AND (SIZE M1_Exp BY 0.6)
  M1_Branch_Check = M1 AND (EXPAND EDGE M1_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M1_WideC = STAMP M1_Wide BY M1x
  M1_CheckC = STAMP M1_Check BY M1x
  M1_BranchC = STAMP M1_Branch BY M1x
  M1_Branch_CheckC = STAMP M1_Branch_Check BY M1x
  EXT M1_WideC M1_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M1_BranchC M1_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}

M1.E.1 { @ Minimum extension of a M1 region beyond a CO region is >=0.01um
   ENC CO M1 < 0.01 ABUT<90 SINGULAR
   CO NOT M1
}
M1.E.2 { @ Minimum extension of M1 end-of-line region beyond CO region is >=0.09um
   X = ENC [CO] M1 < 0.09 ABUT < 90 OPPOSITE // a skinny side
   INT [X] < 0.30 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}
M1.A.1{ @ Minimum m1 area >= 0.36
  AREA M1 < 0.36
}
M1.R.1 { @ Min M1 area coverage >= 30%
  DENSITY M1x < 0.3 PRINT M1_DENSITY.log
}
#IFDEF RECOMMEND
M1.E.3R {@Min.& Max.extension of M1 island(0.6*0.6) beyond  ==0.15
         @a stack CO/via region  
 M1_R = RECTANGLE M1 == 0.6 BY == 0.6 ORTHOGONAL ONLY
 CO_C = (CO INTERACT M1_R) INTERACT VIA1
 CO_CS = SIZE CO_C BY 0.15
 (M1_R INTERACT CO_CS) XOR CO_CS
}	     
#ENDIF

// VIA1 checks
//=============
VIA1_CORE = VIA1 NOT SR_V1
VIA1.W.1 { @ VIA1 must be 0.36 x 0.36 um
  A = NOT RECTANGLE VIA1_CORE == 0.36 BY == 0.36 ORTHOGONAL ONLY
  A OUTSIDE RNGX        // exclude from metal fuse protection ring area
}
VIA1.S.1 { @ VIA1 SPACING >= 0.35
  EXT VIA1 < 0.35 ABUT < 90 SINGULAR REGION 
}

VIA1.E.1 { @ Min extension of a M1 region beyond a VIA1 region is >=0.02 um
  ENC VIA1 M1 < 0.02 ABUT<90 SINGULAR
  VIA1 NOT M1    
}
 
VIA1.E.2 { @ Min extension of M1 end-of-line region beyond VIA1 region is >=0.09 um
   X = ENC [VIA1] M1 < 0.09 ABUT < 90  OPPOSITE         // a skinny side
   INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}

// VIA1.C.1 does not require a DRC check

#IFDEF RECOMMEND
VIA1.E.3R {@ Min.& Max.extension of M1 (0.6*0.6) beyond Via1 region ==0.12 
 M1_R = RECTANGLE M1 == 0.6 BY == 0.6 ORTHOGONAL ONLY
 VIA1_C = VIA1 INTERACT M1_R
 VIA1_CS = SIZE VIA1_C BY 0.12
 (M1_R INTERACT VIA1_CS) XOR VIA1_CS
}
#ENDIF


// M2 checks
//=============

M2.W.1 { @ M2 width >= 0.40
  INT M2 < 0.40 ABUT < 90 SINGULAR REGION
}

M2.S.1 { @ M2 spacing >= 0.40
  EXT M2 < 0.40 ABUT < 90 SINGULAR REGION
}
M2.S.2 { @ Wide M2 (>10um) min. to M2 >= 0.6 um
  M2_S5 = SHRINK (SHRINK (SHRINK (SHRINK M2 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_G5 = GROW (GROW (GROW (GROW M2_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_Wide = M2_G5 AND M2
  M2_Exp = SIZE M2_Wide BY 1 INSIDE OF M2 STEP 0.28
  M2_Branch = M2_Exp NOT M2_Wide
  M2_Branch_edge = M2_Branch COIN INSIDE EDGE M2
  M2_Check = M2 AND (SIZE M2_Exp BY 0.6)
  M2_Branch_Check = M2 AND (EXPAND EDGE M2_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M2_WideC = STAMP M2_Wide BY M2x
  M2_CheckC = STAMP M2_Check BY M2x
  M2_BranchC = STAMP M2_Branch BY M2x
  M2_Branch_CheckC = STAMP M2_Branch_Check BY M2x
  EXT M2_WideC M2_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M2_BranchC M2_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M2.E.1 { @ Min extension of a M2 region beyond a VIA1 region is >=0.02 um
   ENC VIA1 M2 < 0.02 ABUT<90 SINGULAR
   VIA1 NOT M2    
}
 
M2.E.2 { @ Min extension of M2 end-of-line region beyond VIA1 region is >=0.09um
   X = ENC [VIA1] M2 < 0.09 ABUT < 90 OPPOSITE 			// a skinny side
   INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}

M2.A.1 { @ Min M2 area region >= 0.36
  AREA M2 < 0.36
}
M2.R.1 { @ Min M2 area coverage >= 30%
  DENSITY M2x < 0.3 PRINT M2_DENSITY.log
}  
#IFDEF RECOMMEND
M2.E.3R {@ Min.& Max.extension of M2 (0.6*0.6) beyond Via1 region ==0.12 
 M2_R = RECTANGLE M2 == 0.6 BY == 0.6 ORTHOGONAL ONLY
 VIA1_C = (VIA1 INTERACT M2_R) INTERACT VIA2
 VIA1_CS = SIZE VIA1_C BY 0.12
 (M2_R INTERACT VIA1_CS) XOR VIA1_CS
}
#ENDIF

// VIA2 checks
//=============
VIA2_CORE = VIA2 NOT SR_V2
VIA2.W.1 { @ VIA2 must be 0.36 x 0.36 um
  A = NOT RECTANGLE VIA2_CORE == 0.36 BY == 0.36 ORTHOGONAL ONLY
  A OUTSIDE RNGX        // exclude from metal fuse protection ring area
}
VIA2.S.1 { @ VIA2 SPACING >= 0.35
  EXT VIA2 < 0.35 ABUT < 90 SINGULAR REGION 
}

VIA2.E.1 { @ Min extension of a M2 region beyond a VIA2 region is >=0.02 um
  ENC VIA2 M2 < 0.02 ABUT<90 SINGULAR
  VIA2 NOT M2    
}
 
VIA2.E.2 { @ Min extension of M2 end-of-line region beyond VIA2 region is >=0.09 um
   X = ENC [VIA2] M2 < 0.09 ABUT < 90  OPPOSITE         // a skinny side
   INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}

// VIA2.C.1 does not require a DRC check

#IFDEF RECOMMEND
VIA2.E.3R {@ Min.& Max.extension of M2 (0.6*0.6) beyond Via2 region ==0.12 
 M2_R = RECTANGLE M2 == 0.6 BY == 0.6 ORTHOGONAL ONLY
 VIA2_C = VIA2 INTERACT M2_R
 VIA2_CS = SIZE VIA2_C BY 0.12
 (M2_R INTERACT VIA2_CS) XOR VIA2_CS
}
#ENDIF

#IFDEF RECOMMEND
VIA2.E.4 {@ Minimum extension of M2 beyond the overlap area that VIA2 and VIA1 are fully or partially touching < ^VIA2_E_4
	X = VIA2 AND VIA1
	ENC X M2 < VIA2_E_4 ABUT < 90 SINGULAR REGION 
}
#ENDIF

// M3 checks
//=============

M3.W.1 { @ M3 width >= 0.40
  INT M3 < 0.40 ABUT < 90 SINGULAR REGION
}

M3.S.1 { @ M3 spacing >= 0.40
  EXT M3 < 0.40 ABUT < 90 SINGULAR REGION
}
M3.S.2 { @ Wide M3 (>10um) min. to M3 >= 0.6 um
  M3_S5 = SHRINK (SHRINK (SHRINK (SHRINK M3 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_G5 = GROW (GROW (GROW (GROW M3_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_Wide = M3_G5 AND M3
  M3_Exp = SIZE M3_Wide BY 1 INSIDE OF M3 STEP 0.28
  M3_Branch = M3_Exp NOT M3_Wide
  M3_Branch_edge = M3_Branch COIN INSIDE EDGE M3
  M3_Check = M3 AND (SIZE M3_Exp BY 0.6)
  M3_Branch_Check = M3 AND (EXPAND EDGE M3_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M3_WideC = STAMP M3_Wide BY M3x
  M3_CheckC = STAMP M3_Check BY M3x
  M3_BranchC = STAMP M3_Branch BY M3x
  M3_Branch_CheckC = STAMP M3_Branch_Check BY M3x
  EXT M3_WideC M3_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M3_BranchC M3_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M3.E.1 { @ Min extension of a M3 region beyond a VIA2 region is >=0.02 um
   ENC VIA2 M3 < 0.02 ABUT<90 SINGULAR
   VIA2 NOT M3    
}
 
M3.E.2 { @ Min extension of M3 end-of-line region beyond VIA2 region is >=0.09um
   X = ENC [VIA2] M3 < 0.09 ABUT < 90 OPPOSITE 			// a skinny side
   INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}

M3.A.1 { @ Min M3 area region >= 0.36
  AREA M3 < 0.36
}
M3.R.1 { @ Min M3 area coverage >= 30%
  DENSITY M3x < 0.3 PRINT M3_DENSITY.log
}  
#IFDEF RECOMMEND
M3.E.3R {@ Min.& Max.extension of M3 (0.6*0.6) beyond Via2 region ==0.12 
 M3_R = RECTANGLE M3 == 0.6 BY == 0.6 ORTHOGONAL ONLY
 VIA2_C = (VIA2 INTERACT M3_R) INTERACT VIA3
 VIA2_CS = SIZE VIA2_C BY 0.12
 (M3_R INTERACT VIA2_CS) XOR VIA2_CS
}
#ENDIF



// VIA3 checks
//=============

CB_CUP = CB INTERACT WBDMY
VIA3R = VIA3 OUTSIDE CB_CUP
VIA3R_CORE = VIA3R NOT SR_V3
VIA3.W.1 { @ VIA3 must be 0.36 x 0.36 um
  A = NOT RECTANGLE VIA3R_CORE == 0.36 BY == 0.36 ORTHOGONAL ONLY
  (A OUTSIDE RNGX) NOT CB        // exclude from metal fuse protection ring area
}
VIA3.S.1 { @ VIA3 spacing < 0.35
  EXT VIA3R < 0.35 ABUT < 90 SINGULAR REGION
}
VIA3.E.1 { @ Min extension of a M3 region beyond a VIA3 region is 0.02 um
  ENC VIA3R M3 < 0.02 ABUT<90 SINGULAR
  VIA3R NOT M3    
}
VIA3.E.2 { @ Min extension of a M3 end-of-line region beyond VIA3 region is 0.09 um
  X = ENC [VIA3R] M3 < 0.09 OPPOSITE 			// a skinny side
  INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}
// Rule VIA3.C.1 does not require check

#IFDEF RECOMMEND
VIA3.E.3R {@ Min.& Max.extension of M3 (0.6*0.6) beyond Via3 region ==0.12 
 M3_R = RECTANGLE M3 == 0.6 BY == 0.6 ORTHOGONAL ONLY
 VIA3_C = VIA3R INTERACT M3_R
 VIA3_CS = SIZE VIA3_C BY 0.12
 (M3_R INTERACT VIA3_CS) XOR VIA3_CS
}
#ENDIF

#IFDEF RECOMMEND
VIA3.E.4 {@ Minimum extension of M3 beyond the overlap area that VIA3 and VIA2 are fully or partially touching < ^VIA3_E_4
	X = VIA3 AND VIA2
	ENC X M3 < VIA3_E_4 ABUT < 90 SINGULAR REGION 
}
#ENDIF


/*****  Variables for IMD crack check *****/
VARIABLE  VIA_W_1      12.0  //The width of ViaArray
VARIABLE  VIA_S_1      3.2 //VIA ARAAY interal space. 
VARIABLE  VIA_S_2      2.3 //Space of via array to via array.
VARIABLE  VIA_S_2L     6.0  //via array parrallel run length
VARIABLE  VIA_A_3      0.0 //The overlap area of 3 level continuous stack via array.
VARIABLE  VIA_A_2      0.0 //The overlap area of 2 level continuous stack via array.
VARIABLE  VIA_Merge   1.605  //The Merge error VIAs and highlight error vias region
VARIABLE  VIA_D_1     0.10 //The highlight array minimum density
VARIABLE  VIA_S_3     0.49 //Space of via in via array.
VARIABLE  VIA_Filter   3.0 // Shrink via arrary For broken small metal connection.
//********************************************
//***** Pre-processing for IMD crack check **** 
//********************************************
//
// Processing for SAME Array Merged 
//*********************************
  VIA1_M = VIA1 INTERACT M1 
  VIA1Merge1 = SIZE VIA1_M BY VIA_S_1/2 INSIDE OF M1 STEP 0.46
  VIA1Merge2 = SIZE VIA1_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA1Merge.pre1 = VIA1Merge1 AND VIA1Merge2                      // Find merged via array(s)
  VIA1Merge.pre11 = ENCLOSE RECTANGLE VIA1Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA1Merge.pre12 = VIA1_M INTERACT VIA1Merge.pre11                    // find VIA1 in the effective via arrary
  VIA1Merge.pre13 = SIZE VIA1Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA1Merge.pre2  = VIA1Merge1 AND VIA1Merge.pre13                     // Find merged via array(s)
  VIA1_same_array = SIZE VIA1Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection
  VIA2_M = VIA2 INTERACT M2 
  VIA2Merge1 = SIZE VIA2_M BY VIA_S_1/2 INSIDE OF M2 STEP 0.46
  VIA2Merge2 = SIZE VIA2_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA2Merge.pre1 = VIA2Merge1 AND VIA2Merge2                      // Find merged via array(s)
  VIA2Merge.pre11 = ENCLOSE RECTANGLE VIA2Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA2Merge.pre12 = VIA2_M INTERACT VIA2Merge.pre11                    // find VIA2 in the effective via arrary
  VIA2Merge.pre13 = SIZE VIA2Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA2Merge.pre2  = VIA2Merge1 AND VIA2Merge.pre13                     // Find merged via array(s)
  VIA2_same_array = SIZE VIA2Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection
  VIA3_M = VIA3 INTERACT M3 
  VIA3Merge1 = SIZE VIA3_M BY VIA_S_1/2 INSIDE OF M3 STEP 0.46
  VIA3Merge2 = SIZE VIA3_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA3Merge.pre1 = VIA3Merge1 AND VIA3Merge2                      // Find merged via array(s)
  VIA3Merge.pre11 = ENCLOSE RECTANGLE VIA3Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA3Merge.pre12 = VIA3_M INTERACT VIA3Merge.pre11                    // find VIA3 in the effective via arrary
  VIA3Merge.pre13 = SIZE VIA3Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA3Merge.pre2  = VIA3Merge1 AND VIA3Merge.pre13                     // Find merged via array(s)
  VIA3_same_array = SIZE VIA3Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

// Processing for 3 ~ 2 Stack Array  
//**********************************


  VIA1_same_array_3stack.pre1 = ((AREA VIA1_same_array >= VIA_A_3 ) AND (AREA VIA2_same_array >= VIA_A_3)) AND ( AREA VIA3_same_array >= VIA_A_3 )
  VIA1_same_array_3stack.pre2 = AREA VIA1_same_array_3stack.pre1 >= VIA_A_3
  
  VIA1_same_array_2stack.pre1 = ( AREA VIA1_same_array >= VIA_A_2 ) AND (AREA VIA2_same_array >= VIA_A_2 )
  VIA1_same_array_2stack.pre2 = AREA VIA1_same_array_2stack.pre1 >= VIA_A_2
  VIA2_same_array_2stack.pre1 = ( AREA VIA2_same_array >= VIA_A_2 ) AND (AREA VIA3_same_array >= VIA_A_2 )
  VIA2_same_array_2stack.pre2 = AREA VIA2_same_array_2stack.pre1 >= VIA_A_2





//**********************  
// Small 3 stack array
//**********************
// Processing for SAME Array Size Check    
//**************************************
  VIA1_3stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_3stack.pre2 VIA_S_2L VIA_W_1    // Find at least one width >=VIA_W_1
  VIA1_Reg_3_S_3 = EXT VIA1_3stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
  VIA1_Reg_3_S_3_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_3 0.005 VIA_S_2L // Find parallel run length >= VIA_S_2L
  VIA1_3stack.pre4 = VIA1_3stack.pre3 INTERACT VIA1_Reg_3_S_3_1 // Find parallel run length >= VIA_S_2L
  VIA1ArrayS1_S_3 = EXT VIA1_3stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than VIA_S_2
  VIA1ArrayS2_S_3 = ((VIA1ArrayS1_S_3 NOT INSIDE M1) NOT INSIDE M2) NOT INSIDE M3
  VIA1_3stack.Final = VIA1_3stack.pre4 INTERACT VIA1ArrayS2_S_3
  
  VIA1_S_3_A1 = VIA1 INTERACT VIA1_3stack.Final 
  VIA1_Reg_4_S_3_A1 = EXT VIA1_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_3_A1= VIA1_S_3_A1 INTERACT VIA1_Reg_4_S_3_A1                 
  VIA2_S_3_A1 = VIA2 INTERACT VIA1_3stack.Final 
  VIA2_Reg_4_S_3_A1 = EXT VIA2_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_3_A1 = VIA2_S_3_A1 INTERACT VIA2_Reg_4_S_3_A1  
  VIA3_S_3_A1 = VIA3 INTERACT VIA1_3stack.Final 
  VIA3_Reg_4_S_3_A1 = EXT VIA3_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION           // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_3_A1 = VIA3_S_3_A1 INTERACT VIA3_Reg_4_S_3_A1  

  

// Rule Check    
//**************************************
  CONNECT VIA1_3stack.Final VIA1_Violate_S_3_A1
  CONNECT VIA1_3stack.Final VIA2_Violate_S_3_A1
  CONNECT VIA1_3stack.Final VIA3_Violate_S_3_A1

VIA1.S.4_Array1_2_3_M { @ Minimum space between two VIAs in 3-level continuous stacking VIA arrays with below condition >=0.49um
                           @ Via1 violate VIA_S_3 spacing in Via1/Via2/Via3 array & density large or equal ^VIA_D_1 
  A1 = NET AREA RATIO VIA1_Violate_S_3_A1 VIA1_3stack.Final >= VIA_D_1
  A2 = NET AREA RATIO VIA2_Violate_S_3_A1 VIA1_3stack.Final >= VIA_D_1
  A3 = NET AREA RATIO VIA3_Violate_S_3_A1 VIA1_3stack.Final >= VIA_D_1
  B1 = (A1 OR A2) OR A3
  SIZE B1 BY VIA_Merge OVERUNDER 
}




//**********************  
// Small 2 stack array
//**********************
// Processing for SAME Array Size Check    
//**************************************
  VIA1_2stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_2stack.pre2 VIA_S_2L VIA_W_1 // Find at least one width >= VIA_W_1
  VIA1_Reg_3_S_2 = EXT VIA1_2stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
  VIA1_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_2 0.005 VIA_S_2L // Find parallel run length >= VIA_S_2L 
  VIA1_2stack.pre4 = VIA1_2stack.pre3 INTERACT VIA1_Reg_3_S_2_1  // Find parallel run length >= VIA_S_2L
  VIA1ArrayS1_S_2 = EXT VIA1_2stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than >= VIA_S_2
  VIA1ArrayS2_S_2 = (VIA1ArrayS1_S_2 NOT INSIDE M1) NOT INSIDE M2
  VIA1_2stack.Final = VIA1_2stack.pre4 INTERACT VIA1ArrayS2_S_2
  
  VIA1_S_2_A1 = VIA1 INTERACT VIA1_2stack.Final 
  VIA1_Reg_4_S_2_A1 = EXT VIA1_S_2_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_2_A1= VIA1_S_2_A1 INTERACT VIA1_Reg_4_S_2_A1                 
  VIA2_S_2_A1 = VIA2 INTERACT VIA1_2stack.Final 
  VIA2_Reg_4_S_2_A1 = EXT VIA2_S_2_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_2_A1 = VIA2_S_2_A1 INTERACT VIA2_Reg_4_S_2_A1  


  VIA2_2stack.pre3 = ENCLOSE RECTANGLE VIA2_same_array_2stack.pre2 VIA_S_2L VIA_W_1 // Find at least one width >= VIA_W_1
  VIA2_Reg_3_S_2 = EXT VIA2_2stack.pre3 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90
  VIA2_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA2_Reg_3_S_2 0.005 VIA_S_2L // Find parallel run length >= VIA_S_2L 
  VIA2_2stack.pre4 = VIA2_2stack.pre3 INTERACT VIA2_Reg_3_S_2_1  // Find parallel run length >= VIA_S_2L
  VIA2ArrayS1_S_2 = EXT VIA2_2stack.pre4 <= VIA_S_2 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than >= VIA_S_2
  VIA2ArrayS2_S_2 = (VIA2ArrayS1_S_2 NOT INSIDE M2) NOT INSIDE M3
  VIA2_2stack.Final = VIA2_2stack.pre4 INTERACT VIA2ArrayS2_S_2
  
  VIA2_S_2_A2 = VIA2 INTERACT VIA2_2stack.Final 
  VIA2_Reg_4_S_2_A2 = EXT VIA2_S_2_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_2_A2= VIA2_S_2_A2 INTERACT VIA2_Reg_4_S_2_A2                 
  VIA3_S_2_A2 = VIA3 INTERACT VIA2_2stack.Final 
  VIA3_Reg_4_S_2_A2 = EXT VIA3_S_2_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_2_A2 = VIA3_S_2_A2 INTERACT VIA3_Reg_4_S_2_A2  



// Rule Check    
//**************************************
  CONNECT VIA1_2stack.Final VIA1_Violate_S_2_A1
  CONNECT VIA1_2stack.Final VIA2_Violate_S_2_A1
  CONNECT VIA2_2stack.Final VIA2_Violate_S_2_A2
  CONNECT VIA2_2stack.Final VIA3_Violate_S_2_A2
  
VIA1.S.5_Array1_2_M { @ Minimum space between two VIAs in 2-level continuous stacking VIA arrays with below condition >=0.49um
                       @ Via1 violate VIA_S_3 spacing in Via1/Via2 array & density large or equal ^VIA_D_1 
  A1 = NET AREA RATIO VIA1_Violate_S_2_A1 VIA1_2stack.Final >= VIA_D_1
  A2 = NET AREA RATIO VIA2_Violate_S_2_A1 VIA1_2stack.Final >= VIA_D_1
  B1 = A1 OR A2
  SIZE B1 BY VIA_Merge OVERUNDER 
}

VIA2.S.5_Array2_3_M { @ Minimum space between two VIAs in 2-level continuous stacking VIA arrays with below condition >=0.49um
                       @ Via2 violate VIA_S_3 spacing in Via2/Via3 array & density large or equal ^VIA_D_1 
  A2 = NET AREA RATIO VIA2_Violate_S_2_A2 VIA2_2stack.Final >= VIA_D_1
  A3 = NET AREA RATIO VIA3_Violate_S_2_A2 VIA2_2stack.Final >= VIA_D_1
  B2 = A2 OR A3
  SIZE B2 BY VIA_Merge OVERUNDER
}










#IFNDEF THICK_30K
#IFNDEF THICK_15K
// M4 CHECKS
//=============
Mn.W.1 { @ Minimum width of a M4 region>=0.44um
  INT M4 < 0.44 SINGULAR REGION ABUT < 90
}
Mn.S.1 { @ Minimum space between two M4 regions.>=0.46um
  EXT M4 < 0.46 ABUT < 90 SINGULAR REGION
}
Mn.S.2 { @ Minimum space between metal lines with one or both metal line width and
         @ length are greater than 10um; the minimum space must be maintained
         @ between a metal line and a small piece of metal (<10um) that is connected to
         @ the wide metal within 1.0 um range from the wide metal. >=0.8um
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_Exp = SIZE M4_Wide BY 1 INSIDE OF M4 STEP 0.322
  M4_Branch = M4_Exp NOT M4_Wide
  M4_Branch_edge = M4_Branch COIN INSIDE EDGE M4
  M4_Check = M4 AND (SIZE M4_Exp BY 0.8)
  M4_Branch_Check = M4 AND (EXPAND EDGE M4_Branch_edge OUTSIDE BY 0.8 CORNER FILL)
  M4_WideC = STAMP M4_Wide BY M4x
  M4_CheckC = STAMP M4_Check BY M4x
  M4_BranchC = STAMP M4_Branch BY M4x
  M4_Branch_CheckC = STAMP M4_Branch_Check BY M4x
  EXT M4_WideC M4_CheckC < 0.8 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M4_BranchC M4_Branch_CheckC < 0.8 ABUT >0 <89.5 NOT CONNECTED REGION
} 
Mn.E.1 { @ Min extension of a M4 region beyond a V3 region >=0.09um
   ENC VIA3 M4 < 0.09 ABUT<90 SINGULAR REGION
   VIA3 NOT M4
}
Mn.A.1 { @ Minimum area of a M4 area. >=0.8sq. um
  AREA M4 < 0.8
}
Mn.R.1 { @ Minimum density of a M4 area>=30%
  DENSITY M4x < 0.3 PRINT M4_DENSITY.log
}

#ENDIF
#ENDIF



#IFNDEF THICK_15K
#IFNDEF THICK_30K

// VIAD checks
//=============
VIADR = VIAD OUTSIDE CB_CUP
VIADR_CORE = VIADR NOT SR_VD
VIAD.W.1 { @ VIAD must be 0.36 x 0.36 um
  A = NOT RECTANGLE VIADR_CORE == 0.36 BY == 0.36 ORTHOGONAL ONLY
  (A OUTSIDE RNGX) NOT CB       // exclude from metal fuse protection ring area
}
VIAD.S.1 { @ VIAD spacing < 0.35
  EXT VIADR < 0.35 ABUT < 90 SINGULAR REGION
}
VIAD.E.1 { @ Min extension of a M4 region beyond a VIAD region is 0.02 um
  ENC VIADR M4 < 0.02 ABUT<90 SINGULAR
  VIADR NOT M4    
}
VIAD.E.2 { @ Min extension of a M4 end-of-line region beyond VIAD region is 0.09 um
  X = ENC [VIADR] M4 < 0.09 OPPOSITE 			// a skinny side
  INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}
// Rule VIAD.C.1 does not require check



// MD CHECKS
//=============

MD.W.1 { @ MD width >=0.44um
  INT MD < 0.44 SINGULAR REGION ABUT < 90
}
MD.S.1 { @ MD spacing >=0.46um
  EXT MD < 0.46 ABUT < 90 SINGULAR REGION
}
MD.S.2 { @ Wide MD (>10um) min. to MD >=0.8um
  MD_S5 = SHRINK (SHRINK (SHRINK (SHRINK MD RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_G5 = GROW (GROW (GROW (GROW MD_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_Wide = MD_G5 AND MD
  MD_Exp = SIZE MD_Wide BY 1 INSIDE OF MD STEP 0.322
  MD_Branch = MD_Exp NOT MD_Wide
  MD_Branch_edge = MD_Branch COIN INSIDE EDGE MD
  MD_Check = MD AND (SIZE MD_Exp BY 0.8)
  MD_Branch_Check = MD AND (EXPAND EDGE MD_Branch_edge OUTSIDE BY 0.8 CORNER FILL)
  MD_WideC = STAMP MD_Wide BY MDx
  MD_CheckC = STAMP MD_Check BY MDx
  MD_BranchC = STAMP MD_Branch BY MDx
  MD_Branch_CheckC = STAMP MD_Branch_Check BY MDx
  EXT MD_WideC MD_CheckC < 0.8 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT MD_BranchC MD_Branch_CheckC < 0.8 ABUT >0 <89.5 NOT CONNECTED REGION
}
MD.E.1 { @ Min extension of a MD region beyond a V4 region >=0.09um
   ENC VIAD MD < 0.09 ABUT<90 SINGULAR
   VIAD NOT MD
}
MD.A.1 { @ Min MD area region >=0.8sq. um
  AREA MD < 0.8
}
MD.R.1 { @ Minimum density of a MD area>=30%
  DENSITY MDx >0 < 0.3 PRINT MD_DENSITY.log
}
#ENDIF
#ENDIF

DISCONNECT

#IFDEF THICK_30K
CONNECT    NTAPi  NWELLi 
CONNECT    NTAPi HVNWi
CONNECT    NTAPi PSDi
CONNECT    PTAPi NSDi
CONNECT    M1x ILP1i NTAPi PTAPi PSDi NSDi BY COi
CONNECT    NBLi NTAPi_NBL
CONNECT    NTAPi_NBL NWELLi
CONNECT    NTAPi_NBL HVNWi
CONNECT    NTAPi_NBL PSDi
SCONNECT    NTAPi_NBL NWLVTi
CONNECT    M1x NTAPi_NBL BY COi
SCONNECT    NTAPi NWLVTi 

CONNECT    M1x M2x BY VIA1i
CONNECT    M2x M3x BY VIA2i
CONNECT    M3x M4x BY VIAt 
CONNECT    M4x CTM3i BY VIAc
CONNECT    M4x MDx BY VIADi 
// 30K UTM TOP METAL CHECKS
//===============================================


UTM30K.W.1 { @ Minimum width of UTM region>= 2.60um
  INT M4 < 2.60 ABUT < 90 SINGULAR REGION 
}


UTM30K.S.1 { @ Minimum space between two UTM regions>= 1.9um
  EXT M4 < 1.90 ABUT < 90 SINGULAR REGION
}

UTM30K.E.1 { @ Minimum extension of UTM region beyond VIA3 region>= 0.4um
   ENC VIA3 M4 < 0.4 ABUT<90 SINGULAR REGION
   VIA3 NOT M4    
}
 
UTM30K.E.2 { @ Minimum extension of UTM region beyond VIA3 region at the end of UTM>=0.45um
   X = ENC [VIA3] M4 < 0.45 ABUT < 90 OPPOSITE 			// a skinny side
   INT [X] < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}
M4_NIND = M4x NOT INDDMY
UTM30K.S.2 { @ Minimum space between M4 metal lines with one or both metal line width and length are greater than 16um; 
          @ this also includes all metals attached M4 to these areas or extending out for a distance of 1.0um or less 
	  @ (exclude application for inductor). >=3.0um
  M4_NIND_S8 = SHRINK (SHRINK (SHRINK (SHRINK M4_NIND RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M4_NIND_G8 = GROW (GROW (GROW (GROW M4_NIND_S8 RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M4_NIND_Wide = M4_NIND_G8 AND M4_NIND
  M4_NIND_Exp = SIZE M4_NIND_Wide BY 1 INSIDE OF M4_NIND STEP 1.33
  M4_NIND_Branch = M4_NIND_Exp NOT M4_NIND_Wide
  M4_NIND_Branch_edge = M4_NIND_Branch COIN INSIDE EDGE M4_NIND
  M4_NIND_Check = M4_NIND AND (SIZE M4_NIND_Exp BY 3.0)
  M4_NIND_Branch_Check = M4_NIND AND (EXPAND EDGE M4_NIND_Branch_edge OUTSIDE BY 3.0 CORNER FILL)
  M4_NIND_WideC = STAMP M4_NIND_Wide BY M4x
  M4_NIND_CheckC = STAMP M4_NIND_Check BY M4x
  M4_NIND_BranchC = STAMP M4_NIND_Branch BY M4x
  M4_NIND_Branch_CheckC = STAMP M4_NIND_Branch_Check BY M4x
  EXT M4_NIND_WideC M4_NIND_CheckC < 3.0 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M4_NIND_BranchC M4_NIND_Branch_CheckC < 3.0 ABUT >0 <89.5 NOT CONNECTED REGION
}
UTM30K.A.1 { @ Minimum area of UTM region>=6.76um2
   AREA M4 < 6.76
}

UTM30K.R.1 { @ For core circuits of main chip (exclude application for inductor):
          @ Minimum density of UTM area.>=30%
    CHIP_NIND = CHIP NOT INDDMY
    DENSITY M4_NIND CHIP_NIND < 0.3 PRINT UTM30K_DENSITY.log
    [ AREA(M4_NIND)/AREA(CHIP_NIND) ]
}
DISCONNECT
#ENDIF



CONNECT    NTAPi  NWELLi 
CONNECT    NTAPi HVNWi
CONNECT    NTAPi PSDi
CONNECT    PTAPi NSDi
CONNECT    M1x ILP1i NTAPi PTAPi PSDi NSDi BY COi
CONNECT    NBLi NTAPi_NBL
CONNECT    NTAPi_NBL NWELLi
CONNECT    NTAPi_NBL HVNWi
CONNECT    NTAPi_NBL PSDi
SCONNECT    NTAPi_NBL NWLVTi
CONNECT    M1x NTAPi_NBL BY COi
SCONNECT    NTAPi NWLVTi 

CONNECT    M1x M2x BY VIA1i
CONNECT    M2x M3x BY VIA2i
CONNECT    M3x M4x BY VIAt 
CONNECT    M4x CTM3i BY VIAc
CONNECT    M4x MDx BY VIADi 

CHIP_NIND = CHIP NOT INDDMY



#IFDEF THICK_15K
UTM15K.W.1 { @ Minimum width of a UTM region >=1.00um for GPIIA process
  INT M4 < 1.00 ABUT < 90 SINGULAR REGION
}
UTM15K.S.1 { @ Minimum space between two UTM regions.>= 1.20um for GPIIA process
  EXT M4 < 1.20 ABUT < 90 SINGULAR REGION
}
M4T_NIND = M4x NOT INDDMY
UTM15K.S.2 { @ Minimum space between UTM metal lines with one or both metal lines' width and
           @ length are greater than 10um; This also includes all metals attached to these
           @ areas or extending out for a distance of 1.0mm or less. >=2.0um
  M4T_NIND_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4T_NIND RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4T_NIND_G5 = GROW (GROW (GROW (GROW M4T_NIND_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4T_NIND_Wide = M4T_NIND_G5 AND M4T_NIND
  M4T_NIND_Exp = SIZE M4T_NIND_Wide BY 1 INSIDE OF M4T_NIND STEP 1.05
  M4T_NIND_Branch = M4T_NIND_Exp NOT M4T_NIND_Wide
  M4T_NIND_Branch_edge = M4T_NIND_Branch COIN INSIDE EDGE M4T_NIND
  M4T_NIND_Check = M4T_NIND AND (SIZE M4T_NIND_Exp BY 2)
  M4T_NIND_Branch_Check = M4T_NIND AND (EXPAND EDGE M4T_NIND_Branch_edge OUTSIDE BY 2 CORNER FILL)
  M4T_NIND_WideC = STAMP M4T_NIND_Wide BY M4x
  M4T_NIND_CheckC = STAMP M4T_NIND_Check BY M4x
  M4T_NIND_BranchC = STAMP M4T_NIND_Branch BY M4x
  M4T_NIND_Branch_CheckC = STAMP M4T_NIND_Branch_Check BY M4x
  EXT M4T_NIND_WideC M4T_NIND_CheckC < 2 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M4T_NIND_BranchC M4T_NIND_Branch_CheckC < 2 ABUT >0 <89.5 NOT CONNECTED REGION
}
UTM15K.E.1 { @ Minimum extension of a UTM region beyond a Vtop region.>=0.3um
  ENC VIA3 M4 < 0.3 ABUT<90 SINGULAR
  VIA3 NOT M4    
}
UTM15K.E.1a { @ Minimum extension of a UTM region beyond a Vtop region at the end of UTM.>=0.45um
  X = ENC [VIA3] M4 < 0.45 ABUT < 90 OPPOSITE // a skinny side
  INT X < 0.36 INTERSECTING ONLY ABUT == 90      // adjacent skinnies
}
UTM15K.A.1 { @ Minimum area of a UTM area.>= 2.25sq. um
  AREA M4 < 2.25
}
UTM15K.R.1 { @ For core circuits of main chip (excluding application for inductor):
           @ Minimum density of M4T area. >= 30%
  DENSITY M4T_NIND CHIP_NIND < 0.3 PRINT UTM15K_DENSITY.log
  [ AREA(M4T_NIND)/AREA(CHIP_NIND) ]
}
#ENDIF



HV_S_N = COPY HV_NMOS_S
HV_D_N = COPY HV_NMOS_D
HV_S_P = COPY HV_PMOS_S
HV_D_P = COPY HV_PMOS_D


HV_S_N_SDIO = STAMP HV_S_N BY NSDi
HV_D_N_SDIO = STAMP HV_D_N BY NTAPi
HV_S_P_SDIO = STAMP HV_S_P BY PSDi
HV_D_P_SDIO_1 = STAMP HV_D_P_1 BY PSDi
HV_D_P_SDIO_2 = STAMP HV_D_P_2 BY PTAPi


PPOD_DIODE_pre = (PP AND OD) INSIDE DIODMY
NPOD_DIODE_pre = (NP AND OD) INSIDE DIODMY
PPOD_DIODEi = (PPi AND ODi) INSIDE DIODMY
NPOD_DIODEi = (NPi AND ODi) INSIDE DIODMY

CONNECT M1x PPOD_DIODEi BY COi
CONNECT M1x NPOD_DIODEi BY COi
CONNECT M4x CBi
PPOD_DIODE = STAMP PPOD_DIODE_pre BY PPOD_DIODEi
NPOD_DIODE = STAMP NPOD_DIODE_pre BY NPOD_DIODEi
PPOD_HVN_S = NET AREA RATIO PPOD_DIODE HV_S_N_SDIO > 0
PPOD_HVN_D = NET AREA RATIO PPOD_DIODE HV_D_N_SDIO > 0
PPOD_HVP_S = NET AREA RATIO PPOD_DIODE HV_S_P_SDIO > 0
PPOD_HVP_D1 = NET AREA RATIO PPOD_DIODE HV_D_P_SDIO_1 > 0
PPOD_HVP_D2 = NET AREA RATIO PPOD_DIODE HV_D_P_SDIO_2 > 0

PPOD_HV_SD = ((PPOD_HVN_S OR PPOD_HVN_D) OR PPOD_HVP_S) OR (PPOD_HVP_D1 OR PPOD_HVP_D2)


LV_SD = (DACT INTERACT ALL_GATE) NOT POLY


PACT_realc = STAMP LV_SD BY PSDi
NACT_realc = STAMP LV_SD BY NSDi
PPOD_P_SD = NET AREA RATIO PPOD_DIODE PACT_realc > 0
PPOD_N_SD = NET AREA RATIO PPOD_DIODE NACT_realc > 0
PPOD_SD = PPOD_P_SD OR PPOD_N_SD

SDIO.R.1 { @ PPOD inside DIODMY connect to NPOD inside DIODMY is not allowed
         @ exclude PPOD inside DIODMY connect to PPOD inside DIODMY 
         @ exclude PPOD inside DIODMY connect to two or more NPOD inside DIODMY 
         @ exclude PPOD inside DIODMY connect to MOS OD
         @ exclude PPOD connect to PAD window
PPOD_NPOD = NET AREA RATIO PPOD_DIODE NPOD_DIODE > 0
PPOD_PAD = NET AREA RATIO PPOD_DIODE CBi > 0 [!!AREA(CBi)] 
PPOD_PPOD = NET AREA RATIO PPOD_DIODE > 1 [COUNT(PPOD_DIODE)] 
PPOD_NPOD_MORE = NET AREA RATIO PPOD_DIODE NPOD_DIODE > 1 [COUNT(NPOD_DIODE)]
(PPOD_NPOD NOT ((((PPOD_PAD OR PPOD_PPOD) OR PPOD_NPOD_MORE) OR PPOD_HV_SD) OR PPOD_SD)) NOT INTERACT DSDIO
}


// CTM checks
//============

// safe checks for MiM & PiP process
CHIP_CTM2 = CHIP INTERACT CTM2i
CHIP_CTM3 = CHIP INTERACT CTM3i
CTM.TITLE.1b { @ For 4M procss, both CTM2 and CTM3 can be used as CTM of MIM capacitor.
           @ but CTM2 and CTM3 on the same CHIP is not allowed.
  CTM2i INTERACT CHIP_CTM3
  CTM3i INTERACT CHIP_CTM2
}

//***************************************************************
TCTM1 = CTM1 INTERACT VIA1      // effective capacitor top plate
DCTM1 = CTM1 NOT INTERACT VIA1  // dummy ctm1

BPM1A= M1 INTERACT TCTM1
BPM1 = BPM1A AND CTMDMY   // M1 as a capacitor bottom plate

TCTM2 = CTM2 INTERACT VIA2      // effective capacitor top plate
DCTM2 = CTM2 NOT INTERACT VIA2  // dummy ctm2

BPM2A= M2 INTERACT TCTM2
BPM2 = BPM2A AND CTMDMY   // M2 as a capacitor bottom plate

TCTM3 = CTM3 INTERACT VIA3      // effective capacitor top plate
DCTM3 = CTM3 NOT INTERACT VIA3  // dummy ctm3

BPM3A= M3 INTERACT TCTM3
BPM3 = BPM3A AND CTMDMY   // M3 as a capacitor bottom plate


TCTM  = TCTM2 OR TCTM3  	// capacitor top plate
DCTM  = DCTM2 OR DCTM3 		// dummy CTM

ALL_CTM = (CTM1i OR CTM2i ) OR CTM3i

CTM.W.1 { @ Minimum width of CTM (as capacitor top plate) width 5 um
  INT TCTM < 5 ABUT < 90 SINGULAR REGION
}
CTM.W.2 { @ Minimum width of a dummy CTM region 0.5 um
  INT DCTM < 0.5 ABUT < 90 SINGULAR REGION
}

// CTM.W.3 is checked by CTM.W.2

CTM.S.1 { @ Minimum space of CTM (as capacitor top plate) 1.5 um
  EXT TCTM < 1.5 ABUT < 90 SINGULAR REGION
}

CTM.S.2 { @ Minimum space between a dummy CTM to a CTM regions 1 um
  EXT DCTM TCTM < 1.0 ABUT < 90 SINGULAR REGION
  EXT DCTM < 1.0 ABUT < 90 SINGULAR REGION
}
CTM.S.3_BPM1 { @ Minimum space between two Mn+1 of both dummy and real capacitor bottom plate 0.8 um
  A = (( M1 INTERACT CTM1 ) AND CTMDMY ) COIN INSIDE EDGE M1  
  EXT A < 0.8 ABUT < 90  REGION    
}
CTM.S.3_BPM2 { @ Minimum space between two Mn+1 of both dummy and real capacitor bottom plate 0.8 um
  A = (( M2 INTERACT CTM2 ) AND CTMDMY ) COIN INSIDE EDGE M2  
  EXT A < 0.8 ABUT < 90  REGION    
}
CTM.S.3_BPM3 { @ Minimum space between two Mn+1 of both dummy and real capacitor bottom plate 0.8 um
  A = (( M3 INTERACT CTM3 ) AND CTMDMY ) COIN INSIDE EDGE M3  
  EXT A < 0.8 ABUT < 90  REGION    
}
CTM.E.1.VIA1 { @ CTM1 enclose Via1 < 0.3 um
  ENC VIA1 CTM1 < 0.3 ABUT<90 SINGULAR REGION
  VIA1 CUT CTM1
}
CTM.E.1.VIA2 { @ CTM2 enclose Via2 < 0.3 um
  ENC VIA2 CTM2 < 0.3 ABUT<90 SINGULAR REGION
  VIA2 CUT CTM2
}
CTM.E.1.VIA3 { @ CTM3 enclose Via3 < 0.3 um
  ENC VIA3 CTM3 < 0.3 ABUT<90 SINGULAR REGION
  VIA3 CUT CTM3
}
CTM.E.2.BPM1 { @ bottom plate Metal enclose Via < 0.15 um
  ENC VIA1 BPM1 < 0.15 ABUT<90 SINGULAR REGION
}
CTM.E.2.BPM2 { @ bottom plate Metal enclose Via < 0.15 um
  ENC VIA1 BPM2 < 0.15 ABUT<90 SINGULAR REGION
  ENC VIA2 BPM2 < 0.15 ABUT<90 SINGULAR REGION
}
CTM.E.2.BPM3 { @ bottom plate Metal enclose Via < 0.15 um
  ENC VIA2 BPM3 < 0.15 ABUT<90 SINGULAR REGION
  ENC VIA3 BPM3 < 0.15 ABUT<90 SINGULAR REGION
}
CTM.E.3.M1 { @ bottom plate Metal enclose CTM >= 0.5 um
  ENC CTM1 M1 < 0.5 ABUT<90 SINGULAR REGION
  CTM1 NOT M1 
}
CTM.E.3.M2 { @ bottom plate Metal enclose CTM >= 0.5 um
  ENC CTM2 M2 < 0.5 ABUT<90 SINGULAR REGION
  CTM2 NOT M2 
}
CTM.E.3.M3 { @ bottom plate Metal enclose CTM >= 0.5 um
  ENC CTM3 M3 < 0.5 ABUT<90 SINGULAR REGION
  CTM3 NOT M3 
}
CTM.C.1.CTM1 { @ CTM space to Via >= 0.5 um
  EXT VIA1 CTM1 < 0.5 ABUT<90 SINGULAR REGION
}
CTM.C.1.CTM2 { @ CTM space to Via >= 0.5 um
  EXT VIA1 CTM2 < 0.5 ABUT<90 SINGULAR REGION
  EXT VIA2 CTM2 < 0.5 ABUT<90 SINGULAR REGION
}
CTM.C.1.CTM3 { @ CTM space to Via >= 0.5 um
  EXT VIA2 CTM3 < 0.5 ABUT<90 SINGULAR REGION
  EXT VIA3 CTM3 < 0.5 ABUT<90 SINGULAR REGION
}

// CTM.R.1 is checked by CTM.E.3.M1 CTM.E.3.M2 CTM.E.3.M3

CTMV1 = VIA1 AND CTM1   // via locate on CTM
CBMV1A= VIA1 AND BPM1
CBMV1 = CBMV1A NOT CTM1 // via locate on bottom plate

CONNECT CTMV1 TCTM1
CONNECT CBMV1 BPM1

CTM.S.4.CTMV1 { @ min space between vias locate on the same CTM < 2um
  EXT CTMV1 < 2 ABUT<90 SINGULAR REGION CONNECTED
}
CTMV2 = VIA2 AND CTM2   // via locate on CTM
CBMV2A= VIA2 AND BPM2
CBMV2 = CBMV2A NOT CTM2 // via locate on bottom plate

CONNECT CTMV2 TCTM2
CONNECT CBMV2 BPM2

CTM.S.4.CTMV2 { @ min space between vias locate on the same CTM < 2um
  EXT CTMV2 < 2 ABUT<90 SINGULAR REGION CONNECTED
}
CTMV3 = VIA3 AND CTM3   // via locate on CTM
CBMV3A= VIA3 AND BPM3
CBMV3 = CBMV3A NOT CTM3 // via locate on bottom plate

CONNECT CTMV3 TCTM3
CONNECT CBMV3 BPM3

CTM.S.4.CTMV3 { @ min space between vias locate on the same CTM < 2um
  EXT CTMV3 < 2 ABUT<90 SINGULAR REGION CONNECTED
}
CTM.S.5.CBMV1 { @ min space between vias locate on buttom plate < 4um
  EXT CBMV1 < 4 ABUT<90 SINGULAR REGION CONNECTED
}
CTM.S.5.CBMV2 { @ min space between vias locate on buttom plate < 4um
  EXT CBMV2 < 4 ABUT<90 SINGULAR REGION CONNECTED
}
CTM.S.5.CBMV3 { @ min space between vias locate on buttom plate < 4um
  EXT CBMV3 < 4 ABUT<90 SINGULAR REGION CONNECTED
}

CTM.R.3 { @ dummy layer enclose bottom plate metal < 2um.
    A = (BPM1A OR BPM2A ) OR BPM3A
  ENC A CTMDMY < 2 ABUT < 90 SINGULAR REGION
  TCTM NOT CTMDMY
}

CTM.R.4 { @ max width and length of a CTM region as a capacitor top plate < 30um    
    ENCLOSE RECTANGLE TCTM 0.01 30.01 ORTHOGONAL ONLY  
}
CTM.R.5_BPM1 { @ max width and length of a capacitor bottom plate < 35um    
    SIZE BPM1 BY 17.5 UNDEROVER
}
CTM.R.5_BPM2 { @ max width and length of a capacitor bottom plate < 35um    
    SIZE BPM2 BY 17.5 UNDEROVER
}
CTM.R.5_BPM3 { @ max width and length of a capacitor bottom plate < 35um    
    SIZE BPM3 BY 17.5 UNDEROVER
}
CTM.R.8 { @ CO and metal under CTM1 (CTM in metal1 and metal2) is not allowed.    
  CO AND CTM1
}
CTM.R.6_CTM2 { @ The first Vx layer right underneath CTM connecting to CBM is not allowed.
  VIA1 AND CTM2
}
CTM.R.6_CTM3 { @ The first Vx layer right underneath CTM connecting to CBM is not allowed.
  VIA2 AND CTM3
}

CTM.R.7_CTM1 { @ device under CTM is not allowed    
   ( ( ( POLY OR OD ) OR RNWEL ) AND CTM1 ) AND RFDUMMY  
}
CTM.R.7_CTM2 { @ device under CTM is not allowed    
   ( ( ( POLY OR OD ) OR RNWEL ) AND CTM2 ) AND RFDUMMY  
}
CTM.R.7_CTM3 { @ device under CTM is not allowed    
   ( ( ( POLY OR OD ) OR RNWEL ) AND CTM3 ) AND RFDUMMY  
}
CTM.R.2 { @ Min. density of a CTM < 3%
   DENSITY ALL_CTM > 0 < 0.03 PRINT CTM.density
}
CONNECT CTMV1 TCTM1
CTM.S.4a_VIA1 { @ min vias density on CTM < 1%
  NET AREA RATIO CTMV1 TCTM1 < 0.01
  [
      AREA(CTMV1) / AREA(TCTM1)
  ] RDB VIA1_DENSITY.log CTMV1 TCTM1
}
DISCONNECT

CONNECT CTMV2 TCTM2
CTM.S.4a_VIA2 { @ min vias density on CTM < 1%
  NET AREA RATIO CTMV2 TCTM2 < 0.01
  [
      AREA(CTMV2) / AREA(TCTM2)
  ] RDB VIA2_DENSITY.log CTMV2 TCTM2
}
DISCONNECT

CONNECT CTMV3 TCTM3
CTM.S.4a_VIA3 { @ min vias density on CTM < 1%
  NET AREA RATIO CTMV3 TCTM3 < 0.01
  [
      AREA(CTMV3) / AREA(TCTM3)
  ] RDB VIA3_DENSITY.log CTMV3 TCTM3
}
DISCONNECT



CTM.warn { @ No offer MIM between M1 & M2 in this process
  COPY CTM1i
}
CTM.R.9 { @ CTM only allow put in the top and top-1 metal
  COPY CTM1i
  COPY CTM2i
}


//METAL SLOT CHECKS
//================
//Bonding pad ,chip corner dummy pad ,and inductor need not put slot
CB_NON_CUP = CBi NOT INTERACT WBDMY
SLT_EXD  = CB_NON_CUP OR DPDMY
SLT_EXDT = CBi OR DPDMY

PAD_EXD = UBMi NOT INTERACT MDx

M1EXD = M1x NOT SLT_EXD

//M1 SLOT CHECKS
//==============

M1InnerHole = HOLES M1EXD INNER
M1BigHole   = SIZE M1InnerHole BY -5
M1Hole      = M1InnerHole OUTSIDE M1BigHole 
M1HoleSpace = M1Hole NOT M1EXD
FIM1c       = M1EXD OR M1HoleSpace
LM1XA       = (SIZE (SIZE FIM1c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM1c
LM1X        = ENCLOSE RECTANGLE LM1XA 35.005 35.005
M1HoleD    = M1HoleSpace AND LM1X

AMS.1.M1 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M1EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M1EXD
  ENCLOSE RECTANGLE A 35.005 35.005    
}

CONNECT M1HoleD LM1X
AMS.DN.M1 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM1X M1HoleD < 0.015
	[ AREA(M1HoleD) / AREA(LM1X) ] RDB M1Hole.density2 LM1X M1HoleD 
}
DISCONNECT

M1HOC  = HOLES M1EXD INNER EMPTY
M1HOD  = SIZE M1HOC BY 5 UNDEROVER TRUNCATE 5  // Assume Metal Slot < 10um
M1HO   = M1HOC OUTSIDE M1HOD         // Metal slot (include not in wide metal)
FIM1   = M1EXD OR M1HO               // Metal with slot fill in
M1WMA1 = (SIZE FIM1 BY 17.5 UNDEROVER) AND FIM1
M1WMA  = ENCLOSE RECTANGLE M1WMA1 35.005 35.005
M1WM   = M1WMA NOT OUTSIDE M1HO
M1SLT  = M1HO INSIDE M1WM


M2EXD = M2x NOT SLT_EXD

//M2 SLOT CHECKS
//==============

M2InnerHole = HOLES M2EXD INNER
M2BigHole   = SIZE M2InnerHole BY -5
M2Hole      = M2InnerHole OUTSIDE M2BigHole 
M2HoleSpace = M2Hole NOT M2EXD
FIM2c       = M2EXD OR M2HoleSpace
LM2XA       = (SIZE (SIZE FIM2c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM2c
LM2X        = ENCLOSE RECTANGLE LM2XA 35.005 35.005
M2HoleD    = M2HoleSpace AND LM2X

AMS.1.M2 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M2EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M2EXD
  ENCLOSE RECTANGLE A 35.005 35.005    
}

CONNECT M2HoleD LM2X
AMS.DN.M2 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM2X M2HoleD < 0.015
	[ AREA(M2HoleD) / AREA(LM2X) ] RDB M2Hole.density2 LM2X M2HoleD 
}
DISCONNECT

M2HOC  = HOLES M2EXD INNER EMPTY
M2HOD  = SIZE M2HOC BY 5 UNDEROVER TRUNCATE 5  // Assume Metal Slot < 10um
M2HO   = M2HOC OUTSIDE M2HOD         // Metal slot (include not in wide metal)
FIM2   = M2EXD OR M2HO               // Metal with slot fill in
M2WMA1 = (SIZE FIM2 BY 17.5 UNDEROVER) AND FIM2
M2WMA  = ENCLOSE RECTANGLE M2WMA1 35.005 35.005
M2WM   = M2WMA NOT OUTSIDE M2HO
M2SLT  = M2HO INSIDE M2WM


M3EXD = M3x NOT SLT_EXDT

//M3 SLOT CHECKS
//==============

M3InnerHole = HOLES M3EXD INNER
M3BigHole   = SIZE M3InnerHole BY -5
M3Hole      = M3InnerHole OUTSIDE M3BigHole 
M3HoleSpace = M3Hole NOT M3EXD
FIM3c       = M3EXD OR M3HoleSpace
LM3XA       = (SIZE (SIZE FIM3c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM3c
LM3X        = ENCLOSE RECTANGLE LM3XA 35.005 35.005
M3HoleD    = M3HoleSpace AND LM3X

AMS.1.M3 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M3EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M3EXD
  ENCLOSE RECTANGLE A 35.005 35.005    
}

CONNECT M3HoleD LM3X
AMS.DN.M3 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM3X M3HoleD < 0.015
	[ AREA(M3HoleD) / AREA(LM3X) ] RDB M3Hole.density2 LM3X M3HoleD 
}
DISCONNECT

M3HOC  = HOLES M3EXD INNER EMPTY
M3HOD  = SIZE M3HOC BY 5 UNDEROVER TRUNCATE 5  // Assume Metal Slot < 10um
M3HO   = M3HOC OUTSIDE M3HOD         // Metal slot (include not in wide metal)
FIM3   = M3EXD OR M3HO               // Metal with slot fill in
M3WMA1 = (SIZE FIM3 BY 17.5 UNDEROVER) AND FIM3
M3WMA  = ENCLOSE RECTANGLE M3WMA1 35.005 35.005
M3WM   = M3WMA NOT OUTSIDE M3HO
M3SLT  = M3HO INSIDE M3WM



PAD_EXD4 = SIZE PAD_EXD BY 2 INSIDE OF M4x STEP 0.32 
M4EXD = M4x NOT ( SLT_EXDT OR PAD_EXD4 )

//M4 SLOT CHECKS
//==============

M4InnerHole = HOLES M4EXD INNER
M4BigHole   = SIZE M4InnerHole BY -5
M4Hole      = M4InnerHole OUTSIDE M4BigHole 
M4HoleSpace = M4Hole NOT M4EXD
FIM4c       = M4EXD OR M4HoleSpace
LM4XA       = (SIZE (SIZE FIM4c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM4c
LM4X        = ENCLOSE RECTANGLE LM4XA 35.005 35.005
M4HoleD    = M4HoleSpace AND LM4X

AMS.1.M4 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M4EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M4EXD
  ENCLOSE RECTANGLE A 35.005 35.005    
}

CONNECT M4HoleD LM4X
AMS.DN.M4 { @ Min. Hole density for metal lines that need to apply slot >= 1.5%
    NET AREA RATIO LM4X M4HoleD < 0.015
	[ AREA(M4HoleD) / AREA(LM4X) ] RDB M4Hole.density2 LM4X M4HoleD 
}
DISCONNECT

M4HOC  = HOLES M4EXD INNER EMPTY
M4HOD  = SIZE M4HOC BY 5 UNDEROVER TRUNCATE 5  // Assume Metal Slot < 10um
M4HO   = M4HOC OUTSIDE M4HOD         // Metal slot (include not in wide metal)
FIM4   = M4EXD OR M4HO               // Metal with slot fill in
M4WMA1 = (SIZE FIM4 BY 17.5 UNDEROVER) AND FIM4
M4WMA  = ENCLOSE RECTANGLE M4WMA1 35.005 35.005
M4WM   = M4WMA NOT OUTSIDE M4HO
M4SLT  = M4HO INSIDE M4WM



//MD SLOT CHECKS
//==============
// Bonding pad, chip corner dummy pad, and inductor need not put slot

UBM_EXDD    = SIZE UBMi BY 2 INSIDE OF MDx STEP 0.32 	// For RDL
MDEXD       = MDx NOT ( DPDMY OR UBM_EXDD )
MDInnerHole = HOLES MDEXD INNER
MDBigHole   = SIZE MDInnerHole BY -5  	// Holes with width less than 10um will be filled back
MDHole      = MDInnerHole OUTSIDE MDBigHole	
MDHoleSpace = MDHole NOT MDEXD
FIMDc       = MDEXD OR MDHoleSpace
LMDXA       = (SIZE (SIZE FIMDc BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIMDc
LMDX        = ENCLOSE RECTANGLE LMDXA 35.005 35.005 
MDHoleD     = MDHoleSpace AND LMDX

AMS.1.MD { @ Wide Metal (>35um) must have slot
  A = (SIZE ( SIZE MDEXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5) AND MDEXD
  ENCLOSE RECTANGLE A 35.005 35.005    
}

CONNECT MDHoleD LMDX
AMS.DN.MD { @ Min. Hole density for metal lines that need to apply slot >= 1.5%
  NET AREA RATIO LMDX MDHoleD < 0.015
    [ AREA(MDHoleD) / AREA(LMDX) ] RDB MDHole.density2 LMDX MDHoleD 
}
DISCONNECT

MDHOC = HOLES MDEXD INNER EMPTY
MDHOD  = SIZE MDHOC BY 5 UNDEROVER TRUNCATE 5   // Assume Metal Slot < 10um
MDHO   = MDHOC OUTSIDE MDHOD         // Metal slot (include not in wide metal)
FIMD   = MDEXD OR MDHO                  // Metal with slot fill in
MDWMA1 = (SIZE FIMD BY 17.5 UNDEROVER) AND FIMD
MDWMA  = ENCLOSE RECTANGLE MDWMA1 35.005 35.005
MDWM   = MDWMA NOT OUTSIDE MDHO
MDSLT = MDHO INSIDE MDWM


// HV ESD design guide line
//==========================
VARIABLE HVESD_W_2_PNP_7	1080.0
VARIABLE HVESD_W_2_PNP_12	2880.0
VARIABLE HVESD_W_2_PNP_20	2880.0
VARIABLE HVESD_W_2_PNP_24	2880.0
VARIABLE HVESD_W_2_PNP_40	2880.0
VARIABLE HVESD_W_2_PNP_45	5760.0
VARIABLE HVESD_W_2_PNP_60	5760.0
VARIABLE HVESD_W_2_PNP_12G12	5760.0
VARIABLE HVESD_W_2_PNP_40G12	6480.0

VARIABLE HVESD_W_3A_PNP_7	30.0
VARIABLE HVESD_W_3A_PNP_12	60.0
VARIABLE HVESD_W_3A_PNP_20	60.0
VARIABLE HVESD_W_3A_PNP_24	60.0
VARIABLE HVESD_W_3A_PNP_40	60.0
VARIABLE HVESD_W_3A_PNP_45	60.0
VARIABLE HVESD_W_3A_PNP_60	60.0
VARIABLE HVESD_W_3A_PNP_12G12	60.0
VARIABLE HVESD_W_3A_PNP_40G12	60.0

VARIABLE HVESD_W_3B_PNP_7	30.0
VARIABLE HVESD_W_3B_PNP_12	240.0
VARIABLE HVESD_W_3B_PNP_20	240.0
VARIABLE HVESD_W_3B_PNP_24	240.0
VARIABLE HVESD_W_3B_PNP_40	240.0
VARIABLE HVESD_W_3B_PNP_45	240.0
VARIABLE HVESD_W_3B_PNP_60	240.0
VARIABLE HVESD_W_3B_PNP_12G12	240.0
VARIABLE HVESD_W_3B_PNP_40G12	240.0

VARIABLE HVESD_R_1A_PNP_7	12.0
VARIABLE HVESD_R_1A_PNP_12	7.0
VARIABLE HVESD_R_1A_PNP_20	7.0
VARIABLE HVESD_R_1A_PNP_24	7.0
VARIABLE HVESD_R_1A_PNP_40	7.0
VARIABLE HVESD_R_1A_PNP_45	7.0
VARIABLE HVESD_R_1A_PNP_60	7.0
VARIABLE HVESD_R_1A_PNP_12G12	7.0
VARIABLE HVESD_R_1A_PNP_40G12	7.0

VARIABLE HVESD_R_1B_PNP_7	24.0
VARIABLE HVESD_R_1B_PNP_12	25.0
VARIABLE HVESD_R_1B_PNP_20	25.0
VARIABLE HVESD_R_1B_PNP_24	25.0
VARIABLE HVESD_R_1B_PNP_40	25.0
VARIABLE HVESD_R_1B_PNP_45	25.0
VARIABLE HVESD_R_1B_PNP_60	25.0
VARIABLE HVESD_R_1B_PNP_12G12	25.0
VARIABLE HVESD_R_1B_PNP_40G12	25.0

VARIABLE HVESD_S_1_PNP_7	0.5
VARIABLE HVESD_S_1_PNP_12	0.7
VARIABLE HVESD_S_1_PNP_20	1.8
VARIABLE HVESD_S_1_PNP_24	2.0
VARIABLE HVESD_S_1_PNP_40	3.2
VARIABLE HVESD_S_1_PNP_45	3.2
VARIABLE HVESD_S_1_PNP_60	4.6
VARIABLE HVESD_S_1_PNP_12G12	0.7
VARIABLE HVESD_S_1_PNP_40G12	3.2

VARIABLE HVESD_S_2_PNP_7	1.01
VARIABLE HVESD_S_2_PNP_12	1.5
VARIABLE HVESD_S_2_PNP_20	3.8
VARIABLE HVESD_S_2_PNP_24	4.0
VARIABLE HVESD_S_2_PNP_40	5.2
VARIABLE HVESD_S_2_PNP_45	5.2
VARIABLE HVESD_S_2_PNP_60	6.6
VARIABLE HVESD_S_2_PNP_12G12	1.5
VARIABLE HVESD_S_2_PNP_40G12	5.2

VARIABLE HVESD_S_3_PNP_7	0.81
VARIABLE HVESD_S_3_PNP_12	3.5
VARIABLE HVESD_S_3_PNP_20	4.8
VARIABLE HVESD_S_3_PNP_24	5.0
VARIABLE HVESD_S_3_PNP_40	6.2
VARIABLE HVESD_S_3_PNP_45	5.2
VARIABLE HVESD_S_3_PNP_60	6.6
VARIABLE HVESD_S_3_PNP_12G12	3.5
VARIABLE HVESD_S_3_PNP_40G12	6.2

VARIABLE HVESD_E_1_PNP_20	0.9
VARIABLE HVESD_E_1_PNP_24	1.0
VARIABLE HVESD_E_1_PNP_40	1.6
VARIABLE HVESD_E_1_PNP_45	1.6
VARIABLE HVESD_E_1_PNP_60	2.3
VARIABLE HVESD_E_1_PNP_40G12	1.6

VARIABLE HVESD_E_2_PNP_20	7.28
VARIABLE HVESD_E_2_PNP_24	7.58
VARIABLE HVESD_E_2_PNP_40	9.38
VARIABLE HVESD_E_2_PNP_45	8.38
VARIABLE HVESD_E_2_PNP_60	10.48
VARIABLE HVESD_E_2_PNP_40G12	9.38

VARIABLE HVESD_E_3	0.3
VARIABLE HVESD_E_4	0.3

VARIABLE HVESD_E_5_PNP_7	0.45
VARIABLE HVESD_E_5_PNP_12	4.35
VARIABLE HVESD_E_5_PNP_20	3.15
VARIABLE HVESD_E_5_PNP_24	3.15
VARIABLE HVESD_E_5_PNP_40	3.15
VARIABLE HVESD_E_5_PNP_45	3.15
VARIABLE HVESD_E_5_PNP_60	3.15
VARIABLE HVESD_E_5_PNP_12G12	4.35
VARIABLE HVESD_E_5_PNP_40G12	3.15

VARIABLE HVESD_W_4_PNP_7	1.18
VARIABLE HVESD_W_4_PNP_12	1.18
VARIABLE HVESD_W_4_PNP_20	0.58
VARIABLE HVESD_W_4_PNP_24	0.58
VARIABLE HVESD_W_4_PNP_40	0.58
VARIABLE HVESD_W_4_PNP_45	0.58
VARIABLE HVESD_W_4_PNP_60	0.58
VARIABLE HVESD_W_4_PNP_12G12	1.18
VARIABLE HVESD_W_4_PNP_40G12	0.58

VARIABLE HVESD_W_5_PNP_7	3.5
VARIABLE HVESD_W_5_PNP_12	0.58
VARIABLE HVESD_W_5_PNP_20	1.0
VARIABLE HVESD_W_5_PNP_24	1.0
VARIABLE HVESD_W_5_PNP_40	1.0
VARIABLE HVESD_W_5_PNP_45	1.0
VARIABLE HVESD_W_5_PNP_60	1.0
VARIABLE HVESD_W_5_PNP_12G12	0.58
VARIABLE HVESD_W_5_PNP_40G12	1.0

VARIABLE HVESD_W_6_PNP_7	1.7
VARIABLE HVESD_W_6_PNP_12	0.58
VARIABLE HVESD_W_6_PNP_12G12	0.58
VARIABLE HVESD_W_6_PNP_20	0.58
VARIABLE HVESD_W_6_PNP_24	0.58
VARIABLE HVESD_W_6_PNP_40	0.58
VARIABLE HVESD_W_6_PNP_40G12	0.58
VARIABLE HVESD_W_6_PNP_45	0.58
VARIABLE HVESD_W_6_PNP_60	0.58

VARIABLE HVESD_E_7_PNP_12G12	3.0
VARIABLE HVESD_E_7_PNP_40G12	4.1
VARIABLE HVESD_E_7_PNP_12	3.0
VARIABLE HVESD_E_7_PNP_20	3.4
VARIABLE HVESD_E_7_PNP_24	3.5
VARIABLE HVESD_E_7_PNP_40	4.1
VARIABLE HVESD_E_7_PNP_45	6.6
VARIABLE HVESD_E_7_PNP_60	7.3

VARIABLE HVESD_E_8	1.5

VARIABLE HVESD_E_9_PNP_20	1.9
VARIABLE HVESD_E_9_PNP_24	2.0
VARIABLE HVESD_E_9_PNP_40	2.6
VARIABLE HVESD_E_9_PNP_40G12	2.6
VARIABLE HVESD_E_9_PNP_45	2.6
VARIABLE HVESD_E_9_PNP_60	3.3

VARIABLE HVESD_E_10_PNP_20	1.9
VARIABLE HVESD_E_10_PNP_24	2.0
VARIABLE HVESD_E_10_PNP_40	2.6
VARIABLE HVESD_E_10_PNP_40G12	2.6
VARIABLE HVESD_E_10_PNP_45	2.6
VARIABLE HVESD_E_10_PNP_60	3.3

VARIABLE HVESD_E_16	1.78

VARIABLE HVESD_O_1	1.0
VARIABLE HVESD_O_2	0.1

VARIABLE HVESD_E_6	0.3
VARIABLE HVESD_E_11	0.45

VARIABLE HVESD_W_7	2.0
VARIABLE HVESD_W_8	30.0
VARIABLE HVESD_W_9	1000.0

#IFDEF _40V_PARASITIC_ESD
VARIABLE HVESD_S_4	11.0
VARIABLE HVESD_E_14	11.0
VARIABLE HVESD_S_5	21.0
VARIABLE HVESD_E_15	21.0
VARIABLE HVESD_S_6	102.0
#ELSE
#IFDEF _24V_PARASITIC_ESD
VARIABLE HVESD_S_4	5.0
VARIABLE HVESD_E_14	5.0
VARIABLE HVESD_S_5	7.0
VARIABLE HVESD_E_15	7.0
VARIABLE HVESD_S_6	52.0
#ELSE
#IFDEF _20V_PARASITIC_ESD
VARIABLE HVESD_S_4	5.0
VARIABLE HVESD_E_14	5.0
VARIABLE HVESD_S_5	7.0
VARIABLE HVESD_E_15	7.0
VARIABLE HVESD_S_6	52.0
#ELSE
#IFDEF _7_12V_PARASITIC_ESD
VARIABLE HVESD_S_4	3.58
VARIABLE HVESD_E_14	3.58
VARIABLE HVESD_S_5	4.0
VARIABLE HVESD_E_15	4.0
VARIABLE HVESD_S_6	12.0
#ELSE
VARIABLE HVESD_S_4	11.0
VARIABLE HVESD_E_14	11.0
VARIABLE HVESD_S_5	21.0
VARIABLE HVESD_E_15	21.0
VARIABLE HVESD_S_6	102.0
#ENDIF
#ENDIF
#ENDIF
#ENDIF




COL_W_PNP_12 = LENGTH COLOD_ESD_PNP_12 <= HVESD_W_5_PNP_12 + GRID
COL_L_PNP_12 = LENGTH COLOD_ESD_PNP_12 > HVESD_W_5_PNP_12 + GRID
EMI_W_PNP_12 = LENGTH EMIOD_ESD_PNP_12 <= HVESD_W_6_PNP_12
EMI_L_PNP_12 = LENGTH EMIOD_ESD_PNP_12 > HVESD_W_6_PNP_12
EMI_L_PNP_12_EXP = EXPAND EDGE EMI_L_PNP_12 OUTSIDE BY GRID
EMI_L_PNP_12_EXPc = COPY EMI_L_PNP_12_EXP
HVESD_PNP_12 = PNP_12_DMY INTERACT COL_EMI_ESD_PNP_12
HVESD_PNP_12c = COPY HVESD_PNP_12

CONNECT HVESD_PNP_12c EMI_L_PNP_12_EXPc
HVESD.W.2_PNP_12 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_12 um
  NET AREA RATIO EMI_L_PNP_12_EXPc < HVESD_W_2_PNP_12
  [AREA(EMI_L_PNP_12_EXPc)/GRID]
  RDB HVESD.W.2_PNP_12.rep EMI_L_PNP_12_EXPc
}


COL_W_PNP_20 = LENGTH COLOD_ESD_PNP_20 <= HVESD_W_5_PNP_20 + GRID
COL_L_PNP_20 = LENGTH COLOD_ESD_PNP_20 > HVESD_W_5_PNP_20 + GRID
EMI_W_PNP_20 = LENGTH EMIOD_ESD_PNP_20 <= HVESD_W_6_PNP_20
EMI_L_PNP_20 = LENGTH EMIOD_ESD_PNP_20 > HVESD_W_6_PNP_20
EMI_L_PNP_20_EXP = EXPAND EDGE EMI_L_PNP_20 OUTSIDE BY GRID
EMI_L_PNP_20_EXPc = COPY EMI_L_PNP_20_EXP
HVESD_PNP_20 = PNP_20_DMY INTERACT COL_EMI_ESD_PNP_20
HVESD_PNP_20c = COPY HVESD_PNP_20

CONNECT HVESD_PNP_20c EMI_L_PNP_20_EXPc
HVESD.W.2_PNP_20 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_20 um
  NET AREA RATIO EMI_L_PNP_20_EXPc < HVESD_W_2_PNP_20
  [AREA(EMI_L_PNP_20_EXPc)/GRID]
  RDB HVESD.W.2_PNP_20.rep EMI_L_PNP_20_EXPc
}


COL_W_PNP_24 = LENGTH COLOD_ESD_PNP_24 <= HVESD_W_5_PNP_24 + GRID
COL_L_PNP_24 = LENGTH COLOD_ESD_PNP_24 > HVESD_W_5_PNP_24 + GRID
EMI_W_PNP_24 = LENGTH EMIOD_ESD_PNP_24 <= HVESD_W_6_PNP_24
EMI_L_PNP_24 = LENGTH EMIOD_ESD_PNP_24 > HVESD_W_6_PNP_24
EMI_L_PNP_24_EXP = EXPAND EDGE EMI_L_PNP_24 OUTSIDE BY GRID
EMI_L_PNP_24_EXPc = COPY EMI_L_PNP_24_EXP
HVESD_PNP_24 = PNP_24_DMY INTERACT COL_EMI_ESD_PNP_24
HVESD_PNP_24c = COPY HVESD_PNP_24

CONNECT HVESD_PNP_24c EMI_L_PNP_24_EXPc
HVESD.W.2_PNP_24 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_24 um
  NET AREA RATIO EMI_L_PNP_24_EXPc < HVESD_W_2_PNP_24
  [AREA(EMI_L_PNP_24_EXPc)/GRID]
  RDB HVESD.W.2_PNP_24.rep EMI_L_PNP_24_EXPc
}


COL_W_PNP_40 = LENGTH COLOD_ESD_PNP_40 <= HVESD_W_5_PNP_40 + GRID
COL_L_PNP_40 = LENGTH COLOD_ESD_PNP_40 > HVESD_W_5_PNP_40 + GRID
EMI_W_PNP_40 = LENGTH EMIOD_ESD_PNP_40 <= HVESD_W_6_PNP_40
EMI_L_PNP_40 = LENGTH EMIOD_ESD_PNP_40 > HVESD_W_6_PNP_40
EMI_L_PNP_40_EXP = EXPAND EDGE EMI_L_PNP_40 OUTSIDE BY GRID
EMI_L_PNP_40_EXPc = COPY EMI_L_PNP_40_EXP
HVESD_PNP_40 = PNP_40_DMY INTERACT COL_EMI_ESD_PNP_40
HVESD_PNP_40c = COPY HVESD_PNP_40

CONNECT HVESD_PNP_40c EMI_L_PNP_40_EXPc
HVESD.W.2_PNP_40 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_40 um
  NET AREA RATIO EMI_L_PNP_40_EXPc < HVESD_W_2_PNP_40
  [AREA(EMI_L_PNP_40_EXPc)/GRID]
  RDB HVESD.W.2_PNP_40.rep EMI_L_PNP_40_EXPc
}


COL_W_PNP_45 = LENGTH COLOD_ESD_PNP_45 <= HVESD_W_5_PNP_45 + GRID
COL_L_PNP_45 = LENGTH COLOD_ESD_PNP_45 > HVESD_W_5_PNP_45 + GRID
EMI_W_PNP_45 = LENGTH EMIOD_ESD_PNP_45 <= HVESD_W_6_PNP_45
EMI_L_PNP_45 = LENGTH EMIOD_ESD_PNP_45 > HVESD_W_6_PNP_45
EMI_L_PNP_45_EXP = EXPAND EDGE EMI_L_PNP_45 OUTSIDE BY GRID
EMI_L_PNP_45_EXPc = COPY EMI_L_PNP_45_EXP
HVESD_PNP_45 = PNP_45_DMY INTERACT COL_EMI_ESD_PNP_45
HVESD_PNP_45c = COPY HVESD_PNP_45

CONNECT HVESD_PNP_45c EMI_L_PNP_45_EXPc
HVESD.W.2_PNP_45 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_45 um
  NET AREA RATIO EMI_L_PNP_45_EXPc < HVESD_W_2_PNP_45
  [AREA(EMI_L_PNP_45_EXPc)/GRID]
  RDB HVESD.W.2_PNP_45.rep EMI_L_PNP_45_EXPc
}


COL_W_PNP_60 = LENGTH COLOD_ESD_PNP_60 <= HVESD_W_5_PNP_60 + GRID
COL_L_PNP_60 = LENGTH COLOD_ESD_PNP_60 > HVESD_W_5_PNP_60 + GRID
EMI_W_PNP_60 = LENGTH EMIOD_ESD_PNP_60 <= HVESD_W_6_PNP_60
EMI_L_PNP_60 = LENGTH EMIOD_ESD_PNP_60 > HVESD_W_6_PNP_60
EMI_L_PNP_60_EXP = EXPAND EDGE EMI_L_PNP_60 OUTSIDE BY GRID
EMI_L_PNP_60_EXPc = COPY EMI_L_PNP_60_EXP
HVESD_PNP_60 = PNP_60_DMY INTERACT COL_EMI_ESD_PNP_60
HVESD_PNP_60c = COPY HVESD_PNP_60

CONNECT HVESD_PNP_60c EMI_L_PNP_60_EXPc
HVESD.W.2_PNP_60 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_60 um
  NET AREA RATIO EMI_L_PNP_60_EXPc < HVESD_W_2_PNP_60
  [AREA(EMI_L_PNP_60_EXPc)/GRID]
  RDB HVESD.W.2_PNP_60.rep EMI_L_PNP_60_EXPc
}


COL_W_PNP_40G12 = LENGTH COLOD_ESD_PNP_40G12 <= HVESD_W_5_PNP_40G12 + GRID
COL_L_PNP_40G12 = LENGTH COLOD_ESD_PNP_40G12 > HVESD_W_5_PNP_40G12 + GRID
EMI_W_PNP_40G12 = LENGTH EMIOD_ESD_PNP_40G12 <= HVESD_W_6_PNP_40G12
EMI_L_PNP_40G12 = LENGTH EMIOD_ESD_PNP_40G12 > HVESD_W_6_PNP_40G12
EMI_L_PNP_40G12_EXP = EXPAND EDGE EMI_L_PNP_40G12 OUTSIDE BY GRID
EMI_L_PNP_40G12_EXPc = COPY EMI_L_PNP_40G12_EXP
HVESD_PNP_40G12 = PNP_40G12_DMY INTERACT COL_EMI_ESD_PNP_40G12
HVESD_PNP_40G12c = COPY HVESD_PNP_40G12

CONNECT HVESD_PNP_40G12c EMI_L_PNP_40G12_EXPc
HVESD.W.2_PNP_40G12 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_40G12 um
  NET AREA RATIO EMI_L_PNP_40G12_EXPc < HVESD_W_2_PNP_40G12
  [AREA(EMI_L_PNP_40G12_EXPc)/GRID]
  RDB HVESD.W.2_PNP_40G12.rep EMI_L_PNP_40G12_EXPc
}


COL_W_PNP_12G12 = LENGTH COLOD_ESD_PNP_12G12 <= HVESD_W_5_PNP_12G12 + GRID
COL_L_PNP_12G12 = LENGTH COLOD_ESD_PNP_12G12 > HVESD_W_5_PNP_12G12 + GRID
EMI_W_PNP_12G12 = LENGTH EMIOD_ESD_PNP_12G12 <= HVESD_W_6_PNP_12G12
EMI_L_PNP_12G12 = LENGTH EMIOD_ESD_PNP_12G12 > HVESD_W_6_PNP_12G12
EMI_L_PNP_12G12_EXP = EXPAND EDGE EMI_L_PNP_12G12 OUTSIDE BY GRID
EMI_L_PNP_12G12_EXPc = COPY EMI_L_PNP_12G12_EXP
HVESD_PNP_12G12 = PNP_12G12_DMY INTERACT COL_EMI_ESD_PNP_12G12
HVESD_PNP_12G12c = COPY HVESD_PNP_12G12

CONNECT HVESD_PNP_12G12c EMI_L_PNP_12G12_EXPc
HVESD.W.2_PNP_12G12 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_12G12 um
  NET AREA RATIO EMI_L_PNP_12G12_EXPc < HVESD_W_2_PNP_12G12
  [AREA(EMI_L_PNP_12G12_EXPc)/GRID]
  RDB HVESD.W.2_PNP_12G12.rep EMI_L_PNP_12G12_EXPc
}


COL_W_PNP_7 = LENGTH COLOD_ESD_PNP_7 <= HVESD_W_5_PNP_7 + GRID
COL_L_PNP_7 = LENGTH COLOD_ESD_PNP_7 > HVESD_W_5_PNP_7 + GRID
EMI_W_PNP_7 = LENGTH EMIOD_ESD_PNP_7 <= HVESD_W_6_PNP_7
EMI_L_PNP_7 = LENGTH EMIOD_ESD_PNP_7 > HVESD_W_6_PNP_7
COL_L_PNP_7_EXP = EXPAND EDGE COL_L_PNP_7 OUTSIDE BY GRID
COL_L_PNP_7_EXPc = COPY COL_L_PNP_7_EXP
HVESD_PNP_7 = PNP_7_DMY INTERACT COL_EMI_ESD_PNP_7
HVESD_PNP_7c = COPY HVESD_PNP_7
CONNECT HVESD_PNP_7c COL_L_PNP_7_EXPc
HVESD.W.2_PNP_7 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_7 um
  NET AREA RATIO COL_L_PNP_7_EXPc < HVESD_W_2_PNP_7
  [AREA(COL_L_PNP_7_EXPc)/GRID]
  RDB HVESD.W.2_PNP_7.rep COL_L_PNP_7_EXPc
}

HVESD.W.3A_PNP_7 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_7 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_7 HVESD_W_3A_PNP_7 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_7 < HVESD_W_3A_PNP_7
  PATH LENGTH EMI_L_PNP_7 < HVESD_W_3A_PNP_7
}
HVESD.W.3A_PNP_12 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_12 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_12 HVESD_W_3A_PNP_12 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_12 < HVESD_W_3A_PNP_12
  PATH LENGTH EMI_L_PNP_12 < HVESD_W_3A_PNP_12
}
HVESD.W.3A_PNP_20 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_20 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_20 HVESD_W_3A_PNP_20 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_20 < HVESD_W_3A_PNP_20
  PATH LENGTH EMI_L_PNP_20 < HVESD_W_3A_PNP_20
}
HVESD.W.3A_PNP_24 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_24 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_24 HVESD_W_3A_PNP_24 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_24 < HVESD_W_3A_PNP_24
  PATH LENGTH EMI_L_PNP_24 < HVESD_W_3A_PNP_24
}
HVESD.W.3A_PNP_40 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_40 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_40 HVESD_W_3A_PNP_40 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_40 < HVESD_W_3A_PNP_40
  PATH LENGTH EMI_L_PNP_40 < HVESD_W_3A_PNP_40
}
HVESD.W.3A_PNP_45 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_45 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_45 HVESD_W_3A_PNP_45 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_45 < HVESD_W_3A_PNP_45
  PATH LENGTH EMI_L_PNP_45 < HVESD_W_3A_PNP_45
}
HVESD.W.3A_PNP_60 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_60 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_60 HVESD_W_3A_PNP_60 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_60 < HVESD_W_3A_PNP_60
  PATH LENGTH EMI_L_PNP_60 < HVESD_W_3A_PNP_60
}
HVESD.W.3A_PNP_40G12 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_40G12 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_40G12 HVESD_W_3A_PNP_40G12 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_40G12 < HVESD_W_3A_PNP_40G12
  PATH LENGTH EMI_L_PNP_40G12 < HVESD_W_3A_PNP_40G12
}
HVESD.W.3A_PNP_12G12 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3A_PNP_12G12 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_12G12 HVESD_W_3A_PNP_12G12 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_12G12 < HVESD_W_3A_PNP_12G12
  PATH LENGTH EMI_L_PNP_12G12 < HVESD_W_3A_PNP_12G12
}

HVESD.W.3B_PNP_7 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_7 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_7 (HVESD_W_3B_PNP_7 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_7 > HVESD_W_3B_PNP_7
  PATH LENGTH EMI_L_PNP_7 > HVESD_W_3B_PNP_7
}
HVESD.W.3B_PNP_12 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_12 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_12 (HVESD_W_3B_PNP_12 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_12 > HVESD_W_3B_PNP_12
  PATH LENGTH EMI_L_PNP_12 > HVESD_W_3B_PNP_12
}
HVESD.W.3B_PNP_20 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_20 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_20 (HVESD_W_3B_PNP_20 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_20 > HVESD_W_3B_PNP_20
  PATH LENGTH EMI_L_PNP_20 > HVESD_W_3B_PNP_20
}
HVESD.W.3B_PNP_24 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_24 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_24 (HVESD_W_3B_PNP_24 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_24 > HVESD_W_3B_PNP_24
  PATH LENGTH EMI_L_PNP_24 > HVESD_W_3B_PNP_24
}
HVESD.W.3B_PNP_40 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_40 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_40 (HVESD_W_3B_PNP_40 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_40 > HVESD_W_3B_PNP_40
  PATH LENGTH EMI_L_PNP_40 > HVESD_W_3B_PNP_40
}
HVESD.W.3B_PNP_45 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_45 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_45 (HVESD_W_3B_PNP_45 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_45 > HVESD_W_3B_PNP_45
  PATH LENGTH EMI_L_PNP_45 > HVESD_W_3B_PNP_45
}
HVESD.W.3B_PNP_60 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_60 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_60 (HVESD_W_3B_PNP_60 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_60 > HVESD_W_3B_PNP_60
  PATH LENGTH EMI_L_PNP_60 > HVESD_W_3B_PNP_60
}
HVESD.W.3B_PNP_40G12 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_40G12 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_40G12 (HVESD_W_3B_PNP_40G12 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_40G12 > HVESD_W_3B_PNP_40G12
  PATH LENGTH EMI_L_PNP_40G12 > HVESD_W_3B_PNP_40G12
}
HVESD.W.3B_PNP_12G12 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3B_PNP_12G12 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_12G12 (HVESD_W_3B_PNP_12G12 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_12G12 > HVESD_W_3B_PNP_12G12
  PATH LENGTH EMI_L_PNP_12G12 > HVESD_W_3B_PNP_12G12
}

HVESD.R.1A_PNP_12 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_12
  HVESD_BH INTERACT EMIOD_ESD_PNP_12 < HVESD_R_1A_PNP_12 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_12 < HVESD_R_1A_PNP_12
}
HVESD.R.1A_PNP_20 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_20
  HVESD_BH INTERACT EMIOD_ESD_PNP_20 < HVESD_R_1A_PNP_20 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_20 < HVESD_R_1A_PNP_20
}
HVESD.R.1A_PNP_24 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_24
  HVESD_BH INTERACT EMIOD_ESD_PNP_24 < HVESD_R_1A_PNP_24 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_24 < HVESD_R_1A_PNP_24
}
HVESD.R.1A_PNP_40 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_40
  HVESD_BH INTERACT EMIOD_ESD_PNP_40 < HVESD_R_1A_PNP_40 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_40 < HVESD_R_1A_PNP_40
}
HVESD.R.1A_PNP_45 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_45
  HVESD_BH INTERACT EMIOD_ESD_PNP_45 < HVESD_R_1A_PNP_45 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_45 < HVESD_R_1A_PNP_45
}
HVESD.R.1A_PNP_60 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_60
  HVESD_BH INTERACT EMIOD_ESD_PNP_60 < HVESD_R_1A_PNP_60 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_60 < HVESD_R_1A_PNP_60
}
HVESD.R.1A_PNP_40G12 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_40G12
  HVESD_BH INTERACT EMIOD_ESD_PNP_40G12 < HVESD_R_1A_PNP_40G12 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_40G12 < HVESD_R_1A_PNP_40G12
}
HVESD.R.1A_PNP_12G12 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_12G12
  HVESD_BH INTERACT EMIOD_ESD_PNP_12G12 < HVESD_R_1A_PNP_12G12 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_12G12 < HVESD_R_1A_PNP_12G12
}

HVESD.R.1B_PNP_12 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_12
  HVESD_BH INTERACT EMIOD_ESD_PNP_12 > HVESD_R_1B_PNP_12 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_12 > HVESD_R_1B_PNP_12
}
HVESD.R.1B_PNP_20 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_20
  HVESD_BH INTERACT EMIOD_ESD_PNP_20 > HVESD_R_1B_PNP_20 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_20 > HVESD_R_1B_PNP_20
}
HVESD.R.1B_PNP_24 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_24
  HVESD_BH INTERACT EMIOD_ESD_PNP_24 > HVESD_R_1B_PNP_24 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_24 > HVESD_R_1B_PNP_24
}
HVESD.R.1B_PNP_40 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_40
  HVESD_BH INTERACT EMIOD_ESD_PNP_40 > HVESD_R_1B_PNP_40 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_40 > HVESD_R_1B_PNP_40
}
HVESD.R.1B_PNP_45 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_45
  HVESD_BH INTERACT EMIOD_ESD_PNP_45 > HVESD_R_1B_PNP_45 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_45 > HVESD_R_1B_PNP_45
}
HVESD.R.1B_PNP_60 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_60
  HVESD_BH INTERACT EMIOD_ESD_PNP_60 > HVESD_R_1B_PNP_60 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_60 > HVESD_R_1B_PNP_60
}
HVESD.R.1B_PNP_40G12 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_40G12
  HVESD_BH INTERACT EMIOD_ESD_PNP_40G12 > HVESD_R_1B_PNP_40G12 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_40G12 > HVESD_R_1B_PNP_40G12
}
HVESD.R.1B_PNP_12G12 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_12G12
  HVESD_BH INTERACT EMIOD_ESD_PNP_12G12 > HVESD_R_1B_PNP_12G12 - 1
  HVESD_BH INTERACT COLOD_ESD_PNP_12G12 > HVESD_R_1B_PNP_12G12
}

HVESD.R.1A_PNP_7 { @ Min finger number of collector OD (collector = emitter + 1) >= ^HVESD_R_1A_PNP_7
  HVESD_BH INTERACT EMIOD_ESD_PNP_7 < HVESD_R_1A_PNP_7
  HVESD_BH INTERACT COLOD_ESD_PNP_7 < HVESD_R_1A_PNP_7 - 1
}

HVESD.R.1B_PNP_7 { @ Max finger number of collector OD (collector = emitter + 1) <= ^HVESD_R_1B_PNP_7
  HVESD_BH INTERACT EMIOD_ESD_PNP_7 > HVESD_R_1B_PNP_7
  HVESD_BH INTERACT COLOD_ESD_PNP_7 > HVESD_R_1B_PNP_7 - 1
}


HVESD.S.1_PNP_7 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_7 
  EXT COL_EMI_ESD_PNP_7 < HVESD_S_1_PNP_7 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_7_H INTERACT COL_EMI_ESD_merge_PNP_7 > 1
  COL_EMI_ESD_merge_PNP_7 INTERACT ERR
}
HVESD.S.1_PNP_12 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_12 
  EXT COL_EMI_ESD_PNP_12 < HVESD_S_1_PNP_12 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_12_H INTERACT COL_EMI_ESD_merge_PNP_12 > 1
  COL_EMI_ESD_merge_PNP_12 INTERACT ERR
}
HVESD.S.1_PNP_20 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_20 
  EXT COL_EMI_ESD_PNP_20 < HVESD_S_1_PNP_20 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_20_H INTERACT COL_EMI_ESD_merge_PNP_20 > 1
  COL_EMI_ESD_merge_PNP_20 INTERACT ERR
}
HVESD.S.1_PNP_24 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_24 
  EXT COL_EMI_ESD_PNP_24 < HVESD_S_1_PNP_24 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_24_H INTERACT COL_EMI_ESD_merge_PNP_24 > 1
  COL_EMI_ESD_merge_PNP_24 INTERACT ERR
}
HVESD.S.1_PNP_40 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_40 
  EXT COL_EMI_ESD_PNP_40 < HVESD_S_1_PNP_40 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_40_H INTERACT COL_EMI_ESD_merge_PNP_40 > 1
  COL_EMI_ESD_merge_PNP_40 INTERACT ERR
}
HVESD.S.1_PNP_45 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_45 
  EXT COL_EMI_ESD_PNP_45 < HVESD_S_1_PNP_45 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_45_H INTERACT COL_EMI_ESD_merge_PNP_45 > 1
  COL_EMI_ESD_merge_PNP_45 INTERACT ERR
}
HVESD.S.1_PNP_60 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_60 
  EXT COL_EMI_ESD_PNP_60 < HVESD_S_1_PNP_60 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_60_H INTERACT COL_EMI_ESD_merge_PNP_60 > 1
  COL_EMI_ESD_merge_PNP_60 INTERACT ERR
}
HVESD.S.1_PNP_40G12 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_40G12 
  EXT COL_EMI_ESD_PNP_40G12 < HVESD_S_1_PNP_40G12 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_40G12_H INTERACT COL_EMI_ESD_merge_PNP_40G12 > 1
  COL_EMI_ESD_merge_PNP_40G12 INTERACT ERR
}
HVESD.S.1_PNP_12G12 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_12G12 
  EXT COL_EMI_ESD_PNP_12G12 < HVESD_S_1_PNP_12G12 ABUT < 90 SINGULAR REGION
  ERR = BASOD_ESD_PNP_12G12_H INTERACT COL_EMI_ESD_merge_PNP_12G12 > 1
  COL_EMI_ESD_merge_PNP_12G12 INTERACT ERR
}


  HVESD_HVNW_BASE_PNP_20 = SIZE ((HVNW OR H60NW) AND CLM_DMY_PNP_20) BY HVESD_E_9_PNP_20 UNDEROVER

  HVNW_merge_PNP_20 = (HVNW OR H60NW) AND COL_EMI_ESD_merge_PNP_20
  EMI_L_EDGE_PNP_20 = EMIOD_ESD_PNP_20 INSIDE EDGE COL_EMI_ESD_merge_PNP_20
  EMI_W_EDGE_PNP_20 = EMIOD_ESD_PNP_20 NOT INSIDE EDGE COL_EMI_ESD_merge_PNP_20

HVESD.E.1_PNP_20 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD perpendicular to PPOD direction} == ^HVESD_E_1_PNP_20
  A = EXPAND EDGE EMI_L_EDGE_PNP_20 OUTSIDE BY HVESD_E_1_PNP_20
  (A OR EMIOD_ESD_PNP_20) XOR HVNW_merge_PNP_20
}

HVESD.E.2_PNP_20 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD along PPOD direction} == ^HVESD_E_2_PNP_20
  A = EXPAND EDGE EMI_W_EDGE_PNP_20 OUTSIDE BY HVESD_E_2_PNP_20
  B1 = HOLES ((HVNW OR H60NW) AND CLM_DMY_PNP_20) INNER
  B2 = ((HVNW OR H60NW) AND CLM_DMY_PNP_20) NOT COIN OUTSIDE EDGE B1
  A NOT WITH EDGE B2
}

HVESD.E.3_PNP_20 { @ min and max extension of HV_SHP beyond Collector PPOD == ^HVESD_E_3
  A = SIZE COLOD_ESD_PNP_20 BY HVESD_E_3
  A XOR (HVSHP INTERACT CLM_DMY_PNP_20)
}

HVESD.E.4_PNP_20 { @ min and max extension of HV_SHN beyond Emitter PPOD == ^HVESD_E_4
  A = SIZE EMIOD_ESD_PNP_20 BY HVESD_E_4
  A XOR (HVSHN INTERACT CLM_DMY_PNP_20)
}

  HVESD_HVNW_BASE_PNP_24 = SIZE ((HVNW OR H60NW) AND CLM_DMY_PNP_24) BY HVESD_E_9_PNP_24 UNDEROVER

  HVNW_merge_PNP_24 = (HVNW OR H60NW) AND COL_EMI_ESD_merge_PNP_24
  EMI_L_EDGE_PNP_24 = EMIOD_ESD_PNP_24 INSIDE EDGE COL_EMI_ESD_merge_PNP_24
  EMI_W_EDGE_PNP_24 = EMIOD_ESD_PNP_24 NOT INSIDE EDGE COL_EMI_ESD_merge_PNP_24

HVESD.E.1_PNP_24 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD perpendicular to PPOD direction} == ^HVESD_E_1_PNP_24
  A = EXPAND EDGE EMI_L_EDGE_PNP_24 OUTSIDE BY HVESD_E_1_PNP_24
  (A OR EMIOD_ESD_PNP_24) XOR HVNW_merge_PNP_24
}

HVESD.E.2_PNP_24 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD along PPOD direction} == ^HVESD_E_2_PNP_24
  A = EXPAND EDGE EMI_W_EDGE_PNP_24 OUTSIDE BY HVESD_E_2_PNP_24
  B1 = HOLES ((HVNW OR H60NW) AND CLM_DMY_PNP_24) INNER
  B2 = ((HVNW OR H60NW) AND CLM_DMY_PNP_24) NOT COIN OUTSIDE EDGE B1
  A NOT WITH EDGE B2
}

HVESD.E.3_PNP_24 { @ min and max extension of HV_SHP beyond Collector PPOD == ^HVESD_E_3
  A = SIZE COLOD_ESD_PNP_24 BY HVESD_E_3
  A XOR (HVSHP INTERACT CLM_DMY_PNP_24)
}

HVESD.E.4_PNP_24 { @ min and max extension of HV_SHN beyond Emitter PPOD == ^HVESD_E_4
  A = SIZE EMIOD_ESD_PNP_24 BY HVESD_E_4
  A XOR (HVSHN INTERACT CLM_DMY_PNP_24)
}

  HVESD_HVNW_BASE_PNP_40 = SIZE ((HVNW OR H60NW) AND CLM_DMY_PNP_40) BY HVESD_E_9_PNP_40 UNDEROVER

  HVNW_merge_PNP_40 = (HVNW OR H60NW) AND COL_EMI_ESD_merge_PNP_40
  EMI_L_EDGE_PNP_40 = EMIOD_ESD_PNP_40 INSIDE EDGE COL_EMI_ESD_merge_PNP_40
  EMI_W_EDGE_PNP_40 = EMIOD_ESD_PNP_40 NOT INSIDE EDGE COL_EMI_ESD_merge_PNP_40

HVESD.E.1_PNP_40 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD perpendicular to PPOD direction} == ^HVESD_E_1_PNP_40
  A = EXPAND EDGE EMI_L_EDGE_PNP_40 OUTSIDE BY HVESD_E_1_PNP_40
  (A OR EMIOD_ESD_PNP_40) XOR HVNW_merge_PNP_40
}

HVESD.E.2_PNP_40 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD along PPOD direction} == ^HVESD_E_2_PNP_40
  A = EXPAND EDGE EMI_W_EDGE_PNP_40 OUTSIDE BY HVESD_E_2_PNP_40
  B1 = HOLES ((HVNW OR H60NW) AND CLM_DMY_PNP_40) INNER
  B2 = ((HVNW OR H60NW) AND CLM_DMY_PNP_40) NOT COIN OUTSIDE EDGE B1
  A NOT WITH EDGE B2
}

HVESD.E.3_PNP_40 { @ min and max extension of HV_SHP beyond Collector PPOD == ^HVESD_E_3
  A = SIZE COLOD_ESD_PNP_40 BY HVESD_E_3
  A XOR (HVSHP INTERACT CLM_DMY_PNP_40)
}

HVESD.E.4_PNP_40 { @ min and max extension of HV_SHN beyond Emitter PPOD == ^HVESD_E_4
  A = SIZE EMIOD_ESD_PNP_40 BY HVESD_E_4
  A XOR (HVSHN INTERACT CLM_DMY_PNP_40)
}

  HVESD_HVNW_BASE_PNP_45 = SIZE ((HVNW OR H60NW) AND CLM_DMY_PNP_45) BY HVESD_E_9_PNP_45 UNDEROVER

  HVNW_merge_PNP_45 = (HVNW OR H60NW) AND COL_EMI_ESD_merge_PNP_45
  EMI_L_EDGE_PNP_45 = EMIOD_ESD_PNP_45 INSIDE EDGE COL_EMI_ESD_merge_PNP_45
  EMI_W_EDGE_PNP_45 = EMIOD_ESD_PNP_45 NOT INSIDE EDGE COL_EMI_ESD_merge_PNP_45

HVESD.E.1_PNP_45 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD perpendicular to PPOD direction} == ^HVESD_E_1_PNP_45
  A = EXPAND EDGE EMI_L_EDGE_PNP_45 OUTSIDE BY HVESD_E_1_PNP_45
  (A OR EMIOD_ESD_PNP_45) XOR HVNW_merge_PNP_45
}

HVESD.E.2_PNP_45 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD along PPOD direction} == ^HVESD_E_2_PNP_45
  A = EXPAND EDGE EMI_W_EDGE_PNP_45 OUTSIDE BY HVESD_E_2_PNP_45
  B1 = HOLES ((HVNW OR H60NW) AND CLM_DMY_PNP_45) INNER
  B2 = ((HVNW OR H60NW) AND CLM_DMY_PNP_45) NOT COIN OUTSIDE EDGE B1
  A NOT WITH EDGE B2
}

HVESD.E.3_PNP_45 { @ min and max extension of HV_SHP beyond Collector PPOD == ^HVESD_E_3
  A = SIZE COLOD_ESD_PNP_45 BY HVESD_E_3
  A XOR (HVSHP INTERACT CLM_DMY_PNP_45)
}

HVESD.E.4_PNP_45 { @ min and max extension of HV_SHN beyond Emitter PPOD == ^HVESD_E_4
  A = SIZE EMIOD_ESD_PNP_45 BY HVESD_E_4
  A XOR (HVSHN INTERACT CLM_DMY_PNP_45)
}

  HVESD_HVNW_BASE_PNP_60 = SIZE ((HVNW OR H60NW) AND CLM_DMY_PNP_60) BY HVESD_E_9_PNP_60 UNDEROVER

  HVNW_merge_PNP_60 = (HVNW OR H60NW) AND COL_EMI_ESD_merge_PNP_60
  EMI_L_EDGE_PNP_60 = EMIOD_ESD_PNP_60 INSIDE EDGE COL_EMI_ESD_merge_PNP_60
  EMI_W_EDGE_PNP_60 = EMIOD_ESD_PNP_60 NOT INSIDE EDGE COL_EMI_ESD_merge_PNP_60

HVESD.E.1_PNP_60 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD perpendicular to PPOD direction} == ^HVESD_E_1_PNP_60
  A = EXPAND EDGE EMI_L_EDGE_PNP_60 OUTSIDE BY HVESD_E_1_PNP_60
  (A OR EMIOD_ESD_PNP_60) XOR HVNW_merge_PNP_60
}

HVESD.E.2_PNP_60 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD along PPOD direction} == ^HVESD_E_2_PNP_60
  A = EXPAND EDGE EMI_W_EDGE_PNP_60 OUTSIDE BY HVESD_E_2_PNP_60
  B1 = HOLES ((HVNW OR H60NW) AND CLM_DMY_PNP_60) INNER
  B2 = ((HVNW OR H60NW) AND CLM_DMY_PNP_60) NOT COIN OUTSIDE EDGE B1
  A NOT WITH EDGE B2
}

HVESD.E.3_PNP_60 { @ min and max extension of HV_SHP beyond Collector PPOD == ^HVESD_E_3
  A = SIZE COLOD_ESD_PNP_60 BY HVESD_E_3
  A XOR (HVSHP INTERACT CLM_DMY_PNP_60)
}

HVESD.E.4_PNP_60 { @ min and max extension of HV_SHN beyond Emitter PPOD == ^HVESD_E_4
  A = SIZE EMIOD_ESD_PNP_60 BY HVESD_E_4
  A XOR (HVSHN INTERACT CLM_DMY_PNP_60)
}

  HVESD_HVNW_BASE_PNP_40G12 = SIZE ((HVNW OR H60NW) AND CLM_DMY_PNP_40G12) BY HVESD_E_9_PNP_40G12 UNDEROVER

  HVNW_merge_PNP_40G12 = (HVNW OR H60NW) AND COL_EMI_ESD_merge_PNP_40G12
  EMI_L_EDGE_PNP_40G12 = EMIOD_ESD_PNP_40G12 INSIDE EDGE COL_EMI_ESD_merge_PNP_40G12
  EMI_W_EDGE_PNP_40G12 = EMIOD_ESD_PNP_40G12 NOT INSIDE EDGE COL_EMI_ESD_merge_PNP_40G12

HVESD.E.1_PNP_40G12 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD perpendicular to PPOD direction} == ^HVESD_E_1_PNP_40G12
  A = EXPAND EDGE EMI_L_EDGE_PNP_40G12 OUTSIDE BY HVESD_E_1_PNP_40G12
  (A OR EMIOD_ESD_PNP_40G12) XOR HVNW_merge_PNP_40G12
}

HVESD.E.2_PNP_40G12 { @ min and max extension of {H60NW or HVNW beyond Emitter PPOD along PPOD direction} == ^HVESD_E_2_PNP_40G12
  A = EXPAND EDGE EMI_W_EDGE_PNP_40G12 OUTSIDE BY HVESD_E_2_PNP_40G12
  B1 = HOLES ((HVNW OR H60NW) AND CLM_DMY_PNP_40G12) INNER
  B2 = ((HVNW OR H60NW) AND CLM_DMY_PNP_40G12) NOT COIN OUTSIDE EDGE B1
  A NOT WITH EDGE B2
}

HVESD.E.3_PNP_40G12 { @ min and max extension of HV_SHP beyond Collector PPOD == ^HVESD_E_3
  A = SIZE COLOD_ESD_PNP_40G12 BY HVESD_E_3
  A XOR (HVSHP INTERACT CLM_DMY_PNP_40G12)
}

HVESD.E.4_PNP_40G12 { @ min and max extension of HV_SHN beyond Emitter PPOD == ^HVESD_E_4
  A = SIZE EMIOD_ESD_PNP_40G12 BY HVESD_E_4
  A XOR (HVSHN INTERACT CLM_DMY_PNP_40G12)
}

HVESD.S.2_PNP_7 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_7 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_7
  B = INT [A] < HVESD_W_5_PNP_7 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_7
  D NOT TOUCH BASOD_ESD_PNP_7
}

HVESD.S.3_PNP_7 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_7 um
  A = INT [COL_EMI_ESD_PNP_7] < HVESD_W_5_PNP_7 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_7 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_7
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_7 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_7 um
  A = INT [COL_EMI_ESD_PNP_7] < HVESD_W_5_PNP_7 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_7 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_7
  C AND CO
}

HVESD.W.4_PNP_7 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_7 
	INT BASOD_ESD_PNP_7 < HVESD_W_4_PNP_7 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_7 BY HVESD_W_4_PNP_7/2 UNDEROVER
}

HVESD.W.5_PNP_7 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_7 
  INT COLOD_ESD_PNP_7 < HVESD_W_5_PNP_7 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_7 BY HVESD_W_5_PNP_7/2 UNDEROVER
}

HVESD.W.6_PNP_7 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_7 
  INT EMIOD_ESD_PNP_7 < HVESD_W_6_PNP_7 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_7 BY HVESD_W_6_PNP_7/2 UNDEROVER
}
HVESD.S.2_PNP_12 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_12 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_12
  B = INT [A] < HVESD_W_5_PNP_12 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_12
  D NOT TOUCH BASOD_ESD_PNP_12
}

HVESD.S.3_PNP_12 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_12 um
  A = INT [COL_EMI_ESD_PNP_12] < HVESD_W_5_PNP_12 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_12 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_12
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_12 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_12 um
  A = INT [COL_EMI_ESD_PNP_12] < HVESD_W_5_PNP_12 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_12 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_12
  C AND CO
}

HVESD.W.4_PNP_12 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_12 
	INT BASOD_ESD_PNP_12 < HVESD_W_4_PNP_12 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_12 BY HVESD_W_4_PNP_12/2 UNDEROVER
}

HVESD.W.5_PNP_12 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_12 
  INT COLOD_ESD_PNP_12 < HVESD_W_5_PNP_12 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_12 BY HVESD_W_5_PNP_12/2 UNDEROVER
}

HVESD.W.6_PNP_12 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_12 
  INT EMIOD_ESD_PNP_12 < HVESD_W_6_PNP_12 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_12 BY HVESD_W_6_PNP_12/2 UNDEROVER
}
HVESD.S.2_PNP_20 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_20 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_20
  B = INT [A] < HVESD_W_5_PNP_20 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_20
  D NOT TOUCH BASOD_ESD_PNP_20
}

HVESD.S.3_PNP_20 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_20 um
  A = INT [COL_EMI_ESD_PNP_20] < HVESD_W_5_PNP_20 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_20 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_20
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_20 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_20 um
  A = INT [COL_EMI_ESD_PNP_20] < HVESD_W_5_PNP_20 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_20 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_20
  C AND CO
}

HVESD.W.4_PNP_20 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_20 
	INT BASOD_ESD_PNP_20 < HVESD_W_4_PNP_20 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_20 BY HVESD_W_4_PNP_20/2 UNDEROVER
}

HVESD.W.5_PNP_20 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_20 
  INT COLOD_ESD_PNP_20 < HVESD_W_5_PNP_20 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_20 BY HVESD_W_5_PNP_20/2 UNDEROVER
}

HVESD.W.6_PNP_20 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_20 
  INT EMIOD_ESD_PNP_20 < HVESD_W_6_PNP_20 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_20 BY HVESD_W_6_PNP_20/2 UNDEROVER
}
HVESD.S.2_PNP_24 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_24 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_24
  B = INT [A] < HVESD_W_5_PNP_24 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_24
  D NOT TOUCH BASOD_ESD_PNP_24
}

HVESD.S.3_PNP_24 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_24 um
  A = INT [COL_EMI_ESD_PNP_24] < HVESD_W_5_PNP_24 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_24 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_24
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_24 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_24 um
  A = INT [COL_EMI_ESD_PNP_24] < HVESD_W_5_PNP_24 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_24 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_24
  C AND CO
}

HVESD.W.4_PNP_24 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_24 
	INT BASOD_ESD_PNP_24 < HVESD_W_4_PNP_24 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_24 BY HVESD_W_4_PNP_24/2 UNDEROVER
}

HVESD.W.5_PNP_24 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_24 
  INT COLOD_ESD_PNP_24 < HVESD_W_5_PNP_24 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_24 BY HVESD_W_5_PNP_24/2 UNDEROVER
}

HVESD.W.6_PNP_24 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_24 
  INT EMIOD_ESD_PNP_24 < HVESD_W_6_PNP_24 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_24 BY HVESD_W_6_PNP_24/2 UNDEROVER
}
HVESD.S.2_PNP_40 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_40 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_40
  B = INT [A] < HVESD_W_5_PNP_40 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_40
  D NOT TOUCH BASOD_ESD_PNP_40
}

HVESD.S.3_PNP_40 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_40 um
  A = INT [COL_EMI_ESD_PNP_40] < HVESD_W_5_PNP_40 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_40 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_40
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_40 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_40 um
  A = INT [COL_EMI_ESD_PNP_40] < HVESD_W_5_PNP_40 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_40 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_40
  C AND CO
}

HVESD.W.4_PNP_40 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_40 
	INT BASOD_ESD_PNP_40 < HVESD_W_4_PNP_40 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_40 BY HVESD_W_4_PNP_40/2 UNDEROVER
}

HVESD.W.5_PNP_40 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_40 
  INT COLOD_ESD_PNP_40 < HVESD_W_5_PNP_40 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_40 BY HVESD_W_5_PNP_40/2 UNDEROVER
}

HVESD.W.6_PNP_40 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_40 
  INT EMIOD_ESD_PNP_40 < HVESD_W_6_PNP_40 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_40 BY HVESD_W_6_PNP_40/2 UNDEROVER
}
HVESD.S.2_PNP_45 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_45 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_45
  B = INT [A] < HVESD_W_5_PNP_45 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_45
  D NOT TOUCH BASOD_ESD_PNP_45
}

HVESD.S.3_PNP_45 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_45 um
  A = INT [COL_EMI_ESD_PNP_45] < HVESD_W_5_PNP_45 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_45 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_45
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_45 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_45 um
  A = INT [COL_EMI_ESD_PNP_45] < HVESD_W_5_PNP_45 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_45 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_45
  C AND CO
}

HVESD.W.4_PNP_45 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_45 
	INT BASOD_ESD_PNP_45 < HVESD_W_4_PNP_45 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_45 BY HVESD_W_4_PNP_45/2 UNDEROVER
}

HVESD.W.5_PNP_45 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_45 
  INT COLOD_ESD_PNP_45 < HVESD_W_5_PNP_45 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_45 BY HVESD_W_5_PNP_45/2 UNDEROVER
}

HVESD.W.6_PNP_45 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_45 
  INT EMIOD_ESD_PNP_45 < HVESD_W_6_PNP_45 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_45 BY HVESD_W_6_PNP_45/2 UNDEROVER
}
HVESD.S.2_PNP_60 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_60 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_60
  B = INT [A] < HVESD_W_5_PNP_60 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_60
  D NOT TOUCH BASOD_ESD_PNP_60
}

HVESD.S.3_PNP_60 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_60 um
  A = INT [COL_EMI_ESD_PNP_60] < HVESD_W_5_PNP_60 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_60 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_60
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_60 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_60 um
  A = INT [COL_EMI_ESD_PNP_60] < HVESD_W_5_PNP_60 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_60 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_60
  C AND CO
}

HVESD.W.4_PNP_60 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_60 
	INT BASOD_ESD_PNP_60 < HVESD_W_4_PNP_60 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_60 BY HVESD_W_4_PNP_60/2 UNDEROVER
}

HVESD.W.5_PNP_60 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_60 
  INT COLOD_ESD_PNP_60 < HVESD_W_5_PNP_60 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_60 BY HVESD_W_5_PNP_60/2 UNDEROVER
}

HVESD.W.6_PNP_60 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_60 
  INT EMIOD_ESD_PNP_60 < HVESD_W_6_PNP_60 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_60 BY HVESD_W_6_PNP_60/2 UNDEROVER
}
HVESD.S.2_PNP_40G12 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_40G12 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_40G12
  B = INT [A] < HVESD_W_5_PNP_40G12 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_40G12
  D NOT TOUCH BASOD_ESD_PNP_40G12
}

HVESD.S.3_PNP_40G12 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_40G12 um
  A = INT [COL_EMI_ESD_PNP_40G12] < HVESD_W_5_PNP_40G12 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_40G12 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_40G12
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_40G12 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_40G12 um
  A = INT [COL_EMI_ESD_PNP_40G12] < HVESD_W_5_PNP_40G12 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_40G12 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_40G12
  C AND CO
}

HVESD.W.4_PNP_40G12 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_40G12 
	INT BASOD_ESD_PNP_40G12 < HVESD_W_4_PNP_40G12 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_40G12 BY HVESD_W_4_PNP_40G12/2 UNDEROVER
}

HVESD.W.5_PNP_40G12 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_40G12 
  INT COLOD_ESD_PNP_40G12 < HVESD_W_5_PNP_40G12 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_40G12 BY HVESD_W_5_PNP_40G12/2 UNDEROVER
}

HVESD.W.6_PNP_40G12 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_40G12 
  INT EMIOD_ESD_PNP_40G12 < HVESD_W_6_PNP_40G12 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_40G12 BY HVESD_W_6_PNP_40G12/2 UNDEROVER
}
HVESD.S.2_PNP_12G12 { @ Min and Max space from collector OD to base od in finger width direction == ^HVESD_S_2_PNP_12G12 um
  A = HVESD_EC_OUT INTERACT COL_EMI_ESD_PNP_12G12
  B = INT [A] < HVESD_W_5_PNP_12G12 + GRID OPPOSITE
  C = B NOT TOUCH EDGE HVESD_EC_gap
  D = EXPAND EDGE C OUTSIDE BY HVESD_S_2_PNP_12G12
  D NOT TOUCH BASOD_ESD_PNP_12G12
}

HVESD.S.3_PNP_12G12 { @ Min and Max space from collector OD to base OD in finger length direction == ^HVESD_S_3_PNP_12G12 um
  A = INT [COL_EMI_ESD_PNP_12G12] < HVESD_W_5_PNP_12G12 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_12G12 NOT TOUCH EDGE A
  C = EXPAND EDGE B OUTSIDE BY HVESD_S_3_PNP_12G12
  C NOT TOUCH HVESD_BOD
}

HVESD.E.5_PNP_12G12 { @ min extension of P+ OD end-of-line beyond CO >= ^HVESD_E_5_PNP_12G12 um
  A = INT [COL_EMI_ESD_PNP_12G12] < HVESD_W_5_PNP_12G12 + GRID OPPOSITE
  B = COL_EMI_ESD_PNP_12G12 NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_5_PNP_12G12
  C AND CO
}

HVESD.W.4_PNP_12G12 { @ min and max width of Base NPOD == ^HVESD_W_4_PNP_12G12 
	INT BASOD_ESD_PNP_12G12 < HVESD_W_4_PNP_12G12 ABUT < 90 SINGULAR REGION
	SIZE BASOD_ESD_PNP_12G12 BY HVESD_W_4_PNP_12G12/2 UNDEROVER
}

HVESD.W.5_PNP_12G12 { @ min and max width of Collector PPOD == ^HVESD_W_5_PNP_12G12 
  INT COLOD_ESD_PNP_12G12 < HVESD_W_5_PNP_12G12 ABUT < 90 SINGULAR REGION
  SIZE COLOD_ESD_PNP_12G12 BY HVESD_W_5_PNP_12G12/2 UNDEROVER
}

HVESD.W.6_PNP_12G12 { @ min and max width of Emitter PPOD == ^HVESD_W_6_PNP_12G12 
  INT EMIOD_ESD_PNP_12G12 < HVESD_W_6_PNP_12G12 ABUT < 90 SINGULAR REGION
  SIZE EMIOD_ESD_PNP_12G12 BY HVESD_W_6_PNP_12G12/2 UNDEROVER
}

HVESD.O.1 { @ Min and Max RPO overlap of collector PP in finger width direction == ^HVESD_O_1 um
  A = RPO AND COLOD_ESD_PNP_7
  INT A < HVESD_O_1 ABUT < 90 SINGULAR REGION
  SIZE A BY HVESD_O_1/2 UNDEROVER
  COLOD_ESD_PNP_7 NOT INTERACT A
}

HVESD.O.2 { @ Min and Max RPO overlap of emitter PP in finger width direction == ^HVESD_O_2 um
  A = RPO AND EMIOD_ESD_PNP_7
  INT A < HVESD_O_2 ABUT < 90 SINGULAR REGION
  SIZE A BY HVESD_O_2/2 UNDEROVER
  EMIOD_ESD_PNP_7 NOT INTERACT A
}

HVESD.E.6 { @ Min and Max RPO extension on {collector PP or emitter PP} in finger width direction == ^HVESD_E_6 um
  A = RPO INSIDE EDGE COL_EMI_ESD_merge_PNP_7
  B = (RPO INTERACT COL_EMI_ESD_merge_PNP_7) NOT TOUCH EDGE A
  C = EXPAND EDGE B INSIDE BY HVESD_E_6
  C NOT TOUCH COLOD_ESD_PNP_7
}


HVESD.E.7_PNP_12 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_12 um
  A = BASOD_ESD_PNP_12 OR BASOD_ESD_PNP_12_H
  B = SIZE PPOD_H_BJT_PNP_12 BY -HVESD_E_7_PNP_12
  A XOR B
}

HVESD.E.7_PNP_20 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_20 um
  A = BASOD_ESD_PNP_20 OR BASOD_ESD_PNP_20_H
  B = SIZE PPOD_H_BJT_PNP_20 BY -HVESD_E_7_PNP_20
  A XOR B
}

HVESD.E.7_PNP_24 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_24 um
  A = BASOD_ESD_PNP_24 OR BASOD_ESD_PNP_24_H
  B = SIZE PPOD_H_BJT_PNP_24 BY -HVESD_E_7_PNP_24
  A XOR B
}

HVESD.E.7_PNP_40 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_40 um
  A = BASOD_ESD_PNP_40 OR BASOD_ESD_PNP_40_H
  B = SIZE PPOD_H_BJT_PNP_40 BY -HVESD_E_7_PNP_40
  A XOR B
}

HVESD.E.7_PNP_45 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_45 um
  A = BASOD_ESD_PNP_45 OR BASOD_ESD_PNP_45_H
  B = SIZE PPOD_H_BJT_PNP_45 BY -HVESD_E_7_PNP_45
  A XOR B
}

HVESD.E.7_PNP_60 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_60 um
  A = BASOD_ESD_PNP_60 OR BASOD_ESD_PNP_60_H
  B = SIZE PPOD_H_BJT_PNP_60 BY -HVESD_E_7_PNP_60
  A XOR B
}

HVESD.E.7_PNP_40G12 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_40G12 um
  A = BASOD_ESD_PNP_40G12 OR BASOD_ESD_PNP_40G12_H
  B = SIZE PPOD_H_BJT_PNP_40G12 BY -HVESD_E_7_PNP_40G12
  A XOR B
}

HVESD.E.7_PNP_12G12 { @ Min and max extension of PP isolation-ring OD beyond Base NPOD ring == ^HVESD_E_7_PNP_12G12 um
  A = BASOD_ESD_PNP_12G12 OR BASOD_ESD_PNP_12G12_H
  B = SIZE PPOD_H_BJT_PNP_12G12 BY -HVESD_E_7_PNP_12G12
  A XOR B
}

HVESD.E.8 { @ Min and max extension of HVNW beyond Base NPOD ring for PNP BJT clamps which Collector PPOD
	    @ are totally inside HVNW == ^HVESD_E_8
  A = HVNW INTERACT (COLOD_ESD_PNP_12 OR COLOD_ESD_PNP_12G12)
  B = (BASOD_ESD_PNP_12 OR BASOD_ESD_PNP_12G12) OR (BASOD_ESD_PNP_12_H OR BASOD_ESD_PNP_12G12_H)
  C = SIZE B BY HVESD_E_8
  C XOR A
}


HVESD.E.9_PNP_20 { @ Min and max extension of HVNW/H60NW beyond inward Base NPOD ring == ^HVESD_E_9_PNP_20
  A = HVESD_HVNW_BASE_PNP_20 AND BASOD_ESD_PNP_20_H
  B = BASOD_ESD_PNP_20 TOUCH EDGE BASOD_ESD_PNP_20_H
  C = EXPAND EDGE B OUTSIDE BY HVESD_E_9_PNP_20
  A XOR C
}

HVESD.E.10_PNP_20 { @ Min and max extension of HVNW/H60NW beyond outward Base NPOD ring == ^HVESD_E_10_PNP_20
  A = BASOD_ESD_PNP_20_H OR BASOD_ESD_PNP_20
  B = SIZE A BY HVESD_E_10_PNP_20
  C = (HVNW OR H60NW) INTERACT BASOD_ESD_PNP_20
  D = C OR (HOLES C INNER)
  D XOR B
}

HVESD.E.9_PNP_24 { @ Min and max extension of HVNW/H60NW beyond inward Base NPOD ring == ^HVESD_E_9_PNP_24
  A = HVESD_HVNW_BASE_PNP_24 AND BASOD_ESD_PNP_24_H
  B = BASOD_ESD_PNP_24 TOUCH EDGE BASOD_ESD_PNP_24_H
  C = EXPAND EDGE B OUTSIDE BY HVESD_E_9_PNP_24
  A XOR C
}

HVESD.E.10_PNP_24 { @ Min and max extension of HVNW/H60NW beyond outward Base NPOD ring == ^HVESD_E_10_PNP_24
  A = BASOD_ESD_PNP_24_H OR BASOD_ESD_PNP_24
  B = SIZE A BY HVESD_E_10_PNP_24
  C = (HVNW OR H60NW) INTERACT BASOD_ESD_PNP_24
  D = C OR (HOLES C INNER)
  D XOR B
}

HVESD.E.9_PNP_40 { @ Min and max extension of HVNW/H60NW beyond inward Base NPOD ring == ^HVESD_E_9_PNP_40
  A = HVESD_HVNW_BASE_PNP_40 AND BASOD_ESD_PNP_40_H
  B = BASOD_ESD_PNP_40 TOUCH EDGE BASOD_ESD_PNP_40_H
  C = EXPAND EDGE B OUTSIDE BY HVESD_E_9_PNP_40
  A XOR C
}

HVESD.E.10_PNP_40 { @ Min and max extension of HVNW/H60NW beyond outward Base NPOD ring == ^HVESD_E_10_PNP_40
  A = BASOD_ESD_PNP_40_H OR BASOD_ESD_PNP_40
  B = SIZE A BY HVESD_E_10_PNP_40
  C = (HVNW OR H60NW) INTERACT BASOD_ESD_PNP_40
  D = C OR (HOLES C INNER)
  D XOR B
}

HVESD.E.9_PNP_45 { @ Min and max extension of HVNW/H60NW beyond inward Base NPOD ring == ^HVESD_E_9_PNP_45
  A = HVESD_HVNW_BASE_PNP_45 AND BASOD_ESD_PNP_45_H
  B = BASOD_ESD_PNP_45 TOUCH EDGE BASOD_ESD_PNP_45_H
  C = EXPAND EDGE B OUTSIDE BY HVESD_E_9_PNP_45
  A XOR C
}

HVESD.E.10_PNP_45 { @ Min and max extension of HVNW/H60NW beyond outward Base NPOD ring == ^HVESD_E_10_PNP_45
  A = BASOD_ESD_PNP_45_H OR BASOD_ESD_PNP_45
  B = SIZE A BY HVESD_E_10_PNP_45
  C = (HVNW OR H60NW) INTERACT BASOD_ESD_PNP_45
  D = C OR (HOLES C INNER)
  D XOR B
}

HVESD.E.9_PNP_60 { @ Min and max extension of HVNW/H60NW beyond inward Base NPOD ring == ^HVESD_E_9_PNP_60
  A = HVESD_HVNW_BASE_PNP_60 AND BASOD_ESD_PNP_60_H
  B = BASOD_ESD_PNP_60 TOUCH EDGE BASOD_ESD_PNP_60_H
  C = EXPAND EDGE B OUTSIDE BY HVESD_E_9_PNP_60
  A XOR C
}

HVESD.E.10_PNP_60 { @ Min and max extension of HVNW/H60NW beyond outward Base NPOD ring == ^HVESD_E_10_PNP_60
  A = BASOD_ESD_PNP_60_H OR BASOD_ESD_PNP_60
  B = SIZE A BY HVESD_E_10_PNP_60
  C = (HVNW OR H60NW) INTERACT BASOD_ESD_PNP_60
  D = C OR (HOLES C INNER)
  D XOR B
}

HVESD.E.9_PNP_40G12 { @ Min and max extension of HVNW/H60NW beyond inward Base NPOD ring == ^HVESD_E_9_PNP_40G12
  A = HVESD_HVNW_BASE_PNP_40G12 AND BASOD_ESD_PNP_40G12_H
  B = BASOD_ESD_PNP_40G12 TOUCH EDGE BASOD_ESD_PNP_40G12_H
  C = EXPAND EDGE B OUTSIDE BY HVESD_E_9_PNP_40G12
  A XOR C
}

HVESD.E.10_PNP_40G12 { @ Min and max extension of HVNW/H60NW beyond outward Base NPOD ring == ^HVESD_E_10_PNP_40G12
  A = BASOD_ESD_PNP_40G12_H OR BASOD_ESD_PNP_40G12
  B = SIZE A BY HVESD_E_10_PNP_40G12
  C = (HVNW OR H60NW) INTERACT BASOD_ESD_PNP_40G12
  D = C OR (HOLES C INNER)
  D XOR B
}

HVESD.E.11 { @ Min and max extension of NW beyond NPOD ring == ^HVESD_E_11
  A = SIZE (BASOD_ESD_PNP_7 OR BASOD_ESD_PNP_7_H) BY HVESD_E_11
  B = NWELL INTERACT CLM_DMY_PNP_7
  A XOR B
}

HVESD.E.12 { @ Min and max enclosure of Base ring (HVNW or H60NW) by NBL == 0
  A = (HVNW OR H60NW) INTERACT ((((CLM_DMY_PNP_20 OR CLM_DMY_PNP_24) OR CLM_DMY_PNP_40) OR CLM_DMY_PNP_40G12) OR CLM_DMY_PNP_60)
  B = (HOLES A INNER) OR A
  C = NBL INTERACT A
  B XOR C
}

HVESD.E.13 { @ Min and max enclosure of Base ring NW by OD2 == 0
  A = OD2 INTERACT BASOD_ESD_PNP_7
  B = NWELL INTERACT CLM_DMY_PNP_7
  A XOR B
}

HVESD.E.16 { @ Min and max overlap of NBL and Base ring H60NW for 45V PNP BJT clamp == ^HVESD_E_16
  A = H60NW INTERACT CLM_DMY_PNP_45
  B = SIZE A BY (HVESD_E_9_PNP_45 + HVESD_E_10_PNP_45 + HVESD_W_4_PNP_45)/2 - GRID UNDEROVER
  B NOT INTERACT NBL
  NBL_PNP_45 = NBL INTERACT CLM_DMY_PNP_45
  C = SIZE NBL_PNP_45 BY -HVESD_E_16
  (HOLES B) XOR C
}

HVESD_EOD_BOD = HVESD_BOD OR HVESD_EOD
CONNECT HVESD_EOD_BOD M1x BY COi
HVESD.R.2 { @ emitter OD and base OD must be connected together.
  HV_ESD_PNP INTERACT HVESD_EOD_BOD BY NET > 1
}

HVESD.W.7 { @ Unit finger width of single and multi-finger diodes == ^HVESD_W_7
  INT Finger_ESD_DIO < HVESD_W_7 ABUT < 90 SINGULAR REGION
  SIZE Finger_ESD_DIO BY HVESD_W_7/2 UNDEROVER
}

HVESD.W.8 { @ Unit finger length of single and multi-finger diodes >= ^HVESD_W_8
  NOT ENCLOSE RECTANGLE Finger_ESD_DIO HVESD_W_7 HVESD_W_8 ORTHOGONAL ONLY
  PATH LENGTH Finger_L_ESD_DIO < HVESD_W_8

}

CONNECT ESD_HVDIO Finger_ESD_DIO
HVESD.W.9 { @ Total perimeter of HVESD diodes >= ^HVESD_W_9
  NET AREA RATIO ESD_HVDIO Finger_ESD_DIO < HVESD_W_9
  [PERIMETER(Finger_ESD_DIO)] RDB HVESD.W.9 ESD_HVDIO Finger_ESD_DIO
}

#IFDEF PARASITIC_ESD
HVNW_HVDMYi = HVNWi AND HVOXi
HVNW_HVDMY = HVNW_HVDMYi NOT EXCL
HVNW_HVDMY_PAD = NET AREA RATIO HVNW_HVDMY CBi UBMn UBMd > 0 [!!AREA(CBi) + !!AREA(UBMn)+ !!AREA(UBMd)]
HVESD.S.4 { @ Min spacing between two HVNW connected to different potential PADs in the same HV region >= ^HVESD_S_4
  A = EXT HVNW_HVDMY_PAD < HVESD_S_4 ABUT < 90 SPACE NOT CONNECTED SINGULAR REGION
  A INTERACT HVOX == 1
}

HVESD.E.14 { @ Min extension of HV beyond HVNW when two HVNW are connected to different potential PADs in 
	     @ different HV region >= ^HVESD_E_14
  A = ENC HVNW_HVDMY_PAD HVOX < HVESD_E_14 ABUT < 90 SINGULAR REGION 
  B = EXT HVNW_HVDMY_PAD < 300 ABUT < 90 SPACE NOT CONNECTED SINGULAR REGION
  C = B INTERACT HVOX > 1
  A INTERACT (HVNW_HVDMY_PAD INTERACT C)
}

HVNW_NBLu = (HVNWi INSIDE NBL) NOT EXCL
HVNW_NBL_PAD = NET AREA RATIO HVNW_NBLu CBi UBMn UBMd > 0 [!!AREA(CBi) + !!AREA(UBMn)+ !!AREA(UBMd)]
HVESD.S.5 { @ Min spacing between two {HVNW INSIDE NBL} connected to different potential PADs in the same HV region >= ^HVESD_S_5
  A = EXT HVNW_NBL_PAD < HVESD_S_5 ABUT < 90 SPACE NOT CONNECTED SINGULAR REGION
  A INTERACT HVOX == 1
}

HVESD.E.15 { @ Min extension of HV beyond {HVNW INSIDE NBL} when two HVNW are connected to different 
	     @ potential PADs in different HV region >= ^HVESD_E_15
  A = ENC HVNW_NBL_PAD HVOX < HVESD_E_15 ABUT < 90 SINGULAR REGION 
  B = EXT HVNW_NBL_PAD < 300 ABUT < 90 SPACE NOT CONNECTED SINGULAR REGION
  C = B INTERACT HVOX > 1
  A INTERACT (HVNW_NBL_PAD INTERACT C)
}

SCONNECT M1x HVSHN BY COi
HVSHN_HVNW = HVSHN NOT INSIDE HVNW
HVSHN_PAD = NET AREA RATIO HVSHN_HVNW CBi UBMn UBMd > 0 [!!AREA(CBi) + !!AREA(UBMn)+ !!AREA(UBMd)]
HVNW_PAD = NET AREA RATIO HVNWi CBi UBMn UBMd > 0 [!!AREA(CBi) + !!AREA(UBMn)+ !!AREA(UBMd)]
NWELu = STAMP NWELL BY NWELLi
NWEL_PAD = NET AREA RATIO NWELu CBi UBMn UBMd > 0 [!!AREA(CBi) + !!AREA(UBMn)+ !!AREA(UBMd)]
HVESD.S.6 { @ Min spacing between HVNW and {NW OR (SH_N NOT INSIDE HVNW)} connected to different potential PADs >= ^HVESD_S_6
	    @ For {NW OR (SH_N NOT INSIDE HVNW)} isolated by HVNW with NBL, this rule could be waived.
  A = (HOLES NBL_ISO_RING) NOT NBL_ISO_RING
  B = NWEL_PAD NOT INSIDE A
  C = HVSHN_PAD NOT INSIDE A
  EXT HVNW_PAD B < HVESD_S_6 ABUT < 90 NOT CONNECTED SINGULAR REGION
  EXT HVNW_PAD C < HVESD_S_6 ABUT < 90 NOT CONNECTED SINGULAR REGION
}

#ENDIF


//Latch-Up Guidance
//==================== 
LAT.2 { @ I/O - NMOS to PMOS space >= 20um
 EXT EPMOS ENMOS < 20 ABUT>0<90 SINGULAR
}

LAT.3P { @ N-well pickup OD to PMOS space <= 20um
  NWELLi_US = SIZE (NWELLi OR NWLVTi) BY - 0.105 // 0.15/1.415 = 0.105
  // 20/1.415 = 14.134, (0.6 + 2 * 0.105)/1.415 = 0.572
  NTAP_OS = SIZE NTAP BY 14.134 INSIDE OF NWELLi_US STEP 0.572 TRUNCATE 0.572
  PASD_FAR = PASD NOT NTAP_OS
  PASD_FAR_FILTER = SIZE PASD_FAR BY 20
  NTAP_NEAR = NTAP INTERACT PASD_FAR_FILTER

  // doing an more accurate sizing
  NTAP_NEAR_OS = SIZE NTAP_NEAR BY 0.10
  NTAP_90_CORNER = INT NTAP_NEAR_OS < 0.06 ABUT==90 INTERSECTING ONLY REGION
  NTAP_OCT = NTAP_NEAR_OS NOT NTAP_90_CORNER
  NTAP_135_CORNER = INT NTAP_OCT < 0.04 ABUT>134<136 INTERSECTING ONLY REGION
  NTAP_HEX = NTAP_OCT NOT NTAP_135_CORNER
  // 20-0.10 = 19.9
  NTAP_HEX_OS = SIZE NTAP_HEX BY 19.9 INSIDE OF NWELLi_US STEP 0.572 TRUNCATE 0.572
  (PASD_FAR NOT NTAP_HEX_OS) NOT INTERACT ((MTP_2T2C AND MCEL) OR IOLDNMOS_OD)
}
LAT.3N { @ P-well pickup OD to NMOS space <= 20um
  PWELLi_US = SIZE PWELLi BY - 0.105 // 0.15/1.415 = 0.105
  // 20/1.415 = 14.134, (1.2 + 2 * 0.105)/1.415 = 0.996
  PTAP_OS = SIZE PTAP BY 14.134 INSIDE OF PWELLi_US STEP 0.996 TRUNCATE 0.996
  NASD_FAR = NASD NOT PTAP_OS
  NASD_FAR_FILTER = SIZE NASD_FAR BY 20
  PTAP_NEAR = PTAP INTERACT NASD_FAR_FILTER

  // doing an more accurate sizing
  PTAP_NEAR_OS = SIZE PTAP_NEAR BY 0.10
  PTAP_90_CORNER = INT PTAP_NEAR_OS < 0.06 ABUT==90 INTERSECTING ONLY REGION
  PTAP_OCT = PTAP_NEAR_OS NOT PTAP_90_CORNER
  PTAP_135_CORNER = INT PTAP_OCT < 0.04 ABUT>134<136 INTERSECTING ONLY REGION
  PTAP_HEX = PTAP_OCT NOT PTAP_135_CORNER
  // 20-0.10 = 19.9
  PTAP_HEX_OS = SIZE PTAP_HEX BY 19.9 INSIDE OF PWELLi_US STEP 0.996 TRUNCATE 0.996
  (NASD_FAR NOT PTAP_HEX_OS) NOT INTERACT ((MTP_2T2C AND MCEL) OR IOLDNMOS_OD)
}




// Guidance for I/O
//======================

EGTE   = ( SDI AND ALL_GATE ) NOT HVOX
EGTE_W = ( POLY INTERACT EGTE ) INSIDE EDGE OD
ENSD1  = ( ENSD INTERACT ESD ) NOT HVOX
ENSD2  = ( ENSD NOT ENSD1 ) NOT HVOX
HNSD  = ENSD1 AND OD2
ERPO   = ( RPO AND SDI ) NOT HVOX
ECO    = (( CO AND SDI) AND OD ) NOT HVOX

HNSD_NCO = (HNSD NOT INTERACT ECO) NOT INTERACT PTAP
HNSD_WCO = HNSD NOT HNSD_NCO
EPSD_NCO = (EPSD NOT INTERACT ECO) NOT INTERACT NTAP
EPSD_WCO = EPSD NOT EPSD_NCO
ENSD1_NCO = (ENSD1 NOT INTERACT ECO) NOT INTERACT PTAP
ENSD1_WCO = ENSD1 NOT ENSD1_NCO
ENSD2_NCO = (ENSD2 NOT INTERACT ECO) NOT INTERACT PTAP
ENSD2_WCO = ENSD2 NOT ENSD2_NCO

ESD.5 { @ I/O - unit finger width 15 - 60um  
  EGATE_X = EGTE NOT DRCDMY
  EGATE_W = ENC [EGATE_X] POLY < 0.001 ABUT == 0 SINGULAR          
  PATH LENGTH EGATE_W > 0 < 15
  PATH LENGTH EGATE_W > 60 < 999
}

LEGT = EGTE NOT OD2       // 2.5V IO ESD MOS
HEGT = EGTE AND OD2
HEGN = HEGT AND NP
HEG1 = HEGN INTERACT ESD  // 5.0V IO ESD NMOS w/i ESD implant
HEG2 = HEGT NOT HEG1      // 5.0V IO ESD MOS w/o ESD implant

ESD.6b { @ I/O - Min. width of RPO on drain side for 2.5V/5V NMOS without ESD implant >=1.95um
   X = RPO INSIDE EDGE ENSD 
   ENC EGTE X < 1.95 ABUT < 90 REGION  
}   
ESD.6c { @ I/O - Min. width of RPO on drain side for 2.5V/5V PMOS >=1.95um
   X = RPO INSIDE EDGE EPSD 
   ENC EGTE X < 1.95 ABUT < 90 REGION  
}   
ESD.9 { @ I/O - CO to poly edge. < 0.5um
  ERPOH = HOLES ERPO
  ERPOA = ERPOH OR ERPO
  ECOS = ECO OUTSIDE ERPOA
  EXT ECOS EGTE_W < 0.5 ABUT<90 OPPOSITE REGION
}
ESD.23 { @ The overlap of RPO and POLY ==0.06um
  RPO_P = RPO AND EGTE
  INT RPO_P < 0.06 ABUT < 90 SINGULAR REGION    
  SIZE  RPO_P BY 0.06/2 UNDEROVER
}
ESD.24 { @ butting Or inserted pickup between source diffusion of ESD device are not allowed.
         @ only check butting.
    ( EPSD INTERACT EGTE ) INTERACT NPOD
    ( ENSD INTERACT EGTE ) INTERACT PPOD	
}
ESD.11a { @ 2.5V IO ESD NMOS gate length < 0.3um
  INT LEGT < 0.3 ABUT<90 SINGULAR REGION
}
ESD.11b2 { @ 5.0V IO ESD NMOS without ESD implant gate length < 0.6 um
  INT HEGN < 0.6 ABUT<90 SINGULAR REGION
}
ESD.11c { @ 5.0V IO ESD PMOS  gate length < 0.5um
  HEGP = HEGT AND PP 
  INT HEGP < 0.5 ABUT<90 SINGULAR REGION
}

ESD.warn.1 { @ All of ESD(2.5V/5V N/P MOS) devices GATE is better to be covered with RPO .
    EGTE OUTSIDE RPO   
}
ESD.warn.2 { @ There is NO ESD process in this BCD process. If the customer needs the ESD implant process,
             @ please contact TSMC in advance.
    COPY ESDi    
}

// Dummy Pad
//==========

DP_CO = DPDMY AND CO
DP_V1 = DPDMY AND VIA1
DP_V2 = DPDMY AND VIA2
DP_V3 = DPDMY AND VIA3
DP_VD = DPDMY AND VIAD

ADP.R.0a { @ chip corner dummy pad structure should be M1/M2.../M4
  DPDMY NOT M1
  DPDMY NOT M2
  DPDMY NOT M3
  DPDMY NOT M4
}
ADP.R.0b { @ chip corner dummy pad structure should be VIA1/VIA2../VIA3
  DPDMY NOT ENCLOSE CO
  DPDMY NOT ENCLOSE VIA1
  DPDMY NOT ENCLOSE VIA2
  DPDMY NOT ENCLOSE VIA3
}
ADP.R.0C { @ COs and Vias structure in Dummy Pad
  GRP1 = (DP_CO OR DP_V2) OR DP_VD 
  GRP2 = DP_V1 OR DP_V3
  GRP1 AND GRP2
}
ADP.S.1_CO { @ Minimum space between two CO or Vias at the same level >= 0.68um.
  EXT DP_CO < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.1_V1 { @ Minimum clearance between two CO or Vias at the same level>= 0.68um.
  EXT DP_V1 < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.1_V2 { @ Minimum clearance between two CO or Vias at the same level>= 0.68um.
  EXT DP_V2 < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.1_V3 { @ Minimum clearance between two CO or Vias at the same level>= 0.68um.
  EXT DP_V3 < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.1_VD { @ Minimum clearance between two CO or Vias at the same level >= 0.68um.
  EXT DP_VD < 0.68 ABUT<90 SINGULAR REGION
}
ADP.C.1_CO_V1 { @ Minimum clearance between two CO or Vias at different levels >= 0.23um.
  EXT DP_CO DP_V1 < 0.23 ABUT<90 SINGULAR
  AND DP_CO DP_V1    
}
ADP.C.1_V1_V2 { @ Minimum clearance between two CO or Vias at different levels >= 0.23um.
  EXT DP_V1 DP_V2 < 0.23 ABUT<90 SINGULAR
  AND DP_V1 DP_V2    
}
ADP.C.1_V2_V3 { @ Minimum clearance between two CO or Vias at different levels >= 0.23um.
  EXT DP_V2 DP_V3 < 0.23 ABUT<90 SINGULAR
  AND DP_V2 DP_V3    
}
ADP.C.1_V3_VD { @ Minimum clearance between two CO or Vias at different levels >= 0.23um.
  EXT DP_V3 DP_VD < 0.23 ABUT<90 SINGULAR
  AND DP_V3 DP_VD    
}
ADP.E.1_CO_M1 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_CO M1 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V1_M1 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_V1 M1 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V1_M2 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_V1 M2 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V2_M2 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_V2 M2 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V2_M3 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_V2 M3 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V3_M3 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_V3 M3 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V3_M4 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_V3 M4 < 3 ABUT<90 SINGULAR
}
ADP.E.1_VD_M4 { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_VD M4 < 3 ABUT<90 SINGULAR
}
ADP.E.1_VD_MD { @ Minimum extension of Metal over CO or VIA >= 3um.
  ENC DP_VD MD < 3 ABUT<90 SINGULAR
}
ADP.S.2 { @ Minimum space between two dummy pads>= 2um.
  EXT DPDMY < 2 ABUT<90 SINGULAR REGION
}
ADP.W.3 { @ Maximum width of a dummy pad <= 80um
  DPADG = INT DPDMY <= 80 REGION OPPOSITE ABUT>0<90
  DPDMY NOT DPADG
}
ADP.W.4 { @ Minimum width of a dummy pad >= 40um
  INT DPDMY < 40  ABUT>0<90 SINGULAR
}

//ADP.W.1 checked by VIAx.W.1
//ADP.W.2 checked by CO.W.1

// Power Line
//===========

PL_CO = PLDMY AND CO
PL_V1 = PLDMY AND VIA1
PL_V2 = PLDMY AND VIA2
PL_V3 = PLDMY AND VIA3
PL_VD = PLDMY AND VIAD

ADP.R.0D { @ Via structure in Power Line
  GRP1 = (PL_CO OR PL_V2) OR PL_VD 
  GRP2 = PL_V1 OR PL_V3
  GRP1 AND GRP2
}

ADP.S.4_CO { @ Minimum space between two CO or Vias at the same level>= 0.68um.
  EXT PL_CO < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.4_V1 { @ Minimum space between two CO or Vias at the same level>= 0.68um.
  EXT PL_V1 < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.4_V2 { @ Minimum space between two CO or Vias at the same level>= 0.68um.
  EXT PL_V2 < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.4_V3 { @ Minimum space between two CO or Vias at the same level>= 0.68um.
  EXT PL_V3 < 0.68 ABUT<90 SINGULAR REGION
}
ADP.S.4_VD { @ Minimum space between two CO or Vias at the same level>= 0.68um.
  EXT PL_VD < 0.68 ABUT<90 SINGULAR REGION
}
ADP.C.2_CO_V1 { @ Minimum clearance between two CO or Vias at different levels>= 0.23um.
  EXT PL_CO PL_V1 < 0.23 ABUT<90 SINGULAR
  AND PL_CO PL_V1 
}
ADP.C.2_V1_V2 { @ Minimum clearance between two CO or Vias at different levels>= 0.23um.
  EXT PL_V1 PL_V2 < 0.23 ABUT<90 SINGULAR
  AND PL_V1 PL_V2
}
ADP.C.2_V2_V3 { @ Minimum clearance between two CO or Vias at different levels>= 0.23um.
  EXT PL_V2 PL_V3 < 0.23 ABUT<90 SINGULAR
  AND PL_V2 PL_V3
}
ADP.C.2_V3_VD { @ Minimum clearance between two CO or Vias at different levels>= 0.23um.
  EXT PL_V3 PL_VD < 0.23 ABUT<90 SINGULAR
  AND PL_V3 PL_VD    
}
ADP.E.2_CO_M1 { @ Minimum extension of Metal over CO or VIA>= 0.2um.
  ENC PL_CO M1 < 0.2 ABUT<90 SINGULAR
}
ADP.E.3_CO_PO { @ Minimum extension of POLY over CO>= 0.2um.
  ENC PL_CO POLY < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V1_M1 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_V1 M1 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V1_M2 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_V1 M2 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V2_M2 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_V2 M2 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V2_M3 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_V2 M3 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V3_M3 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_V3 M3 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V3_M4 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_V3 M4 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_VD_M4 { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_VD M4 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_VD_MD { @ Minimum extension of Metal over CO or VIA >= 0.2um.
  ENC PL_VD MD < 0.2 ABUT<90 SINGULAR
}



// LOGO CHECKS
//============
LOGO_EXT = (SIZE LOGO BY 10) NOT LOGO
LOGO_EXT1 = (SIZE LOGO BY 3) NOT LOGO
LOGO.S.1 { @ Min. LOGO space to NW, OD, PO, or Metals (non-dummy patterns) >= 3 um
  LOGO_EXT1 AND NWELLi
  LOGO_EXT1 AND ODi
  LOGO_EXT1 AND POLYi
  LOGO_EXT1 AND M1i
  LOGO_EXT1 AND M2i
  LOGO_EXT1 AND M3i
  LOGO_EXT1 AND M4i
  LOGO_EXT1 AND MDi
}


LOGO.S.2 { @ Min. LOGO space to HVNW/HV/H60NW >= 10 um
  LOGO_EXT AND HVNWi
  LOGO_EXT AND HVOXi
  LOGO_EXT AND H60NWi
}
LOGO.O.1 { @ LOGO overlap of CB, CBD, AP, FW, PM, UBM, DOD, DPO, or DMx is not allowed.
  LOGO AND CBi
  LOGO AND CBDi
  LOGO AND FWI
  LOGO AND PLMIi
  LOGO AND UBMi
  LOGO AND DOD
  LOGO AND DPO
  LOGO AND M1DMY
  LOGO AND M2DMY
  LOGO AND M3DMY
  LOGO AND M4DMY
  LOGO AND MDDMY
}

LOGO.R.1 { @ A circuit in LOGO is not allowed.
  LOGO AND GATE
  LOGO AND PORES_DMY
  LOGO AND PORES
  LOGO AND ODRES
  LOGO AND RNWEL 
  LOGO AND BJTDMY 
  LOGO AND DIODMY
  LOGO AND CTPi
  LOGO AND BPIi
  LOGO AND CTM1i
  LOGO AND CTM2i
  LOGO AND CTM3i
  LOGO AND CTM4i
}
// LOGO.R.2 is checked by LOGO.S.1 and LOGO.S.2






HVBJT.W.1_NHVPWNBL_WORPO { @ Minimum and maximum width of Emitter size
    A = NOT RECTANGLE NHVPWNBL_BJT_E == 5 BY == 5 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 10 BY == 10 ORTHOGONAL ONLY  
    A NOT HVDMY
}
HVBJT.W.1_NHVPWNBL_WIRPO { @ Minimum and maximum width of Emitter size
    A = NOT RECTANGLE NHVPWNBL_RPO_BJT_E == 5 BY == 5 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 10 BY == 10 ORTHOGONAL ONLY  
}
HVBJT.W.1_PWHVNWDPW { @ Minimum and maximum width of Emitter size
    NOT RECTANGLE PWHVNWDPW_BJT_E == 2 BY == 2 ORTHOGONAL ONLY  
}
HVBJT.W.1_PBHVNWDPW { @ Minimum and maximum width of Emitter size
    NOT RECTANGLE PBHVNWDPW_BJT_E == 5 BY == 5 ORTHOGONAL ONLY  
}
HVBJT.W.1_LPNP { @ Minimum and maximum width of Emitter size
    A = NOT RECTANGLE LPNP_BJT_E == 1.5 BY == 1.5 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 5 BY == 5 ORTHOGONAL ONLY  
}
HVBJT.W.1_PNP { @ Minimum and maximum width of Emitter size
    A = NOT RECTANGLE PNP_BJT_E == 5 BY == 5 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 10 BY == 10 ORTHOGONAL ONLY  
}
HVBJT.W.1_PNP_BGR8 { @ Minimum and maximum width of Emitter size
    NOT RECTANGLE PNP_BJT_BGR8_E == 10 BY == 10 ORTHOGONAL ONLY  
}
HVBJT.W.1_NWHVPWNBL_WORPO { @ Minimum and maximum width of Emitter size
    A = NOT RECTANGLE NWHVPWNBL_BJT_E == 2 BY == 2 ORTHOGONAL ONLY  
    B = NOT RECTANGLE A == 5 BY == 5 ORTHOGONAL ONLY  
    NOT RECTANGLE B == 10 BY == 10 ORTHOGONAL ONLY  
}
HVBJT.W.1_NWHVPWNBL_WIRPO { @ Minimum and maximum width of Emitter size
    A = NOT RECTANGLE NWHVPWNBL_RPO_BJT_S_E == 5 BY == 5 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 10 BY == 10 ORTHOGONAL ONLY  
    A NOT HVDMY
}
HVBJT.W.1_NWHVPWNBL_BGR8 { @ Minimum and maximum width of Emitter size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_BGR8_E == 10 BY == 10 ORTHOGONAL ONLY  
}
HVBJT.W.1_NWHVPWNBL_DUAL { @ Minimum and maximum width of Emitter size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_DUAL_E == 5 BY == 5 ORTHOGONAL ONLY  
}
HVBJT.W.1_NWHVPWNBL_OCTAD { @ Minimum and maximum width of Emitter size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_OCTAD_E == 5 BY == 5 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NHVPWNBL_WORPO { @ Minimum and maximum width of Base size
    A = NOT RECTANGLE NHVPWNBL_BJT_B == 17 BY == 17 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 22 BY == 22 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NHVPWNBL_WIRPO { @ Minimum and maximum width of Base size
    A = NOT RECTANGLE NHVPWNBL_RPO_BJT_B == 9.96 BY == 9.96 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 14.96 BY == 14.96 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_PWHVNWDPW { @ Minimum and maximum width of Base size
    NOT RECTANGLE PWHVNWDPW_BJT_B == 14 BY == 14 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_PBHVNWDPW { @ Minimum and maximum width of Base size
    NOT RECTANGLE PBHVNWDPW_BJT_B == 9.96 BY == 9.96 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_LPNP { @ Minimum and maximum width of Base size
    A = NOT RECTANGLE LPNP_BJT_B == 15.02 BY == 15.02 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 18.52 BY == 18.52 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_PNP { @ Minimum and maximum width of Base size
    A = NOT RECTANGLE PNP_BJT_B == 11 BY == 11 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 16 BY == 16 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_PNP_BGR8 { @ Minimum and maximum width of Base size
    NOT RECTANGLE PNP_BJT_BGR8_B == 42 BY == 42 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NWHVPWNBL_WORPO { @ Minimum and maximum width of Base size
    A = NOT RECTANGLE NWHVPWNBL_BJT_B == 12.36 BY == 12.36 ORTHOGONAL ONLY  
    B = NOT RECTANGLE A == 15.36 BY == 15.36 ORTHOGONAL ONLY  
    NOT RECTANGLE B == 20.36 BY == 20.36 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NWHVPWNBL_WIRPO { @ Minimum and maximum width of Base size
    A = NOT RECTANGLE NWHVPWNBL_RPO_BJT_S_B == 10.76 BY == 10.76 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 15.76 BY == 15.76 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NWHVPWNBL_BGR8 { @ Minimum and maximum width of Base size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_BGR8_B == 15.76 BY == 15.76 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NWHVPWNBL_DUAL { @ Minimum and maximum width of Base size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_DUAL_B == 18.34 BY == 10.76 ORTHOGONAL ONLY  
}
HVBJT.W.2_3_NWHVPWNBL_OCTAD { @ Minimum and maximum width of Base size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_OCTAD_B == 33.5 BY == 18.34 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NHVPWNBL_WORPO { @ Minimum and maximum width of Collector size
    A = NOT RECTANGLE NHVPWNBL_BJT_C == 29 BY == 29 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 34 BY == 34 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NHVPWNBL_WIRPO { @ Minimum and maximum width of Collector size
    A = NOT RECTANGLE NHVPWNBL_RPO_BJT_C == 16.72 BY == 16.72 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 21.72 BY == 21.72 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_PWHVNWDPW { @ Minimum and maximum width of Collector size
    NOT RECTANGLE PWHVNWDPW_BJT_C == 26 BY == 26 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_PBHVNWDPW { @ Minimum and maximum width of Collector size
    NOT RECTANGLE PBHVNWDPW_BJT_C == 15.52 BY == 15.52 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_LPNP { @ Minimum and maximum width of Collector size
    A = NOT RECTANGLE LPNP_BJT_C == 7.86 BY == 7.86 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 11.36 BY == 11.36 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_PNP { @ Minimum and maximum width of Collector size
    A = NOT RECTANGLE PNP_BJT_C == 19 BY == 19 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 24 BY == 24 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_PNP_BGR8 { @ Minimum and maximum width of Collector size
    NOT RECTANGLE PNP_BJT_BGR8_C == 50 BY == 50 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NWHVPWNBL_WORPO { @ Minimum and maximum width of Collector size
    A = NOT RECTANGLE NWHVPWNBL_BJT_C == 22.72 BY == 22.72 ORTHOGONAL ONLY  
    B = NOT RECTANGLE A == 25.72 BY == 25.72 ORTHOGONAL ONLY  
    NOT RECTANGLE B == 30.72 BY == 30.72 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NWHVPWNBL_WIRPO { @ Minimum and maximum width of Collector size
    A = NOT RECTANGLE NWHVPWNBL_RPO_BJT_S_C == 16.92 BY == 16.92 ORTHOGONAL ONLY  
    NOT RECTANGLE A == 21.92 BY == 21.92 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NWHVPWNBL_BGR8 { @ Minimum and maximum width of Collector size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_BGR8_C == 21.92 BY == 21.92 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NWHVPWNBL_DUAL { @ Minimum and maximum width of Collector size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_DUAL_C == 16.92 BY == 24.5 ORTHOGONAL ONLY  
}
HVBJT.W.4_5_NWHVPWNBL_OCTAD { @ Minimum and maximum width of Collector size
    NOT RECTANGLE NWHVPWNBL_RPO_BJT_OCTAD_C == 24.5 BY == 39.66 ORTHOGONAL ONLY  
}
HVBJT.E.2 { @ Minimum and maximum extension of RPO beyond Emitter OD  == ^HVBJT_E_2 um
    A = SIZE ALL_RPO_BJT_E BY HVBJT_E_2 
    B = ( HOLES BJT_RPO INNER ) OR  BJT_RPO
    A XOR B
}
HVBJT.O.1 { @ Minimum and maximum overlap of RPO and Emitter OD  == ^HVBJT_O_1 um
    INT ALL_RPO_BJT_E BJT_RPO < HVBJT_O_1 ABUT <90 SINGULAR REGION
    A = ALL_RPO_BJT_E AND  BJT_RPO
    SIZE A BY HVBJT_O_1/2 UNDEROVER
}
HVBJT.E.1_WORPO { @ Minimum and maximum extension of SH_N beyond Emitter OD  == ^HVBJT_E_1_WORPO um
    A = SIZE NWHVPWNBL_BJT_E BY HVBJT_E_1_WORPO 
    B = HVSHN INTERACT NWHVPWNBL_BJT_E
    A XOR B
}
HVBJT.E.1_WIRPO { @ Minimum and maximum extension of SH_N beyond Emitter OD  == ^HVBJT_E_1_WIRPO um
    A = COPY ALL_NWHVPWNBL_RPO_BJT_E
    B = HVSHN INTERACT ALL_NWHVPWNBL_RPO_BJT_E
    A XOR B
}
HVBJT.E.6 { @ Minimum and maximum extension of PBODY beyond Emitter OD  == ^HVBJT_E_6 um
    A = SIZE ( LPNP_BJT_E OR PBHVNWDPW_BJT_E ) BY HVBJT_E_6 
    B = HVPB INTERACT ( LPNP_BJT_E OR PBHVNWDPW_BJT_E )
    A XOR B
}
HVBJT.E.7 { @ Minimum and maximum extension of HVSHP beyond Emitter OD  == ^HVBJT_E_7 um
    A = SIZE PWHVNWDPW_BJT_E BY HVBJT_E_7 
    B = HVSHP INTERACT PWHVNWDPW_BJT_E
    A XOR B
}
HVBJT.E.11 { @ Minimum and maximum extension of HVNW beyond Emitter OD  == ^HVBJT_E_11 um
    A = SIZE LPNP_BJT_E BY HVBJT_E_11 
    B = HVNW INTERACT LPNP_BJT_E
    A XOR B
}
HVBJT.S.1_WORPO { @ Minimum and maximum space between N+OD (Emitter) to P+ OD (Base) == ^HVBJT_S_1_WORPO um
    A = SIZE ( NHVPWNBL_BJT_E OR NWHVPWNBL_BJT_E ) BY HVBJT_S_1_WORPO
    B = ( NHVPWNBL_BJT_BODH OR NWHVPWNBL_BJT_BODH ) INTERACT ( NHVPWNBL_BJT_E OR NWHVPWNBL_BJT_E )
    A XOR B
}
HVBJT.S.1_NHVPWNBL_WIRPO { @ Minimum and maximum space between N+OD (Emitter) to P+ OD (Base) == ^HVBJT_S_1_NHVPWNBL_WIRPO um
    A = SIZE NHVPWNBL_RPO_BJT_E BY HVBJT_S_1_NHVPWNBL_WIRPO
    B = NHVPWNBL_RPO_BJT_BODH INTERACT NHVPWNBL_RPO_BJT_E
    A XOR B
}
HVBJT.S.1_NWHVPWNBL_WIRPO { @ Minimum and maximum space between N+OD (Emitter) to P+ OD (Base) == ^HVBJT_S_1_NWHVPWNBL_WIRPO um
    A = SIZE ALL_NWHVPWNBL_RPO_BJT_E BY HVBJT_S_1_NWHVPWNBL_WIRPO
    B = ALL_NWHVPWNBL_RPO_BJT_BODH INTERACT ALL_NWHVPWNBL_RPO_BJT_E
    A XOR B
}
HVBJT.S.2_PWHVNWDPW { @ Minimum and maximum space between P+OD (Emitter) to N+ OD (Base) == ^HVBJT_S_2_PWHVNWDPW um
    A = SIZE PWHVNWDPW_BJT_E BY HVBJT_S_2_PWHVNWDPW
    B = PWHVNWDPW_BJT_BODH INTERACT PWHVNWDPW_BJT_E
    A XOR B
}
HVBJT.S.2_PBHVNWDPW { @ Minimum and maximum space between P+OD (Emitter) to N+ OD (Base) == ^HVBJT_S_2_PBHVNWDPW um
    A = SIZE PBHVNWDPW_BJT_E BY HVBJT_S_2_PBHVNWDPW
    B = PBHVNWDPW_BJT_BODH INTERACT PBHVNWDPW_BJT_E
    A XOR B
}
HVBJT.S.2_PNP { @ Minimum and maximum space between P+OD (Emitter) to N+ OD (Base) == ^HVBJT_S_2_PNP um
    A = SIZE ( PNP_BJT_E OR PNP_BJT_BGR8_E ) BY HVBJT_S_2_PNP
    B = ( PNP_BJT_BODH OR PNP_BJT_BGR8_BODH ) INTERACT ( PNP_BJT_E OR PNP_BJT_BGR8_E )
    A XOR B
}
HVBJT.S.3 { @ Minimum and maximum space between P+OD (Collector) to N+ OD (Base) == ^HVBJT_S_3 um
    A = SIZE LPNP_BJT_C BY HVBJT_S_3
    B = LPNP_BJT_BODH INTERACT LPNP_BJT_E
    A XOR B
}
HVBJT.E.13_WORPO { @ Minimum and maximum extension of SH_P beyond P+ OD (Base or Collector) == ^HVBJT_E_13_WORPO um
    A = SIZE NWHVPWNBL_BJT_BOD BY HVBJT_E_13_WORPO
    B = HVSHP INTERACT NWHVPWNBL_BJT_BOD
    A XOR B
}
HVBJT.E.13_WIRPO { @ Minimum and maximum extension of SH_P beyond P+ OD (Base or Collector) == ^HVBJT_E_13_WIRPO um
    A = SIZE ( HVSHP INTERACT ( ALL_NWHVPWNBL_RPO_BJT_BOD OR NHVPWNBL_RPO_BJT_BOD ) )  BY HVBJT_E_13_WIRPO
    B = ALL_NWHVPWNBL_RPO_BJT_BOD OR NHVPWNBL_RPO_BJT_BOD 
    A XOR B
}
HVBJT.E.13_PBHVNWDPW { @ Minimum and maximum extension of SH_P beyond P+ OD (Base or Collector) == ^HVBJT_E_13_PBHVNWDPW um
    A = COPY PBHVNWDPW_BJT_COD
    B = HVSHP INTERACT PBHVNWDPW_BJT_COD
    A XOR B
}
HVBJT.E.14 { @ Minimum and maximum extension of PBODY beyond P+ OD (Base or Collector) == ^HVBJT_E_14 um
    A = SIZE LPNP_BJT_COD BY HVBJT_E_14
    B = HVPB INTERACT LPNP_BJT_COD
    A XOR B
}
HVBJT.E.15_WORPO { @ Minimum and maximum extension of SH_N beyond N+ OD (Collector) == ^HVBJT_E_15_WORPO um
    A = SIZE NWHVPWNBL_BJT_COD BY HVBJT_E_15_WORPO
    B = HVSHN INTERACT NWHVPWNBL_BJT_COD
    A XOR B
}
HVBJT.E.15_WIRPOa { @ Minimum and maximum extension of SH_N beyond N+ OD (Collector) == ^HVBJT_E_15_WIRPOa um
    A = SIZE (( NWHVPWNBL_RPO_BJT_DUAL_COD OR NWHVPWNBL_RPO_BJT_OCTAD_COD ) OR NHVPWNBL_RPO_BJT_COD ) BY HVBJT_E_15_WIRPOa
    B = HVSHN INTERACT (( NWHVPWNBL_RPO_BJT_DUAL_COD OR NWHVPWNBL_RPO_BJT_OCTAD_COD ) OR NHVPWNBL_RPO_BJT_COD )
    A XOR B
}
HVBJT.E.15_WIRPOb { @ Minimum and maximum extension of SH_N beyond N+ OD (Collector) == ^HVBJT_E_15_WIRPOb um
    A = SIZE ( NWHVPWNBL_RPO_BJT_S_COD OR NWHVPWNBL_RPO_BJT_BGR8_COD ) BY HVBJT_E_15_WIRPOb
    B = HVSHN INTERACT ( NWHVPWNBL_RPO_BJT_S_COD OR NWHVPWNBL_RPO_BJT_BGR8_COD )
    A XOR B
}
HVBJT.E.15_PBHVNWDPW { @ Minimum and maximum extension of SH_N beyond N+ OD (Base) == ^HVBJT_E_15_PBHVNWDPW um
    A = SIZE PBHVNWDPW_BJT_BOD BY HVBJT_E_15_PBHVNWDPW
    B = HVSHN INTERACT PBHVNWDPW_BJT_BOD
    A XOR B
}
HVBJT.E.15_LPNP { @ Minimum and maximum extension of SH_N beyond N+ OD (Base) == ^HVBJT_E_15_LPNP um
    A = SIZE LPNP_BJT_BOD BY HVBJT_E_15_LPNP
    B = HVSHN INTERACT LPNP_BJT_BOD
    A XOR B
}
HVBJT.E.3_WORPO { @ Minimum and maximum extension of HVNW beyond N+ OD (Collector) in facing Emitter OD == ^HVBJT_E_3_WORPO um
    A = BJT_HVNW_H INTERACT ( NHVPWNBL_BJT_E OR NWHVPWNBL_BJT_E )
    B = SIZE A BY HVBJT_E_3_WORPO
    B XOR ( NHVPWNBL_BJT_CODH OR NWHVPWNBL_BJT_CODH )
}
HVBJT.E.3_WIRPOa { @ Minimum and maximum extension of HVNW beyond N+ OD (Collector) in facing Emitter OD == ^HVBJT_E_3_WIRPOa um
    A = BJT_HVNW_H INTERACT NHVPWNBL_RPO_BJT_E
    B = SIZE A BY HVBJT_E_3_WIRPOa
    B XOR NHVPWNBL_RPO_BJT_CODH
}
HVBJT.E.3_WIRPOb { @ Minimum and maximum extension of HVNW beyond N+ OD (Collector) in facing Emitter OD == ^HVBJT_E_3_WIRPOb um
    A = BJT_HVNW_H INTERACT ALL_NWHVPWNBL_RPO_BJT_E
    B = SIZE A BY HVBJT_E_3_WIRPOb
    B XOR ALL_NWHVPWNBL_RPO_BJT_CODH
}
HVBJT.E.4_WORPO { @ Minimum and maximum extension of HVNW beyond N+ OD (Collector) in outfacing Emitter OD == ^HVBJT_E_4_WORPO um
    A = (( NHVPWNBL_BJT_CODH OR NWHVPWNBL_BJT_CODH ) OR  NHVPWNBL_BJT_COD ) OR NWHVPWNBL_BJT_COD 
    B = SIZE A BY HVBJT_E_4_WORPO
    B XOR ( NHVPWNBL_BJT_C OR NWHVPWNBL_BJT_C )
}
HVBJT.E.4_WIRPO { @ Minimum and maximum extension of HVNW beyond N+ OD (Collector) in outfacing Emitter OD == ^HVBJT_E_4_WIRPO um
    A = (( ALL_NWHVPWNBL_RPO_BJT_CODH OR NHVPWNBL_RPO_BJT_CODH ) OR ALL_NWHVPWNBL_RPO_BJT_COD ) OR NHVPWNBL_RPO_BJT_COD
    B = SIZE A BY HVBJT_E_4_WIRPO
    B XOR ( ALL_NWHVPWNBL_RPO_BJT_C OR NHVPWNBL_RPO_BJT_C )
}
HVBJT.C.2_WORPO { @ Minimum and maximum clearance from HVNW to Base OD  == ^HVBJT_C_2_WORPO um 
   A = ((NHVPWNBL_BJT_BOD OR NWHVPWNBL_BJT_BOD ) OR NHVPWNBL_BJT_BODH ) OR NWHVPWNBL_BJT_BODH
   B = BJT_HVNW_H INTERACT ( NHVPWNBL_BJT_E OR NWHVPWNBL_BJT_E )
   C = SIZE A BY HVBJT_C_2_WORPO
   B XOR C
}
HVBJT.C.2_WIRPO { @ Minimum and maximum clearance from HVNW to Base OD  == ^HVBJT_C_2_WIRPO um 
   A = (( ALL_NWHVPWNBL_RPO_BJT_BOD OR NHVPWNBL_RPO_BJT_BOD ) OR ALL_NWHVPWNBL_RPO_BJT_BODH ) OR NHVPWNBL_RPO_BJT_BODH
   B = BJT_HVNW_H INTERACT ( ALL_NWHVPWNBL_RPO_BJT_E OR NHVPWNBL_RPO_BJT_E )
   C = SIZE A BY HVBJT_C_2_WIRPO
   B XOR C
}
HVBJT.E.8_PWHVNWDPW { @ Minimum and maximum extension of HVNW beyond Base OD == ^HVBJT_E_8_PWHVNWDPW um
    A = SIZE ( PWHVNWDPW_BJT_BOD OR PWHVNWDPW_BJT_BODH ) BY HVBJT_E_8_PWHVNWDPW
    B = BJT_HVNW INTERACT PWHVNWDPW_BJT_BOD
    A XOR B
}
HVBJT.E.8_PBHVNWDPW { @ Minimum and maximum extension of HVNW beyond Base OD == ^HVBJT_E_8_PBHVNWDPW um
    A = SIZE ( PBHVNWDPW_BJT_BOD OR PBHVNWDPW_BJT_BODH ) BY HVBJT_E_8_PBHVNWDPW
    B = BJT_HVNW INTERACT PBHVNWDPW_BJT_BOD
    A XOR B
}
HVBJT.E.8_LPNP { @ Minimum and maximum extension of HVNW beyond Base OD == ^HVBJT_E_8_LPNP um
    A = SIZE LPNP_BJT_BOD BY HVBJT_E_8_LPNP
    B = BJT_HVNW INTERACT LPNP_BJT_BOD
    A XOR B
}
HVBJT.E.16 { @ Minimum and maximum extension of NW beyond Base OD == ^HVBJT_E_16 um
    A = SIZE ((( PNP_BJT_BOD OR PNP_BJT_BGR8_BOD ) OR PNP_BJT_BODH ) OR PNP_BJT_BGR8_BODH ) BY HVBJT_E_16
    B = NWELL INTERACT ( PNP_BJT_B OR PNP_BJT_BGR8_B )
    A XOR B
}
HVBJT.C.4_PWHVNWDPW { @ Minimum and maximum clearance from HVNW to P+ OD (Collector OD) in facing Emitter OD == ^HVBJT_C_4_PWHVNWDPW um
    A = SIZE ( BJT_HVNW INTERACT PWHVNWDPW_BJT_B ) BY HVBJT_C_4_PWHVNWDPW
    B = COPY PWHVNWDPW_BJT_CODH
    A XOR B
}
HVBJT.C.4_PBHVNWDPW { @ Minimum and maximum clearance from HVNW to P+ OD (Collector OD) in facing Emitter OD == ^HVBJT_C_4_PBHVNWDPW um
    A = SIZE ( BJT_HVNW INTERACT PBHVNWDPW_BJT_B ) BY HVBJT_C_4_PBHVNWDPW
    B = COPY PBHVNWDPW_BJT_CODH
    A XOR B
}
HVBJT.C.4_LPNP { @ Minimum and maximum clearance from HVNW to P+ OD (Collector OD) in facing Emitter OD == ^HVBJT_C_4_LPNP um
    A = SIZE ( BJT_HVNW INTERACT LPNP_BJT_E ) BY HVBJT_C_4_LPNP
    B = COPY LPNP_BJT_CODH
    A XOR B
}
HVBJT.C.7 { @ Minimum and maximum clearance from NW to P+OD (Collector OD) in facing Emitter OD == ^HVBJT_C_7 um
    A = SIZE ( NWELL INTERACT ( PNP_BJT_B OR PNP_BJT_BGR8_B ) ) BY HVBJT_C_7
    B = PNP_BJT_CODH OR PNP_BJT_BGR8_CODH
    A XOR B
}
HVBJT.C.6 { @ Minimum and maximum clearance from HVNW to P+ OD (Collector OD) in outfacing Emitter OD == ^HVBJT_C_6 um
    A = SIZE ( LPNP_BJT_COD OR LPNP_BJT_CODH ) BY HVBJT_C_6
    B = COPY LPNP_BJT_C
    A XOR B
}
HVBJT.E.9_PWHVNWDPW { @ Minimum and maximum extension of DPW beyond P+OD (Collector OD) == ^HVBJT_E_9_PWHVNWDPW um
    A_pre = PWHVNWDPW_BJT_COD OR PWHVNWDPW_BJT_CODH 
    A = SIZE A_pre BY HVBJT_E_9_PWHVNWDPW
    B = DPW INTERACT PWHVNWDPW_BJT_COD
    A XOR B
}
HVBJT.E.9_PBHVNWDPW { @ Minimum and maximum extension of DPW beyond P+OD (Collector OD) == ^HVBJT_E_9_PBHVNWDPW um
    A_pre = PBHVNWDPW_BJT_COD OR PBHVNWDPW_BJT_CODH
    A = SIZE A_pre BY HVBJT_E_9_PBHVNWDPW
    B = DPW INTERACT PBHVNWDPW_BJT_COD
    A XOR B
}
HVBJT.C.5 { @ Minimum and maximum clearance from NW to P+ OD (Collector OD) in outfacing Emitter OD == ^HVBJT_C_5 um
    A = SIZE ((( PNP_BJT_COD OR PNP_BJT_CODH ) OR PNP_BJT_BGR8_COD ) OR PNP_BJT_BGR8_CODH ) BY HVBJT_C_5
    B = PNP_BJT_C OR PNP_BJT_BGR8_C
    A XOR B
}

HVBJT.C.8_PWHVNWDPW { @ Minimum clearance from HVNW to P+OD (collector OD) in out-facing Emitter OD >= ^HVBJT_C_8_PWHVNWDPW um
    EXT (PWHVNWDPW_BJT_COD OR PWHVNWDPW_BJT_CODH ) HVNW < HVBJT_C_8_PWHVNWDPW ABUT < 90 SINGULAR REGION
}
HVBJT.C.8_PBHVNWDPW { @ Minimum clearance from HVNW to P+OD (collector OD) in out-facing Emitter OD >= ^HVBJT_C_8_PBHVNWDPW um
    EXT (PBHVNWDPW_BJT_COD OR PBHVNWDPW_BJT_CODH ) HVNW < HVBJT_C_8_PBHVNWDPW ABUT < 90 SINGULAR REGION
}
HVBJT.W.6_NHVPWNBL_WORPO { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_NHVPWNBL_WORPO um
    INT NHVPWNBL_BJT_BOD < HVBJT_W_6_NHVPWNBL_WORPO SINGULAR ABUT < 90 REGION 
    SIZE NHVPWNBL_BJT_BOD BY HVBJT_W_6_NHVPWNBL_WORPO/2 UNDEROVER
}
HVBJT.W.6_NHVPWNBL_WIRPO { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_NHVPWNBL_WIRPO um
    INT NHVPWNBL_RPO_BJT_BOD < HVBJT_W_6_NHVPWNBL_WIRPO SINGULAR ABUT < 90 REGION 
    SIZE NHVPWNBL_RPO_BJT_BOD BY HVBJT_W_6_NHVPWNBL_WIRPO/2 UNDEROVER
}
HVBJT.W.6_PWHVNWDPW { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_PWHVNWDPW um
    INT PWHVNWDPW_BJT_BOD < HVBJT_W_6_PWHVNWDPW SINGULAR ABUT < 90 REGION 
    SIZE PWHVNWDPW_BJT_BOD BY HVBJT_W_6_PWHVNWDPW/2 UNDEROVER
}
HVBJT.W.6_PBHVNWDPW { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_PBHVNWDPW um
    INT PBHVNWDPW_BJT_BOD < HVBJT_W_6_PBHVNWDPW SINGULAR ABUT < 90 REGION 
    SIZE PBHVNWDPW_BJT_BOD BY HVBJT_W_6_PBHVNWDPW/2 UNDEROVER
}
HVBJT.W.6_LPNP { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_LPNP um
    INT LPNP_BJT_BOD < HVBJT_W_6_LPNP SINGULAR ABUT < 90 REGION 
    SIZE LPNP_BJT_BOD BY HVBJT_W_6_LPNP/2 UNDEROVER
}
HVBJT.W.6_PNP { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_PNP um
    INT PNP_BJT_BOD < HVBJT_W_6_PNP SINGULAR ABUT < 90 REGION 
    SIZE PNP_BJT_BOD BY HVBJT_W_6_PNP/2 UNDEROVER
}
HVBJT.W.6_PNP_BGR8 { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_PNP_BGR8 um
    INT PNP_BJT_BGR8_BOD < HVBJT_W_6_PNP_BGR8 SINGULAR ABUT < 90 REGION 
    SIZE PNP_BJT_BGR8_BOD BY HVBJT_W_6_PNP_BGR8/2 UNDEROVER
}
HVBJT.W.6_NWHVPWNBL_WORPO { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_NWHVPWNBL_WORPO um
    INT NWHVPWNBL_BJT_BOD < HVBJT_W_6_NWHVPWNBL_WORPO SINGULAR ABUT < 90 REGION 
    SIZE NWHVPWNBL_BJT_BOD BY HVBJT_W_6_NWHVPWNBL_WORPO/2 UNDEROVER
}
HVBJT.W.6_NWHVPWNBL_WIRPO { @ Minimum and maximum width of Base OD size == ^HVBJT_W_6_NWHVPWNBL_WIRPO um
    INT ALL_NWHVPWNBL_RPO_BJT_BOD < HVBJT_W_6_NWHVPWNBL_WIRPO SINGULAR ABUT < 90 REGION 
    SIZE ALL_NWHVPWNBL_RPO_BJT_BOD BY HVBJT_W_6_NWHVPWNBL_WIRPO/2 UNDEROVER
}
HVBJT.W.7_NHVPWNBL_WORPO { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_NHVPWNBL_WORPO um
    INT NHVPWNBL_BJT_COD < HVBJT_W_7_NHVPWNBL_WORPO SINGULAR ABUT < 90 REGION 
    SIZE NHVPWNBL_BJT_COD BY HVBJT_W_7_NHVPWNBL_WORPO/2 UNDEROVER
}
HVBJT.W.7_NHVPWNBL_WIRPO { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_NHVPWNBL_WIRPO um
    INT NHVPWNBL_RPO_BJT_COD < HVBJT_W_7_NHVPWNBL_WIRPO SINGULAR ABUT < 90 REGION 
    SIZE NHVPWNBL_RPO_BJT_COD BY HVBJT_W_7_NHVPWNBL_WIRPO/2 UNDEROVER
}
HVBJT.W.7_PWHVNWDPW { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_PWHVNWDPW um
    INT PWHVNWDPW_BJT_COD < HVBJT_W_7_PWHVNWDPW SINGULAR ABUT < 90 REGION 
    SIZE PWHVNWDPW_BJT_COD BY HVBJT_W_7_PWHVNWDPW/2 UNDEROVER
}
HVBJT.W.7_PBHVNWDPW { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_PBHVNWDPW um
    INT PBHVNWDPW_BJT_COD < HVBJT_W_7_PBHVNWDPW SINGULAR ABUT < 90 REGION 
    SIZE PBHVNWDPW_BJT_COD BY HVBJT_W_7_PBHVNWDPW/2 UNDEROVER
}
HVBJT.W.7_LPNP { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_LPNP um
    INT LPNP_BJT_COD < HVBJT_W_7_LPNP SINGULAR ABUT < 90 REGION 
    SIZE LPNP_BJT_COD BY HVBJT_W_7_LPNP/2 UNDEROVER
}
HVBJT.W.7_PNP { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_PNP um
    INT PNP_BJT_COD < HVBJT_W_7_PNP SINGULAR ABUT < 90 REGION 
    SIZE PNP_BJT_COD BY HVBJT_W_7_PNP/2 UNDEROVER
}
HVBJT.W.7_PNP_BGR8 { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_PNP_BGR8 um
    INT PNP_BJT_BGR8_COD < HVBJT_W_7_PNP_BGR8 SINGULAR ABUT < 90 REGION 
    SIZE PNP_BJT_BGR8_COD BY HVBJT_W_7_PNP_BGR8/2 UNDEROVER
}
HVBJT.W.7_NWHVPWNBL_WORPO { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_NWHVPWNBL_WORPO um
    INT NWHVPWNBL_BJT_COD < HVBJT_W_7_NWHVPWNBL_WORPO SINGULAR ABUT < 90 REGION 
    SIZE NWHVPWNBL_BJT_COD BY HVBJT_W_7_NWHVPWNBL_WORPO/2 UNDEROVER
}
HVBJT.W.7_NWHVPWNBL_WIRPO { @ Minimum and maximum width of Collector OD size == ^HVBJT_W_7_NWHVPWNBL_WIRPO um
    INT ALL_NWHVPWNBL_RPO_BJT_COD < HVBJT_W_7_NWHVPWNBL_WIRPO SINGULAR ABUT < 90 REGION 
    SIZE ALL_NWHVPWNBL_RPO_BJT_COD BY HVBJT_W_7_NWHVPWNBL_WIRPO/2 UNDEROVER
}

H18NW      = NWELL INSIDE H18NWDMY 
MTP_NW	   = NWELL INSIDE MTP_2T2C
NTN_H18_1 = (HOLES NTN INNER) OR NTN
NTN_H18_2 = NTN_H18_1 INTERACT H18NWDMY
NTN_H18   = NTN INTERACT NTN_H18_2 

// LDPO CHECKS
//=============

LDPO.C.1{ @ min and max clearance from PO to (NTN INTERACT H18NWDMY) for IOLDNMOS(channel length) == ^LDPO_C_1
    A = POLY INTERACT IOLDNMOS_GATE
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = B INTERACT OD
    D = POLY TOUCH OUTSIDE EDGE C
    E = EXPAND EDGE D INSIDE BY LDPO_C_1
    E NOT TOUCH NTN
}
LDPO.E.1{ @ MIN AND MAX extension of PO beyond channel OD in channel length direction for IOLDNMOS == ^LDPO_E_1
    A = POLY INTERACT IOLDNMOS_GATE
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = B INTERACT IOLDNMOS_region
    D = POLY TOUCH OUTSIDE EDGE C
    E = EXPAND EDGE D INSIDE BY LDPO_E_1
    E NOT TOUCH IOLDNMOS_CH
}


// LDOD CHECKS
//=============

LDOD.S.1{ @ min and max space between channel OD and drain OD for IOLDNMOS == ^LDOD_S_1
    IOLDNMOS_region NOT TOUCH IOLDNMOS_D
}
LDOD.O.1{ @ min and max overlap of NW and channel OD for IOLDNMOS == ^LDOD_O_1
    IOLDNMOS_CH NOT INTERACT NWELL
    A = NWELL INSIDE EDGE IOLDNMOS_CH
    B = EXPAND EDGE A INSIDE BY LDOD_O_1
    B NOT TOUCH IOLDNMOS_region
}
LDOD.C.1{ @ min clearance from H18NW to P+OD(for PW pick up) >= ^LDOD_C_1
    EXT H18NW PTAP < LDOD_C_1  ABUT < 90 SINGULAR REGION
} 
LDOD.E.1{ @ min and max extension of H18NW beyond drain OD for IOLDNMOS 
          @ except NW edge interact PO == ^LDOD_E_1
    A = EXPAND EDGE IOLDNMOS_D OUTSIDE BY GRID EXTEND BY -GRID
    B = A NOT INTERACT IOLDNMOS_region
    C = IOLDNMOS_D TOUCH OUTSIDE EDGE B
    D = EXPAND EDGE C OUTSIDE BY LDOD_E_1 EXTEND BY -GRID
    E = EXPAND EDGE H18NW OUTSIDE BY GRID 
    D NOT TOUCH E 
}
LDOD.W.1{@ min width of OD in channel width direction for IOLDNMOS >= ^LDOD_W_1 
    A = EXPAND EDGE IOLDNMOS_CH OUTSIDE BY GRID
    B = A INSIDE POLY
    C = IOLDNMOS_CH TOUCH OUTSIDE EDGE B
    PATH LENGTH C < LDOD_W_1
}
LDOD.R.1{ @ OD must be fully inside OD2 for IOLDNMOS and IO cascode
    A = OD INTERACT H18NWDMY
    A NOT OD2
}


// LDNTN CHECKS
//=============

LDNTN.C.1{ @ min and max clearance from NTN ring to H18NW == ^LDNTN_C_1
    A = NTN INTERACT H18NWDMY
    B = HOLES A
    B XOR H18NW
}
LDNTN.E.1{ @ min and max extension of NTN beyond H18NWDMY == ^LDNTN_E_1
    A = (HOLES NTN_H18) OR NTN_H18
    B = SIZE H18NWDMY BY LDNTN_E_1
    A XOR B
}
LDNTN.R.2{ @ NTN is not allowed to interact more than one H18NW
    A = NWELL INSIDE H18NWDMY
    NTN INTERACT A > 1  
}
LDNTN.S.1{ @ min space between two(NTN INTERACT H18NWDMY) region >= ^LDNTN_S_1
    EXT NTN_H18 < LDNTN_S_1 ABUT <90 SINGULAR REGION
}



// H18NWDMY CHECKS
//=============

H18NWDMY.E.1{ @min and max extension of H18NWDMY beyond NW == ^H18NWDMY_E_1
    A = NWELL INTERACT H18NWDMY
    B = H18NWDMY INTERACT NWELL
    A XOR B
}
H18NWDMY.R.1{ @ H18NW must be fully inside OD2
    H18NW NOT OD2 
}
H18NWDMY.R.2{ @OD cut H18NWDMY is not allowed (butted is not allowed, except IOLDNMOS channel OD)
    A = OD NOT INTERACT IOLDNMOS_CH
    A CUT H18NWDMY
    OD TOUCH H18NWDMY
    OD COIN INSIDE EDGE H18NWDMY
}
H18NWDMY.R.3{ @ H18NW must be surrounded by NTN ring.NW must be butted with{NTN INTERACT H18NWDMY}edge
    A =  NWELL INSIDE H18NWDMY
    B =  HOLES NTN INNER
    A NOT INTERACT B
    C = B INTERACT A
    C XOR A
}
H18NWDMY.R.4{ @ H18NWDMY layer must be inside MTP 2T2C(butted is not allowed)
    H18NWDMY NOT MTP_2T2C
    H18NWDMY TOUCH INSIDE EDGE MTP_2T2C
}
H18NWDMY.S.1{ @min space between H18NW and NW in MTP 2T2C region >= ^H18NWDMY_S_1
    EXT H18NW MTP_NW < H18NWDMY_S_1 ABUT <90 SINGULAR REGION
}
H18NWDMY.S.2{ @min space between H18NW and (NW outside MTP 2T2C region) >= ^H18NWDMY_S_2
    A = NWELL OUTSIDE MTP_2T2C
    EXT H18NW A < H18NWDMY_S_2 ABUT <90 SINGULAR REGION 
}
H18NWDMY.S.3{ @min space between two H18NW  >= ^H18NWDMY_S_3
    EXT H18NW < H18NWDMY_S_3 ABUT <90 SINGULAR REGION
}
H18NWDMY.C.1{ @min clearance from (NW inside MTP 2T2C region) to HVNW >= ^H18NWDMY_C_1
    EXT MTP_NW HVNW < H18NWDMY_C_1 ABUT <90 SINGULAR REGION
}
// MTP 2T2C CHECKS
//=============
MTP.C.1{ @ min clearance from NW to P+OD(PW pick up) inside MTP 2T2C region >= ^MTP_C_1
    A = PTAP INSIDE MTP_2T2C
    EXT A MTP_NW < MTP_C_1 ABUT <90 SINGULAR REGION 
}
//hvlup

VARIABLE HVLUP_W_1_HVDMY_7_12	0.58
VARIABLE HVLUP_W_1_HVDMY_24	1.0
VARIABLE HVLUP_W_1_HVDMY_40	4.0
VARIABLE HVLUP_W_1_HVDMY_45	4.0
VARIABLE HVLUP_W_1_HVDMY_60	20.0

VARIABLE HVLUP_W_2_HVDMY_7_12	0.58
VARIABLE HVLUP_W_2_HVDMY_24	1.0
VARIABLE HVLUP_W_2_HVDMY_40	4.0
VARIABLE HVLUP_W_2_HVDMY_45	4.0
VARIABLE HVLUP_W_2_HVDMY_60	20.0

VARIABLE HVLUP_W_3_HVDMY_7_12	0.58
VARIABLE HVLUP_W_3_HVDMY_20	1.0
VARIABLE HVLUP_W_3_HVDMY_24	1.0
VARIABLE HVLUP_W_3_HVDMY_40	4.0
VARIABLE HVLUP_W_3_HVDMY_45	4.0
VARIABLE HVLUP_W_3_HVDMY_60	20.0

VARIABLE HVLUP_W_4_HVDMY_7_12	0.58
VARIABLE HVLUP_W_4_HVDMY_20	2.0
VARIABLE HVLUP_W_4_HVDMY_24	2.0
VARIABLE HVLUP_W_4_HVDMY_40	8.0
VARIABLE HVLUP_W_4_HVDMY_45	8.0
VARIABLE HVLUP_W_4_HVDMY_60	20.0

VARIABLE HVLUP_W_5_HVDMY_7_12	0.58
VARIABLE HVLUP_W_5_HVDMY_20	1.0
VARIABLE HVLUP_W_5_HVDMY_24	1.0
VARIABLE HVLUP_W_5_HVDMY_40	4.0

VARIABLE HVLUP_W_6_HVDMY_7_12	0.58
VARIABLE HVLUP_W_6_HVDMY_20	1.0
VARIABLE HVLUP_W_6_HVDMY_24	1.0
VARIABLE HVLUP_W_6_HVDMY_40	4.0

VARIABLE HVLUP_W_7_HVDMY_7_12	0.58
VARIABLE HVLUP_W_7_HVDMY_20	1.0
VARIABLE HVLUP_W_7_HVDMY_24	4.0
VARIABLE HVLUP_W_7_HVDMY_40	10.0
VARIABLE HVLUP_W_7_HVDMY_45	10.0
VARIABLE HVLUP_W_7_HVDMY_60	18.0

VARIABLE HVLUP_W_8_HVDMY_7_12	0.58
VARIABLE HVLUP_W_8_HVDMY_20	1.0
VARIABLE HVLUP_W_8_HVDMY_24	4.0
VARIABLE HVLUP_W_8_HVDMY_40	10.0
VARIABLE HVLUP_W_8_HVDMY_45	10.0
VARIABLE HVLUP_W_8_HVDMY_60	18.0

VARIABLE HVLUP_C_1		200.0

VARIABLE HVLUP_C_2_HVDMY_7_12	16.0
VARIABLE HVLUP_C_2_HVDMY_20	35.0
VARIABLE HVLUP_C_2_HVDMY_24	50.0
VARIABLE HVLUP_C_2_HVDMY_40	50.0
VARIABLE HVLUP_C_2_HVDMY_45	50.0
VARIABLE HVLUP_C_2_HVDMY_60	120.0

VARIABLE HVLUP_C_3_HVDMY_7_12	16.0
VARIABLE HVLUP_C_3_HVDMY_20	35.0
VARIABLE HVLUP_C_3_HVDMY_24	50.0
VARIABLE HVLUP_C_3_HVDMY_40	50.0

VARIABLE HVLUP_E_1_1_HVDMY_7_12	1.5
VARIABLE HVLUP_E_1_1_HVDMY_20	1.5
VARIABLE HVLUP_E_1_1_HVDMY_24	1.5
VARIABLE HVLUP_E_1_1_HVDMY_40	1.5
VARIABLE HVLUP_E_1_2_HVDMY_45	1.0
VARIABLE HVLUP_E_1_2_HVDMY_60	1.0

VARIABLE HVLUP_C_4	1.5
VARIABLE HVLUP_C_5	4.0

VARIABLE HVLUP_W_9	3.0
VARIABLE HVLUP_C_6	1.0

VARIABLE ALL_TEXT  "?"   // Pin name of all bond pad


// bond pad definition for HVLUP.7
ALL_BOND_PAD  = ((CBi OR CB2i) OR UBMn) OR UBMd
BOND_PAD_M1_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT 40 PRIMARY ONLY
BOND_PAD_M2_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT 41 PRIMARY ONLY
BOND_PAD_M3_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT 42 PRIMARY ONLY
BOND_PAD_M4_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT 43 PRIMARY ONLY
BOND_PAD_MD_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT 159 PRIMARY ONLY 

 ALL_BOND_PAD_WI_TEXT =  (((BOND_PAD_M1_BY_TEXT OR BOND_PAD_M2_BY_TEXT) OR BOND_PAD_M3_BY_TEXT) OR BOND_PAD_M4_BY_TEXT) OR BOND_PAD_MD_BY_TEXT
ALL_BOND_PAD_WO_TEXT = ALL_BOND_PAD NOT ALL_BOND_PAD_WI_TEXT



// Latch-Up CHECKS
//================
RH = (PORES OR ODRES) INTERACT RPO
NPODc = NPi AND ODi
PPODc = PPi AND ODi
PTAPc = PPODc AND ((PWELLi OR HVPWi) OR HVPBi)
NTAPc = NPODc AND ((((NONWRi OR NOHVNWRi) OR H60NWi) OR NWLVTi ) NOT HVPBi)

RPO_RPDMY = RPOi OR REST
NSDc  = NSDi NOT RPO_RPDMY      // NMOS source/drain for connection
PSDc  = PSDi NOT RPO_RPDMY      // PMOS source/drain for connection
RWi = PWELLi INSIDE DNWi
NWRiT = (NWELLi INTERACT RWDMY) NOT RWDMY // NWR terminal
SRM = COPY EXCL
UBMn = (UBMi NOT INTERACT PPIi) NOT INTERACT MDi  // UBM lie on Top Metal
UBMd = UBMi NOT UBMn                             // UBM lie on PPI or MD
CONNECT NWELL DNW
// Wire-Bond
CONNECT M4x CBi
// Flip-chip
// 1_Ground up
CONNECT M4x UBMn BY CBDi
// 2_RDL (before passivation)
//CONNECT M6xd MDxd BY VIADi
CONNECT MDx UBMd
// 3_PPI (After passivation)
CONNECT M4x PPIi BY CBDi
CONNECT PPIi UBMd
EMPTYi = CHIP  NOT BULK
//active with od res
NACTc = NPODc AND ((PWELLi  OR HVPWi) OR HVPBi)
PACTc = PPODc AND ((((NONWRi OR NOHVNWRi) OR H60NWi) OR NWLVTi ) NOT HVPBi )

COu	= COPY COi
NTAPu	= COPY NTAPc
PTAPu	= COPY PTAPc
NSDu	= NACTc NOT POLYi
PSDu	= PACTc NOT POLYi
POu	= COPY POLYi
GATEi	= POLYi AND ODi
GATEu	= STAMP GATEi BY POu
NSDu_g  = NSDu INTERACT POu 
PSDu_g  = PSDu INTERACT POu 
NWELLu	= COPY NWELLi
RWu	= COPY RWi
NWRuT	= (NWELLi INTERACT RWDMY) NOT RWDMY
PWELu	= COPY PWELLi
M1u	= COPY M1x
M2u	= COPY M2x
M3u	= COPY M3x
M4u	= COPY M4x
VIA1u	= COPY VIA1i
VIA2u	= COPY VIA2i
VIA3u	= COPY VIA3i
VIADu   = COPY VIADi
MDu     = COPY MDx
CBu	= COPY CBi
CBDu	= COPY CBDi
CB2u	= COPY CB2i
PPIu	= COPY PPIi
UBMnu   = COPY UBMn
UBMdu   = COPY UBMd

H60NWu  = COPY H60NWi
HVNWu	= COPY HVNWi
NBLu	= COPY NBLi
NWLVTu	= COPY NWLVTi
NTAPu_NBL = COPY NTAPi_NBL
CTM3iu = COPY CTM3i

CONNECT    NTAPu NWELLu
CONNECT    NTAPu HVNWu
CONNECT    NTAPu PSDu
CONNECT    PTAPu NSDu
CONNECT    NBLu NTAPu_NBL
CONNECT    NTAPu_NBL NWELLu
CONNECT    NTAPu_NBL HVNWu
CONNECT    NTAPu_NBL PSDu
SCONNECT   NTAPu_NBL NWLVTu
CONNECT    M1u NTAPu_NBL BY COu
SCONNECT   NTAPu NWLVTu
SCONNECT   NTAPu H60NWu


SCONNECT PTAPu	RWu	    //for DNW connection
SCONNECT PTAPu	PWELu	    //for DNW connection
CONNECT COu PSDu        // For butted CO
CONNECT COu NSDu        // For butted CO
CONNECT COu POu		// For butted CO
CONNECT COu M1u
CONNECT    M1u POu NTAPu PTAPu PSDu NSDu BY COu
CONNECT M1u NWRuT BY COu
CONNECT    M1u M2u BY VIA1u
CONNECT    M2u M3u BY VIA2u
//Exclude the via upon CTM region
VIAtu   = VIA3u NOT INTERACT CTM3i
VIAcu   = VIA3u AND CTM3iu
CONNECT    M3u M4u BY VIAtu
CONNECT    M4u CTM3iu BY VIAcu
CONNECT    M4u MDu BY VIADu
CONNECT M4u CBu
// Flip-chip
// 1_Ground up
CONNECT M4u UBMnu BY CBDu
// 2_RDL (before passivation)
CONNECT MDu UBMdu
// 3_PPI (After passivation)
CONNECT M4u PPIu BY CBDu
CONNECT PPIu UBMdu

#IFDEF DISCONNECT_AFTER_RESISTOR
NTAPiu = NTAPi NOT EMPTYi
PTAPiu = PTAPi NOT EMPTYi
NSDiu  = NSDc  NOT EMPTYi
PSDiu  = PSDc  NOT EMPTYi
CBiu   = CBi   NOT EMPTYi
CB2iu  = CB2i  NOT EMPTYi
ILP1iu = ILP1i NOT EMPTYi
UBMniu = UBMn NOT EMPTYi
UBMdiu = UBMd NOT EMPTYi
HVNWiu = HVNWi NOT EMPTYi
H60NWiu = H60NWi NOT EMPTYi
COiu	= COi NOT EMPTYi


PWR_M1iu_BY_TEXT = M1x WITH TEXT LU_POWER 40 PRIMARY ONLY
GND_M1iu_BY_TEXT = M1x WITH TEXT GROUND_NEG_POWER 40 PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1x WITH TEXT PAD_TEXT 40 PRIMARY ONLY

PWR_M2iu_BY_TEXT = M2x WITH TEXT LU_POWER 41 PRIMARY ONLY
GND_M2iu_BY_TEXT = M2x WITH TEXT GROUND_NEG_POWER 41 PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2x WITH TEXT PAD_TEXT 41 PRIMARY ONLY

PWR_M3iu_BY_TEXT = M3x WITH TEXT LU_POWER 42 PRIMARY ONLY
GND_M3iu_BY_TEXT = M3x WITH TEXT GROUND_NEG_POWER 42 PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3x WITH TEXT PAD_TEXT 42 PRIMARY ONLY

PWR_M4iu_BY_TEXT = M4x WITH TEXT LU_POWER 43 PRIMARY ONLY
GND_M4iu_BY_TEXT = M4x WITH TEXT GROUND_NEG_POWER 43 PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4x WITH TEXT PAD_TEXT 43 PRIMARY ONLY


PWR_MDiu_BY_TEXT = MDx WITH TEXT LU_POWER 159 PRIMARY ONLY
GND_MDiu_BY_TEXT = MDx WITH TEXT GROUND_NEG_POWER 159 PRIMARY ONLY
PAD_MDiu_BY_TEXT = MDx WITH TEXT PAD_TEXT 159 PRIMARY ONLY

#ELSE
NTAPiu = NTAPu NOT EMPTYi
PTAPiu = PTAPu NOT EMPTYi
NSDiu  = NSDu  NOT EMPTYi
PSDiu  = PSDu  NOT EMPTYi
CBiu   = CBu   NOT EMPTYi
CB2iu  = CB2u  NOT EMPTYi
ILP1iu = POu   NOT EMPTYi
UBMniu = UBMnu NOT EMPTYi
UBMdiu = UBMdu NOT EMPTYi
HVNWiu = HVNWu NOT EMPTYi
H60NWiu = H60NWu NOT EMPTYi
COiu	= COu NOT EMPTYi

PWR_M1iu_BY_TEXT = M1u WITH TEXT LU_POWER 40 PRIMARY ONLY
GND_M1iu_BY_TEXT = M1u WITH TEXT GROUND_NEG_POWER 40 PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1u WITH TEXT PAD_TEXT 40 PRIMARY ONLY

PWR_M2iu_BY_TEXT = M2u WITH TEXT LU_POWER 41 PRIMARY ONLY
GND_M2iu_BY_TEXT = M2u WITH TEXT GROUND_NEG_POWER 41 PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2u WITH TEXT PAD_TEXT 41 PRIMARY ONLY

PWR_M3iu_BY_TEXT = M3u WITH TEXT LU_POWER 42 PRIMARY ONLY
GND_M3iu_BY_TEXT = M3u WITH TEXT GROUND_NEG_POWER 42 PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3u WITH TEXT PAD_TEXT 42 PRIMARY ONLY

PWR_M4iu_BY_TEXT = M4u WITH TEXT LU_POWER 43 PRIMARY ONLY
GND_M4iu_BY_TEXT = M4u WITH TEXT GROUND_NEG_POWER 43 PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4u WITH TEXT PAD_TEXT 43 PRIMARY ONLY


PWR_MDiu_BY_TEXT = MDu WITH TEXT LU_POWER 159 PRIMARY ONLY
GND_MDiu_BY_TEXT = MDu WITH TEXT GROUND_NEG_POWER 159 PRIMARY ONLY
PAD_MDiu_BY_TEXT = MDu WITH TEXT PAD_TEXT 159 PRIMARY ONLY

#ENDIF // DISCONNECT_AFTER_RESISTOR
ODii = (ODi INTERACT (((REST OR RWDMY) OR BJTDMY) OR (DIODMY NOT INTERACT SDI))) INTERACT COi

ODRES_a = ODRES AND RH
NTAPux = NTAPi NOT INTERACT RNWEL
// Power PAD
VDD_CB = NET AREA RATIO CBiu NTAPux > 0
VSS_CB = NET AREA RATIO CBiu PTAPiu > 0
VDD_UBMn = NET AREA RATIO UBMniu NTAPux > 0  // VDD_UMBn connect to N+ OD pickup
VSS_UBMn = NET AREA RATIO UBMniu PTAPiu > 0  // VSS_UMBn connect to P+ OD pickup
VDD_UBMd = NET AREA RATIO UBMdiu NTAPux > 0  // VDD_UMBd connect to N+ OD pickup
VSS_UBMd = NET AREA RATIO UBMdiu PTAPiu > 0  // VSS_UMBd connect to P+ OD pickup
// Signal PAD
IO_CB  = (CBiu NOT VDD_CB) NOT VSS_CB
IO_UBMn = (UBMniu NOT VDD_UBMn) NOT VSS_UBMn
IO_UBMd = (UBMdiu NOT VDD_UBMd) NOT VSS_UBMd

VDD_VSS_DUMMY = VDDDMY OR VSSDMY
CB_DUMMY = CBiu INTERACT VDD_VSS_DUMMY
CB_VDD_DUMMY = CBiu INTERACT VDDDMY
CB_VSS_DUMMY = CBiu INTERACT VSSDMY
UBMn_DUMMY = UBMniu INTERACT VDD_VSS_DUMMY
UBMn_VDD_DUMMY = UBMniu INTERACT VDDDMY
UBMn_VSS_DUMMY = UBMniu INTERACT VSSDMY
UBMd_DUMMY = UBMdiu INTERACT VDD_VSS_DUMMY
UBMd_VDD_DUMMY = UBMdiu INTERACT VDDDMY
UBMd_VSS_DUMMY = UBMdiu INTERACT VSSDMY

//==========================
// For HV Latch-up rule check
//==========================
NACT_HV = HV_NMOS_OD_REGION NOT PP
NACT_HV_NOT = COPY EMPTYi 
PACT_HV = HV_PMOS_OD_REGION NOT NP
PACT_HV_NOT = COPY EMPTYi 


//HVBJT,HV DIODE and HV resistor directly connected to I/O pads are forbidden
HVDMY_7_12 = (((NLD12G12_GATE OR NLD12G5_GATE) OR (NLD7G5_GATE OR NLD7G5_FISO_GATE)) OR ((PA12G12_OD OR PA12G5_OD) OR PA7G5_GATE))OR (HV_ESD INTERACT (HV7DMY OR HV12DMY))
HVDMY_20 = NLD20G5_OD OR (HV_ESD INTERACT HV20DMY)
HVDMY_24 = (((NLD24G5_OD OR NI24G5_OD) OR NDLD24G5_OD) OR PA24G5_OD) OR (HV_ESD INTERACT HV24DMY)
HVDMY_40 = ((NLD40G12_OD OR NLD40G5_OD) OR (PA40G12_OD OR PA40G5_OD)) OR ((HV_ESD INTERACT HV40DMY) OR ESD_HVDIO_40)
HVDMY_45 = (NLD45G5_OD OR PA45G5_OD ) OR (HV_ESD INTERACT HV45)
HVDMY_60 = (NLD60G5_V2_OD OR PA60G5_V2_OD) OR ((HV_ESD INTERACT HV60DMY) OR ESD_HVDIO_60)

//for LV guard ring
NW_inside_guard_ring_pre1 = NWELLi NOT NTAPi
NW_inside_guard_ring_pre2 = NW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE NTAPi
NW_inside_guard_ring = NW_inside_guard_ring_pre1 NOT WITH EDGE NW_inside_guard_ring_pre2
HVNW_inside_guard_ring_pre1 = HVNWi NOT NTAPi
HVNW_inside_guard_ring_pre2 = HVNW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE NTAPi
HVNW_inside_guard_ring = HVNW_inside_guard_ring_pre1 NOT WITH EDGE HVNW_inside_guard_ring_pre2
PW_inside_guard_ring_pre1 = PWELLi NOT PTAPi
PW_inside_guard_ring_pre2 = PW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE PTAPi
PW_inside_guard_ring = PW_inside_guard_ring_pre1 NOT WITH EDGE PW_inside_guard_ring_pre2
NTAP_guard_ring_hole = ((HOLES NTAPi INNER) INSIDE NWELLi) OR NW_inside_guard_ring
PTAP_guard_ring_hole = ((HOLES PTAPi INNER) INSIDE PWELLi) OR PW_inside_guard_ring


//
//==========================
// For HV Latch-up rule check
//==========================
//
HV_PACT_real = (((PACT AND HVOX) OR PACT_HV ) NOT HVESD_merge ) NOT PACT_HV_NOT
HVESD_merge_real = HVESD_merge AND HVESD_BH
POST_DRIVER_ACT_DIO_LS_HS = ((HV_POST_DRIVER_ACT AND ESD_HVDIO_merge_H) INTERACT HV_VDD_VSS) AND ANO_ESD_DIO
POST_DRIVER_ACT_DIO_LS = ((HV_POST_DRIVER_ACT AND ESD_HVDIO_merge_H) INTERACT HV_VSS) AND ANO_ESD_DIO
POST_DRIVER_ACT_DIO_HS = ((HV_POST_DRIVER_ACT AND ESD_HVDIO_merge_H) INTERACT HV_VDD) AND ANO_ESD_HVDIO_40
POST_DRIVER_ACT_BJT_B_HS = HVESD_BOD TOUCH POST_DRIVER_ACT_HVN_HS
POST_DRIVER_ACT_BJT_B_LS = HVESD_BOD TOUCH POST_DRIVER_ACT_HVN_LS
POST_DRIVER_ACT_BJT_B_internal = HVESD_BOD TOUCH (HVESD_BH NOT INTERACT HVOD_IOPAD)
POST_DRIVER_ACT_BJT_B_other = HVESD_BOD NOT ((POST_DRIVER_ACT_BJT_B_HS OR POST_DRIVER_ACT_BJT_B_LS) OR POST_DRIVER_ACT_BJT_B_internal)
POST_DRIVER_ACT_BJT_B_HS_HVDMY_60 = POST_DRIVER_ACT_BJT_B_HS INTERACT HVDMY_60
POST_DRIVER_ACT_BJT_B_HS_HVDMY_45 = POST_DRIVER_ACT_BJT_B_HS INTERACT HVDMY_45
POST_DRIVER_ACT_BJT_B_HS_HVDMY_40 = POST_DRIVER_ACT_BJT_B_HS INTERACT HVDMY_40
POST_DRIVER_ACT_BJT_B_HS_HVDMY_24 = POST_DRIVER_ACT_BJT_B_HS INTERACT HVDMY_24
POST_DRIVER_ACT_BJT_B_HS_HVDMY_20 = POST_DRIVER_ACT_BJT_B_HS INTERACT HVDMY_20
POST_DRIVER_ACT_BJT_B_HS_HVDMY_7_12 = POST_DRIVER_ACT_BJT_B_HS INTERACT HVDMY_7_12
HV_NACT_real = ((((NACT AND HVOX) OR NACT_HV) OR HVESD_merge_real) OR ESD_HVDIO_merge_H) NOT NACT_HV_NOT
//find the special tapi connected to VDD/VSS 

PTAPI_PAD = NET AREA RATIO PTAPiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NTAPI_PAD = NET AREA RATIO NTAPiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
PTAPI_IOPAD = NET AREA RATIO PTAPiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]
NTAPI_IOPAD = NET AREA RATIO NTAPiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]

PTAPI_VDD_VSS_PAD_DUMMY = NET AREA RATIO PTAPiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
PTAPI_VDD_PAD_DUMMY = NET AREA RATIO PTAPiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
PTAPI_VSS_PAD_DUMMY = NET AREA RATIO PTAPiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0
NTAPI_VDD_VSS_PAD_DUMMY = NET AREA RATIO NTAPiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
NTAPI_VDD_PAD_DUMMY = NET AREA RATIO NTAPiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
NTAPI_VSS_PAD_DUMMY = NET AREA RATIO NTAPiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0
Poly_VDD_VSS_PAD_DUMMY = NET AREA RATIO ILP1iu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
CO_VDD_VSS_PAD_DUMMY = NET AREA RATIO COiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0

 Poly_PAD_TEXT = NET AREA RATIO ILP1iu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_MDiu_BY_TEXT > 0

 CO_PAD_TEXT = NET AREA RATIO COiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_MDiu_BY_TEXT > 0


 PTAPI_PAD_TEXT = NET AREA RATIO PTAPiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_MDiu_BY_TEXT > 0
 NTAPI_PAD_TEXT = NET AREA RATIO NTAPiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_MDiu_BY_TEXT > 0
 PTAPI_VDD_VSS_PAD_TEXT = NET AREA RATIO PTAPiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_MDiu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_MDiu_BY_TEXT > 0
 PTAPI_VDD_PAD_TEXT = NET AREA RATIO PTAPiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_MDiu_BY_TEXT > 0
 PTAPI_VSS_PAD_TEXT = NET AREA RATIO PTAPiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_MDiu_BY_TEXT > 0

 Poly_VDD_VSS_PAD_TEXT = NET AREA RATIO ILP1iu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_MDiu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_MDiu_BY_TEXT > 0

 CO_VDD_VSS_PAD_TEXT = NET AREA RATIO COiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_MDiu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_MDiu_BY_TEXT > 0


 NTAPI_VDD_VSS_PAD_TEXT = NET AREA RATIO NTAPiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_MDiu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_MDiu_BY_TEXT > 0
 NTAPI_VDD_PAD_TEXT = NET AREA RATIO NTAPiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_MDiu_BY_TEXT > 0
 NTAPI_VSS_PAD_TEXT = NET AREA RATIO NTAPiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_MDiu_BY_TEXT > 0


//find the special acti connected to VDD/VSS
PACTI_PAD = NET AREA RATIO PSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NACTI_PAD = NET AREA RATIO NSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
PACTI_IOPAD = NET AREA RATIO PSDiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]
NACTI_IOPAD = NET AREA RATIO NSDiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]

PACTI_VDD_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
PACTI_VDD_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
PACTI_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0
NACTI_VDD_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
NACTI_VDD_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
NACTI_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0

 PACTI_PAD_TEXT = NET AREA RATIO PSDiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT > 0
 NACTI_PAD_TEXT = NET AREA RATIO NSDiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT > 0
 PACTI_VDD_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT > 0
 PACTI_VDD_PAD_TEXT = NET AREA RATIO PSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT > 0
 PACTI_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT > 0

 NACTI_VDD_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT > 0
 NACTI_VDD_PAD_TEXT = NET AREA RATIO NSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT > 0
 NACTI_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT > 0


Poly_PAD = NET AREA RATIO ILP1iu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
CO_PAD = NET AREA RATIO COiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
#IFDEF  CHECK_LATCHUP_BY_TEXT
Poly_IOPAD_ALL = (Poly_PAD OR Poly_PAD_TEXT) NOT (Poly_VDD_VSS_PAD_TEXT OR Poly_VDD_VSS_PAD_DUMMY)
CO_IOPAD_ALL = (CO_PAD OR CO_PAD_TEXT) NOT (CO_VDD_VSS_PAD_TEXT OR CO_VDD_VSS_PAD_DUMMY)
PTAPI_IOPAD_ALL = (PTAPI_PAD OR PTAPI_PAD_TEXT) NOT (PTAPI_VDD_VSS_PAD_TEXT OR PTAPI_VDD_VSS_PAD_DUMMY)
NTAPI_IOPAD_ALL = (NTAPI_PAD OR NTAPI_PAD_TEXT) NOT (NTAPI_VDD_VSS_PAD_TEXT OR NTAPI_VDD_VSS_PAD_DUMMY)
PACTI_IOPAD_ALL = (PACTI_PAD OR PACTI_PAD_TEXT) NOT (PACTI_VDD_VSS_PAD_TEXT OR PACTI_VDD_VSS_PAD_DUMMY)
NACTI_IOPAD_ALL = (NACTI_PAD OR NACTI_PAD_TEXT) NOT (NACTI_VDD_VSS_PAD_TEXT OR NACTI_VDD_VSS_PAD_DUMMY)
HV_VDD_VSS = ((((((PTAPI_VDD_VSS_PAD_TEXT OR NTAPI_VDD_VSS_PAD_TEXT) OR PACTI_VDD_VSS_PAD_DUMMY) OR NACTI_VDD_VSS_PAD_DUMMY) OR PACTI_VDD_VSS_PAD_TEXT) OR NACTI_VDD_VSS_PAD_TEXT) OR PTAPI_VDD_VSS_PAD_DUMMY) OR NTAPI_VDD_VSS_PAD_DUMMY
HV_VDD = ((((((PTAPI_VDD_PAD_TEXT OR NTAPI_VDD_PAD_TEXT) OR PACTI_VDD_PAD_DUMMY) OR NACTI_VDD_PAD_DUMMY) OR PACTI_VDD_PAD_TEXT) OR NACTI_VDD_PAD_TEXT) OR PTAPI_VDD_PAD_DUMMY) OR NTAPI_VDD_PAD_DUMMY
HV_VSS = ((((((PTAPI_VSS_PAD_TEXT OR NTAPI_VSS_PAD_TEXT) OR PACTI_VSS_PAD_DUMMY) OR NACTI_VSS_PAD_DUMMY) OR PACTI_VSS_PAD_TEXT) OR NACTI_VSS_PAD_TEXT) OR PTAPI_VSS_PAD_DUMMY) OR NTAPI_VSS_PAD_DUMMY
#ENDIF

#IFNDEF  CHECK_LATCHUP_BY_TEXT
Poly_IOPAD_ALL = Poly_PAD  NOT Poly_VDD_VSS_PAD_DUMMY
CO_IOPAD_ALL = CO_PAD  NOT CO_VDD_VSS_PAD_DUMMY
PTAPI_IOPAD_ALL = PTAPI_PAD  NOT PTAPI_VDD_VSS_PAD_DUMMY
NTAPI_IOPAD_ALL = NTAPI_PAD  NOT NTAPI_VDD_VSS_PAD_DUMMY
PACTI_IOPAD_ALL = PACTI_PAD  NOT PACTI_VDD_VSS_PAD_DUMMY
NACTI_IOPAD_ALL = NACTI_PAD  NOT NACTI_VDD_VSS_PAD_DUMMY
HV_VDD_VSS = ((PACTI_VDD_VSS_PAD_DUMMY OR NACTI_VDD_VSS_PAD_DUMMY) OR PTAPI_VDD_VSS_PAD_DUMMY) OR NTAPI_VDD_VSS_PAD_DUMMY
HV_VSS = ((PACTI_VSS_PAD_DUMMY OR NACTI_VSS_PAD_DUMMY) OR PTAPI_VSS_PAD_DUMMY) OR NTAPI_VSS_PAD_DUMMY
HV_VDD = ((PACTI_VDD_PAD_DUMMY OR NACTI_VDD_PAD_DUMMY) OR PTAPI_VDD_PAD_DUMMY) OR NTAPI_VDD_PAD_DUMMY
#ENDIF

HVOD_IOPAD = ((PACTI_IOPAD_ALL OR NACTI_IOPAD_ALL) OR PTAPI_IOPAD_ALL ) OR NTAPI_IOPAD_ALL

// ESD device [covered by dummy layers]
HV_POST_DRIVER_PACT1 = HV_PACT_real AND EMPTYi    // MOS with active region in SDI
HV_POST_DRIVER_NACT1 = HV_NACT_real AND EMPTYi    // MOS with active region in SDI
// ESD device [connected to Signal PAD but not connected to one PAD only]
HV_POST_DRIVER_PACT2 = HV_PACT_real INTERACT HVOD_IOPAD
HV_POST_DRIVER_NACT2 = HV_NACT_real INTERACT HVOD_IOPAD

HV_POST_DRIVER_PACT = HV_POST_DRIVER_PACT1 OR HV_POST_DRIVER_PACT2
HV_POST_DRIVER_NACT = HV_POST_DRIVER_NACT1 OR HV_POST_DRIVER_NACT2

POST_DRIVER_ACT_HVN_HS_EXCL = ((NLD60G5_V2_GATE OR NLD45G5_GATE) OR (HVESD_merge_PNP_60 OR HVESD_merge_PNP_45)) OR ESD_HVDIO_60

HV_POST_DRIVER_ACT = HV_POST_DRIVER_PACT OR HV_POST_DRIVER_NACT
POST_DRIVER_ACT_HVN_LS_HS_pre = (HV_POST_DRIVER_ACT AND HV_NACT_real) INTERACT HV_VDD_VSS
POST_DRIVER_ACT_HVN_LS_HS = POST_DRIVER_ACT_HVN_LS_HS_pre OR POST_DRIVER_ACT_DIO_LS_HS
POST_DRIVER_ACT_HVN_HS_pre = ((HV_POST_DRIVER_ACT AND HV_NACT_real) NOT INTERACT POST_DRIVER_ACT_HVN_HS_EXCL) INTERACT HV_VDD
POST_DRIVER_ACT_HVN_HS = POST_DRIVER_ACT_HVN_HS_pre OR POST_DRIVER_ACT_DIO_HS
POST_DRIVER_ACT_HVN_LS_pre = (HV_POST_DRIVER_ACT AND HV_NACT_real) INTERACT HV_VSS
POST_DRIVER_ACT_HVN_LS = POST_DRIVER_ACT_HVN_LS_pre OR POST_DRIVER_ACT_DIO_LS

POST_DRIVER_ACT_HVN_HS_HVDMY_60 = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_60
POST_DRIVER_ACT_HVN_LS_HVDMY_60 = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_60
POST_DRIVER_ACT_HVN_HS_HVDMY_45 = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_45
POST_DRIVER_ACT_HVN_LS_HVDMY_45 = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_45
POST_DRIVER_ACT_HVN_HS_HVDMY_40 = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_40
POST_DRIVER_ACT_HVN_LS_HVDMY_40 = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_40
POST_DRIVER_ACT_HVN_HS_HVDMY_24 = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_24
POST_DRIVER_ACT_HVN_LS_HVDMY_24 = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_24
POST_DRIVER_ACT_HVN_HS_HVDMY_20 = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_20
POST_DRIVER_ACT_HVN_LS_HVDMY_20 = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_20
POST_DRIVER_ACT_HVN_HS_HVDMY_7_12 = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_7_12
POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_7_12





HV_POST_DRIVER_PACT_HVDMY_60 = HV_POST_DRIVER_PACT INTERACT HVDMY_60
HV_POST_DRIVER_NACT_HVDMY_60 = HV_POST_DRIVER_NACT INTERACT HVDMY_60

HV_POST_DRIVER_PACT_HVDMY_45 = HV_POST_DRIVER_PACT INTERACT HVDMY_45 
HV_POST_DRIVER_NACT_HVDMY_45 = HV_POST_DRIVER_NACT INTERACT HVDMY_45

HV_POST_DRIVER_PACT_HVDMY_40 = HV_POST_DRIVER_PACT INTERACT HVDMY_40
HV_POST_DRIVER_NACT_HVDMY_40 = HV_POST_DRIVER_NACT INTERACT HVDMY_40

HV_POST_DRIVER_PACT_HVDMY_24 = HV_POST_DRIVER_PACT INTERACT HVDMY_24
HV_POST_DRIVER_NACT_HVDMY_24 = HV_POST_DRIVER_NACT INTERACT HVDMY_24
HV_POST_DRIVER_PACT_HVDMY_20 = HV_POST_DRIVER_PACT INTERACT HVDMY_20
HV_POST_DRIVER_NACT_HVDMY_20 = HV_POST_DRIVER_NACT INTERACT HVDMY_20
HV_POST_DRIVER_PACT_HVDMY_7_12 = HV_POST_DRIVER_PACT INTERACT HVDMY_7_12
HV_POST_DRIVER_NACT_HVDMY_7_12 = HV_POST_DRIVER_NACT INTERACT HVDMY_7_12





//===============================
//P+ isolation ring for HV LUP
//===============================
HVPW_NLD7G5 = (( HVOXi NOT HVNWi ) AND PSUBi ) NOT EXCL
PPOD_ISO_R_1_NLD7G5_pre = (( PPOD AND HVPW_NLD7G5) NOT NBL ) NOT ALL_HVPMOS_OD
PPOD_ISO_H_1_NLD7G5 = ((HOLES PPOD_ISO_R_1_NLD7G5_pre INNER) NOT PPOD_ISO_R_1_NLD7G5_pre) ENCLOSE NLD7G5_GATE
PPOD_ISO_R_1_NLD7G5 = PPOD_ISO_R_1_NLD7G5_pre TOUCH PPOD_ISO_H_1_NLD7G5
PPOD_ISO_R_1  = ((( PPOD AND HVPW ) NOT NBL ) NOT ALL_HVPMOS_OD) OR PPOD_ISO_R_1_NLD7G5

// for HVDMY_60
PPOD_ISO_H_1_HVDMY_60 = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_60
PPOD_ISO_R_1_HVDMY_60  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_60

PPOD_ISO_R_2_HVDMY_60 = SIZE PPOD_ISO_R_1_HVDMY_60 BY (HVOD_W_2/2)-GRID UNDEROVER  // HVOD_W_2 is min value hvod width
PPOD_ISO_H_HVDMY_60 = (HOLES PPOD_ISO_R_2_HVDMY_60 INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_60
PPOD_ISO_R_HVDMY_60 = PPOD_ISO_R_2_HVDMY_60 TOUCH PPOD_ISO_H_HVDMY_60

PPOD_ISO_H_HL_HVDMY_60 = PPOD_ISO_H_HVDMY_60 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_60 = PPOD_ISO_R_HVDMY_60 TOUCH PPOD_ISO_H_HL_HVDMY_60
PPOD_ISO_H_L_HVDMY_60 = PPOD_ISO_H_HVDMY_60 ENCLOSE POST_DRIVER_ACT_HVN_LS
PPOD_ISO_R_L_HVDMY_60 = PPOD_ISO_R_HVDMY_60 TOUCH PPOD_ISO_H_L_HVDMY_60

// for HVDMY_45
PPOD_ISO_H_1_HVDMY_45 = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_45
PPOD_ISO_R_1_HVDMY_45  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_45

PPOD_ISO_R_2_HVDMY_45 = SIZE PPOD_ISO_R_1_HVDMY_45 BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H_HVDMY_45 = (HOLES PPOD_ISO_R_2_HVDMY_45 INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_45
PPOD_ISO_R_HVDMY_45 = PPOD_ISO_R_2_HVDMY_45 TOUCH PPOD_ISO_H_HVDMY_45

PPOD_ISO_H_HL_HVDMY_45 = PPOD_ISO_H_HVDMY_45 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_45 = PPOD_ISO_R_HVDMY_45 TOUCH PPOD_ISO_H_HL_HVDMY_45
PPOD_ISO_H_L_HVDMY_45 = PPOD_ISO_H_HVDMY_45 ENCLOSE POST_DRIVER_ACT_HVN_LS
PPOD_ISO_R_L_HVDMY_45 = PPOD_ISO_R_HVDMY_45 TOUCH PPOD_ISO_H_L_HVDMY_45
// for HVDMY_40
PPOD_ISO_H_1_HVDMY_40 = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_40
PPOD_ISO_R_1_HVDMY_40  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_40

PPOD_ISO_R_2_HVDMY_40 = SIZE PPOD_ISO_R_1_HVDMY_40 BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H_HVDMY_40 = (HOLES PPOD_ISO_R_2_HVDMY_40 INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_40
PPOD_ISO_R_HVDMY_40 = PPOD_ISO_R_2_HVDMY_40 TOUCH PPOD_ISO_H_HVDMY_40

PPOD_ISO_H_HL_HVDMY_40 = PPOD_ISO_H_HVDMY_40 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_40 = PPOD_ISO_R_HVDMY_40 TOUCH PPOD_ISO_H_HL_HVDMY_40
PPOD_ISO_H_L_HVDMY_40 = PPOD_ISO_H_HVDMY_40 ENCLOSE POST_DRIVER_ACT_HVN_LS
PPOD_ISO_R_L_HVDMY_40 = PPOD_ISO_R_HVDMY_40 TOUCH PPOD_ISO_H_L_HVDMY_40
// for HVDMY_24
PPOD_ISO_H_1_HVDMY_24 = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_24
PPOD_ISO_R_1_HVDMY_24  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_24

PPOD_ISO_R_2_HVDMY_24 = SIZE PPOD_ISO_R_1_HVDMY_24 BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H_HVDMY_24 = (HOLES PPOD_ISO_R_2_HVDMY_24 INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_24
PPOD_ISO_R_HVDMY_24 = PPOD_ISO_R_2_HVDMY_24 TOUCH PPOD_ISO_H_HVDMY_24

PPOD_ISO_H_HL_HVDMY_24 = PPOD_ISO_H_HVDMY_24 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_24 = PPOD_ISO_R_HVDMY_24 TOUCH PPOD_ISO_H_HL_HVDMY_24
PPOD_ISO_H_L_HVDMY_24 = PPOD_ISO_H_HVDMY_24 ENCLOSE POST_DRIVER_ACT_HVN_LS
PPOD_ISO_R_L_HVDMY_24 = PPOD_ISO_R_HVDMY_24 TOUCH PPOD_ISO_H_L_HVDMY_24
// for HVDMY_20
PPOD_ISO_H_1_HVDMY_20 = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_20
PPOD_ISO_R_1_HVDMY_20  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_20

PPOD_ISO_R_2_HVDMY_20 = SIZE PPOD_ISO_R_1_HVDMY_20 BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H_HVDMY_20 = (HOLES PPOD_ISO_R_2_HVDMY_20 INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_20
PPOD_ISO_R_HVDMY_20 = PPOD_ISO_R_2_HVDMY_20 TOUCH PPOD_ISO_H_HVDMY_20

PPOD_ISO_H_HL_HVDMY_20 = PPOD_ISO_H_HVDMY_20 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_20 = PPOD_ISO_R_HVDMY_20 TOUCH PPOD_ISO_H_HL_HVDMY_20
PPOD_ISO_H_L_HVDMY_20 = PPOD_ISO_H_HVDMY_20 ENCLOSE POST_DRIVER_ACT_HVN_LS
PPOD_ISO_R_L_HVDMY_20 = PPOD_ISO_R_HVDMY_20 TOUCH PPOD_ISO_H_L_HVDMY_20
// for HVDMY_7_12
PPOD_ISO_H_1_HVDMY_7_12 = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_7_12
PPOD_ISO_R_1_HVDMY_7_12  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_7_12

PPOD_ISO_R_2_HVDMY_7_12 = SIZE PPOD_ISO_R_1_HVDMY_7_12 BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H_HVDMY_7_12 = (HOLES PPOD_ISO_R_2_HVDMY_7_12 INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_7_12
PPOD_ISO_R_HVDMY_7_12 = PPOD_ISO_R_2_HVDMY_7_12 TOUCH PPOD_ISO_H_HVDMY_7_12

PPOD_ISO_H_HL_HVDMY_7_12 = PPOD_ISO_H_HVDMY_7_12 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_7_12 = PPOD_ISO_R_HVDMY_7_12 TOUCH PPOD_ISO_H_HL_HVDMY_7_12
PPOD_ISO_H_L_HVDMY_7_12 = PPOD_ISO_H_HVDMY_7_12 ENCLOSE POST_DRIVER_ACT_HVN_LS
PPOD_ISO_R_L_HVDMY_7_12 = PPOD_ISO_R_HVDMY_7_12 TOUCH PPOD_ISO_H_L_HVDMY_7_12



PPOD_ISO_H_LU = ((((PPOD_ISO_H_HVDMY_60 OR PPOD_ISO_H_HVDMY_45) OR PPOD_ISO_H_HVDMY_40) OR PPOD_ISO_H_HVDMY_24) OR PPOD_ISO_H_HVDMY_20) OR PPOD_ISO_H_HVDMY_7_12
PPOD_ISO_R_LU = ((((PPOD_ISO_R_HVDMY_60 OR PPOD_ISO_R_HVDMY_45) OR PPOD_ISO_R_HVDMY_40) OR PPOD_ISO_R_HVDMY_24) OR PPOD_ISO_R_HVDMY_20) OR PPOD_ISO_R_HVDMY_7_12


//==============================
//N+ isolation ring for HV LUP
//==============================
NPOD_ISO_R_1  = (( NPOD  AND HVNW ) AND NBL ) NOT ALL_HVNMOS_OD
// for HVDMY_60
NPOD_ISO_LUP_H_1_HVDMY_60 = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_60
NPOD_ISO_R_1_HVDMY_60 = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_60

NPOD_ISO_R_2_HVDMY_60 = SIZE NPOD_ISO_R_1_HVDMY_60 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_LUP_H_HVDMY_60 = (HOLES NPOD_ISO_R_2_HVDMY_60) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_60
NPOD_ISO_R_HVDMY_60 = NPOD_ISO_R_2_HVDMY_60 TOUCH NPOD_ISO_LUP_H_HVDMY_60

// for HVDMY_45
NPOD_ISO_LUP_H_1_HVDMY_45 = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_45
NPOD_ISO_R_1_HVDMY_45 = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_45

NPOD_ISO_R_2_HVDMY_45 = SIZE NPOD_ISO_R_1_HVDMY_45 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_LUP_H_HVDMY_45 = (HOLES NPOD_ISO_R_2_HVDMY_45) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_45
NPOD_ISO_R_HVDMY_45 = NPOD_ISO_R_2_HVDMY_45 TOUCH NPOD_ISO_LUP_H_HVDMY_45

// for HVDMY_40
NPOD_ISO_LUP_H_1_HVDMY_40 = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_PACT_HVDMY_40 OR POST_DRIVER_ACT_DIO_HS)
NPOD_ISO_R_1_HVDMY_40 = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_40

NPOD_ISO_R_2_HVDMY_40 = SIZE NPOD_ISO_R_1_HVDMY_40 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_LUP_H_HVDMY_40 = (HOLES NPOD_ISO_R_2_HVDMY_40) ENCLOSE (HV_POST_DRIVER_PACT_HVDMY_40 OR POST_DRIVER_ACT_DIO_HS)
NPOD_ISO_R_HVDMY_40 = NPOD_ISO_R_2_HVDMY_40 TOUCH NPOD_ISO_LUP_H_HVDMY_40

// for HVDMY_24
NPOD_ISO_LUP_H_1_HVDMY_24 = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_24
NPOD_ISO_R_1_HVDMY_24 = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_24

NPOD_ISO_R_2_HVDMY_24 = SIZE NPOD_ISO_R_1_HVDMY_24 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_LUP_H_HVDMY_24 = (HOLES NPOD_ISO_R_2_HVDMY_24) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_24
NPOD_ISO_R_HVDMY_24 = NPOD_ISO_R_2_HVDMY_24 TOUCH NPOD_ISO_LUP_H_HVDMY_24
// for HVDMY_20
NPOD_ISO_LUP_H_1_HVDMY_20 = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_20
NPOD_ISO_R_1_HVDMY_20 = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_20

NPOD_ISO_R_2_HVDMY_20 = SIZE NPOD_ISO_R_1_HVDMY_20 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_LUP_H_HVDMY_20 = (HOLES NPOD_ISO_R_2_HVDMY_20) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_20
NPOD_ISO_R_HVDMY_20 = NPOD_ISO_R_2_HVDMY_20 TOUCH NPOD_ISO_LUP_H_HVDMY_20
// for HVDMY_7_12
NPOD_ISO_LUP_H_1_HVDMY_7_12 = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_7_12
NPOD_ISO_R_1_HVDMY_7_12 = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_7_12

NPOD_ISO_R_2_HVDMY_7_12 = SIZE NPOD_ISO_R_1_HVDMY_7_12 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_LUP_H_HVDMY_7_12 = (HOLES NPOD_ISO_R_2_HVDMY_7_12) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_7_12
NPOD_ISO_R_HVDMY_7_12 = NPOD_ISO_R_2_HVDMY_7_12 TOUCH NPOD_ISO_LUP_H_HVDMY_7_12





NPOD_ISO_LUP_H = ((((NPOD_ISO_LUP_H_HVDMY_60 OR NPOD_ISO_LUP_H_HVDMY_45) OR NPOD_ISO_LUP_H_HVDMY_40) OR NPOD_ISO_LUP_H_HVDMY_24) OR NPOD_ISO_LUP_H_HVDMY_20 ) OR NPOD_ISO_LUP_H_HVDMY_7_12
NPOD_ISO_LUP_R = ((((NPOD_ISO_R_HVDMY_60 OR NPOD_ISO_R_HVDMY_45) OR NPOD_ISO_R_HVDMY_40) OR NPOD_ISO_R_HVDMY_24) OR NPOD_ISO_R_HVDMY_20 ) OR NPOD_ISO_R_HVDMY_7_12

//===============================
//P+ guard ring for HV LUP
//===============================

PPOD_GR_R_1  = HP_PICKUP NOT NBL

// for HVDMY_60
PPOD_GR_H_1_HVDMY_60 = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_60 OR POST_DRIVER_ACT_HVN_HS_HVDMY_60)
PPOD_GR_R_1_HVDMY_60  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_60

PPOD_GR_R_2_HVDMY_60 = SIZE PPOD_GR_R_1_HVDMY_60 BY (HVLUP_W_2_HVDMY_60/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_60 = HOLES PPOD_GR_R_2_HVDMY_60 INNER
PPOD_GR_R_HVDMY_60 = PPOD_GR_R_2_HVDMY_60 TOUCH PPOD_GR_H_HVDMY_60
PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_60 = PPOD_GR_H_HVDMY_60 ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_60
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_60 = PPOD_GR_R_2_HVDMY_60 TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_60 
// for HVDMY_45
PPOD_GR_H_1_HVDMY_45 = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_45 OR POST_DRIVER_ACT_HVN_HS_HVDMY_45)
PPOD_GR_R_1_HVDMY_45  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_45

PPOD_GR_R_2_HVDMY_45 = SIZE PPOD_GR_R_1_HVDMY_45 BY (HVLUP_W_2_HVDMY_45/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_45 = HOLES PPOD_GR_R_2_HVDMY_45 INNER
PPOD_GR_R_HVDMY_45 = PPOD_GR_R_2_HVDMY_45 TOUCH PPOD_GR_H_HVDMY_45
PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_45 = PPOD_GR_H_HVDMY_45 ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_45
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_45 = PPOD_GR_R_2_HVDMY_45 TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_45 


// for HVDMY_40
PPOD_GR_H_1_HVDMY_40 = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_40 OR POST_DRIVER_ACT_HVN_HS_HVDMY_40)
PPOD_GR_R_1_HVDMY_40  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_40

PPOD_GR_R_2_HVDMY_40 = SIZE PPOD_GR_R_1_HVDMY_40 BY (HVLUP_W_2_HVDMY_40/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_40 = HOLES PPOD_GR_R_2_HVDMY_40 INNER
PPOD_GR_R_HVDMY_40 = PPOD_GR_R_2_HVDMY_40 TOUCH PPOD_GR_H_HVDMY_40
PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_40 = PPOD_GR_H_HVDMY_40 ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_40
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_40 = PPOD_GR_R_2_HVDMY_40 TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_40 

// for HVDMY_24
PPOD_GR_H_1_HVDMY_24 = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_24 OR POST_DRIVER_ACT_HVN_HS_HVDMY_24)
PPOD_GR_R_1_HVDMY_24  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_24

PPOD_GR_R_2_HVDMY_24 = SIZE PPOD_GR_R_1_HVDMY_24 BY (HVLUP_W_2_HVDMY_24/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_24 = HOLES PPOD_GR_R_2_HVDMY_24 INNER
PPOD_GR_R_HVDMY_24 = PPOD_GR_R_2_HVDMY_24 TOUCH PPOD_GR_H_HVDMY_24
PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_24 = PPOD_GR_H_HVDMY_24 ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_24
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_24 = PPOD_GR_R_2_HVDMY_24 TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_24 

// for HVDMY_20
PPOD_GR_H_1_HVDMY_20 = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_20 OR POST_DRIVER_ACT_HVN_HS_HVDMY_20)
PPOD_GR_R_1_HVDMY_20  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_20

PPOD_GR_R_2_HVDMY_20 = SIZE PPOD_GR_R_1_HVDMY_20 BY (HVLUP_W_6_HVDMY_20/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_20 = HOLES PPOD_GR_R_2_HVDMY_20 INNER
PPOD_GR_R_HVDMY_20 = PPOD_GR_R_2_HVDMY_20 TOUCH PPOD_GR_H_HVDMY_20
PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_20 = PPOD_GR_H_HVDMY_20 ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_20
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_20 = PPOD_GR_R_2_HVDMY_20 TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_20 

// for HVDMY_7_12
HV_POST_DRIVER_PACT_PA7G5 = HV_POST_DRIVER_PACT INTERACT PA7G5_GATE
PPOD_GR_H_1_HVDMY_7_12 = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE ((NPOD_ISO_R_HVDMY_7_12 OR POST_DRIVER_ACT_HVN_HS_HVDMY_7_12) OR HV_POST_DRIVER_PACT_PA7G5)
PPOD_GR_R_1_HVDMY_7_12  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_7_12

PPOD_GR_R_2_HVDMY_7_12 = SIZE PPOD_GR_R_1_HVDMY_7_12 BY (HVLUP_W_2_HVDMY_7_12/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_7_12 = HOLES PPOD_GR_R_2_HVDMY_7_12 INNER
PPOD_GR_R_HVDMY_7_12 = PPOD_GR_R_2_HVDMY_7_12 TOUCH PPOD_GR_H_HVDMY_7_12
PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_7_12 = PPOD_GR_H_HVDMY_7_12 ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_7_12
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_7_12 = PPOD_GR_R_2_HVDMY_7_12 TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_7_12 






PPOD_GR_H = ((((PPOD_GR_H_HVDMY_60 OR PPOD_GR_H_HVDMY_45) OR PPOD_GR_H_HVDMY_40) OR PPOD_GR_H_HVDMY_24) OR PPOD_GR_H_HVDMY_20) OR PPOD_GR_H_HVDMY_7_12
PPOD_GR_R = ((((PPOD_GR_R_HVDMY_60 OR PPOD_GR_R_HVDMY_45) OR PPOD_GR_R_HVDMY_40) OR PPOD_GR_R_HVDMY_24) OR PPOD_GR_R_HVDMY_20) OR PPOD_GR_R_HVDMY_7_12

//===============================
//HVNW pick up ring 
//===============================
HVNW_NPOD_ISO_R_1 = (((NPOD  AND HVNW) AND NBL) NOT ALL_HVMOS_OD) NOT HVESD_BOD
// for HVDMY_60
HVNW_NPOD_ISO_LUP_H_1_HVDMY_60 = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_60
HVNW_NPOD_ISO_R_1_HVDMY_60 = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_60
HVNW_NPOD_ISO_R_2_HVDMY_60 = SIZE HVNW_NPOD_ISO_R_1_HVDMY_60 BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_60 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_60) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_60
HVNW_NPOD_ISO_R_HVDMY_60_C = HVNW_NPOD_ISO_R_2_HVDMY_60 TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_60
HVNW_NPOD_ISO_R_HVDMY_60 = STAMP HVNW_NPOD_ISO_R_HVDMY_60_C BY NTAPi

// for HVDMY_45
HVNW_NPOD_ISO_LUP_H_1_HVDMY_45 = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_45
HVNW_NPOD_ISO_R_1_HVDMY_45 = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_45
HVNW_NPOD_ISO_R_2_HVDMY_45 = SIZE HVNW_NPOD_ISO_R_1_HVDMY_45 BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_45 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_45) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_45
HVNW_NPOD_ISO_R_HVDMY_45_C = HVNW_NPOD_ISO_R_2_HVDMY_45 TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_45
HVNW_NPOD_ISO_R_HVDMY_45 = STAMP HVNW_NPOD_ISO_R_HVDMY_45_C BY NTAPi

// for HVDMY_40
HVNW_NPOD_ISO_LUP_H_1_HVDMY_40 = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_40
HVNW_NPOD_ISO_R_1_HVDMY_40 = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_40
HVNW_NPOD_ISO_R_2_HVDMY_40 = SIZE HVNW_NPOD_ISO_R_1_HVDMY_40 BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_40 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_40) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_40
HVNW_NPOD_ISO_R_HVDMY_40_C = HVNW_NPOD_ISO_R_2_HVDMY_40 TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_40
HVNW_NPOD_ISO_R_HVDMY_40 = STAMP HVNW_NPOD_ISO_R_HVDMY_40_C BY NTAPi

// for HVDMY_24
HVNW_NPOD_ISO_LUP_H_1_HVDMY_24 = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_24
HVNW_NPOD_ISO_R_1_HVDMY_24 = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_24
HVNW_NPOD_ISO_R_2_HVDMY_24 = SIZE HVNW_NPOD_ISO_R_1_HVDMY_24 BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_24 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_24) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_24
HVNW_NPOD_ISO_R_HVDMY_24_C_pre = HVNW_NPOD_ISO_R_2_HVDMY_24 TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_24
HVNW_NPOD_ISO_R_HVDMY_24_C = HVNW_NPOD_ISO_R_HVDMY_24_C_pre OR ((NLD24G5_D OR NI24G5_D) AND HV_POST_DRIVER_NACT_HVDMY_24)
HVNW_NPOD_ISO_R_HVDMY_24 = STAMP HVNW_NPOD_ISO_R_HVDMY_24_C BY NTAPi

// for HVDMY_20
HVNW_NPOD_ISO_LUP_H_1_HVDMY_20 = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_20
HVNW_NPOD_ISO_R_1_HVDMY_20 = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_20
HVNW_NPOD_ISO_R_2_HVDMY_20 = SIZE HVNW_NPOD_ISO_R_1_HVDMY_20 BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_20 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_20) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_20
HVNW_NPOD_ISO_R_HVDMY_20_C = HVNW_NPOD_ISO_R_2_HVDMY_20 TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_20
HVNW_NPOD_ISO_R_HVDMY_20 = STAMP HVNW_NPOD_ISO_R_HVDMY_20_C BY NTAPi

// for HVDMY_7_12
HVNW_NPOD_ISO_LUP_H_1_HVDMY_7_12 = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_7_12
HVNW_NPOD_ISO_R_1_HVDMY_7_12 = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_7_12
HVNW_NPOD_ISO_R_2_HVDMY_7_12 = SIZE HVNW_NPOD_ISO_R_1_HVDMY_7_12 BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_7_12 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_7_12) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_7_12
HVNW_NPOD_ISO_R_HVDMY_7_12_C = HVNW_NPOD_ISO_R_2_HVDMY_7_12 TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_7_12
HVNW_NPOD_ISO_R_HVDMY_7_12 = STAMP HVNW_NPOD_ISO_R_HVDMY_7_12_C BY NTAPi
HVNW_NPOD_ISO_LUP_H = ((((HVNW_NPOD_ISO_LUP_H_HVDMY_60 OR HVNW_NPOD_ISO_LUP_H_HVDMY_45) OR HVNW_NPOD_ISO_LUP_H_HVDMY_40) OR HVNW_NPOD_ISO_LUP_H_HVDMY_24) OR HVNW_NPOD_ISO_LUP_H_HVDMY_20)OR HVNW_NPOD_ISO_LUP_H_HVDMY_7_12
HVNW_NPOD_ISO_R = ((((HVNW_NPOD_ISO_R_HVDMY_60 OR HVNW_NPOD_ISO_R_HVDMY_45) OR HVNW_NPOD_ISO_R_HVDMY_40) OR HVNW_NPOD_ISO_R_HVDMY_24) OR HVNW_NPOD_ISO_R_HVDMY_20) OR HVNW_NPOD_ISO_R_HVDMY_7_12  

//===========================================
//HVNW pick up ring for Low-side/High-side 
//===========================================
// for HVDMY_60
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_60 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_60) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_60
HVNW_NPOD_ISO_LS_R_HVDMY_60_C = HVNW_NPOD_ISO_R_2_HVDMY_60 TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_60
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_60 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_60) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_60
HVNW_NPOD_ISO_HS_R_HVDMY_60_C = HVNW_NPOD_ISO_R_2_HVDMY_60 TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_60

// for HVDMY_45
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_45 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_45) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_45
HVNW_NPOD_ISO_LS_R_HVDMY_45_C = HVNW_NPOD_ISO_R_2_HVDMY_45 TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_45
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_45 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_45) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_45
HVNW_NPOD_ISO_HS_R_HVDMY_45_C = HVNW_NPOD_ISO_R_2_HVDMY_45 TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_45

// for HVDMY_40
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_40 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_40) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_40
HVNW_NPOD_ISO_LS_R_HVDMY_40_C = HVNW_NPOD_ISO_R_2_HVDMY_40 TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_40
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_40 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_40) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_40
HVNW_NPOD_ISO_HS_R_HVDMY_40_C = HVNW_NPOD_ISO_R_2_HVDMY_40 TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_40

// for HVDMY_24
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_24 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_24) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24
HVNW_NPOD_ISO_LS_R_HVDMY_24_C_pre = HVNW_NPOD_ISO_R_2_HVDMY_24 TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_24
HVNW_NPOD_ISO_LS_R_HVDMY_24_C = HVNW_NPOD_ISO_LS_R_HVDMY_24_C_pre OR ((NLD24G5_D OR NI24G5_D) AND POST_DRIVER_ACT_HVN_LS_HVDMY_24)
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_24 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_24) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_24
HVNW_NPOD_ISO_HS_R_HVDMY_24_C_pre = HVNW_NPOD_ISO_R_2_HVDMY_24 TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_24
HVNW_NPOD_ISO_HS_R_HVDMY_24_C = HVNW_NPOD_ISO_HS_R_HVDMY_24_C_pre OR ((NLD24G5_D OR NI24G5_D) AND POST_DRIVER_ACT_HVN_HS_HVDMY_24)


// for HVDMY_20
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_20 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_20) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_20
HVNW_NPOD_ISO_LS_R_HVDMY_20_C = HVNW_NPOD_ISO_R_2_HVDMY_20 TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_20
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_20 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_20) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_20
HVNW_NPOD_ISO_HS_R_HVDMY_20_C = HVNW_NPOD_ISO_R_2_HVDMY_20 TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_20

// for HVDMY_7_12
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_7_12 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_7_12) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_7_12
HVNW_NPOD_ISO_LS_R_HVDMY_7_12_C = HVNW_NPOD_ISO_R_2_HVDMY_7_12 TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_7_12
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_7_12 = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_7_12) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_7_12
HVNW_NPOD_ISO_HS_R_HVDMY_7_12_C = HVNW_NPOD_ISO_R_2_HVDMY_7_12 TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_7_12

HVNW_NPOD_ISO_LS_R = ((((HVNW_NPOD_ISO_LS_R_HVDMY_60_C OR HVNW_NPOD_ISO_LS_R_HVDMY_45_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_40_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_24_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_20_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_7_12_C
HVNW_NPOD_ISO_LS_H = HOLES HVNW_NPOD_ISO_LS_R INNER
HVNW_NPOD_ISO_HS_R = ((((HVNW_NPOD_ISO_HS_R_HVDMY_60_C OR HVNW_NPOD_ISO_HS_R_HVDMY_45_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_40_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_24_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_20_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_7_12_C
HVNW_NPOD_ISO_HS_H = HOLES HVNW_NPOD_ISO_HS_R INNER
HVNW_NPOD_ISO_H = HVNW_NPOD_ISO_LS_H OR HVNW_NPOD_ISO_HS_H


//===========================
//N+ guard ring for HV LUP
//===========================

NPOD_GR_R_1  = (HN_PICKUP NOT INSIDE NBL) NOT (HVESD_merge OR ESD_HVDIO_merge)
// for HVDMY_60
NPOD_GR_H_1_HVDMY_60 = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_60
NPOD_GR_R_1_HVDMY_60 = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_60

NPOD_GR_R_2_HVDMY_60 = SIZE NPOD_GR_R_1_HVDMY_60 BY (HVOD_W_2/2)-GRID UNDEROVER

NPOD_GR_H_HVDMY_60 = (HOLES NPOD_GR_R_2_HVDMY_60) ENCLOSE PPOD_ISO_R_HVDMY_60
NPOD_GR_R_HVDMY_60 = NPOD_GR_R_2_HVDMY_60 TOUCH NPOD_GR_H_HVDMY_60

NPOD_GR_H_HL_HVDMY_60 = NPOD_GR_H_HVDMY_60 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
NPOD_GR_R_HL_HVDMY_60 = NPOD_GR_R_HVDMY_60 TOUCH NPOD_GR_H_HL_HVDMY_60
NPOD_GR_H_L_HVDMY_60 = NPOD_GR_H_HVDMY_60 ENCLOSE POST_DRIVER_ACT_HVN_LS
NPOD_GR_R_L_HVDMY_60 = NPOD_GR_R_HVDMY_60 TOUCH NPOD_GR_H_L_HVDMY_60

// for HVDMY_45
NPOD_GR_H_1_HVDMY_45 = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_45
NPOD_GR_R_1_HVDMY_45 = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_45

NPOD_GR_R_2_HVDMY_45 = SIZE NPOD_GR_R_1_HVDMY_45 BY (HVOD_W_2/2)-GRID UNDEROVER

NPOD_GR_H_HVDMY_45 = (HOLES NPOD_GR_R_2_HVDMY_45) ENCLOSE PPOD_ISO_R_HVDMY_45
NPOD_GR_R_HVDMY_45 = NPOD_GR_R_2_HVDMY_45 TOUCH NPOD_GR_H_HVDMY_45

NPOD_GR_H_HL_HVDMY_45 = NPOD_GR_H_HVDMY_45 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
NPOD_GR_R_HL_HVDMY_45 = NPOD_GR_R_HVDMY_45 TOUCH NPOD_GR_H_HL_HVDMY_45
NPOD_GR_H_L_HVDMY_45 = NPOD_GR_H_HVDMY_45 ENCLOSE POST_DRIVER_ACT_HVN_LS
NPOD_GR_R_L_HVDMY_45 = NPOD_GR_R_HVDMY_45 TOUCH NPOD_GR_H_L_HVDMY_45

// for HVDMY_40
NPOD_GR_H_1_HVDMY_40 = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_40
NPOD_GR_R_1_HVDMY_40 = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_40

NPOD_GR_R_2_HVDMY_40 = SIZE NPOD_GR_R_1_HVDMY_40 BY (HVOD_W_2/2)-GRID UNDEROVER

NPOD_GR_H_HVDMY_40 = (HOLES NPOD_GR_R_2_HVDMY_40) ENCLOSE PPOD_ISO_R_HVDMY_40
NPOD_GR_R_HVDMY_40 = NPOD_GR_R_2_HVDMY_40 TOUCH NPOD_GR_H_HVDMY_40

NPOD_GR_H_HL_HVDMY_40 = NPOD_GR_H_HVDMY_40 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
NPOD_GR_R_HL_HVDMY_40 = NPOD_GR_R_HVDMY_40 TOUCH NPOD_GR_H_HL_HVDMY_40
NPOD_GR_H_L_HVDMY_40 = NPOD_GR_H_HVDMY_40 ENCLOSE POST_DRIVER_ACT_HVN_LS
NPOD_GR_R_L_HVDMY_40 = NPOD_GR_R_HVDMY_40 TOUCH NPOD_GR_H_L_HVDMY_40

// for HVDMY_24
NPOD_GR_H_1_HVDMY_24 = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_24
NPOD_GR_R_1_HVDMY_24 = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_24

NPOD_GR_R_2_HVDMY_24 = SIZE NPOD_GR_R_1_HVDMY_24 BY (HVOD_W_2/2)-GRID UNDEROVER

NPOD_GR_H_HVDMY_24 = (HOLES NPOD_GR_R_2_HVDMY_24) ENCLOSE PPOD_ISO_R_HVDMY_24
NPOD_GR_R_HVDMY_24 = NPOD_GR_R_2_HVDMY_24 TOUCH NPOD_GR_H_HVDMY_24

NPOD_GR_H_HL_HVDMY_24 = NPOD_GR_H_HVDMY_24 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
NPOD_GR_R_HL_HVDMY_24 = NPOD_GR_R_HVDMY_24 TOUCH NPOD_GR_H_HL_HVDMY_24
NPOD_GR_H_L_HVDMY_24 = NPOD_GR_H_HVDMY_24 ENCLOSE POST_DRIVER_ACT_HVN_LS
NPOD_GR_R_L_HVDMY_24 = NPOD_GR_R_HVDMY_24 TOUCH NPOD_GR_H_L_HVDMY_24
// for HVDMY_20
NPOD_GR_H_1_HVDMY_20 = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_20
NPOD_GR_R_1_HVDMY_20 = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_20

NPOD_GR_R_2_HVDMY_20 = SIZE NPOD_GR_R_1_HVDMY_20 BY (HVOD_W_2/2)-GRID UNDEROVER

NPOD_GR_H_HVDMY_20 = (HOLES NPOD_GR_R_2_HVDMY_20) ENCLOSE PPOD_ISO_R_HVDMY_20
NPOD_GR_R_HVDMY_20 = NPOD_GR_R_2_HVDMY_20 TOUCH NPOD_GR_H_HVDMY_20

NPOD_GR_H_HL_HVDMY_20 = NPOD_GR_H_HVDMY_20 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
NPOD_GR_R_HL_HVDMY_20 = NPOD_GR_R_HVDMY_20 TOUCH NPOD_GR_H_HL_HVDMY_20
NPOD_GR_H_L_HVDMY_20 = NPOD_GR_H_HVDMY_20 ENCLOSE POST_DRIVER_ACT_HVN_LS
NPOD_GR_R_L_HVDMY_20 = NPOD_GR_R_HVDMY_20 TOUCH NPOD_GR_H_L_HVDMY_20
// for HVDMY_7_12
NPOD_GR_H_1_HVDMY_7_12 = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_7_12
NPOD_GR_R_1_HVDMY_7_12 = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_7_12

NPOD_GR_R_2_HVDMY_7_12 = SIZE NPOD_GR_R_1_HVDMY_7_12 BY (HVOD_W_2/2)-GRID UNDEROVER

NPOD_GR_H_HVDMY_7_12 = (HOLES NPOD_GR_R_2_HVDMY_7_12) ENCLOSE PPOD_ISO_R_HVDMY_7_12
NPOD_GR_R_HVDMY_7_12 = NPOD_GR_R_2_HVDMY_7_12 TOUCH NPOD_GR_H_HVDMY_7_12

NPOD_GR_H_HL_HVDMY_7_12 = NPOD_GR_H_HVDMY_7_12 ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
NPOD_GR_R_HL_HVDMY_7_12 = NPOD_GR_R_HVDMY_7_12 TOUCH NPOD_GR_H_HL_HVDMY_7_12
NPOD_GR_H_L_HVDMY_7_12 = NPOD_GR_H_HVDMY_7_12 ENCLOSE POST_DRIVER_ACT_HVN_LS
NPOD_GR_R_L_HVDMY_7_12 = NPOD_GR_R_HVDMY_7_12 TOUCH NPOD_GR_H_L_HVDMY_7_12




NPOD_GR_H = ((((NPOD_GR_H_HVDMY_60 OR NPOD_GR_H_HVDMY_45) OR NPOD_GR_H_HVDMY_40) OR NPOD_GR_H_HVDMY_24) OR NPOD_GR_H_HVDMY_20) OR NPOD_GR_H_HVDMY_7_12
NPOD_GR_R = ((((NPOD_GR_R_HVDMY_60 OR NPOD_GR_R_HVDMY_45) OR NPOD_GR_R_HVDMY_40) OR NPOD_GR_R_HVDMY_24) OR NPOD_GR_R_HVDMY_20) OR NPOD_GR_R_HVDMY_7_12

//==================================================
//P+ isolation for N+ ACTIVE outside N+ guard ring.
//==================================================

// for HVDMY_60
PPOD_ISO_OUT_R_1_HVDMY_60 =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_60
PPOD_ISO_OUT_H_1_HVDMY_60 = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_60 INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_60) ENCLOSE NPOD_GR_R_HVDMY_60
PPOD_ISO_OUT_R_2_HVDMY_60 = PPOD_ISO_OUT_R_1_HVDMY_60 TOUCH PPOD_ISO_OUT_H_1_HVDMY_60

PPOD_ISO_OUT_R_3_HVDMY_60 = SIZE PPOD_ISO_OUT_R_2_HVDMY_60 BY (HVOD_W_2/2)-GRID UNDEROVER

PPOD_ISO_OUT_H_HVDMY_60 = (HOLES PPOD_ISO_OUT_R_3_HVDMY_60) ENCLOSE NPOD_GR_R_HVDMY_60
PPOD_ISO_OUT_R_HVDMY_60 = PPOD_ISO_OUT_R_3_HVDMY_60 TOUCH PPOD_ISO_OUT_H_HVDMY_60

// for HVDMY_45
PPOD_ISO_OUT_R_1_HVDMY_45 =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_45
PPOD_ISO_OUT_H_1_HVDMY_45 = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_45 INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_45) ENCLOSE NPOD_GR_R_HVDMY_45
PPOD_ISO_OUT_R_2_HVDMY_45 = PPOD_ISO_OUT_R_1_HVDMY_45 TOUCH PPOD_ISO_OUT_H_1_HVDMY_45

PPOD_ISO_OUT_R_3_HVDMY_45 = SIZE PPOD_ISO_OUT_R_2_HVDMY_45 BY (HVOD_W_2/2)-GRID UNDEROVER

PPOD_ISO_OUT_H_HVDMY_45 = (HOLES PPOD_ISO_OUT_R_3_HVDMY_45) ENCLOSE NPOD_GR_R_HVDMY_45
PPOD_ISO_OUT_R_HVDMY_45 = PPOD_ISO_OUT_R_3_HVDMY_45 TOUCH PPOD_ISO_OUT_H_HVDMY_45

// for HVDMY_40
PPOD_ISO_OUT_R_1_HVDMY_40 =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_40
PPOD_ISO_OUT_H_1_HVDMY_40 = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_40 INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_40) ENCLOSE NPOD_GR_R_HVDMY_40
PPOD_ISO_OUT_R_2_HVDMY_40 = PPOD_ISO_OUT_R_1_HVDMY_40 TOUCH PPOD_ISO_OUT_H_1_HVDMY_40

PPOD_ISO_OUT_R_3_HVDMY_40 = SIZE PPOD_ISO_OUT_R_2_HVDMY_40 BY (HVOD_W_2/2)-GRID UNDEROVER

PPOD_ISO_OUT_H_HVDMY_40 = (HOLES PPOD_ISO_OUT_R_3_HVDMY_40) ENCLOSE NPOD_GR_R_HVDMY_40
PPOD_ISO_OUT_R_HVDMY_40 = PPOD_ISO_OUT_R_3_HVDMY_40 TOUCH PPOD_ISO_OUT_H_HVDMY_40

// for HVDMY_24
PPOD_ISO_OUT_R_1_HVDMY_24 =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_24
PPOD_ISO_OUT_H_1_HVDMY_24 = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_24 INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_24) ENCLOSE NPOD_GR_R_HVDMY_24
PPOD_ISO_OUT_R_2_HVDMY_24 = PPOD_ISO_OUT_R_1_HVDMY_24 TOUCH PPOD_ISO_OUT_H_1_HVDMY_24

PPOD_ISO_OUT_R_3_HVDMY_24 = SIZE PPOD_ISO_OUT_R_2_HVDMY_24 BY (HVOD_W_2/2)-GRID UNDEROVER

PPOD_ISO_OUT_H_HVDMY_24 = (HOLES PPOD_ISO_OUT_R_3_HVDMY_24) ENCLOSE NPOD_GR_R_HVDMY_24
PPOD_ISO_OUT_R_HVDMY_24 = PPOD_ISO_OUT_R_3_HVDMY_24 TOUCH PPOD_ISO_OUT_H_HVDMY_24
// for HVDMY_20
PPOD_ISO_OUT_R_1_HVDMY_20 =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_20
PPOD_ISO_OUT_H_1_HVDMY_20 = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_20 INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_20) ENCLOSE NPOD_GR_R_HVDMY_20
PPOD_ISO_OUT_R_2_HVDMY_20 = PPOD_ISO_OUT_R_1_HVDMY_20 TOUCH PPOD_ISO_OUT_H_1_HVDMY_20

PPOD_ISO_OUT_R_3_HVDMY_20 = SIZE PPOD_ISO_OUT_R_2_HVDMY_20 BY (HVOD_W_2/2)-GRID UNDEROVER

PPOD_ISO_OUT_H_HVDMY_20 = (HOLES PPOD_ISO_OUT_R_3_HVDMY_20) ENCLOSE NPOD_GR_R_HVDMY_20
PPOD_ISO_OUT_R_HVDMY_20 = PPOD_ISO_OUT_R_3_HVDMY_20 TOUCH PPOD_ISO_OUT_H_HVDMY_20
// for HVDMY_7_12
PPOD_ISO_OUT_R_1_HVDMY_7_12 =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_7_12
PPOD_ISO_OUT_H_1_HVDMY_7_12 = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_7_12 INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_7_12) ENCLOSE NPOD_GR_R_HVDMY_7_12
PPOD_ISO_OUT_R_2_HVDMY_7_12 = PPOD_ISO_OUT_R_1_HVDMY_7_12 TOUCH PPOD_ISO_OUT_H_1_HVDMY_7_12

PPOD_ISO_OUT_R_3_HVDMY_7_12 = SIZE PPOD_ISO_OUT_R_2_HVDMY_7_12 BY (HVOD_W_2/2)-GRID UNDEROVER

PPOD_ISO_OUT_H_HVDMY_7_12 = (HOLES PPOD_ISO_OUT_R_3_HVDMY_7_12) ENCLOSE NPOD_GR_R_HVDMY_7_12
PPOD_ISO_OUT_R_HVDMY_7_12 = PPOD_ISO_OUT_R_3_HVDMY_7_12 TOUCH PPOD_ISO_OUT_H_HVDMY_7_12





PPOD_ISO_OUT_H = ((((PPOD_ISO_OUT_H_HVDMY_60 OR PPOD_ISO_OUT_H_HVDMY_45) OR PPOD_ISO_OUT_H_HVDMY_40)OR PPOD_ISO_OUT_H_HVDMY_24) OR PPOD_ISO_OUT_H_HVDMY_20) OR PPOD_ISO_OUT_H_HVDMY_7_12
PPOD_ISO_OUT_R = ((((PPOD_ISO_OUT_R_HVDMY_60 OR PPOD_ISO_OUT_R_HVDMY_45) OR PPOD_ISO_OUT_R_HVDMY_40)OR PPOD_ISO_OUT_R_HVDMY_24) OR PPOD_ISO_OUT_R_HVDMY_20) OR PPOD_ISO_OUT_R_HVDMY_7_12


// HVSTRAP
CHIP_HVDMY_60 = CHIP INTERACT HVDMY_60
CHIP_HVDMY_45 = (CHIP INTERACT HVDMY_45) NOT INTERACT HVDMY_60
CHIP_HVDMY_40 = ((CHIP INTERACT HVDMY_40) NOT INTERACT HVDMY_60) NOT INTERACT HVDMY_45
CHIP_HVDMY_24 = (((CHIP INTERACT HVDMY_24) NOT INTERACT HVDMY_60) NOT INTERACT HVDMY_45) NOT INTERACT HVDMY_40
CHIP_HVDMY_20 = ((((CHIP INTERACT HVDMY_20) NOT INTERACT HVDMY_60) NOT INTERACT HVDMY_45) NOT INTERACT HVDMY_40) NOT INTERACT HVDMY_24
CHIP_HVDMY_7_12 = (((((CHIP INTERACT HVDMY_7_12) NOT INTERACT HVDMY_60) NOT INTERACT HVDMY_45) NOT INTERACT HVDMY_40) NOT INTERACT HVDMY_24) NOT INTERACT HVDMY_20





STRAPDMY_HVDMY_60 = STRAPDMY INTERACT CHIP_HVDMY_60
STRAPDMY_HVDMY_45 = STRAPDMY INTERACT CHIP_HVDMY_45
STRAPDMY_HVDMY_40 = STRAPDMY INTERACT CHIP_HVDMY_40
STRAPDMY_HVDMY_24 = STRAPDMY INTERACT CHIP_HVDMY_24
STRAPDMY_HVDMY_20 = STRAPDMY INTERACT CHIP_HVDMY_20
STRAPDMY_HVDMY_7_12 = STRAPDMY INTERACT CHIP_HVDMY_7_12





HVNP_STRAP_HVDMY_60 = (NP AND HVOD) AND STRAPDMY_HVDMY_60
HVPP_STRAP_HVDMY_60 = (PP AND HVOD) AND STRAPDMY_HVDMY_60
HVNP_STRAP_HVDMY_45 = (NP AND HVOD) AND STRAPDMY_HVDMY_45
HVPP_STRAP_HVDMY_45 = (PP AND HVOD) AND STRAPDMY_HVDMY_45
HVNP_STRAP_HVDMY_40 = (NP AND HVOD) AND STRAPDMY_HVDMY_40
HVPP_STRAP_HVDMY_40 = (PP AND HVOD) AND STRAPDMY_HVDMY_40
HVNP_STRAP_HVDMY_24 = (NP AND HVOD) AND STRAPDMY_HVDMY_24
HVPP_STRAP_HVDMY_24 = (PP AND HVOD) AND STRAPDMY_HVDMY_24
HVNP_STRAP_HVDMY_20 = (NP AND HVOD) AND STRAPDMY_HVDMY_20
HVPP_STRAP_HVDMY_20 = (PP AND HVOD) AND STRAPDMY_HVDMY_20
HVNP_STRAP_HVDMY_7_12 = (NP AND HVOD) AND STRAPDMY_HVDMY_7_12
HVPP_STRAP_HVDMY_7_12 = (PP AND HVOD) AND STRAPDMY_HVDMY_7_12





HVNP_STRAP = ((((HVNP_STRAP_HVDMY_60 OR HVNP_STRAP_HVDMY_45) OR HVNP_STRAP_HVDMY_40) OR HVNP_STRAP_HVDMY_24) OR HVNP_STRAP_HVDMY_20) OR HVNP_STRAP_HVDMY_7_12
HVPP_STRAP = ((((HVPP_STRAP_HVDMY_60 OR HVPP_STRAP_HVDMY_45) OR HVPP_STRAP_HVDMY_40) OR HVPP_STRAP_HVDMY_24) OR HVPP_STRAP_HVDMY_20) OR HVPP_STRAP_HVDMY_7_12

HVLUP.W.1_HVDMY_60 { @ min width of N+ HV LUP isolation ring of I/O HV P+ ACTIVE >= ^HVLUP_W_1_HVDMY_60
     INT NPOD_ISO_R_HVDMY_60 < HVLUP_W_1_HVDMY_60 ABUT < 90 SINGULAR REGION
}
HVLUP.W.1_HVDMY_45 { @ min width of N+ HV LUP isolation ring of I/O HV P+ ACTIVE >= ^HVLUP_W_1_HVDMY_45
     INT NPOD_ISO_R_HVDMY_45 < HVLUP_W_1_HVDMY_45 ABUT < 90 SINGULAR REGION
}
HVLUP.W.1_HVDMY_40 { @ min width of N+ HV LUP isolation ring of I/O HV P+ ACTIVE >= ^HVLUP_W_1_HVDMY_40
     INT NPOD_ISO_R_HVDMY_40 < HVLUP_W_1_HVDMY_40 ABUT < 90 SINGULAR REGION
     INT POST_DRIVER_ACT_BJT_B_HS_HVDMY_40 < HVLUP_W_1_HVDMY_40 ABUT < 90 SINGULAR REGION
}
HVLUP.W.1_HVDMY_24 { @ min width of N+ HV LUP isolation ring of I/O HV P+ ACTIVE >= ^HVLUP_W_1_HVDMY_24
     INT NPOD_ISO_R_HVDMY_24 < HVLUP_W_1_HVDMY_24 ABUT < 90 SINGULAR REGION
     INT POST_DRIVER_ACT_BJT_B_HS_HVDMY_24 < HVLUP_W_1_HVDMY_24 ABUT < 90 SINGULAR REGION
}
HVLUP.W.1_HVDMY_7_12 { @ min width of N+ HV LUP isolation ring of I/O HV P+ ACTIVE >= ^HVLUP_W_1_HVDMY_7_12
     INT NPOD_ISO_R_HVDMY_7_12 < HVLUP_W_1_HVDMY_7_12 ABUT < 90 SINGULAR REGION
     INT POST_DRIVER_ACT_BJT_B_HS_HVDMY_7_12 < HVLUP_W_1_HVDMY_7_12 ABUT < 90 SINGULAR REGION
}










HVLUP.W.2_HVDMY_60 { @ min width of P+ HV LUP guard ring of I/O HV P+ ACTIVE >= ^HVLUP_W_2_HVDMY_60
     ((HV_POST_DRIVER_PACT INTERACT GATE) INTERACT HVDMY_60) NOT INSIDE PPOD_GR_H
}
HVLUP.W.2_HVDMY_45 { @ min width of P+ HV LUP guard ring of I/O HV P+ ACTIVE >= ^HVLUP_W_2_HVDMY_45
     ((HV_POST_DRIVER_PACT INTERACT GATE) INTERACT HVDMY_45) NOT INSIDE PPOD_GR_H
}
HVLUP.W.2_HVDMY_40 { @ min width of P+ HV LUP guard ring of I/O HV P+ ACTIVE >= ^HVLUP_W_2_HVDMY_40
     ((HV_POST_DRIVER_PACT INTERACT GATE) INTERACT HVDMY_40) NOT INSIDE PPOD_GR_H
}
HVLUP.W.2_HVDMY_24 { @ min width of P+ HV LUP guard ring of I/O HV P+ ACTIVE >= ^HVLUP_W_2_HVDMY_24
     ((HV_POST_DRIVER_PACT INTERACT GATE) INTERACT HVDMY_24) NOT INSIDE PPOD_GR_H
}
HVLUP.W.2_HVDMY_7_12 { @ min width of P+ HV LUP guard ring of I/O HV P+ ACTIVE >= ^HVLUP_W_2_HVDMY_7_12
     ((HV_POST_DRIVER_PACT INTERACT GATE) INTERACT HVDMY_7_12) NOT INSIDE PPOD_GR_H
}


HVLUP.W.3_HVDMY_60 { @ min width of N+ HV LUP guard ring of low side I/O HV N+ ACTIVE >= ^HVLUP_W_3_HVDMY_60
     INT NPOD_GR_R_L_HVDMY_60 < HVLUP_W_3_HVDMY_60 ABUT < 90 SINGULAR REGION
}
HVLUP.W.3_HVDMY_45 { @ min width of N+ HV LUP guard ring of low side I/O HV N+ ACTIVE  >= ^HVLUP_W_3_HVDMY_45
     INT NPOD_GR_R_L_HVDMY_45 < HVLUP_W_3_HVDMY_45 ABUT < 90 SINGULAR REGION
}
HVLUP.W.3_HVDMY_40 { @ min width of N+ HV LUP guard ring of low side I/O HV N+ ACTIVE  >= ^HVLUP_W_3_HVDMY_40
     INT NPOD_GR_R_L_HVDMY_40 < HVLUP_W_3_HVDMY_40 ABUT < 90 SINGULAR REGION
}
HVLUP.W.3_HVDMY_24 { @ min width of N+ HV LUP guard ring of low side I/O HV N+ ACTIVE  >= ^HVLUP_W_3_HVDMY_24
     INT NPOD_GR_R_L_HVDMY_24 < HVLUP_W_3_HVDMY_24 ABUT < 90 SINGULAR REGION
}
HVLUP.W.3_HVDMY_20 { @ min width of N+ HV LUP guard ring of low side I/O HV N+ ACTIVE  >= ^HVLUP_W_3_HVDMY_20
     INT NPOD_GR_R_L_HVDMY_20 < HVLUP_W_3_HVDMY_20 ABUT < 90 SINGULAR REGION
}
HVLUP.W.3_HVDMY_7_12 { @ min width of N+ HV LUP guard ring of low side I/O HV N+ ACTIVE  >= ^HVLUP_W_3_HVDMY_7_12
     INT NPOD_GR_R_L_HVDMY_7_12 < HVLUP_W_3_HVDMY_7_12 ABUT < 90 SINGULAR REGION
}




HVLUP.W.4_HVDMY_60 { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_60
     INT PPOD_ISO_R_L_HVDMY_60 < HVLUP_W_4_HVDMY_60 ABUT < 90 SINGULAR REGION
}
HVLUP.W.4_HVDMY_45 { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_45
     INT PPOD_ISO_R_L_HVDMY_45 < HVLUP_W_4_HVDMY_45 ABUT < 90 SINGULAR REGION
}
HVLUP.W.4_HVDMY_40 { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_40
     INT PPOD_ISO_R_L_HVDMY_40 < HVLUP_W_4_HVDMY_40 ABUT < 90 SINGULAR REGION
}
HVLUP.W.4_HVDMY_24 { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_24
     INT PPOD_ISO_R_L_HVDMY_24 < HVLUP_W_4_HVDMY_24 ABUT < 90 SINGULAR REGION
}
HVLUP.W.4_HVDMY_20 { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_20
     INT PPOD_ISO_R_L_HVDMY_20 < HVLUP_W_4_HVDMY_20 ABUT < 90 SINGULAR REGION
}
HVLUP.W.4_HVDMY_7_12 { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_7_12
     INT PPOD_ISO_R_L_HVDMY_7_12 < HVLUP_W_4_HVDMY_7_12 ABUT < 90 SINGULAR REGION
}






HVLUP.W.5_HVDMY_40 { @ min width of NBL pickup ring of high-side I/O HV N+ ACTIVE >= ^HVLUP_W_5_HVDMY_40
  A_R = SIZE HVNW_NPOD_ISO_HS_R_HVDMY_40_C BY (HVLUP_W_5_HVDMY_40/2)-0.001 UNDEROVER
  A = (HOLES A_R INNER) OR A_R
  POST_DRIVER_ACT_HVN_HS_HVDMY_40 NOT INSIDE A
}
HVLUP.W.5_HVDMY_24 { @ min width of NBL pickup ring of high-side I/O HV N+ ACTIVE >= ^HVLUP_W_5_HVDMY_24
  D_R = (NLD24G5_D OR NI24G5_D) AND POST_DRIVER_ACT_HVN_HS_HVDMY_24
  A_R = SIZE (HVNW_NPOD_ISO_HS_R_HVDMY_24_C OR D_R) BY (HVLUP_W_5_HVDMY_24/2)-0.001 UNDEROVER
  A = (HOLES A_R INNER) OR A_R
  POST_DRIVER_ACT_HVN_HS_HVDMY_24 NOT INSIDE A
}
HVLUP.W.5_HVDMY_20 { @ min width of NBL pickup ring of high-side I/O HV N+ ACTIVE >= ^HVLUP_W_5_HVDMY_20
  A_R = SIZE HVNW_NPOD_ISO_HS_R_HVDMY_20_C BY (HVLUP_W_5_HVDMY_20/2)-0.001 UNDEROVER
  A = (HOLES A_R INNER) OR A_R
  POST_DRIVER_ACT_HVN_HS_HVDMY_20 NOT INSIDE A
}
HVLUP.W.5_HVDMY_7_12 { @ min width of NBL pickup ring of high-side I/O HV N+ ACTIVE >= ^HVLUP_W_5_HVDMY_7_12
  A_R = SIZE HVNW_NPOD_ISO_HS_R_HVDMY_7_12_C BY (HVLUP_W_5_HVDMY_7_12/2)-0.001 UNDEROVER
  A = (HOLES A_R INNER) OR A_R
  POST_DRIVER_ACT_HVN_HS_HVDMY_7_12 NOT INSIDE A
}




HVLUP.W.6_HVDMY_40 { @ min width of P+ HV LUP guard ring of High-side I/O HV N+ ACTIVE >= ^HVLUP_W_6_HVDMY_40
     POST_DRIVER_ACT_HVN_HS_HVDMY_40 NOT INSIDE PPOD_GR_H
}
HVLUP.W.6_HVDMY_24 { @ min width of P+ HV LUP guard ring of High-side I/O HV N+ ACTIVE >= ^HVLUP_W_6_HVDMY_24
     POST_DRIVER_ACT_HVN_HS_HVDMY_24 NOT INSIDE PPOD_GR_H
}
HVLUP.W.6_HVDMY_20 { @ min width of P+ HV LUP guard ring of High-side I/O HV N+ ACTIVE >= ^HVLUP_W_6_HVDMY_20
     POST_DRIVER_ACT_HVN_HS_HVDMY_20 NOT INSIDE PPOD_GR_H
}
HVLUP.W.6_HVDMY_7_12 { @ min width of P+ HV LUP guard ring of High-side I/O HV N+ ACTIVE >= ^HVLUP_W_6_HVDMY_7_12
     POST_DRIVER_ACT_HVN_HS_HVDMY_7_12 NOT INSIDE PPOD_GR_H
}

HVLUP.W.7_HVDMY_60 { @ min with of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_60
    INT HVNP_STRAP_HVDMY_60 < HVLUP_W_7_HVDMY_60 ABUT < 90 SINGULAR REGION
}
HVLUP.W.7_HVDMY_45 { @ min with of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_45
    INT HVNP_STRAP_HVDMY_45 < HVLUP_W_7_HVDMY_45 ABUT < 90 SINGULAR REGION
}
HVLUP.W.7_HVDMY_40 { @ min with of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_40
    INT HVNP_STRAP_HVDMY_40 < HVLUP_W_7_HVDMY_40 ABUT < 90 SINGULAR REGION
}
HVLUP.W.7_HVDMY_24 { @ min with of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_24
    INT HVNP_STRAP_HVDMY_24 < HVLUP_W_7_HVDMY_24 ABUT < 90 SINGULAR REGION
}
HVLUP.W.7_HVDMY_20 { @ min with of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_20
    INT HVNP_STRAP_HVDMY_20 < HVLUP_W_7_HVDMY_20 ABUT < 90 SINGULAR REGION
}
HVLUP.W.7_HVDMY_7_12 { @ min with of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_7_12
    INT HVNP_STRAP_HVDMY_7_12 < HVLUP_W_7_HVDMY_7_12 ABUT < 90 SINGULAR REGION
}




HVLUP.W.8_HVDMY_60 { @ min with of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_60 
    INT HVPP_STRAP_HVDMY_60  < HVLUP_W_8_HVDMY_60  ABUT < 90 SINGULAR REGION
}
HVLUP.W.8_HVDMY_45 { @ min with of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_45
    INT HVPP_STRAP_HVDMY_45  < HVLUP_W_8_HVDMY_45  ABUT < 90 SINGULAR REGION
}
HVLUP.W.8_HVDMY_40 { @ min with of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_40
    INT HVPP_STRAP_HVDMY_40  < HVLUP_W_8_HVDMY_40  ABUT < 90 SINGULAR REGION
}
HVLUP.W.8_HVDMY_24 { @ min with of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_24
    INT HVPP_STRAP_HVDMY_24  < HVLUP_W_8_HVDMY_24  ABUT < 90 SINGULAR REGION
}
HVLUP.W.8_HVDMY_20 { @ min with of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_20
    INT HVPP_STRAP_HVDMY_20  < HVLUP_W_8_HVDMY_20  ABUT < 90 SINGULAR REGION
}
HVLUP.W.8_HVDMY_7_12 { @ min with of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_7_12
    INT HVPP_STRAP_HVDMY_7_12  < HVLUP_W_8_HVDMY_7_12  ABUT < 90 SINGULAR REGION
}






NACT_LV = (NACT INTERACT ALL_GATE) NOT HVOX
PACT_LV = (PACT INTERACT ALL_GATE) NOT HVOX

HVLUP.W.9 { @ min width of H60NW surrounding HVNW of N+OD of N+ HV STRAP and N+ HVLUP guard ring >= ^HVLUP_W_9
  A = H60NW INTERACT (HVNW INTERACT (HVNP_STRAP OR NPOD_GR_R))
  INT A < HVLUP_W_9 ABUT < 90 SINGULAR REGION
}

HVLUP.C.1 { @ min clearance from HVNW of N+HV STRAP to LVMOS without pickup ring >= ^HVLUP_C_1 .
            @ WIthin this rule, all LV devices should be surrounded by their own guard ring.
    A1 = NACT_LV NOT INSIDE (PTAP_guard_ring_hole OR HVP_ISO_HCHECK)
    A2 = PACT_LV NOT INSIDE (NTAP_guard_ring_hole OR HVP_ISO_HCHECK)
    A = A1 OR A2
    B = (HVNW OR H60NW) INTERACT HVNP_STRAP
    EXT B A < HVLUP_C_1  ABUT < 90 SINGULAR REGION
}

ALL_HVPMOS_D = COPY HV_PMOS_D
SCONNECT NTAPi H60NWi

H60NW_POST_DRIVER_ACT_HVN_LS_pre = H60NW INTERACT (((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH) INTERACT POST_DRIVER_ACT_HVN_LS)
H60NW_POST_DRIVER_ACT_HVN_LS = STAMP H60NW_POST_DRIVER_ACT_HVN_LS_pre BY H60NWiu
HVNW_POST_DRIVER_ACT_HVN_LS_pre = HVNW INTERACT (((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH) INTERACT POST_DRIVER_ACT_HVN_LS)
HVNW_POST_DRIVER_ACT_HVN_LS = STAMP HVNW_POST_DRIVER_ACT_HVN_LS_pre BY HVNWiu


H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_60 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_60
H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_45 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_45
H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_40 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_40
H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_24 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_24
H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_20 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_20
H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_7_12

HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_60 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_60
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_45
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_40 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_40
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_24
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_20 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_20
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_HVDMY_7_12

//chip define for hvlup.c.3
CHIP_2_HVDMY_40 = CHIP INTERACT HVDMY_40
CHIP_2_HVDMY_24 = (CHIP INTERACT HVDMY_24) NOT INTERACT HVDMY_40
CHIP_2_HVDMY_20 = ((CHIP INTERACT HVDMY_20) NOT INTERACT HVDMY_40) NOT INTERACT HVDMY_24
CHIP_2_HVDMY_7_12 = (((CHIP INTERACT HVDMY_7_12) NOT INTERACT HVDMY_40) NOT INTERACT HVDMY_24) NOT INTERACT HVDMY_20

HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_40
HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_24
HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_20
HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 = HVNW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_7_12

H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_40
H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_24
H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_20
H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 = H60NW_POST_DRIVER_ACT_HVN_LS INTERACT CHIP_2_HVDMY_7_12

HVNW_POST_DRIVER_ACT_HVN_HS_pre = HVNW INTERACT POST_DRIVER_ACT_HVN_HS
HVNW_POST_DRIVER_ACT_HVN_HS = STAMP HVNW_POST_DRIVER_ACT_HVN_HS_pre BY HVNWiu

OD_HV_POST_DRIVER_PACT_1 = (OD NOT POLY) INTERACT (HV_POST_DRIVER_PACT AND (ALL_HVPMOS_D INTERACT PSDiu))
OD_HV_POST_DRIVER_PACT_2 = (OD NOT POLY) INTERACT (HV_POST_DRIVER_PACT AND (ALL_HVPMOS_D INTERACT PTAPiu))
ODc_HV_POST_DRIVER_PACT_1 = STAMP OD_HV_POST_DRIVER_PACT_1 BY PSDiu
ODc_HV_POST_DRIVER_PACT_2 = STAMP OD_HV_POST_DRIVER_PACT_2 BY PTAPiu
HVNW_HV_POST_DRIVER_PACT_1 = HVNW INTERACT (NPOD_ISO_LUP_H INTERACT OD_HV_POST_DRIVER_PACT_1)
HVNW_HV_POST_DRIVER_PACT_2 = HVNW INTERACT (NPOD_ISO_LUP_H INTERACT OD_HV_POST_DRIVER_PACT_2)
HVNWc_HV_POST_DRIVER_PACT_1 = HVNW_HV_POST_DRIVER_PACT_1 OR (HOLES HVNW_HV_POST_DRIVER_PACT_1)
HVNWc_HV_POST_DRIVER_PACT_2 = HVNW_HV_POST_DRIVER_PACT_2 OR (HOLES HVNW_HV_POST_DRIVER_PACT_2)
D_HV_POST_DRIVER_PACT_1 = STAMP HVNWc_HV_POST_DRIVER_PACT_1 BY ODc_HV_POST_DRIVER_PACT_1
D_HV_POST_DRIVER_PACT_2 = STAMP HVNWc_HV_POST_DRIVER_PACT_2 BY ODc_HV_POST_DRIVER_PACT_2

HVLUP.C.2_HVDMY_60 { @ min clearance from (HVNW OR H60NW)(NBL) of low side IO HV NACTIVE to {HVNW OR H60NW}(NBL) of IO HV PACTIVE, which the potential of ((HVNW OR H60NW)(NBL) OR Drain OD) of low side IO HV NACTIVE and IO HV PACTIVE drain side is different >=^HVLUP_C_2_HVDMY_60
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_60 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_60 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_60 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_60 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_60 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_60 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_60 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_60 SINGULAR REGION NOT CONNECTED
}
HVLUP.C.2_HVDMY_45 { @ min clearance from (HVNW OR H60NW)(NBL) of low side IO HV NACTIVE to {HVNW OR H60NW}(NBL) of IO HV PACTIVE, which the potential of ((HVNW OR H60NW)(NBL) OR Drain OD) of low side IO HV NACTIVE and IO HV PACTIVE drain side is different >=^HVLUP_C_2_HVDMY_45
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_45 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_45 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_45 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_45 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_45 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_45 SINGULAR REGION NOT CONNECTED
}
HVLUP.C.2_HVDMY_40 { @ min clearance from (HVNW OR H60NW)(NBL) of low side IO HV NACTIVE to {HVNW OR H60NW}(NBL) of IO HV PACTIVE, which the potential of ((HVNW OR H60NW)(NBL) OR Drain OD) of low side IO HV NACTIVE and IO HV PACTIVE drain side is different >=^HVLUP_C_2_HVDMY_40
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_40 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_40 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_40 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_40 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_40 SINGULAR REGION NOT CONNECTED
}
HVLUP.C.2_HVDMY_24 { @ min clearance from (HVNW OR H60NW)(NBL) of low side IO HV NACTIVE to {HVNW OR H60NW}(NBL) of IO HV PACTIVE, which the potential of ((HVNW OR H60NW)(NBL) OR Drain OD) of low side IO HV NACTIVE and IO HV PACTIVE drain side is different >=^HVLUP_C_2_HVDMY_24
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_24 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_24 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_24 SINGULAR REGION NOT CONNECTED
}
HVLUP.C.2_HVDMY_20 { @ min clearance from (HVNW OR H60NW)(NBL) of low side IO HV NACTIVE to {HVNW OR H60NW}(NBL) of IO HV PACTIVE, which the potential of ((HVNW OR H60NW)(NBL) OR Drain OD) of low side IO HV NACTIVE and IO HV PACTIVE drain side is different >=^HVLUP_C_2_HVDMY_20
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_20 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_20 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_20 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_20 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_20 SINGULAR REGION NOT CONNECTED
}
HVLUP.C.2_HVDMY_7_12 { @ min clearance from (HVNW OR H60NW)(NBL) of low side IO HV NACTIVE to {HVNW OR H60NW}(NBL) of IO HV PACTIVE, which the potential of ((HVNW OR H60NW)(NBL) OR Drain OD) of low side IO HV NACTIVE and IO HV PACTIVE drain side is different >=^HVLUP_C_2_HVDMY_7_12
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 D_HV_POST_DRIVER_PACT_1 < HVLUP_C_2_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_HVDMY_7_12 D_HV_POST_DRIVER_PACT_2 < HVLUP_C_2_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
}
OD_POST_DRIVER_ACT_HVN_HS_S_1 = (OD NOT POLY) INTERACT (POST_DRIVER_ACT_HVN_HS AND HV_NMOS_S)
OD_POST_DRIVER_ACT_HVN_HS_S_2 = POST_DRIVER_ACT_HVN_HS AND (HVESD_COD INTERACT PSDiu)
OD_POST_DRIVER_ACT_HVN_HS_S_3 = POST_DRIVER_ACT_HVN_HS AND (HVESD_COD INTERACT PTAPiu)

HVLUP.C.3_HVDMY_40 { @ min clearance from HVNW OR H60NW of low side IO HV NACTIVE to HVNW of high side IO HV NACTIVE, which the potential of HVNW of low side IO HV NACTIVE and high side IO HV NACTIVE Source or Collector PPOD is different >= ^HVLUP_C_3_HVDMY_40
	A1 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_1 BY NSDiu
	A2 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_2 BY PSDiu
	A3 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_3 BY PTAPiu
	B1 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B2 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B3 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	C1 = (B1 OR (HOLES B1 INNER)) INTERACT A1
	C2 = (B2 OR (HOLES B2 INNER)) INTERACT A2
	C3 = (B3 OR (HOLES B3 INNER)) INTERACT A3
	D1 = STAMP C1 BY A1
	D2 = STAMP C2 BY A2
	D3 = STAMP C3 BY A3
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 D1 < HVLUP_C_3_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 D2 < HVLUP_C_3_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 D3 < HVLUP_C_3_HVDMY_40 SINGULAR REGION NOT CONNECTED

	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 D1 < HVLUP_C_3_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 D2 < HVLUP_C_3_HVDMY_40 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_40 D3 < HVLUP_C_3_HVDMY_40 SINGULAR REGION NOT CONNECTED

}
HVLUP.C.3_HVDMY_24 { @ min clearance from HVNW OR H60NW of low side IO HV NACTIVE to HVNW of high side IO HV NACTIVE, which the potential of HVNW of low side IO HV NACTIVE and high side IO HV NACTIVE Source or Collector PPOD is different >= ^HVLUP_C_3_HVDMY_24
	A1 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_1 BY NSDiu
	A2 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_2 BY PSDiu
	A3 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_3 BY PTAPiu
	B1 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B2 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B3 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	C1 = (B1 OR (HOLES B1 INNER)) INTERACT A1
	C2 = (B2 OR (HOLES B2 INNER)) INTERACT A2
	C3 = (B3 OR (HOLES B3 INNER)) INTERACT A3
	D1 = STAMP C1 BY A1
	D2 = STAMP C2 BY A2
	D3 = STAMP C3 BY A3
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 D1 < HVLUP_C_3_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 D2 < HVLUP_C_3_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 D3 < HVLUP_C_3_HVDMY_24 SINGULAR REGION NOT CONNECTED

	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 D1 < HVLUP_C_3_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 D2 < HVLUP_C_3_HVDMY_24 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_24 D3 < HVLUP_C_3_HVDMY_24 SINGULAR REGION NOT CONNECTED

}
HVLUP.C.3_HVDMY_20 { @ min clearance from HVNW OR H60NW of low side IO HV NACTIVE to HVNW of high side IO HV NACTIVE, which the potential of HVNW of low side IO HV NACTIVE and high side IO HV NACTIVE Source or Collector PPOD is different >= ^HVLUP_C_3_HVDMY_20
	A1 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_1 BY NSDiu
	A2 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_2 BY PSDiu
	A3 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_3 BY PTAPiu
	B1 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B2 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B3 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	C1 = (B1 OR (HOLES B1 INNER)) INTERACT A1
	C2 = (B2 OR (HOLES B2 INNER)) INTERACT A2
	C3 = (B3 OR (HOLES B3 INNER)) INTERACT A3
	D1 = STAMP C1 BY A1
	D2 = STAMP C2 BY A2
	D3 = STAMP C3 BY A3
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 D1 < HVLUP_C_3_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 D2 < HVLUP_C_3_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 D3 < HVLUP_C_3_HVDMY_20 SINGULAR REGION NOT CONNECTED

	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 D1 < HVLUP_C_3_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 D2 < HVLUP_C_3_HVDMY_20 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_20 D3 < HVLUP_C_3_HVDMY_20 SINGULAR REGION NOT CONNECTED
}
HVLUP.C.3_HVDMY_7_12 { @ min clearance from HVNW OR H60NW of low side IO HV NACTIVE to HVNW of high side IO HV NACTIVE, which the potential of HVNW of low side IO HV NACTIVE and high side IO HV NACTIVE Source or Collector PPOD is different >= ^HVLUP_C_3_HVDMY_7_12
	A1 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_1 BY NSDiu
	A2 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_2 BY PSDiu
	A3 = STAMP OD_POST_DRIVER_ACT_HVN_HS_S_3 BY PTAPiu
	B1 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B2 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	B3 = HVNW INTERACT ((HVNW_NPOD_ISO_LUP_H OR HV_NMOS_D) OR HVESD_BH)
	C1 = (B1 OR (HOLES B1 INNER)) INTERACT A1
	C2 = (B2 OR (HOLES B2 INNER)) INTERACT A2
	C3 = (B3 OR (HOLES B3 INNER)) INTERACT A3
	D1 = STAMP C1 BY A1
	D2 = STAMP C2 BY A2
	D3 = STAMP C3 BY A3
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 D1 < HVLUP_C_3_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 D2 < HVLUP_C_3_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 D3 < HVLUP_C_3_HVDMY_7_12 SINGULAR REGION NOT CONNECTED

	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 D1 < HVLUP_C_3_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 D2 < HVLUP_C_3_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
	EXT H60NW_POST_DRIVER_ACT_HVN_LS_2_HVDMY_7_12 D3 < HVLUP_C_3_HVDMY_7_12 SINGULAR REGION NOT CONNECTED
}

HVLUP.E.1.1_HVDMY_40 { @ min extension of HVNW beyond N+ OD of N+HV STRAP, N+ HVLUP guard ring >= ^HVLUP_E_1_1_HVDMY_40
 A = NPOD INTERACT (HVNP_STRAP_HVDMY_40 OR NPOD_GR_R_HVDMY_40)
 C = HVNW INTERACT (HVNP_STRAP_HVDMY_40 OR NPOD_GR_R_HVDMY_40)
 ENC A C < HVLUP_E_1_1_HVDMY_40 ABUT < 90 SINGULAR REGION
}
HVLUP.E.1.1_HVDMY_24 { @ min extension of HVNW beyond N+ OD of N+HV STRAP, N+ HVLUP guard ring >= ^HVLUP_E_1_1_HVDMY_24
 A = NPOD INTERACT (HVNP_STRAP_HVDMY_24 OR NPOD_GR_R_HVDMY_24)
 C = HVNW INTERACT (HVNP_STRAP_HVDMY_24 OR NPOD_GR_R_HVDMY_24)
 ENC A C < HVLUP_E_1_1_HVDMY_24 ABUT < 90 SINGULAR REGION
}
HVLUP.E.1.1_HVDMY_20 { @ min extension of HVNW beyond N+ OD of N+HV STRAP, N+ HVLUP guard ring >= ^HVLUP_E_1_1_HVDMY_20
 A = NPOD INTERACT (HVNP_STRAP_HVDMY_20 OR NPOD_GR_R_HVDMY_20)
 C = HVNW INTERACT (HVNP_STRAP_HVDMY_20 OR NPOD_GR_R_HVDMY_20)
 ENC A C < HVLUP_E_1_1_HVDMY_20 ABUT < 90 SINGULAR REGION
}
HVLUP.E.1.1_HVDMY_7_12 { @ min extension of HVNW beyond N+ OD of N+HV STRAP, N+ HVLUP guard ring >= ^HVLUP_E_1_1_HVDMY_7_12
 A = NPOD INTERACT (HVNP_STRAP_HVDMY_7_12 OR NPOD_GR_R_HVDMY_7_12)
 C = HVNW INTERACT (HVNP_STRAP_HVDMY_7_12 OR NPOD_GR_R_HVDMY_7_12)
 ENC A C < HVLUP_E_1_1_HVDMY_7_12 ABUT < 90 SINGULAR REGION
}

HVLUP.E.1.2_HVDMY_60 { @ min and max extension of HVNW beyond N+ OD of N+HV STRAP, N+ HVLUP guard ring >= ^HVLUP_E_1_2_HVDMY_60
 A = NPOD INTERACT (HVNP_STRAP_HVDMY_60 OR NPOD_GR_R_HVDMY_60)
 B = HVNW INTERACT (HVNP_STRAP_HVDMY_60 OR NPOD_GR_R_HVDMY_60)
 ENC A B < HVLUP_E_1_2_HVDMY_60 ABUT < 90 SINGULAR REGION
 C = B NOT A
 SIZE C BY HVLUP_E_1_2_HVDMY_60/2 UNDEROVER
}

HVLUP.E.1.2_HVDMY_45 { @ min and max extension of HVNW beyond N+ OD of N+HV STRAP, N+ HVLUP guard ring >= ^HVLUP_E_1_2_HVDMY_45
 A = NPOD INTERACT (HVNP_STRAP_HVDMY_45 OR NPOD_GR_R_HVDMY_45)
 B = HVNW INTERACT (HVNP_STRAP_HVDMY_45 OR NPOD_GR_R_HVDMY_45)
 ENC A B < HVLUP_E_1_2_HVDMY_45 ABUT < 90 SINGULAR REGION
 C = B NOT A
 SIZE C BY HVLUP_E_1_2_HVDMY_45/2 UNDEROVER
}

HVLUP.C.4 { @ min clearance of HVNW to P+ OD of HVP STRAP, P iso ring, P guard ring >= ^HVLUP_C_4
  A = (HVPP_STRAP OR PPOD_ISO_R_LU) OR PPOD_GR_R
  EXT A HVNW < HVLUP_C_4 ABUT < 90 SINGULAR REGION
}


HVLUP.C.5 { @ min clearance from H60NW of {N+ HV STRAP OR N+ HVLUP guard ring} to P+OD of P+ HV STRAP, P+ HVLUP isolation ring and P+ HVLUP guard ring >= ^HVLUP_C_5
  A = (HVPP_STRAP OR PPOD_ISO_R_LU) OR PPOD_GR_R
  B = H60NW INTERACT (HVNW INTERACT (HVNP_STRAP OR NPOD_GR_R))
  EXT A B < HVLUP_C_5 ABUT < 90 SINGULAR REGION
}

HVLUP.C.6 { @ min and max clearance from H60NW to N+OD of N+ HV STRAP and N+HVLUP guard ring == ^HVLUP_C_6
 A = (HVNP_STRAP_HVDMY_60 OR HVNP_STRAP_HVDMY_45) OR (NPOD_GR_R_HVDMY_60 OR NPOD_GR_R_HVDMY_45)
 B = NPOD INTERACT A
 D = SIZE B BY HVLUP_C_6
 D NOT COIN OUTSIDE EDGE H60NW
}

HV_B_N = ((PTAP INSIDE PPOD_ISO_H_LU) NOT HV_ESD) NOT INTERACT REST
HV_S_N_LUP = STAMP HV_S_N BY NSDiu
HV_D_N_LUP = STAMP HV_D_N BY NTAPiu
HV_B_N_LUP = STAMP HV_B_N BY PTAPiu
HV_G_N_LUP = STAMP HV_GATE_N BY ILP1iu

HV_B_P = (NTAPiu INSIDE NPOD_ISO_LUP_H) NOT HV_ESD
HV_D_P_1 = HV_D_P INTERACT PSDiu
HV_D_P_2 = HV_D_P INTERACT PTAPiu

HV_S_P_LUP = STAMP HV_S_P BY PSDiu

HV_D_P_LUP_1 = STAMP HV_D_P_1 BY PSDiu
HV_D_P_LUP_2 = STAMP HV_D_P_2 BY PTAPiu

HV_B_P_LUP = STAMP HV_B_P BY NTAPiu
HV_G_P_LUP = STAMP HV_GATE_P BY ILP1iu

HV_E_A = ANO_ESD_DIO INTERACT PP
HV_E_CATH = CATH_ESD_DIO INTERACT NP
HV_E_B = COPY HVESD_BOD
HV_E_E_1 = HVESD_EOD INTERACT PSDiu
HV_E_E_2 = HVESD_EOD INTERACT PTAPiu
HV_E_C_1 = HVESD_COD INTERACT PSDiu
HV_E_C_2 = HVESD_COD INTERACT PTAPiu

HV_E_B_LUP = STAMP HV_E_B BY NTAPiu
HV_E_E_LUP_1 = STAMP HV_E_E_1 BY PSDiu
HV_E_E_LUP_2 = STAMP HV_E_E_2 BY PTAPiu
HV_E_C_LUP_1 = STAMP HV_E_C_1 BY PSDiu
HV_E_C_LUP_2 = STAMP HV_E_C_2 BY PTAPiu
HV_E_A_LUP = STAMP HV_E_A BY PTAPiu
HV_E_CATH_LUP = STAMP HV_E_CATH BY NTAPiu

HVLUP.1a { @ each Low-side I/O HV N+ACTIVE should be surrounded by its own unique P+ HVLUP isolation ring
	@ GATE connect to GATE, Source connect Source, Drain connect to Drain, bulk connect to bulk can share the ring.
  A = PPOD_ISO_R_LU OR (HOLES PPOD_ISO_R_LU INNER)
  POST_DRIVER_ACT_HVN_LS NOT INSIDE A

  A INTERACT HV_S_N_LUP BY NET > 1
  A INTERACT HV_D_N_LUP BY NET > 1
  A INTERACT HV_B_N_LUP BY NET > 1
  A INTERACT HV_G_N_LUP BY NET > 1

  A INTERACT HV_E_B_LUP BY NET > 1
  A INTERACT HV_E_E_LUP_1 BY NET > 1
  A INTERACT HV_E_E_LUP_2 BY NET > 1
  A INTERACT HV_E_C_LUP_1 BY NET > 1
  A INTERACT HV_E_C_LUP_2 BY NET > 1

 
  A INTERACT HV_E_A_LUP BY NET > 1
  A INTERACT HV_E_CATH_LUP BY NET > 1
}

HVLUP.1b { @ each Low-side I/O HV N+ACTIVE should be surrounded by its own unique N+ HVLUP guard ring.
	@ GATE connect to GATE, Source connect Source, Drain connect to Drain, bulk connect to bulk can share the ring.
  A = NPOD_GR_R OR (HOLES NPOD_GR_R INNER)
  POST_DRIVER_ACT_HVN_LS NOT INSIDE A

  A INTERACT HV_S_N_LUP BY NET > 1
  A INTERACT HV_D_N_LUP BY NET > 1
  A INTERACT HV_B_N_LUP BY NET > 1
  A INTERACT HV_G_N_LUP BY NET > 1

  A INTERACT HV_E_B_LUP BY NET > 1
  A INTERACT HV_E_E_LUP_1 BY NET > 1
  A INTERACT HV_E_E_LUP_2 BY NET > 1
  A INTERACT HV_E_C_LUP_1 BY NET > 1
  A INTERACT HV_E_C_LUP_2 BY NET > 1

 
  A INTERACT HV_E_A_LUP BY NET > 1
  A INTERACT HV_E_CATH_LUP BY NET > 1
}

HVLUP.2a { @ High-side I/O HV N+ACTIVE or I/O HV PMOS should be surrounded by N+ HVLUP isolation ring
        @ GATE connect to GATE, Source connect Source, Drain connect to Drain, bulk connect to bulk can share the ring.

  ((HV_POST_DRIVER_PACT NOT INTERACT PA7G5_GATE) INTERACT GATE) NOT INSIDE NPOD_ISO_LUP_H
  ANO_ESD_HVDIO_40 NOT INSIDE (HV_E_CATH OR (HOLES HV_E_CATH INNER))
  (HVESD_COD OR HVESD_EOD) NOT INSIDE HVESD_BH

  A = NPOD_ISO_LUP_H OR NPOD_ISO_LUP_R
  B_pre = POST_DRIVER_ACT_BJT_B_HS NOT INTERACT (HVDMY_60 OR HVDMY_45)
  B = (HOLES B_pre INNER) OR B_pre

  A INTERACT HV_S_P_LUP BY NET > 1
  A INTERACT HV_D_P_LUP_1 BY NET > 1
  A INTERACT HV_D_P_LUP_2 BY NET > 1
  A INTERACT HV_B_P_LUP BY NET > 1
  A INTERACT HV_G_P_LUP BY NET > 1
 
  B INTERACT HV_E_E_LUP_1 BY NET > 1
  B INTERACT HV_E_E_LUP_2 BY NET > 1

  B INTERACT HV_E_C_LUP_1 BY NET > 1
  B INTERACT HV_E_C_LUP_2 BY NET > 1
 
  A INTERACT HV_E_A_LUP BY NET > 1
  A INTERACT HV_E_CATH_LUP BY NET > 1
}


HVLUP.2b { @ High-side I/O HV N+ACTIVE or I/O HV PMOS should be surrounded by NBL pickup ring
        @ GATE connect to GATE, Source connect Source, Drain connect to Drain, bulk connect to bulk can share the ring.

  A = HVNW_NPOD_ISO_HS_H OR HVNW_NPOD_ISO_HS_R
  ((POST_DRIVER_ACT_HVN_HS INTERACT GATE) NOT INTERACT ((NLD7G5_SD OR (NLD60G5_V2_SD OR NLD45G5_SD)) OR (NLD24G5_D OR NI24G5_D))) NOT INSIDE A
  A INTERACT HV_S_N_LUP BY NET > 1
  A INTERACT HV_D_N_LUP BY NET > 1
  A INTERACT HV_B_N_LUP BY NET > 1
  A INTERACT HV_G_N_LUP BY NET > 1
}


HVLUP.3a { @ All of P+(N+) isolation rings, guard rings and straps should be connected to most negative(positive).
  PPOD_ISO_R_LU NOT INTERACT HV_VSS
}
HVLUP.3b { @ All of P+(N+) isolation rings, guard rings and straps should be connected to most negative(positive).
  (NPOD_ISO_LUP_R OR POST_DRIVER_ACT_BJT_B_other) NOT INTERACT HV_VDD
}
HVLUP.3c { @ All of P+(N+) isolation rings, guard rings and straps should be connected to most negative(positive).
  PPOD_GR_R NOT INTERACT HV_VSS
}
HVLUP.3d { @ All of P+(N+) isolation rings, guard rings and straps should be connected to most negative(positive).
  NPOD_GR_R NOT INTERACT HV_VDD
}
HVLUP.3e { @ All of P+(N+) isolation rings, guard rings and straps should be connected to most negative(positive).
  HVNP_STRAP NOT INTERACT HV_VDD
}
HVLUP.3f { @ All of P+(N+) isolation rings, guard rings and straps should be connected to most negative(positive).
  HVPP_STRAP NOT INTERACT HV_VSS
}
//HVLUP.4 uncheckable

HVLUP.7 { @ STRAPDMY must be inserted in between {I/O HV P+ ACTIVE OR I/O HV N+ ACTIVE} and (Internal circuit OR 2.5V/5V I/O buffer).
  HVIO_ACTIVE = HV_POST_DRIVER_PACT OR HV_POST_DRIVER_NACT
  INTERNAL_CIRCUIT_pre1 = ((((( RNWEL OR PORES_DMY) OR ODRES ) OR BJTDMY ) OR DIODMY ) OR VARDMY) OR DACT
  INTERNAL_CIRCUIT_pre2 = INTERNAL_CIRCUIT_pre1 NOT INTERACT ((HVOD_IOPAD OR Poly_IOPAD_ALL) OR HVIO_ACTIVE)
  INTERNAL_CIRCUIT = INTERNAL_CIRCUIT_pre2 OR EGTE
  C = EXT HVIO_ACTIVE INTERNAL_CIRCUIT < 300 REGION EXCLUDE SHIELDED 4
  D = C NOT STRAPDMY
  (D INTERACT HVIO_ACTIVE) INTERACT INTERNAL_CIRCUIT
}

//If N+ guard ring is not recognized due to NBL, it will be highlight by HVLUP.1b
HVLUP.10 { @ It is forbidden to make (NBL OR HV_SH_N) INTERACT WITH (HVNW of N+HVLUP guardring of Low-side I/O HV N+ACTIVE OR HVNW of N+HV STRAP).
  A = HVNW INTERACT (NPOD_GR_R OR HVNP_STRAP)
  (NBL OR HVSHN) INTERACT A
}

HVLUP.11 { @ all of bond pads, pin name must be assigned OR VDDDMY(255;4),VSSDMY(255;5) must be covered.
  (ALL_BOND_PAD_WO_TEXT NOT INTERACT VDDDMY) NOT INTERACT VSSDMY
}

HVLUP.12 { @ It is forbidden to connect the NBL pickup ring of Low-side I/O HV N+ ACTIVE devices to anywhere except their drain side.
  DRAIN_OR_HVNW_R = HV_D_N OR HVNW_NPOD_ISO_LS_R
  DRAIN_OR_HVNW_Rc = STAMP DRAIN_OR_HVNW_R BY NTAPiu
  HVNW_NPOD_ISO_LS_R_H = (HVNW_NPOD_ISO_LS_R OR HVNW_NPOD_ISO_LS_H) ENCLOSE HV_D_N
  HVNW_NPOD_ISO_LS_R_H INTERACT DRAIN_OR_HVNW_Rc BY NET > 1
}

OD_IOPAD_ALL = ODii INTERACT CO_IOPAD_ALL
HVLUP.13 { @ HVBJT, HV DIODE and HV resistor directly connected to I/O pads are forbidden.
  A = (((BJTDMY OR (DIODMY NOT INTERACT SDI)) OR PORES_DMY) OR RWDMY) AND HVOXi
  A INTERACT ((HVOD_IOPAD OR Poly_IOPAD_ALL) OR OD_IOPAD_ALL)
}

//////////////////////////////////////////////////////////////////////////////////
////////////////    SOLOMON SYSTECH LIMITED INTERNAL USE ONLY    /////////////////
//////////////////////////////////////////////////////////////////////////////////
//                                                                            	//
//==============================================================================//
// SSL Proprietary Data                                                       	//
// For TSMC 0.25um 5V/12V/40V/60V BCD process					//
// Author        : Ken Liu							//
// Revision      : 1.0                                                     	//
// Last modified : Feb 24, 2014	                                              	//
//==============================================================================//
// Version 1.0 (Feb 24, 2014)                                                 	//
// 1): Refer to foundry DRC rule:CHV25S_7V_12V_20V_24V_40V_45V_60V_3M.04a2      //
// 2): Added SSL internal related include file                                  //
//==============================================================================//

////////////////////////////////////////////////////////////////////////////////
// SETUP ENVIRONMENT VARIABLE
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// IF ELSE DEFINITION
////////////////////////////////////////////////////////////////////////////////
#DEFINE TSMC
#DEFINE L250_BCD
#DEFINE 4M

// ----------------------------------------------------------------
// Defined input layer definition for DRC, LVS
// ----------------------------------------------------------------
#DEFINE DRC_CK		// To define DRC Checking 
//#DEFINE LVS_CK	// To define LVS Checking 

////////////////////////////////////////////////////////////////////////////////
// INCLUDING FILE
////////////////////////////////////////////////////////////////////////////////

INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/d2da1.inc

// For DRC Specification Statement
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/drc_specification_statement.inc

// For ESD IP cell list
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/esd_ip_cell_list.inc

// For Rules definition and SSL DRC rules
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/tsmc_misc_input_layer.inc

// For miscellaneous rules
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/tsmc_misc.inc

// For Rules group definition
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/tsmc_rule_group.inc

INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/pad_v1.9.inc

// Internal latch-up rule checking
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/internal_latchup.inc

#IFNDEF NON_CHECK_SEALRING
// Seal ring checking
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/sealring.inc
#ENDIF

// Alert checking
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/alert_v1.7.inc

// For dummy metal rule
INCLUDE /data/icdesign/ams/tsmc025hv/BCI/oa_revAA/Calibre/ssl_drc/SSL_local_DRC/dummy_metal.inc

// ---------------------------------------------------------------------------//
// END OF FILE



