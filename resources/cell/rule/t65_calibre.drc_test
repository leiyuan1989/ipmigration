#DEFINE GUIDELINE_RES
#DEFINE CHECK_LATCHUP_BY_PAD_CONNECTION
#DEFINE DISCONNECT_AFTER_RESISTOR
VARIABLE PAD_TEXT  "?"
VARIABLE VDD_TEXT  "VDD?"
VARIABLE VSS_TEXT  "VSS?"
#DEFINE GUIDELINE_LUP
#DEFINE GUIDELINE_ESD
#DEFINE DATATYPE_WARNING
#DEFINE CHECK_LOW_DENSITY
#DEFINE FRONT_END
#DEFINE BACK_END
#DEFINE FULL_CHIP
#DEFINE GP
#DEFINE WLCSP_SEALRING
VARIABLE xLB   0.0
VARIABLE yLB   0.0
VARIABLE xRT   1000.0
VARIABLE yRT   1000.0
VARIABLE CellsForRRuleRequired "*"
VARIABLE CellsForRRuleRecommended "*"
VARIABLE CellsForRRuleAnalog " "
VARIABLE CellsForRRuleGuideline "*"
VARIABLE ExclCellsForRRuleRequired " "
VARIABLE ExclCellsForRRuleRecommended " "
VARIABLE ExclCellsForRRuleAnalog " "
VARIABLE ExclCellsForRRuleGuideline " "
#DEFINE Required
#DEFINE Recommended
#DEFINE Analog
#DEFINE Guideline
PRECISION    1000
RESOLUTION      5
LAYOUT SYSTEM GDSII
LAYOUT PATH "GDSFILENAME"
LAYOUT PRIMARY "TOPCELLNAME"
DRC RESULTS DATABASE "DRC_RES.db"
DRC SUMMARY REPORT "DRC.rep"
DRC KEEP EMPTY NO
DRC CHECK TEXT ALL
DRC MAXIMUM RESULTS ALL
LAYOUT PROCESS BOX RECORD YES
FLAG OFFGRID YES
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES
VARIABLE METAL_LOW_DEN_WINDOW_SIZE 75
VARIABLE METAL_LOW_DEN_WINDOW_STEP 37.5
VARIABLE METAL_HIGH_DEN_WINDOW_SIZE 100
VARIABLE METAL_HIGH_DEN_WINDOW_STEP 50
VARIABLE  GRID      0.005
VARIABLE  OFFSETX   0.001
VARIABLE  DNW_S_1   3.5
VARIABLE  DNW_S_2   2.5
VARIABLE  DNW_W_1   3.0
VARIABLE  DNW_S_3   1.65
VARIABLE  DNW_S_4   1.0
VARIABLE  DNW_S_5   1.2
VARIABLE  DNW_EN_3  0.56
VARIABLE  DNW_O_1   0.4
VARIABLE  OD_W_1    0.08
VARIABLE  OD_W_2    0.12
VARIABLE  OD_W_3    0.40
VARIABLE  OD_W_4    0.18
VARIABLE  OD_S_1    0.11
VARIABLE  OD_S_2    0.18
VARIABLE  OD_S_3_L  0.2
VARIABLE  OD_S_3_W  0.15
VARIABLE  OD_S_3    0.13
VARIABLE  OD_S_3_1  0.125
VARIABLE  OD_S_4    0.18
VARIABLE  OD_S_5    0.18
VARIABLE  OD_A_1    0.054
VARIABLE  OD_A_2    0.085
VARIABLE  OD_L_1    0.5
VARIABLE  OD_L_1_W  0.15
VARIABLE  OD_L_2    25.0
VARIABLE  OD_L_2_W  0.15
VARIABLE  OD_DN_1L   0.25
VARIABLE  OD_DN_1H   0.75
VARIABLE  OD_DN_2L   0.2
VARIABLE  OD_DN_2L_W 150
VARIABLE  OD_DN_2L_S 75
VARIABLE  OD_DN_2L_E 37.5
VARIABLE  OD_DN_2H   0.9
VARIABLE  OD_DN_2H_CORE 0.8
VARIABLE  OD_DN_2H_W 150
VARIABLE  OD_DN_2H_S 75
VARIABLE  OD_DN_2H_E 37.5
VARIABLE  OD_DN_3L   0.2
VARIABLE  OD_DN_3L_W 150
VARIABLE  OD_DN_3L_S 75
VARIABLE  OD_DN_3L_E 37.5
VARIABLE  OD_DN_3H   0.9
VARIABLE  OD_DN_3H_CORE 0.8
VARIABLE  OD_DN_3H_W 150
VARIABLE  OD_DN_3H_S 75
VARIABLE  OD_DN_3H_E 37.5
VARIABLE  NW_W_1    0.47
VARIABLE  NW_W_2    1.80
VARIABLE  NW_S_1    0.47
VARIABLE  NW_S_2    1.00
VARIABLE  NW_S_3    1.20
VARIABLE  NW_S_4    1.20
VARIABLE  NW_S_5    0.16
VARIABLE  NW_S_6    0.16
VARIABLE  NW_S_7    0.31
VARIABLE  NW_EN_1   0.16
VARIABLE  NW_EN_2   0.16
VARIABLE  NW_EN_3   0.31
VARIABLE  NW_A_1    0.64
VARIABLE  NW_A_2    0.64
VARIABLE  NW_A_3    1.0
VARIABLE  NW_A_3_L  0.8
VARIABLE  NW_A_4    1.0
VARIABLE  NW_A_4_L  0.8
VARIABLE  NWROD_W_1   1.8
VARIABLE  NWROD_S_1   1.2
VARIABLE  NWROD_S_2   0.3
VARIABLE  NWROD_EN_1  1.0
VARIABLE  NWROD_EN_2  0.3
VARIABLE  NWROD_O_1   0.4
VARIABLE  NWRSTI_EN_1 0.4
VARIABLE  NWRSTI_EN_2 0.3
VARIABLE  NWRSTI_EN_3 0.3
VARIABLE  NWRSTI_EX_1 0.3
VARIABLE  NT_N_W_1    0.47
VARIABLE  NT_N_S_1    0.47
VARIABLE  NT_N_S_2    0.38
VARIABLE  NT_N_S_3    1.20
VARIABLE  NT_N_EX_1   0.35
VARIABLE  NT_N_A_1    0.64
VARIABLE  NT_N_A_2    0.64
VARIABLE  NT_N_A_3    1.0
VARIABLE  NT_N_A_3_L  0.8
VARIABLE  NT_N_A_4    1.0
VARIABLE  NT_N_A_4_L  0.8
VARIABLE  NT_N_W_2    0.20
VARIABLE  NT_N_W_2_1  0.30
VARIABLE  NT_N_W_2_2  0.20
VARIABLE  NT_N_W_2_2_E  1.0
VARIABLE  NT_N_W_2_2_M  0.5
VARIABLE  NT_N_W_2_3  0.2
VARIABLE  NT_N_W_3    1.20
VARIABLE  NT_N_W_4    0.8
VARIABLE  NT_N_W_5    0.5
VARIABLE  NT_N_EN_1_L 0.26
VARIABLE  NT_N_EN_1_H 0.285
VARIABLE  OD2_W_1     0.47
VARIABLE  OD2_W_2     0.47
VARIABLE  OD2_S_1     0.47
VARIABLE  OD2_S_2     0.27
VARIABLE  OD2_S_3     0.34
VARIABLE  OD2_S_4     0.47
VARIABLE  OD2_S_5     0.47
VARIABLE  OD2_S_6     0.47
VARIABLE  OD2_S_7     0.47
VARIABLE  OD2_EN_1    0.34
VARIABLE  OD2_EX_1    0.47
VARIABLE  OD2_EX_2    0.47
VARIABLE  OD2_EX_3    0.27
VARIABLE  OD2_O_1     0.47
VARIABLE  OD25_33_W_1  0.5
VARIABLE  OD25_33_W_2  0.4
VARIABLE  OD25_18_W_1  0.26
VARIABLE  PO_W_1      0.06
VARIABLE  PO_W_2      0.28
VARIABLE  PO_W_3      0.38
VARIABLE  PO_W_4      0.20
VARIABLE  PO_W_5      0.19
VARIABLE  PO_W_5_F    0.08
VARIABLE  PO_S_1      0.12
VARIABLE  PO_S_2      0.13
VARIABLE  PO_S_2_1    0.15
VARIABLE  PO_S_2_1_W  0.09
VARIABLE  PO_S_3      0.25
VARIABLE  PO_S_4      0.05
VARIABLE  PO_S_4_1    0.15
VARIABLE  PO_S_4_1_A  0.0121
VARIABLE  PO_S_5      0.10
VARIABLE  PO_S_5_W    0.15
VARIABLE  PO_S_6      0.10
VARIABLE  PO_S_6_W    0.15
VARIABLE  PO_S_7      0.18
VARIABLE  PO_S_7_L    0.18
VARIABLE  PO_S_7_W    0.13
VARIABLE  PO_S_9      0.25
VARIABLE  PO_S_10     0.14
VARIABLE  PO_S_10_Q   0.09
VARIABLE  PO_S_10_E   0.035
VARIABLE  PO_EX_1     0.14
VARIABLE  PO_EX_2     0.115
VARIABLE  PO_EX_3     0.16
VARIABLE  PO_EX_3_W   0.15
VARIABLE  PO_EX_3_S   0.10
VARIABLE  PO_L_1      25.0
VARIABLE  PO_L_1_W    0.13
VARIABLE  PO_A_1      0.042
VARIABLE  PO_A_1_1    0.051
VARIABLE  PO_A_2      0.094
VARIABLE  PO_DN_1_L   0.14
VARIABLE  PO_DN_1_H   0.40
VARIABLE  PO_DN_2     0.001
VARIABLE  PO_DN_2_W   20
VARIABLE  PO_DN_2_S   10
VARIABLE  PO_DN_2_E   5
VARIABLE  PO_DN_3     0.14
VARIABLE  PO_R_6_U    0.425
VARIABLE  PO_R_6_V    0.11
VARIABLE  PO_R_6_W    0.255
VARIABLE  PO_R_6_X    0.065
VARIABLE  PO_S_15      1.0
VARIABLE  PO_S_15_L    0.08
VARIABLE  PO_S_15_A    630
VARIABLE  PO_S_15_DN   0.7
VARIABLE  PO_S_16      0.19
VARIABLE  VTH_N_W_1   0.18
VARIABLE  VTH_N_S_1   0.18
VARIABLE  VTH_N_S_2   0.16
VARIABLE  VTH_N_S_2_1 0.185
VARIABLE  VTH_N_S_3   0.22
VARIABLE  VTH_N_EN_1  0.185
VARIABLE  VTH_N_EN_2  0.16
VARIABLE  VTH_N_A_1   0.27
VARIABLE  VTH_N_A_2   0.27
VARIABLE  VTH_N_R_2   0.4
VARIABLE  VTH_P_W_1   0.18
VARIABLE  VTH_P_S_1   0.18
VARIABLE  VTH_P_S_2   0.16
VARIABLE  VTH_P_S_2_1 0.185
VARIABLE  VTH_P_S_3   0.22
VARIABLE  VTH_P_EN_1  0.185
VARIABLE  VTH_P_EN_2  0.16
VARIABLE  VTH_P_A_1   0.27
VARIABLE  VTH_P_A_2   0.27
VARIABLE  VTH_P_R_2   0.4
VARIABLE  VTL_N_W_1   0.18
VARIABLE  VTL_N_S_1   0.18
VARIABLE  VTL_N_S_2   0.16
VARIABLE  VTL_N_S_2_1 0.185
VARIABLE  VTL_N_S_3   0.22
VARIABLE  VTL_N_EN_1  0.185
VARIABLE  VTL_N_EN_2  0.16
VARIABLE  VTL_N_A_1   0.27
VARIABLE  VTL_N_A_2   0.27
VARIABLE  VTL_N_R_2   0.4
VARIABLE  VTL_P_W_1   0.18
VARIABLE  VTL_P_S_1   0.18
VARIABLE  VTL_P_S_2   0.16
VARIABLE  VTL_P_S_2_1 0.185
VARIABLE  VTL_P_S_3   0.22
VARIABLE  VTL_P_EN_1  0.185
VARIABLE  VTL_P_EN_2  0.16
VARIABLE  VTL_P_A_1   0.27
VARIABLE  VTL_P_A_2   0.27
VARIABLE  VTL_P_R_2   0.4
VARIABLE  mVTL_EN_1    0.05
VARIABLE  mVTL_S_1     0.05
VARIABLE  PP_W_1   0.18
VARIABLE  PP_S_1   0.18
VARIABLE  PP_S_2   0.13
VARIABLE  PP_S_4   0.02
VARIABLE  PP_S_5   0.32
VARIABLE  PP_S_6   0.32
VARIABLE  PP_S_6_J 0.16
VARIABLE  PP_S_7   0.20
VARIABLE  PP_EN_1  0.15
VARIABLE  PP_EX_1  0.13
VARIABLE  PP_EX_2  0.02
VARIABLE  PP_EX_3  0.20
VARIABLE  PP_EX_4  0.32
VARIABLE  PP_O_1   0.13
VARIABLE  PP_A_1   0.122
VARIABLE  PP_A_2   0.122
VARIABLE  PP_A_3   0.04
VARIABLE  PP_R_1   0.16
VARIABLE  NP_W_1   0.18
VARIABLE  NP_S_1   0.18
VARIABLE  NP_S_2   0.13
VARIABLE  NP_S_4   0.02
VARIABLE  NP_S_5   0.32
VARIABLE  NP_S_6   0.32
VARIABLE  NP_S_6_J 0.16
VARIABLE  NP_S_7   0.20
VARIABLE  NP_EX_1  0.13
VARIABLE  NP_EX_2  0.02
VARIABLE  NP_EX_3  0.20
VARIABLE  NP_EX_4  0.32
VARIABLE  NP_O_1   0.13
VARIABLE  NP_A_1   0.122
VARIABLE  NP_A_2   0.122
VARIABLE  NP_A_3   0.04
VARIABLE  NP_R_1   0.16
VARIABLE  DCO_W_1  0.4
VARIABLE  DCO_S_1  0.4
VARIABLE  DCO_S_2  0.055
VARIABLE  DCO_S_3  0.185
VARIABLE  DCO_S_4  0.16
VARIABLE  DCO_S_5  0.18
VARIABLE  DCO_S_6  0.4
VARIABLE  DCO_EN_1 0.185
VARIABLE  DCO_EN_2 0.16
VARIABLE  DCO_EX_1 0.18
VARIABLE  DCO_EX_2 0.18
VARIABLE  DCO_EX_3 0.055
VARIABLE  DCO_A_1  1.2
VARIABLE  DCO_A_2  1.2
VARIABLE  DCO_O_1  0.18
VARIABLE  DCO_R_5  0.2
VARIABLE  LDN_EX_1  0.18
VARIABLE  LDN_O_1   0.18
VARIABLE  LDP_EX_1  0.18
VARIABLE  LDP_O_2   0.18
VARIABLE  VT_S_1    0.18
VARIABLE  VT_EX_2   0.18
VARIABLE  RPO_W_1    0.43
VARIABLE  RPO_S_1    0.43
VARIABLE  RPO_S_2    0.22
VARIABLE  RPO_S_3    0.22
VARIABLE  RPO_S_4    0.38
VARIABLE  RPO_S_5    0.30
VARIABLE  RPO_EX_1   0.22
VARIABLE  RPO_EX_1_1   0.30
VARIABLE  RPO_EX_1_1_W 10.0
VARIABLE  RPO_EX_2   0.22
VARIABLE  RPO_A_1    1.00
VARIABLE  RPO_A_2    1.00
VARIABLE  RES_8      0.16
VARIABLE  RES_11     0.13
VARIABLE  VAR_W_1    0.20
VARIABLE  VAR_W_4    0.40
VARIABLE  VAR_S_1    0.13
VARIABLE  VAR_EN_1   0.16
VARIABLE  VAR_R_4    0.16
VARIABLE  VAR_R_5_1  0.19
VARIABLE  VAR_R_5_2  0.13
VARIABLE  HVD_N_W_1     0.47
VARIABLE  HVD_N_W_2     0.6
VARIABLE  HVD_N_S_1     0.47
VARIABLE  HVD_N_S_2     1.37
VARIABLE  HVD_N_S_3     1.6
VARIABLE  HVD_N_S_4     0.3
VARIABLE  HVD_N_S_5     0.6
VARIABLE  HVD_N_S_6     3.0
VARIABLE  HVD_N_EX_1    0.24
VARIABLE  HVD_N_O_1     0.3
VARIABLE  HVD_N_L_1     0.85
VARIABLE  HVD_N_A_1     0.64
VARIABLE  HVD_N_A_2     0.64
VARIABLE  HVD_P_W_1     0.47
VARIABLE  HVD_P_W_2     0.6
VARIABLE  HVD_P_S_1     0.47
VARIABLE  HVD_P_S_2     1.2
VARIABLE  HVD_P_S_4     0.24
VARIABLE  HVD_P_S_5     0.48
VARIABLE  HVD_P_EX_1    0.24
VARIABLE  HVD_P_EN_1    1.6
VARIABLE  HVD_P_O_1     0.25
VARIABLE  HVD_P_L_1     0.6
VARIABLE  HVD_P_A_1     0.64
VARIABLE  HVD_P_A_2     0.64
VARIABLE  BV_W_1        10
VARIABLE  BV_W_2        50
VARIABLE  BV_R_1        64
VARIABLE  CO_W_1     0.09
VARIABLE  CO_W_2     0.09
VARIABLE  CO_S_1     0.11
VARIABLE  CO_S_2     0.14
VARIABLE  CO_S_2_N   0.15
VARIABLE  CO_S_2_1   0.14
VARIABLE  CO_S_2_2   0.12
VARIABLE  CO_S_4     0.07
VARIABLE  CO_S_5     0.09
VARIABLE  CO_S_6     0.06
VARIABLE  CO_S_3     0.055
VARIABLE  CO_EN_1    0.015
VARIABLE  CO_EN_1_1  0.03
VARIABLE  CO_EN_2    0.01
VARIABLE  CO_EN_3    0.04
VARIABLE  CO_EN_4    0.03
VARIABLE  M1_W_1     0.09
VARIABLE  M1_W_2     0.19
VARIABLE  M1_W_3     12.0
VARIABLE  M1_S_1     0.09
#IFDEF HALF_NODE
VARIABLE  M1_S_2     0.11
VARIABLE  M1_S_2_W   0.22
VARIABLE  M1_S_2_L   0.42
VARIABLE  M1_S_2_1   0.16
VARIABLE  M1_S_2_1_W 0.465
VARIABLE  M1_S_2_1_L 0.465
VARIABLE  M1_S_2_2   0.1
VARIABLE  M1_S_2_2_W 0.2
VARIABLE  M1_S_2_2_L 0.42
VARIABLE  M1_S_2_3   0.12
VARIABLE  M1_S_2_3_W 0.42
VARIABLE  M1_S_2_3_L 0.465
VARIABLE  M1_S_3     0.50
VARIABLE  M1_S_3_W   1.65
VARIABLE  M1_S_3_L   1.65
VARIABLE  M1_S_4     1.50
VARIABLE  M1_S_4_W   4.95
VARIABLE  M1_S_4_L   4.95
#ELSE
VARIABLE  M1_S_2     0.11
VARIABLE  M1_S_2_W   0.20
VARIABLE  M1_S_2_L   0.38
VARIABLE  M1_S_2_1   0.16
VARIABLE  M1_S_2_1_W 0.42
VARIABLE  M1_S_2_1_L 0.42
VARIABLE  M1_S_3     0.50
VARIABLE  M1_S_3_W   1.5
VARIABLE  M1_S_3_L   1.5
VARIABLE  M1_S_4     1.50
VARIABLE  M1_S_4_W   4.5
VARIABLE  M1_S_4_L   4.5
#ENDIF
VARIABLE  M1_S_6     0.19
VARIABLE  M1_S_5     0.11
VARIABLE  M1_S_5_Q   0.11
VARIABLE  M1_S_5_E   0.035
VARIABLE  M1_EN_2    0.04
VARIABLE  M1_EN_3   0.025
VARIABLE  M1_EN_4   0.04
VARIABLE  M1_EN_4_W 1.0
VARIABLE  M1_A_1    0.042
VARIABLE  M1_A_2    0.2
VARIABLE  M1_DN_1L   0.1
VARIABLE  M1_DN_1L_W METAL_LOW_DEN_WINDOW_SIZE
VARIABLE  M1_DN_1L_S METAL_LOW_DEN_WINDOW_STEP
VARIABLE  M1_DN_1L_E M1_DN_1L_W/4
VARIABLE  M1_DN_1H   0.8
VARIABLE  M1_DN_1H_W METAL_HIGH_DEN_WINDOW_SIZE
VARIABLE  M1_DN_1H_S METAL_HIGH_DEN_WINDOW_STEP
VARIABLE  M1_DN_1H_E M1_DN_1H_W/4
VARIABLE  M1_DN_2    0.9
VARIABLE  M1_DN_2_W  20
VARIABLE  M1_DN_2_S  10
VARIABLE  M1_DN_2_E  5
VARIABLE  M1_DN_4    0.4
VARIABLE  M1_DN_4_W  250
VARIABLE  VIA1_W_1   0.10
VARIABLE  VIA1_W_2   0.10
VARIABLE  VIA1_S_1   0.10
VARIABLE  VIA1_S_2   0.13
VARIABLE  VIA1_S_2_S 0.14
VARIABLE  VIA1_S_3   0.13
VARIABLE  VIA1_EN_2  0.04
VARIABLE  VIA1_EN_3  0.03
#IFDEF HALF_NODE
VARIABLE  VIA1_R_2_S1  0.22
VARIABLE  VIA1_R_2_S2  0.275
VARIABLE  VIA1_R_2_W   0.33
VARIABLE  VIA1_R_3_S1  0.22
VARIABLE  VIA1_R_3_S2  0.385
VARIABLE  VIA1_R_3_W   0.77
VARIABLE  VIA1_R_4_W   0.33
VARIABLE  VIA1_R_4_D   0.8
VARIABLE  VIA1_R_5_W   2.2
VARIABLE  VIA1_R_5_D   2.0
VARIABLE  VIA1_R_6_W   3.3
VARIABLE  VIA1_R_6_L   11.0
VARIABLE  VIA1_R_6_D   5.0
#ELSE
VARIABLE  VIA1_R_2_S1  0.20
VARIABLE  VIA1_R_2_S2  0.25
VARIABLE  VIA1_R_2_W   0.30
VARIABLE  VIA1_R_3_S1  0.20
VARIABLE  VIA1_R_3_S2  0.35
VARIABLE  VIA1_R_3_W   0.70
VARIABLE  VIA1_R_4_W   0.3
VARIABLE  VIA1_R_4_D   0.8
VARIABLE  VIA1_R_5_W   2.0
VARIABLE  VIA1_R_5_D   2.0
VARIABLE  VIA1_R_6_W   3.0
VARIABLE  VIA1_R_6_L   10.0
VARIABLE  VIA1_R_6_D   5.0
#ENDIF
VARIABLE  VIA1_R_11_L   1.0
VARIABLE  VIA1_R_11_W   0.3
VARIABLE  VIA1_R_11_A   5.0
VARIABLE  VIA1_R_11_L2  5.0
VARIABLE  M2_W_1   0.10
VARIABLE  M2_S_1   0.10
VARIABLE  M2_A_1   0.052
VARIABLE  M2_A_2   0.20
VARIABLE  M2_W_3   12.0
#IFDEF HALF_NODE
VARIABLE  M2_S_2   0.12
VARIABLE  M2_S_2_W 0.22
VARIABLE  M2_S_2_L 0.42
VARIABLE  M2_S_2_1 0.16
VARIABLE  M2_S_2_1_W 0.44
VARIABLE  M2_S_2_1_L 0.44
VARIABLE  M2_S_2_2 0.11
VARIABLE  M2_S_2_2_W 0.2
VARIABLE  M2_S_2_2_L 0.42
VARIABLE  M2_S_2_3 0.13
VARIABLE  M2_S_2_3_W 0.4
VARIABLE  M2_S_2_3_L 0.44
VARIABLE  M2_S_3   0.50
VARIABLE  M2_S_3_W 1.65
VARIABLE  M2_S_3_L 1.65
VARIABLE  M2_S_4   1.50
VARIABLE  M2_S_4_W 4.95
VARIABLE  M2_S_4_L 4.95
#ELSE
VARIABLE  M2_S_2   0.12
VARIABLE  M2_S_2_W 0.20
VARIABLE  M2_S_2_L 0.38
VARIABLE  M2_S_2_1 0.16
VARIABLE  M2_S_2_1_W 0.4
VARIABLE  M2_S_2_1_L 0.4
VARIABLE  M2_S_3   0.50
VARIABLE  M2_S_3_W 1.50
VARIABLE  M2_S_3_L 1.50
VARIABLE  M2_S_4   1.50
VARIABLE  M2_S_4_W 4.50
VARIABLE  M2_S_4_L 4.50
#ENDIF
VARIABLE  M2_S_5   0.12
VARIABLE  M2_S_5_Q 0.12
VARIABLE  M2_S_5_E 0.035
VARIABLE  M2_EN_2  0.04
VARIABLE  M2_EN_3  0.03
VARIABLE  M2_W_2     0.19
VARIABLE  M2_S_6     0.19
VARIABLE  M2_DN_1L   0.1
VARIABLE  M2_DN_1L_W METAL_LOW_DEN_WINDOW_SIZE
VARIABLE  M2_DN_1L_S METAL_LOW_DEN_WINDOW_STEP
VARIABLE  M2_DN_1L_E M2_DN_1L_W/4
VARIABLE  M2_DN_1H   0.8
VARIABLE  M2_DN_1H_W METAL_HIGH_DEN_WINDOW_SIZE
VARIABLE  M2_DN_1H_S METAL_HIGH_DEN_WINDOW_STEP
VARIABLE  M2_DN_1H_E M2_DN_1H_W/4
VARIABLE  M2_DN_2    0.9
VARIABLE  M2_DN_2_W  20
VARIABLE  M2_DN_2_S  10
VARIABLE  M2_DN_2_E  5
VARIABLE  M2_DN_4    0.4
VARIABLE  M2_DN_4_W  250
VARIABLE  VIA2_W_1   0.10
VARIABLE  VIA2_W_2   0.10
VARIABLE  VIA2_S_1   0.10
VARIABLE  VIA2_S_2   0.13
VARIABLE  VIA2_S_2_S 0.14
VARIABLE  VIA2_S_3   0.13
VARIABLE  VIA2_EN_2  0.04
VARIABLE  VIA2_EN_3  0.03
#IFDEF HALF_NODE
VARIABLE  VIA2_R_2_S1  0.22
VARIABLE  VIA2_R_2_S2  0.275
VARIABLE  VIA2_R_2_W   0.33
VARIABLE  VIA2_R_3_S1  0.22
VARIABLE  VIA2_R_3_S2  0.385
VARIABLE  VIA2_R_3_W   0.77
VARIABLE  VIA2_R_4_W   0.33
VARIABLE  VIA2_R_4_D   0.8
VARIABLE  VIA2_R_5_W   2.2
VARIABLE  VIA2_R_5_D   2.0
VARIABLE  VIA2_R_6_W   3.3
VARIABLE  VIA2_R_6_L   11.0
VARIABLE  VIA2_R_6_D   5.0
#ELSE
VARIABLE  VIA2_R_2_S1  0.20
VARIABLE  VIA2_R_2_S2  0.25
VARIABLE  VIA2_R_2_W   0.30
VARIABLE  VIA2_R_3_S1  0.20
VARIABLE  VIA2_R_3_S2  0.35
VARIABLE  VIA2_R_3_W   0.70
VARIABLE  VIA2_R_4_W   0.3
VARIABLE  VIA2_R_4_D   0.8
VARIABLE  VIA2_R_5_W   2.0
VARIABLE  VIA2_R_5_D   2.0
VARIABLE  VIA2_R_6_W   3.0
VARIABLE  VIA2_R_6_L   10.0
VARIABLE  VIA2_R_6_D   5.0
#ENDIF
VARIABLE  VIA2_R_11_L   1.0
VARIABLE  VIA2_R_11_W   0.3
VARIABLE  VIA2_R_11_A   5.0
VARIABLE  VIA2_R_11_L2  5.0
VARIABLE  M3_W_1   0.10
VARIABLE  M3_S_1   0.10
VARIABLE  M3_A_1   0.052
VARIABLE  M3_A_2   0.20
VARIABLE  M3_W_3   12.0
#IFDEF HALF_NODE
VARIABLE  M3_S_2   0.12
VARIABLE  M3_S_2_W 0.22
VARIABLE  M3_S_2_L 0.42
VARIABLE  M3_S_2_1 0.16
VARIABLE  M3_S_2_1_W 0.44
VARIABLE  M3_S_2_1_L 0.44
VARIABLE  M3_S_2_2 0.11
VARIABLE  M3_S_2_2_W 0.2
VARIABLE  M3_S_2_2_L 0.42
VARIABLE  M3_S_2_3 0.13
VARIABLE  M3_S_2_3_W 0.4
VARIABLE  M3_S_2_3_L 0.44
VARIABLE  M3_S_3   0.50
VARIABLE  M3_S_3_W 1.65
VARIABLE  M3_S_3_L 1.65
VARIABLE  M3_S_4   1.50
VARIABLE  M3_S_4_W 4.95
VARIABLE  M3_S_4_L 4.95
#ELSE
VARIABLE  M3_S_2   0.12
VARIABLE  M3_S_2_W 0.20
VARIABLE  M3_S_2_L 0.38
VARIABLE  M3_S_2_1 0.16
VARIABLE  M3_S_2_1_W 0.4
VARIABLE  M3_S_2_1_L 0.4
VARIABLE  M3_S_3   0.50
VARIABLE  M3_S_3_W 1.50
VARIABLE  M3_S_3_L 1.50
VARIABLE  M3_S_4   1.50
VARIABLE  M3_S_4_W 4.50
VARIABLE  M3_S_4_L 4.50
#ENDIF
VARIABLE  M3_S_5   0.12
VARIABLE  M3_S_5_Q 0.12
VARIABLE  M3_S_5_E 0.035
VARIABLE  M3_EN_2  0.04
VARIABLE  M3_EN_3  0.03
VARIABLE  M3_W_2     0.19
VARIABLE  M3_S_6     0.19
VARIABLE  M3_DN_1L   0.1
VARIABLE  M3_DN_1L_W METAL_LOW_DEN_WINDOW_SIZE
VARIABLE  M3_DN_1L_S METAL_LOW_DEN_WINDOW_STEP
VARIABLE  M3_DN_1L_E M3_DN_1L_W/4
VARIABLE  M3_DN_1H   0.8
VARIABLE  M3_DN_1H_W METAL_HIGH_DEN_WINDOW_SIZE
VARIABLE  M3_DN_1H_S METAL_HIGH_DEN_WINDOW_STEP
VARIABLE  M3_DN_1H_E M3_DN_1H_W/4
VARIABLE  M3_DN_2    0.9
VARIABLE  M3_DN_2_W  20
VARIABLE  M3_DN_2_S  10
VARIABLE  M3_DN_2_E  5
VARIABLE  M3_DN_4    0.4
VARIABLE  M3_DN_4_W  250
VARIABLE  VIA3_W_1   0.10
VARIABLE  VIA3_W_2   0.10
VARIABLE  VIA3_S_1   0.10
VARIABLE  VIA3_S_2   0.13
VARIABLE  VIA3_S_2_S 0.14
VARIABLE  VIA3_S_3   0.13
VARIABLE  VIA3_EN_2  0.04
VARIABLE  VIA3_EN_3  0.03
#IFDEF HALF_NODE
VARIABLE  VIA3_R_2_S1  0.22
VARIABLE  VIA3_R_2_S2  0.275
VARIABLE  VIA3_R_2_W   0.33
VARIABLE  VIA3_R_3_S1  0.22
VARIABLE  VIA3_R_3_S2  0.385
VARIABLE  VIA3_R_3_W   0.77
VARIABLE  VIA3_R_4_W   0.33
VARIABLE  VIA3_R_4_D   0.8
VARIABLE  VIA3_R_5_W   2.2
VARIABLE  VIA3_R_5_D   2.0
VARIABLE  VIA3_R_6_W   3.3
VARIABLE  VIA3_R_6_L   11.0
VARIABLE  VIA3_R_6_D   5.0
#ELSE
VARIABLE  VIA3_R_2_S1  0.20
VARIABLE  VIA3_R_2_S2  0.25
VARIABLE  VIA3_R_2_W   0.30
VARIABLE  VIA3_R_3_S1  0.20
VARIABLE  VIA3_R_3_S2  0.35
VARIABLE  VIA3_R_3_W   0.70
VARIABLE  VIA3_R_4_W   0.3
VARIABLE  VIA3_R_4_D   0.8
VARIABLE  VIA3_R_5_W   2.0
VARIABLE  VIA3_R_5_D   2.0
VARIABLE  VIA3_R_6_W   3.0
VARIABLE  VIA3_R_6_L   10.0
VARIABLE  VIA3_R_6_D   5.0
#ENDIF
VARIABLE  VIA3_R_11_L   1.0
VARIABLE  VIA3_R_11_W   0.3
VARIABLE  VIA3_R_11_A   5.0
VARIABLE  VIA3_R_11_L2  5.0
VARIABLE  M4_W_1   0.10
VARIABLE  M4_S_1   0.10
VARIABLE  M4_A_1   0.052
VARIABLE  M4_A_2   0.20
VARIABLE  M4_W_3   12.0
#IFDEF HALF_NODE
VARIABLE  M4_S_2   0.12
VARIABLE  M4_S_2_W 0.22
VARIABLE  M4_S_2_L 0.42
VARIABLE  M4_S_2_1 0.16
VARIABLE  M4_S_2_1_W 0.44
VARIABLE  M4_S_2_1_L 0.44
VARIABLE  M4_S_2_2 0.11
VARIABLE  M4_S_2_2_W 0.2
VARIABLE  M4_S_2_2_L 0.42
VARIABLE  M4_S_2_3 0.13
VARIABLE  M4_S_2_3_W 0.4
VARIABLE  M4_S_2_3_L 0.44
VARIABLE  M4_S_3   0.50
VARIABLE  M4_S_3_W 1.65
VARIABLE  M4_S_3_L 1.65
VARIABLE  M4_S_4   1.50
VARIABLE  M4_S_4_W 4.95
VARIABLE  M4_S_4_L 4.95
#ELSE
VARIABLE  M4_S_2   0.12
VARIABLE  M4_S_2_W 0.20
VARIABLE  M4_S_2_L 0.38
VARIABLE  M4_S_2_1 0.16
VARIABLE  M4_S_2_1_W 0.4
VARIABLE  M4_S_2_1_L 0.4
VARIABLE  M4_S_3   0.50
VARIABLE  M4_S_3_W 1.50
VARIABLE  M4_S_3_L 1.50
VARIABLE  M4_S_4   1.50
VARIABLE  M4_S_4_W 4.50
VARIABLE  M4_S_4_L 4.50
#ENDIF
VARIABLE  M4_S_5   0.12
VARIABLE  M4_S_5_Q 0.12
VARIABLE  M4_S_5_E 0.035
VARIABLE  M4_EN_2  0.04
VARIABLE  M4_EN_3  0.03
VARIABLE  M4_W_2     0.19
VARIABLE  M4_S_6     0.19
VARIABLE  M4_DN_1L   0.1
VARIABLE  M4_DN_1L_W METAL_LOW_DEN_WINDOW_SIZE
VARIABLE  M4_DN_1L_S METAL_LOW_DEN_WINDOW_STEP
VARIABLE  M4_DN_1L_E M4_DN_1L_W/4
VARIABLE  M4_DN_1H   0.8
VARIABLE  M4_DN_1H_W METAL_HIGH_DEN_WINDOW_SIZE
VARIABLE  M4_DN_1H_S METAL_HIGH_DEN_WINDOW_STEP
VARIABLE  M4_DN_1H_E M4_DN_1H_W/4
VARIABLE  M4_DN_2    0.9
VARIABLE  M4_DN_2_W  20
VARIABLE  M4_DN_2_S  10
VARIABLE  M4_DN_2_E  5
VARIABLE  M4_DN_4    0.4
VARIABLE  M4_DN_4_W  250
VARIABLE  VIA4_W_1   0.36
VARIABLE  VIA4_W_2   0.36
VARIABLE  VIA4_S_1   0.34
VARIABLE  VIA4_S_2   0.54
VARIABLE  VIA4_S_2_S 0.56
VARIABLE  VIA4_EN_1  0.02
VARIABLE  VIA4_EN_2  0.08
#IFDEF HALF_NODE
VARIABLE  VIA4_R_2_S 1.87
VARIABLE  VIA4_R_2_W 1.98
VARIABLE  VIA4_R_3_W 3.3
VARIABLE  VIA4_R_3_L 11.0
VARIABLE  VIA4_R_3_D 5.0
#ELSE
VARIABLE  VIA4_R_2_S 1.7
VARIABLE  VIA4_R_2_W 1.8
VARIABLE  VIA4_R_3_W 3.0
VARIABLE  VIA4_R_3_L 10.0
VARIABLE  VIA4_R_3_D 5.0
#ENDIF
VARIABLE  VIA4_EN_3  0.24
VARIABLE  VIA4_EN_4  0.20
VARIABLE  VIA4_S_3   0.30
VARIABLE  VIA4_S_4   0.54
VARIABLE  VIA4_S_5   0.54
VARIABLE  M5_W_1   0.4
VARIABLE  M5_W_2   12.0
VARIABLE  M5_S_1   0.4
#IFDEF HALF_NODE
VARIABLE  M5_S_2   0.5
VARIABLE  M5_S_2_W 1.65
VARIABLE  M5_S_2_L 1.65
VARIABLE  M5_S_3   1.5
VARIABLE  M5_S_3_W 4.95
VARIABLE  M5_S_3_L 4.95
#ELSE
VARIABLE  M5_S_2   0.5
VARIABLE  M5_S_2_W 1.5
VARIABLE  M5_S_2_L 1.5
VARIABLE  M5_S_3   1.5
VARIABLE  M5_S_3_W 4.5
VARIABLE  M5_S_3_L 4.5
#ENDIF
VARIABLE  M5_EN_1  0.02
VARIABLE  M5_EN_2  0.08
VARIABLE  M5_A_1   0.565
VARIABLE  M5_A_2   0.565
VARIABLE  M5_DN_1L   0.1
VARIABLE  M5_DN_1L_W METAL_LOW_DEN_WINDOW_SIZE
VARIABLE  M5_DN_1L_S METAL_LOW_DEN_WINDOW_STEP
VARIABLE  M5_DN_1L_E M5_DN_1L_W/4
VARIABLE  M5_DN_1H   0.8
VARIABLE  M5_DN_1H_W METAL_HIGH_DEN_WINDOW_SIZE
VARIABLE  M5_DN_1H_S METAL_HIGH_DEN_WINDOW_STEP
VARIABLE  M5_DN_1H_E M5_DN_1H_W/4
VARIABLE  M5_DN_2    0.9
VARIABLE  M5_DN_2_W  20
VARIABLE  M5_DN_2_S  10
VARIABLE  M5_DN_2_E  5
VARIABLE  M5_DN_4    0.4
VARIABLE  M5_DN_4_W  250
VARIABLE  M5_EN_3    0.1
VARIABLE  M5_DN_5L   0.5
VARIABLE  M5_DN_5L_W 200
VARIABLE  M5_DN_5L_S 100
VARIABLE  M5_DN_5L_E 2500
VARIABLE  M5_DN_5H   0.8
VARIABLE  M5_DN_5H_W 100
VARIABLE  M5_DN_5H_S 50
VARIABLE  M5_DN_5H_E 2500
VARIABLE  M5_W_4     0.84
VARIABLE  M5_S_4     0.84
VARIABLE  VIA5_W_1   0.36
VARIABLE  VIA5_W_2   0.36
VARIABLE  VIA5_S_1   0.34
VARIABLE  VIA5_S_2   0.54
VARIABLE  VIA5_S_2_S 0.56
VARIABLE  VIA5_EN_1  0.02
VARIABLE  VIA5_EN_2  0.08
VARIABLE  VIA5_EN_5  0.08
#IFDEF HALF_NODE
VARIABLE  VIA5_R_2_S 1.87
VARIABLE  VIA5_R_2_W 1.98
VARIABLE  VIA5_R_3_W 3.3
VARIABLE  VIA5_R_3_L 11.0
VARIABLE  VIA5_R_3_D 5.0
#ELSE
VARIABLE  VIA5_R_2_S 1.7
VARIABLE  VIA5_R_2_W 1.8
VARIABLE  VIA5_R_3_W 3.0
VARIABLE  VIA5_R_3_L 10.0
VARIABLE  VIA5_R_3_D 5.0
#ENDIF
VARIABLE  VIA5_R_8_S 1.7
VARIABLE  M6_W_1     2.0
VARIABLE  M6_W_2     12.0
VARIABLE  M6_W_3     30.0
VARIABLE  M6_S_1     2.0
VARIABLE  M6_EN_1    0.3
VARIABLE  M6_A_1     9
VARIABLE  M6_A_2     9
VARIABLE  M6_DN_1L   0.2
VARIABLE  M6_DN_1H   0.7
VARIABLE  M6_DN_2L   0.1
VARIABLE  M6_DN_2L_W METAL_LOW_DEN_WINDOW_SIZE
VARIABLE  M6_DN_2L_S METAL_LOW_DEN_WINDOW_STEP
VARIABLE  M6_DN_2L_E M6_DN_2L_W/4
VARIABLE  M6_DN_2H   0.8
VARIABLE  M6_DN_2H_W METAL_HIGH_DEN_WINDOW_SIZE
VARIABLE  M6_DN_2H_S METAL_HIGH_DEN_WINDOW_STEP
VARIABLE  M6_DN_2H_E M6_DN_2H_W/4
VARIABLE CTM_W_1  2.0
VARIABLE CTM_W_2  100
VARIABLE CTM_S_1  0.8
VARIABLE CTM_EN_1 0.4
VARIABLE CBM_W_1  2.8
VARIABLE CBM_W_2  210
VARIABLE CBM_EN_2 10
VARIABLE CBM_S_3  0.5
VARIABLE CBM_S_1   2.0
VARIABLE CBM_S_1_A 40000
VARIABLE CBM_S_2   2.6
VARIABLE CBM_S_2_A 40000
VARIABLE  Mx_DN_5    0.8
VARIABLE  Mx_DN_5_W  50
VARIABLE  Mx_DN_5_S  25
VARIABLE  MOM_S_1    0.1
VARIABLE  MOM_S_2    0.12
VARIABLE  MOM_A_1    7.01E7
VARIABLE  MOM_S_3    0.13
VARIABLE  MOM_S_4    0.13
VARIABLE  MOM_A_2    1.72E5
VARIABLE  LOGO_S_1   10.0
VARIABLE  CSR_R_2    2.5
VARIABLE  CSR_S_1    0.36
VARIABLE  CSR_EN_1   0.53
VARIABLE  CSR_S_2    0.35
VARIABLE  CSR_EN_2   0.525
VARIABLE  CSR_S_3    0.34
VARIABLE  CSR_EN_3   0.61
VARIABLE  CSR_S_4    0.56
VARIABLE  CSR_EN_4   0.61
VARIABLE  CSR_S_5    0.89
VARIABLE  CSR_EN_9   0.345
VARIABLE  CSR_R_3_X  16
VARIABLE  CSR_R_3_Y  9
VARIABLE  CSR_R_3_Z  4
VARIABLE  CSR_R_3_R  4
VARIABLE  CSR_W_1    10.0
VARIABLE  CSR_W_2_1  6.0
VARIABLE  CSR_W_2_2  10.0
VARIABLE  CSR_L_1_1  20.0
VARIABLE  CSR_L_1_2  25.0
#IFDEF WLCSP_SEALRING
VARIABLE  CSR_EN_5_1 5.0
VARIABLE  CSR_EN_5_2 9.0
#ELSE
VARIABLE  CSR_EN_5_1 4.0
VARIABLE  CSR_EN_5_2 8.0
#ENDIF
VARIABLE  CSR_EN_6_A 27.0
VARIABLE  CSR_EN_6_B 29.0
VARIABLE  CSR_EN_6_1_L1 17.0
VARIABLE  CSR_EN_6_1_L2 18.0
VARIABLE  CSR_EN_7_X 0.52
VARIABLE  CSR_EN_7_Y 0.47
VARIABLE  CSR_EN_7_Z 0.58
VARIABLE  CSR_EN_7_R 0.345
VARIABLE  CSR_EN_8   0.25
VARIABLE  SR_EN_1   2
VARIABLE  SR_S_1    10
VARIABLE  DOD_W_1   0.5
VARIABLE  DOD_S_1   0.4
VARIABLE  DOD_S_2   0.34
VARIABLE  DOD_S_3   0.3
VARIABLE  DOD_S_5   0.3
VARIABLE  DOD_S_6   1.2
VARIABLE  DOD_S_7   1.2
VARIABLE  DOD_S_7_1 5
VARIABLE  DOD_S_8   0.6
VARIABLE  DOD_S_10  1.2
VARIABLE  DOD_EN_1  0.3
VARIABLE  DOD_EN_2  0.6
VARIABLE  DPO_W_1   0.4
VARIABLE  DPO_S_1   0.3
VARIABLE  DPO_S_2   0.2
VARIABLE  DPO_S_3   0.5
VARIABLE  DPO_S_5   1.2
VARIABLE  DPO_S_6   1.2
VARIABLE  DPO_S_6_1 5
VARIABLE  DPO_S_9   1.2
VARIABLE  DPO_EN_1  0.6
VARIABLE  DM1_W_2     3.0
#IFDEF HALF_NODE
VARIABLE  DM1_S_3     1.5
VARIABLE  DM1_S_3_L   4.95
VARIABLE  DM1_S_3_W   4.95
VARIABLE  DM1_S_3_1   0.5
VARIABLE  DM1_S_3_1_L 1.65
VARIABLE  DM1_S_3_1_W 1.65
#ELSE
VARIABLE  DM1_S_3     1.5
VARIABLE  DM1_S_3_L   4.5
VARIABLE  DM1_S_3_W   4.5
VARIABLE  DM1_S_3_1   0.5
VARIABLE  DM1_S_3_1_L 1.5
VARIABLE  DM1_S_3_1_W 1.5
#ENDIF
VARIABLE  DM1_S_4     5.0
VARIABLE  DM1_S_5     5.0
VARIABLE  DM1_S_5_1   5.0
VARIABLE  DM1_S_8     2.5
VARIABLE  DM1_EN_1    2.5
VARIABLE  DM2_W_2     3.0
#IFDEF HALF_NODE
VARIABLE  DM2_S_3     1.5
VARIABLE  DM2_S_3_L   4.95
VARIABLE  DM2_S_3_W   4.95
VARIABLE  DM2_S_3_1   0.5
VARIABLE  DM2_S_3_1_L 1.65
VARIABLE  DM2_S_3_1_W 1.65
#ELSE
VARIABLE  DM2_S_3     1.5
VARIABLE  DM2_S_3_L   4.5
VARIABLE  DM2_S_3_W   4.5
VARIABLE  DM2_S_3_1   0.5
VARIABLE  DM2_S_3_1_L 1.5
VARIABLE  DM2_S_3_1_W 1.5
#ENDIF
VARIABLE  DM2_S_4     5.0
VARIABLE  DM2_S_5     5.0
VARIABLE  DM2_S_5_1   5.0
VARIABLE  DM2_S_8     2.5
VARIABLE  DM2_EN_1    2.5
VARIABLE  DM3_W_2     3.0
#IFDEF HALF_NODE
VARIABLE  DM3_S_3     1.5
VARIABLE  DM3_S_3_L   4.95
VARIABLE  DM3_S_3_W   4.95
VARIABLE  DM3_S_3_1   0.5
VARIABLE  DM3_S_3_1_L 1.65
VARIABLE  DM3_S_3_1_W 1.65
#ELSE
VARIABLE  DM3_S_3     1.5
VARIABLE  DM3_S_3_L   4.5
VARIABLE  DM3_S_3_W   4.5
VARIABLE  DM3_S_3_1   0.5
VARIABLE  DM3_S_3_1_L 1.5
VARIABLE  DM3_S_3_1_W 1.5
#ENDIF
VARIABLE  DM3_S_4     5.0
VARIABLE  DM3_S_5     5.0
VARIABLE  DM3_S_5_1   5.0
VARIABLE  DM3_S_8     2.5
VARIABLE  DM3_EN_1    2.5
VARIABLE  DM4_W_2     3.0
#IFDEF HALF_NODE
VARIABLE  DM4_S_3     1.5
VARIABLE  DM4_S_3_L   4.95
VARIABLE  DM4_S_3_W   4.95
VARIABLE  DM4_S_3_1   0.5
VARIABLE  DM4_S_3_1_L 1.65
VARIABLE  DM4_S_3_1_W 1.65
#ELSE
VARIABLE  DM4_S_3     1.5
VARIABLE  DM4_S_3_L   4.5
VARIABLE  DM4_S_3_W   4.5
VARIABLE  DM4_S_3_1   0.5
VARIABLE  DM4_S_3_1_L 1.5
VARIABLE  DM4_S_3_1_W 1.5
#ENDIF
VARIABLE  DM4_S_4     5.0
VARIABLE  DM4_S_5     5.0
VARIABLE  DM4_S_5_1   5.0
VARIABLE  DM4_S_8     2.5
VARIABLE  DM4_S_9     1.5
VARIABLE  DM4_EN_1    2.5
VARIABLE  DM5_W_2     3.0
#IFDEF HALF_NODE
VARIABLE  DM5_S_3     1.5
VARIABLE  DM5_S_3_L   4.95
VARIABLE  DM5_S_3_W   4.95
VARIABLE  DM5_S_3_1   0.5
VARIABLE  DM5_S_3_1_L 1.65
VARIABLE  DM5_S_3_1_W 1.65
#ELSE
VARIABLE  DM5_S_3     1.5
VARIABLE  DM5_S_3_L   4.5
VARIABLE  DM5_S_3_W   4.5
VARIABLE  DM5_S_3_1   0.5
VARIABLE  DM5_S_3_1_L 1.5
VARIABLE  DM5_S_3_1_W 1.5
#ENDIF
VARIABLE  DM5_S_4     5.0
VARIABLE  DM5_S_5     5.0
VARIABLE  DM5_S_5_1   5.0
VARIABLE  DM5_S_8     2.5
VARIABLE  DM5_EN_1    2.5
VARIABLE  DM6_W_2     3.0
#IFDEF HALF_NODE
VARIABLE  DM6_S_3     1.5
VARIABLE  DM6_S_3_L   4.95
VARIABLE  DM6_S_3_W   4.95
VARIABLE  DM6_S_3_1   0.5
VARIABLE  DM6_S_3_1_L 1.65
VARIABLE  DM6_S_3_1_W 1.65
#ELSE
VARIABLE  DM6_S_3     1.5
VARIABLE  DM6_S_3_L   4.5
VARIABLE  DM6_S_3_W   4.5
VARIABLE  DM6_S_3_1   0.5
VARIABLE  DM6_S_3_1_L 1.5
VARIABLE  DM6_S_3_1_W 1.5
#ENDIF
VARIABLE  DM6_S_4     5.0
VARIABLE  DM6_S_5     5.0
VARIABLE  DM6_S_5_1   5.0
VARIABLE  DM6_S_8     2.5
VARIABLE  DM6_EN_1    2.5
VARIABLE  DM1_W_1   0.3
VARIABLE  DM1_S_1   0.3
VARIABLE  DM1_S_2   0.3
VARIABLE  DM1_A_1   0.24
VARIABLE  DM1_A_2   80.0
VARIABLE  DM1_S_10  0.4
VARIABLE  DM2_W_1   0.3
VARIABLE  DM2_S_1   0.3
VARIABLE  DM2_S_2   0.3
VARIABLE  DM2_A_1   0.24
VARIABLE  DM2_A_2   80.0
VARIABLE  DM2_S_10  0.4
VARIABLE  DM3_W_1   0.3
VARIABLE  DM3_S_1   0.3
VARIABLE  DM3_S_2   0.3
VARIABLE  DM3_A_1   0.24
VARIABLE  DM3_A_2   80.0
VARIABLE  DM3_S_10  0.4
VARIABLE  DM4_W_1   0.3
VARIABLE  DM4_S_1   0.3
VARIABLE  DM4_S_2   0.3
VARIABLE  DM4_A_1   0.24
VARIABLE  DM4_A_2   80.0
VARIABLE  DM4_S_10  0.4
VARIABLE  DM5_W_1  0.4
VARIABLE  DM5_S_1  0.4
VARIABLE  DM5_S_2  0.6
VARIABLE  DM5_A_1  0.565
VARIABLE  DM5_A_2  160.0
VARIABLE  DM6_W_1  3.0
VARIABLE  DM6_S_1  3.0
VARIABLE  DM6_S_2  3.0
VARIABLE  DM6_A_1  9.0
VARIABLE  DM6_A_2  600.0
VARIABLE FU_W_1      1
VARIABLE FU_S_1_1    2
VARIABLE FU_S_4     27
VARIABLE FU_EN_1     8
VARIABLE FU_EN_1_1   2.2
VARIABLE FU_EN_2    13
VARIABLE FU_EN_3    0.8
VARIABLE FU_W_2   21.6
VARIABLE FU_L_1   17.2
VARIABLE FU_L_1_1  8
VARIABLE FU_S_1    5.6
VARIABLE FU_S_2   10.8
VARIABLE FU_S_3    9.6
VARIABLE FU_A_1_L    3
VARIABLE FU_A_1_W    3
VARIABLE PR_W_1_Vx   0.1
VARIABLE PR_W_1_Vy   0.2
VARIABLE PR_W_1_Vz   0.36
VARIABLE PR_W_1_Vr   0.29
VARIABLE PR_S_1      1.0
VARIABLE PR_S_2      3.2
VARIABLE PR_S_3      0.5
VARIABLE PR_EN_1_Vx  0.6
VARIABLE PR_EN_1_Vy  0.52
VARIABLE PR_EN_1_Vz  0.52
VARIABLE PR_EN_1_Vr  0.52
VARIABLE PR_EX_2     12
#IFDEF HALF_NODE
VARIABLE LW_W_1_MIN  11
VARIABLE LW_W_1_MAX  22
VARIABLE LW_L_1_MIN  33
VARIABLE LW_L_1_MAX  55
VARIABLE LW_EN_1     13.2
VARIABLE LW_EN_2     33
#ELSE
VARIABLE LW_W_1_MIN  10
VARIABLE LW_W_1_MAX  20
VARIABLE LW_L_1_MIN  30
VARIABLE LW_L_1_MAX  50
VARIABLE LW_EN_1     12
VARIABLE LW_EN_2     30
#ENDIF
VARIABLE LW_S_1      5
VARIABLE LW_S_2      15
VARIABLE  RV_W_1     3
VARIABLE  RV_S_1     3
VARIABLE  RV_S_3     6
VARIABLE  RV_EN_1    1.5
VARIABLE  AP_W_1     3
VARIABLE  AP_W_2     35.0
VARIABLE  AP_S_1     2
VARIABLE  AP_S_2     5
VARIABLE  AP_S_3     5
VARIABLE  AP_EN_1    1.5
VARIABLE  AP_EN_2    1.5
VARIABLE  AP_DN_1_L  0.1
VARIABLE  AP_DN_1_H  0.7
VARIABLE  LUP_2     15.0
VARIABLE  LUP_2_S   5.0
VARIABLE  LUP_3_W   0.2
VARIABLE  LUP_3_1_1 2
VARIABLE  LUP_3_1_2 3
VARIABLE  LUP_3_2_1 2.3
VARIABLE  LUP_3_2_2 4
VARIABLE  LUP_3_3_1 2.6
VARIABLE  LUP_3_3_2 5
VARIABLE  LUP_3_4_1 4
VARIABLE  LUP_3_4_2 8
VARIABLE  LUP_3_5_1 10
VARIABLE  LUP_3_5_2 15
VARIABLE  LUP_4   0.12
VARIABLE  LUP_5_1_1 2
VARIABLE  LUP_5_1_2 3
VARIABLE  LUP_5_2_1 2.3
VARIABLE  LUP_5_2_2 4
VARIABLE  LUP_5_3_1 2.6
VARIABLE  LUP_5_3_2 5
VARIABLE  LUP_5_4_1 4
VARIABLE  LUP_5_4_2 8
VARIABLE  LUP_5_5_1 10
VARIABLE  LUP_5_5_2 15
VARIABLE  LUP_6   30.0
VARIABLE  LUP_6_SRAM 40.0
VARIABLE  ESD_3g_MIN   15.0
VARIABLE  ESD_3g_MAX   60.0
VARIABLE  ESD_6g       2.0
VARIABLE  ESD_7g       2.4
VARIABLE  ESD_16g      360
VARIABLE  ESD_17g      360
VARIABLE  ESD_18g_33V  0.4
VARIABLE  ESD_18g_25V  0.35
VARIABLE  ESD_18g_18V  0.2
VARIABLE  ESD_18g_10V  0.1
VARIABLE  ESD_20g      0.06
VARIABLE  ESD_21g      1.95
VARIABLE  ESD_22g      1.0
VARIABLE  ESD_23g      0.22
VARIABLE  ESD_28g      0.06
VARIABLE  ESD_30g      1.95
VARIABLE  ESD_32g      0.22
VARIABLE  ESD_33g      0.25
VARIABLE  ESD_37g      900
VARIABLE  ESD_48g      0.45
VARIABLE  ESD_49g      1.5
VARIABLE  ESD_50g      1.0
VARIABLE  ESD_51g      0.22
VARIABLE  ESD_56g      1.95
VARIABLE  ESD_57g      0.22
VARIABLE  ESD_58g      360
VARIABLE  ESD_59g      360
VARIABLE  ESD_60g      0.44
VARIABLE  ESD_61g_MIN  15
VARIABLE  ESD_61g_MAX  60
VARIABLE  ESD_63g      0.86
VARIABLE  ESD_64g      1.95
VARIABLE  ESD_65g      0.1
VARIABLE  ESD_66g      0.22
VARIABLE  SRAM_W_1  0.28
VARIABLE  SRAM_S_1  0.28
VARIABLE  SRAM_S_2  0.12
VARIABLE  SRAM_EN_1 0.12
VARIABLE  SRAM_EX_1 0.28
VARIABLE  SRAM_O_1  0.28
VARIABLE  SRAM_A_1  0.6
VARIABLE  WLD_R_1   0.05
VARIABLE  WLD_R_2   0.043
VARIABLE  WLD_R_3   0.14
VARIABLE  WLD_R_7    200
LAYER RESOLUTION COi 1
LAYER RESOLUTION POi 1
LAYER DNWi        1
LAYER NWi         3000
LAYER MAP 3 DATATYPE >=0 <=255 3000
LAYER NWi_OTHERS  3001
LAYER MAP 3 DATATYPE >=1 <=255 3001
LAYER OD_18i     16
LAYER OD_25i     18
LAYER OD25_33    451
LAYER MAP 18 DATATYPE 3 451
LAYER OD25_18    452
LAYER MAP 18 DATATYPE 4 452
LAYER OD_33i     15
LAYER OD_DECAP   118
LAYER PPi        25
LAYER NPi        26
LAYER COi  3010
LAYER MAP 30 DATATYPE >=0 <=10 3010
LAYER MAP 30 DATATYPE >=12 <=255 3010
LAYER CO_PUSH    3011
LAYER MAP 30 DATATYPE 11 3011
LAYER COi_SRAM 3012
LAYER MAP 30 DATATYPE >=11 <=13 3012
LAYER COi_OTHERS 3013
LAYER MAP 30 DATATYPE >=1 <=10 3013
LAYER MAP 30 DATATYPE >=12 <=255 3013
LAYER CBi        76
LAYER CB2i       86
LAYER RPOi       29
LAYER NT_Ni      11
LAYER NCap_NTNi 450
LAYER MAP 11 DATATYPE 20 450
LAYER FWALi      951
LAYER MAP 95 DATATYPE 20 951
LAYER FWCUi      952
LAYER MAP 95 DATATYPE 0 952
FWi = FWALi OR FWCUi
LAYER POFUSE 648
LAYER MAP 156 DATATYPE 0 648
LAYER FUSELINK 649
LAYER MAP 156 DATATYPE 1 649
LAYER PMi        5
LAYER PM1i   	  5001
LAYER MAP 5 DATATYPE 1 5001
LAYER PM2i   	  5002
LAYER MAP 5 DATATYPE 2 5002
LAYER SEALRINGi  162
LAYER VTH_Ni     67
LAYER VTH_Pi     68
LAYER VTL_Ni     12
LAYER VTL_Pi     13
LAYER UHVT_Ni    93
LAYER UHVT_Pi    94
LAYER CBDi       169
LAYER UBMi       170
LAYER RH         117
LAYER ESD3       147
LAYER VARi       143
LAYER APi        74
LAYER Cu_PPIi    7410
LAYER MAP 74 DATATYPE 10 7410
LAYER CBMi       88
LAYER CTMi       77
LAYER RVi        85
LAYER DCOi       90
LAYER HVD_N      8101
LAYER MAP 91 DATATYPE 1 8101
LAYER HVD_P      8102
LAYER MAP 91 DATATYPE 2 8102
LAYER HVD_N_nw   8103
LAYER MAP 91 DATATYPE 3 8103
LAYER BJTDMY     110
LAYER NWDMY      114
LAYER RPDMY      115
LAYER PMDMY      106
LAYER SDI        122
LAYER ESD1DMY    145
LAYER ESD2DMY    146
LAYER LMARK      109
LAYER SRM        410
LAYER MAP 50 DATATYPE 0 410
LAYER CSRDMY	 166
LAYER CDUDMY     165
LAYER TCDDMY     1651
LAYER MAP 165 DATATYPE 1  1651
LAYER LOGO       158
LAYER INDDMY     1440
LAYER MAP 144 DATATYPE >=0 <=14 1440
LAYER IND_CTAP   1441
LAYER MAP 144 DATATYPE 34 1441
LAYER CTMDMY     1480
LAYER MAP 148 DATATYPE 0 1480
LAYER CTMDMY_10   1481
LAYER MAP 148 DATATYPE 110 1481
LAYER CTMDMY_15   1482
LAYER MAP 148 DATATYPE 115 1482
LAYER CTMDMY_20   1483
LAYER MAP 148 DATATYPE 120 1483
LAYER  MOMDMY_1  1551
LAYER MAP 155 DATATYPE 1 1551
LAYER  MOMDMY_2  1552
LAYER MAP 155 DATATYPE 2 1552
LAYER  MOMDMY_3  1553
LAYER MAP 155 DATATYPE 3 1553
LAYER  MOMDMY_4  1554
LAYER MAP 155 DATATYPE 4 1554
LAYER  MOMDMY_5  1555
LAYER MAP 155 DATATYPE 5 1555
LAYER  MOMDMY_6  1556
LAYER MAP 155 DATATYPE 6 1556
LAYER  MOMDMY_AP 1570
LAYER MAP 155 DATATYPE 20 1570
LAYER  RTMOMDMY  1571
LAYER MAP 155 DATATYPE 21 1571
LAYER MOMDMY_ALL 1550
LAYER MAP 155 DATATYPE >=1 <=9 1550
LAYER MAP 155 DATATYPE >=20 <=21 1550
LAYER RFDMY      161
LAYER WBDMY      157
LAYER DIODMY     119
LAYER SRAMDMY    400
LAYER MAP 186 DATATYPE 0 400
LAYER SRAMDMY_4    401
LAYER MAP 186 DATATYPE 4 401
LAYER SRAMDMY_5     402
LAYER MAP 186 DATATYPE 5 402
SRAMDMY_PERI = SRAMDMY_4 OR SRAMDMY_5
LAYER SRAMDMY_1  403
LAYER MAP 186 DATATYPE 1 403
LAYER RAM1TDMY    460
LAYER MAP 160 DATATYPE 0 460
LAYER OD1Ti      27
LAYER CLDDi      92
LAYER CROWNi     102
LAYER P3i        103
LAYER SNCTi      101
LAYER LUPWDMY     2551
LAYER MAP 255 DATATYPE 1 2551
LAYER VDDDMY    2554
LAYER MAP 255 DATATYPE 4 2554
LAYER VSSDMY    2555
LAYER MAP 255 DATATYPE 5 2555
LAYER EMPTYi     999
LAYER M1i         501
LAYER MAP 31 DATATYPE 0  501
LAYER MAP 31 DATATYPE 7  501
LAYER M1_real     521
LAYER MAP 31 DATATYPE 0  521
LAYER DM1_O       781
LAYER MAP 31 DATATYPE 7  781
LAYER DUM1        541
LAYER MAP 31 DATATYPE 1  541
LAYER NOUSEM1     581
LAYER MAP 31 DATATYPE 20 581
LAYER MAP 31 DATATYPE 21 581
LAYER MAP 31 DATATYPE 40 581
LAYER MAP 31 DATATYPE 41 581
LAYER MAP 31 DATATYPE 60 581
LAYER MAP 31 DATATYPE 61 581
LAYER MAP 31 DATATYPE 80 581
LAYER MAP 31 DATATYPE 81 581
LAYER NOTUSEM1    621
LAYER MAP 31 DATATYPE >=161 <=165 621
LAYER DM1EXCL  371
LAYER MAP 150 DATATYPE 1 371
LAYER M2i         502
LAYER MAP 32 DATATYPE 0  502
LAYER MAP 32 DATATYPE 7  502
LAYER M2_real     522
LAYER MAP 32 DATATYPE 0  522
LAYER DM2_O       782
LAYER MAP 32 DATATYPE 7  782
LAYER DUM2        542
LAYER MAP 32 DATATYPE 1  542
LAYER NOUSEM2     582
LAYER MAP 32 DATATYPE 20 582
LAYER MAP 32 DATATYPE 21 582
LAYER MAP 32 DATATYPE 40 582
LAYER MAP 32 DATATYPE 41 582
LAYER MAP 32 DATATYPE 60 582
LAYER MAP 32 DATATYPE 61 582
LAYER MAP 32 DATATYPE 80 582
LAYER MAP 32 DATATYPE 81 582
LAYER NOTUSEM2    622
LAYER MAP 32 DATATYPE >=161 <=165 622
LAYER DM2EXCL  372
LAYER MAP 150 DATATYPE 2 372
LAYER M3i         503
LAYER MAP 33 DATATYPE 0  503
LAYER MAP 33 DATATYPE 7  503
LAYER M3_real     523
LAYER MAP 33 DATATYPE 0  523
LAYER DM3_O       783
LAYER MAP 33 DATATYPE 7  783
LAYER DUM3        543
LAYER MAP 33 DATATYPE 1  543
LAYER NOUSEM3     583
LAYER MAP 33 DATATYPE 20 583
LAYER MAP 33 DATATYPE 21 583
LAYER MAP 33 DATATYPE 40 583
LAYER MAP 33 DATATYPE 41 583
LAYER MAP 33 DATATYPE 60 583
LAYER MAP 33 DATATYPE 61 583
LAYER MAP 33 DATATYPE 80 583
LAYER MAP 33 DATATYPE 81 583
LAYER NOTUSEM3    623
LAYER MAP 33 DATATYPE >=161 <=165 623
LAYER DM3EXCL  373
LAYER MAP 150 DATATYPE 3 373
LAYER M4i         504
LAYER MAP 34 DATATYPE 0  504
LAYER MAP 34 DATATYPE 7  504
LAYER M4_real     524
LAYER MAP 34 DATATYPE 0  524
LAYER DM4_O       784
LAYER MAP 34 DATATYPE 7  784
LAYER DUM4        544
LAYER MAP 34 DATATYPE 1  544
LAYER NOUSEM4     584
LAYER MAP 34 DATATYPE 20 584
LAYER MAP 34 DATATYPE 21 584
LAYER MAP 34 DATATYPE 40 584
LAYER MAP 34 DATATYPE 41 584
LAYER MAP 34 DATATYPE 60 584
LAYER MAP 34 DATATYPE 61 584
LAYER MAP 34 DATATYPE 80 584
LAYER MAP 34 DATATYPE 81 584
LAYER NOTUSEM4    624
LAYER MAP 34 DATATYPE >=161 <=165 624
LAYER DM4EXCL  374
LAYER MAP 150 DATATYPE 4 374
LAYER M5_OLD      505
LAYER MAP 35 DATATYPE 0  505
LAYER M5_NEW      525
LAYER MAP 35 DATATYPE 40 525
#IFDEF MIXED_SCHEME
M5i = M5_OLD OR M5_NEW
#ELSE
M5i = COPY M5_NEW
#ENDIF
LAYER DUM5_OLD    545
LAYER MAP 35 DATATYPE 1  545
LAYER DUM5_NEW    565
LAYER MAP 35 DATATYPE 41 565
#IFDEF MIXED_SCHEME
DUM5 = DUM5_OLD OR DUM5_NEW
#ELSE
DUM5 = COPY DUM5_NEW
#ENDIF
LAYER NOUSEM5_NEW 585
LAYER MAP 35 DATATYPE 0  585
LAYER MAP 35 DATATYPE 1  585
LAYER NOUSEM5_OLD 605
LAYER MAP 35 DATATYPE 20 605
LAYER MAP 35 DATATYPE 21 605
LAYER MAP 35 DATATYPE 60 605
LAYER MAP 35 DATATYPE 61 605
LAYER MAP 35 DATATYPE 80 605
LAYER MAP 35 DATATYPE 81 605
#IFDEF MIXED_SCHEME
NOUSEM5 = COPY NOUSEM5_OLD
#ELSE
NOUSEM5 = NOUSEM5_NEW OR NOUSEM5_OLD
#ENDIF
LAYER NOTUSEM5   625
LAYER MAP 35 DATATYPE >=161 <=165 625
LAYER DM5EXCL  375
LAYER MAP 150 DATATYPE 5 375
LAYER M6_OLD      506
LAYER MAP 36 DATATYPE 0  506
LAYER M6_NEW      526
LAYER MAP 36 DATATYPE 60 526
#IFDEF MIXED_SCHEME
M6i = M6_OLD OR M6_NEW
#ELSE
M6i = COPY M6_NEW
#ENDIF
LAYER DUM6_OLD    546
LAYER MAP 36 DATATYPE 1  546
LAYER DUM6_NEW    566
LAYER MAP 36 DATATYPE 61 566
#IFDEF MIXED_SCHEME
DUM6 = DUM6_OLD OR DUM6_NEW
#ELSE
DUM6 = COPY DUM6_NEW
#ENDIF
LAYER NOUSEM6_NEW 586
LAYER MAP 36 DATATYPE 0  586
LAYER MAP 36 DATATYPE 1  586
LAYER NOUSEM6_OLD 606
LAYER MAP 36 DATATYPE 20 606
LAYER MAP 36 DATATYPE 21 606
LAYER MAP 36 DATATYPE 40 606
LAYER MAP 36 DATATYPE 41 606
LAYER MAP 36 DATATYPE 80 606
LAYER MAP 36 DATATYPE 81 606
#IFDEF MIXED_SCHEME
NOUSEM6 = COPY NOUSEM6_OLD
#ELSE
NOUSEM6 = NOUSEM6_NEW OR NOUSEM6_OLD
#ENDIF
LAYER NOTUSEM6   626
LAYER MAP 36 DATATYPE >=161 <=165 626
LAYER DM6EXCL  376
LAYER MAP 150 DATATYPE 6 376
LAYER M7_OLD      507
LAYER MAP 37 DATATYPE 0  507
LAYER M7_NEW      527
LAYER MAP 37 DATATYPE 40 527
#IFDEF MIXED_SCHEME
M7i = M7_OLD OR M7_NEW
#ELSE
M7i = COPY M7_NEW
#ENDIF
LAYER DUM7_OLD    547
LAYER MAP 37 DATATYPE 1  547
LAYER DUM7_NEW    567
LAYER MAP 37 DATATYPE 41 567
#IFDEF MIXED_SCHEME
DUM7 = DUM7_OLD OR DUM7_NEW
#ELSE
DUM7 = COPY DUM7_NEW
#ENDIF
LAYER NOUSEM7_NEW 587
LAYER MAP 37 DATATYPE 0  587
LAYER MAP 37 DATATYPE 1  587
LAYER NOUSEM7_OLD 607
LAYER MAP 37 DATATYPE 20 607
LAYER MAP 37 DATATYPE 21 607
LAYER MAP 37 DATATYPE 60 607
LAYER MAP 37 DATATYPE 61 607
LAYER MAP 37 DATATYPE 80 607
LAYER MAP 37 DATATYPE 81 607
#IFDEF MIXED_SCHEME
NOUSEM7 = COPY NOUSEM7_OLD
#ELSE
NOUSEM7 = NOUSEM7_NEW OR NOUSEM7_OLD
#ENDIF
LAYER NOTUSEM7   627
LAYER MAP 37 DATATYPE >=161 <=165 627
LAYER DM7EXCL  377
LAYER MAP 150 DATATYPE 7 377
LAYER VIA1i      801
LAYER MAP 51 DATATYPE 0  801
LAYER NOUSEV1    821
LAYER MAP 51 DATATYPE 20 821
LAYER MAP 51 DATATYPE 40 821
LAYER MAP 51 DATATYPE 80 821
LAYER VIA2i      802
LAYER MAP 52 DATATYPE 0  802
LAYER NOUSEV2    822
LAYER MAP 52 DATATYPE 20 822
LAYER MAP 52 DATATYPE 40 822
LAYER MAP 52 DATATYPE 80 822
LAYER VIA3i      803
LAYER MAP 53 DATATYPE 0  803
LAYER NOUSEV3    823
LAYER MAP 53 DATATYPE 20 823
LAYER MAP 53 DATATYPE 40 823
LAYER MAP 53 DATATYPE 80 823
LAYER VIA4_OLD      804
LAYER MAP 54 DATATYPE 0 804
LAYER VIA4_NEW      814
LAYER MAP 54 DATATYPE 40  814
#IFDEF MIXED_SCHEME
VIA4i = VIA4_OLD OR VIA4_NEW
#ELSE
VIA4i = COPY VIA4_NEW
#ENDIF
LAYER NOUSEV4_NEW    824
LAYER MAP 54 DATATYPE 0 824
LAYER NOUSEV4_OLD    834
LAYER MAP 54 DATATYPE 20 834
LAYER MAP 54 DATATYPE 80 834
#IFDEF MIXED_SCHEME
NOUSEV4 = COPY NOUSEV4_OLD
#ELSE
NOUSEV4 = NOUSEV4_NEW OR NOUSEV4_OLD
#ENDIF
LAYER VIA5_OLD      805
LAYER MAP 55 DATATYPE 0 805
LAYER VIA5_NEW      815
LAYER MAP 55 DATATYPE 40  815
#IFDEF MIXED_SCHEME
VIA5i = VIA5_OLD OR VIA5_NEW
#ELSE
VIA5i = COPY VIA5_NEW
#ENDIF
LAYER NOUSEV5_NEW    825
LAYER MAP 55 DATATYPE 0 825
LAYER NOUSEV5_OLD    835
LAYER MAP 55 DATATYPE 20 835
LAYER MAP 55 DATATYPE 80 835
#IFDEF MIXED_SCHEME
NOUSEV5 = COPY NOUSEV5_OLD
#ELSE
NOUSEV5 = NOUSEV5_NEW OR NOUSEV5_OLD
#ENDIF
LAYER VIA6_OLD      806
LAYER MAP 56 DATATYPE 0 806
LAYER VIA6_NEW      816
LAYER MAP 56 DATATYPE 40  816
#IFDEF MIXED_SCHEME
VIA6i = VIA6_OLD OR VIA6_NEW
#ELSE
VIA6i = COPY VIA6_NEW
#ENDIF
LAYER NOUSEV6_NEW    826
LAYER MAP 56 DATATYPE 0 826
LAYER NOUSEV6_OLD    836
LAYER MAP 56 DATATYPE 20 836
LAYER MAP 56 DATATYPE 80 836
#IFDEF MIXED_SCHEME
NOUSEV6 = COPY NOUSEV6_OLD
#ELSE
NOUSEV6 = NOUSEV6_NEW OR NOUSEV6_OLD
#ENDIF
LAYER ODi  355 7 8
LAYER MAP 6 DATATYPE 0 355
LAYER MAP 6 DATATYPE 2 355
LAYER MAP 6 DATATYPE >=4 <=160 355
LAYER MAP 6 DATATYPE >=166 <=255 355
LAYER ODi_RFDRAIN 351
LAYER MAP 6 DATATYPE 3 351
LAYER ODi_SRAM    352
LAYER MAP 6 DATATYPE 11 352
LAYER MAP 6 DATATYPE 12 352
LAYER MAP 6 DATATYPE 13 352
LAYER ODi_OTHERS  354 7 8
LAYER MAP 6 DATATYPE 2 354
LAYER MAP 6 DATATYPE >=4 <=160 354
LAYER MAP 6 DATATYPE >=166 <=255 354
LAYER DOD      353
LAYER MAP 6 DATATYPE 1 353
LAYER NOTUSEOD 1616
LAYER MAP 6 DATATYPE >=161 <=165 1616
LAYER POi  365
LAYER MAP 17 DATATYPE 0 365
LAYER MAP 17 DATATYPE >=2 <=50 365
LAYER MAP 17 DATATYPE >=52 <=160 365
LAYER MAP 17 DATATYPE >=166 <=255 365
LAYER POi_SRAM 363
LAYER MAP 17 DATATYPE 11 363
LAYER MAP 17 DATATYPE 12 363
LAYER MAP 17 DATATYPE 13 363
LAYER POi_OTHERS 364
LAYER MAP 17 DATATYPE >=2 <=50 364
LAYER MAP 17 DATATYPE >=52 <=160 364
LAYER MAP 17 DATATYPE >=166 <=255 364
LAYER DPO      361
LAYER MAP 17 DATATYPE 1 361
LAYER mVTLi    362
LAYER MAP 17 DATATYPE 51 362
LAYER NOTUSEPO 1716
LAYER MAP 17 DATATYPE >=161 <=165 1716
LAYER ODBLK  382
LAYER MAP 150 DATATYPE 20 382
LAYER POBLK  383
LAYER MAP 150 DATATYPE 21 383
LAYER MAP 182 DATATYPE 1 1821
LAYER RRuleRequired 1821
LAYER MAP 182 DATATYPE 2 1822
LAYER RRuleRecommended 1822
LAYER MAP 182 DATATYPE 3 1823
LAYER RRuleAnalog 1823
LAYER MAP 182 DATATYPE 4 1824
LAYER RRuleGuideline 1824
LAYER MAP 182 DATATYPE 11 1831
LAYER excludeRRuleRequired 1831
LAYER MAP 182 DATATYPE 12 1832
LAYER excludeRRuleRecommended 1832
LAYER MAP 182 DATATYPE 13 1833
LAYER excludeRRuleAnalog 1833
LAYER MAP 182 DATATYPE 14 1834
LAYER excludeRRuleGuideline 1834
ALL_OD = ODi OR DOD
ALL_POLY = POi OR DPO
M1x = M1i OR DUM1
M2x = M2i OR DUM2
M3x = M3i OR DUM3
M4x = M4i OR DUM4
M5x = M5i OR DUM5
M6x = M6i OR DUM6
LAYOUT BASE LAYER OD_18i OD_25i OD_33i DCOi NT_Ni VTH_Ni VTH_Pi VTL_Ni VTL_Pi
LAYOUT BASE LAYER DNWi NWi ODi POi PPi NPi COi
LAYOUT TOP LAYER VIA1i M2i
LAYOUT TOP LAYER VIA2i M3i
LAYOUT TOP LAYER VIA3i M4i
LAYOUT TOP LAYER VIA4_OLD VIA4_NEW M5_OLD M5_NEW
LAYOUT TOP LAYER VIA5_OLD VIA5_NEW M6_OLD M6_NEW
LAYOUT TOP LAYER VIA6_OLD VIA6_NEW M7_OLD M7_NEW
LAYOUT TOP LAYER CBi CBDi UBMi WBDMY FWALi FWCUi PMi APi PMDMY LMARK SEALRINGi CSRDMY
LAYOUT TOP LAYER NWDMY SDI
LAYOUT TOP LAYER SDI ESD1DMY ESD2DMY ESD3 SRM SRAMDMY LOGO
LAYOUT TOP LAYER DOD DPO ODBLK POBLK
LAYOUT TOP LAYER CBMi CTMi CTMDMY INDDMY VARi
LAYOUT TOP LAYER DUM1 DM1EXCL
LAYOUT TOP LAYER DUM2 DM2EXCL
LAYOUT TOP LAYER DUM3 DM3EXCL
LAYOUT TOP LAYER DUM4 DM4EXCL
LAYOUT TOP LAYER DUM5_OLD DUM5_NEW DM5EXCL
LAYOUT TOP LAYER DUM6_OLD DUM6_NEW DM6EXCL
LAYOUT TOP LAYER DUM7_OLD DUM7_NEW DM7EXCL
SRAM_EXCLUDE = COPY SRAMDMY
DNWi_EXTENT = EXTENT DNWi
NWi_EXTENT = EXTENT NWi
OD_18i_EXTENT = EXTENT OD_18i
OD_25i_EXTENT = EXTENT OD_25i
OD_33i_EXTENT = EXTENT OD_33i
OD_DECAP_EXTENT = EXTENT OD_DECAP
PPi_EXTENT = EXTENT PPi
NPi_EXTENT = EXTENT NPi
CBi_EXTENT = EXTENT CBi
CB2i_EXTENT = EXTENT CB2i
RPOi_EXTENT = EXTENT RPOi
NT_Ni_EXTENT = EXTENT NT_Ni
FWALi_EXTENT = EXTENT FWALi
FWCUi_EXTENT = EXTENT FWCUi
POFUSE_EXTENT = EXTENT POFUSE
FUSELINK_EXTENT = EXTENT FUSELINK
PMi_EXTENT = EXTENT PMi
PM1i_EXTENT = EXTENT PM1i
PM2i_EXTENT = EXTENT PM2i
VTH_Ni_EXTENT = EXTENT VTH_Ni
VTH_Pi_EXTENT = EXTENT VTH_Pi
VTL_Ni_EXTENT = EXTENT VTL_Ni
VTL_Pi_EXTENT = EXTENT VTL_Pi
UHVT_Ni_EXTENT = EXTENT UHVT_Ni
UHVT_Pi_EXTENT = EXTENT UHVT_Pi
CBDi_EXTENT = EXTENT CBDi
UBMi_EXTENT = EXTENT UBMi
RH_EXTENT = EXTENT RH
ESD3_EXTENT = EXTENT ESD3
VARi_EXTENT = EXTENT VARi
APi_EXTENT = EXTENT APi
Cu_PPIi_EXTENT = EXTENT Cu_PPIi
CBMi_EXTENT = EXTENT CBMi
CTMi_EXTENT = EXTENT CTMi
RVi_EXTENT = EXTENT RVi
DCOi_EXTENT = EXTENT DCOi
HVD_N_EXTENT = EXTENT HVD_N
HVD_P_EXTENT = EXTENT HVD_P
HVD_N_nw_EXTENT = EXTENT HVD_N_nw
BJTDMY_EXTENT = EXTENT BJTDMY
LMARK_EXTENT = EXTENT LMARK
SRM_EXTENT = EXTENT SRM
TCDDMY_EXTENT = EXTENT TCDDMY
SRAMDMY_EXTENT = EXTENT SRAMDMY
SRAMDMY_4_EXTENT = EXTENT SRAMDMY_4
SRAMDMY_5_EXTENT = EXTENT SRAMDMY_5
SRAMDMY_1_EXTENT = EXTENT SRAMDMY_1
OD1Ti_EXTENT = EXTENT OD1Ti
CLDDi_EXTENT = EXTENT CLDDi
CROWNi_EXTENT = EXTENT CROWNi
P3i_EXTENT = EXTENT P3i
SNCTi_EXTENT = EXTENT SNCTi
LUPWDMY_EXTENT = EXTENT LUPWDMY
VDDDMY_EXTENT = EXTENT VDDDMY
VSSDMY_EXTENT = EXTENT VSSDMY
M1i_EXTENT = EXTENT M1i
M1_real_EXTENT = EXTENT M1_real
DM1_O_EXTENT = EXTENT DM1_O
DUM1_EXTENT = EXTENT DUM1
M2i_EXTENT = EXTENT M2i
M2_real_EXTENT = EXTENT M2_real
DM2_O_EXTENT = EXTENT DM2_O
DUM2_EXTENT = EXTENT DUM2
M3i_EXTENT = EXTENT M3i
M3_real_EXTENT = EXTENT M3_real
DM3_O_EXTENT = EXTENT DM3_O
DUM3_EXTENT = EXTENT DUM3
M4i_EXTENT = EXTENT M4i
M4_real_EXTENT = EXTENT M4_real
DM4_O_EXTENT = EXTENT DM4_O
DUM4_EXTENT = EXTENT DUM4
M5_OLD_EXTENT = EXTENT M5_OLD
M5_NEW_EXTENT = EXTENT M5_NEW
DUM5_OLD_EXTENT = EXTENT DUM5_OLD
DUM5_NEW_EXTENT = EXTENT DUM5_NEW
M6_OLD_EXTENT = EXTENT M6_OLD
M6_NEW_EXTENT = EXTENT M6_NEW
DUM6_OLD_EXTENT = EXTENT DUM6_OLD
DUM6_NEW_EXTENT = EXTENT DUM6_NEW
M7_OLD_EXTENT = EXTENT M7_OLD
M7_NEW_EXTENT = EXTENT M7_NEW
DUM7_OLD_EXTENT = EXTENT DUM7_OLD
DUM7_NEW_EXTENT = EXTENT DUM7_NEW
ODi_EXTENT = EXTENT ODi
DOD_EXTENT = EXTENT DOD
POi_EXTENT = EXTENT POi
DPO_EXTENT = EXTENT DPO
mVTLi_EXTENT = EXTENT mVTLi
MT_LAYERS =  ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((DNWi_EXTENT OR NWi_EXTENT) OR OD_18i_EXTENT) OR OD_25i_EXTENT) OR OD_33i_EXTENT) OR OD_DECAP_EXTENT) OR PPi_EXTENT) OR NPi_EXTENT) OR CBi_EXTENT) OR CB2i_EXTENT) OR RPOi_EXTENT) OR NT_Ni_EXTENT) OR FWALi_EXTENT) OR FWCUi_EXTENT) OR POFUSE_EXTENT) OR FUSELINK_EXTENT) OR PMi_EXTENT) OR PM1i_EXTENT) OR PM2i_EXTENT) OR VTH_Ni_EXTENT) OR VTH_Pi_EXTENT) OR VTL_Ni_EXTENT) OR VTL_Pi_EXTENT) OR UHVT_Ni_EXTENT) OR UHVT_Pi_EXTENT) OR CBDi_EXTENT) OR UBMi_EXTENT) OR RH_EXTENT) OR ESD3_EXTENT) OR VARi_EXTENT) OR APi_EXTENT) OR Cu_PPIi_EXTENT) OR CBMi_EXTENT) OR CTMi_EXTENT) OR RVi_EXTENT) OR DCOi_EXTENT) OR HVD_N_EXTENT) OR HVD_P_EXTENT) OR HVD_N_nw_EXTENT) OR BJTDMY_EXTENT) OR LMARK_EXTENT) OR SRM_EXTENT) OR TCDDMY_EXTENT) OR SRAMDMY_EXTENT) OR SRAMDMY_4_EXTENT) OR SRAMDMY_5_EXTENT) OR SRAMDMY_1_EXTENT) OR OD1Ti_EXTENT) OR CLDDi_EXTENT) OR CROWNi_EXTENT) OR P3i_EXTENT) OR SNCTi_EXTENT) OR LUPWDMY_EXTENT) OR VDDDMY_EXTENT) OR VSSDMY_EXTENT) OR M1i_EXTENT) OR M1_real_EXTENT) OR DM1_O_EXTENT) OR DUM1_EXTENT) OR M2i_EXTENT) OR M2_real_EXTENT) OR DM2_O_EXTENT) OR DUM2_EXTENT) OR M3i_EXTENT) OR M3_real_EXTENT) OR DM3_O_EXTENT) OR DUM3_EXTENT) OR M4i_EXTENT) OR M4_real_EXTENT) OR DM4_O_EXTENT) OR DUM4_EXTENT) OR M5_OLD_EXTENT) OR M5_NEW_EXTENT) OR DUM5_OLD_EXTENT) OR DUM5_NEW_EXTENT) OR M6_OLD_EXTENT) OR M6_NEW_EXTENT) OR DUM6_OLD_EXTENT) OR DUM6_NEW_EXTENT) OR M7_OLD_EXTENT) OR M7_NEW_EXTENT) OR DUM7_OLD_EXTENT) OR DUM7_NEW_EXTENT) OR ODi_EXTENT) OR DOD_EXTENT) OR POi_EXTENT) OR DPO_EXTENT) OR mVTLi_EXTENT
#IFDEF ChipWindowUsed
LAYER ChipWindow 500
POLYGON xLB yLB xRT yRT ChipWindow
CHIP       = PUSH ChipWindow
#ELSE
CHIP         = EXTENT MT_LAYERS
#ENDIF
CHIPx        = MERGE CHIP
BULK         = SIZE CHIP BY 1.0
PWELi        = BULK NOT NWi
PWEL         = PWELi NOT SRAM_EXCLUDE
DNW     = DNWi    NOT INSIDE SRAM_EXCLUDE
NWEL    = NWi     NOT INSIDE SRAM_EXCLUDE
OD      = ODi     NOT SRAM_EXCLUDE
ODs     = ODi     NOT INSIDE SRAM_EXCLUDE
OD_18   = OD_18i  NOT SRAM_EXCLUDE
OD_25   = OD_25i  NOT SRAM_EXCLUDE
OD_33   = OD_33i  NOT SRAM_EXCLUDE
POLY    = POi     NOT SRAM_EXCLUDE
POLYs   = POi     NOT INSIDE SRAM_EXCLUDE
PP      = PPi     NOT INSIDE SRAM_EXCLUDE
NP      = NPi     NOT INSIDE SRAM_EXCLUDE
VTHN    = VTH_Ni  NOT SRAM_EXCLUDE
VTHNs   = VTH_Ni  NOT INSIDE SRAM_EXCLUDE
VTHP    = VTH_Pi  NOT SRAM_EXCLUDE
VTHPs   = VTH_Pi  NOT INSIDE SRAM_EXCLUDE
VTLN    = VTL_Ni  NOT SRAM_EXCLUDE
VTLNs   = VTL_Ni  NOT INSIDE SRAM_EXCLUDE
VTLP    = VTL_Pi  NOT SRAM_EXCLUDE
VTLPs   = VTL_Pi  NOT INSIDE SRAM_EXCLUDE
RPO     = RPOi    NOT SRAM_EXCLUDE
RPOs    = RPOi    NOT INSIDE SRAM_EXCLUDE
NTN     = NT_Ni   NOT SRAM_EXCLUDE
NTNs    = NT_Ni   NOT INSIDE SRAM_EXCLUDE
NCap_NTN =  NCap_NTNi NOT SRAM_EXCLUDE
CO      = COi     NOT SRAM_EXCLUDE
COs     = COi     NOT INSIDE SRAM_EXCLUDE
M1      = M1i     NOT SRAM_EXCLUDE
M1s     = M1i     NOT INSIDE SRAM_EXCLUDE
VIA1    = VIA1i   NOT SRAM_EXCLUDE
VIA1s   = VIA1i   NOT INSIDE SRAM_EXCLUDE
DCO     = DCOi    NOT SRAM_EXCLUDE
DCOs    = DCOi    NOT INSIDE SRAM_EXCLUDE
M2      = COPY M2i
VIA2    = COPY VIA2i
M3      = COPY M3i
VIA3    = COPY VIA3i
M4      = COPY M4i
VIA4    = COPY VIA4i
M5      = COPY M5i
VIA5    = COPY VIA5i
M6      = COPY M6i
VIA6    = COPY VIA6i
M7      = COPY M7i
AP      = COPY APi
CB      = COPY CBi
CB2     = COPY CB2i
CBD     = COPY CBDi
UBM     = COPY UBMi
RV      = COPY RVi
FW      = COPY FWi
FW_AP   = COPY FWALi
FW_Cu   = COPY FWCUi
PM      = COPY PMi
CBM     = COPY CBMi
CTM     = COPY CTMi
VAR	= COPY VARi
mVTL    = COPY mVTLi
#IFDEF WLCSP_SEALRING
ALL_PAD = COPY CB2i
#ELSE
ALL_PAD = (CBi OR CBDi) OR RVi
#ENDIF
UBM_MT = UBMi INTERACT CBDi
UBM_EXC = SIZE UBM_MT BY 5 INSIDE OF M6i STEP M6_S_1*0.7
CBMT = SIZE CBi BY 5 INSIDE OF M6i STEP M6_S_1*0.7
MTOP_EXC = CBMT OR UBM_EXC
CB_NON_CUP = CB NOT INTERACT WBDMY
LMARK_METAL = M6i AND LMARK
LSLOT = HOLES LMARK_METAL EMPTY
LSOLID = LMARK_METAL NOT INTERACT LSLOT
LMARK_SLOT  = LMARK INTERACT LSLOT
LMARK_SOLID = LMARK INTERACT LSOLID
IND_EXD = SIZE INDDMY BY 18
M5_MAX_WIDTH = (M5 NOT WBDMY) NOT IND_EXD
M6_MAX_WIDTH = ((M6 NOT MTOP_EXC) NOT LMARK ) NOT IND_EXD
OD2 = (OD_18 OR OD_25) OR OD_33
OD2i = (OD_18i OR OD_25i) OR OD_33i
IMP          = NPi OR PPi
NPOD         = OD AND NP
PPOD         = OD AND PP
COOD         = CO AND OD
COPO         = CO NOT OD
RNWEL = NWEL INTERACT NWDMY
NWRES = RNWEL INTERACT RPO
NONWR = NWEL NOT RNWEL
ODWR  = OD INTERACT NWRES
NPWR  = NP INTERACT NWRES
COWR  = COOD INTERACT NWRES
RHWR  = ODWR NOT RPO
NWRES_STI = RNWEL NOT INTERACT RPO
ODWR_STI = OD INTERACT NWRES_STI
NPWR_STI = NP INTERACT NWRES_STI
COWR_STI = COOD INTERACT NWRES_STI
NSTP         = NPOD AND NONWR
NACT         = NPOD NOT NWEL
PACT         = PPOD AND NWEL
NACT2        = NACT INTERACT OD2
PACT2        = PACT INTERACT OD2
PSTP         = PPOD NOT NWEL
DACT         = NACT OR PACT
DSTP         = NSTP OR PSTP
GATE         = POLY AND OD
SD           = (DACT ENCLOSE GATE) NOT GATE
FPO1         = POLY NOT OD
HV_GATE      = GATE AND OD2
LV_GATE      = GATE NOT OD2
DUMMY_GATE   = GATE INTERACT (POLY NOT INTERACT CO)
RF_DUMMY_GATE = DUMMY_GATE INSIDE RFDMY
GATE_NP      = GATE AND NP
GATE_PP      = GATE AND PP
GATE_W       = POLY COIN INSIDE EDGE GATE
GATE_L       = GATE NOT COIN INSIDE EDGE POLY
GATEN_W      = GATE_W INSIDE EDGE NP
GATEP_W      = GATE_W INSIDE EDGE PP
HV_GATE_W    = GATE_W INSIDE EDGE OD2
LV_GATE_W    = GATE_W NOT INSIDE EDGE OD2
18V_GATE_W   = HV_GATE_W INSIDE EDGE OD_18
25V_GATE_W   = HV_GATE_W INSIDE EDGE OD_25
33V_GATE_W   = HV_GATE_W INSIDE EDGE OD_33
RPDMYi        = RPDMY NOT INTERACT RPOi
RPO_RPDMY     = RPOi OR RPDMYi
ILP1          = POLY NOT RPO_RPDMY
ODPO_RES_MARK = ((RPO NOT SDI) NOT BJTDMY) OUTSIDE INDDMY
PORES	      = FPO1 AND ODPO_RES_MARK
PORESg        = PORES NOT INTERACT SDI
INOD          = OD NOT RPO_RPDMY
FOD           = (OD OUTSIDE NWDMY) NOT GATE
ODRES         = FOD AND ODPO_RES_MARK
ODRES_a       = ODRES  AND (RH OR RPDMY)
PORES_a       = PORESg AND (RH OR RPDMY)
AYRE          = ODRES OR PORES
NYRE          = NP AND AYRE
PYRE          = PP AND AYRE
NP_PP_BTE     = NPOD COIN OUTSIDE EDGE PPOD
BUTT_PSTP     = PSTP TOUCH NACT
BUTT_NSTP     = NSTP TOUCH PACT
PP_EMOD = PACT AND BJTDMY
NP_EMOD = NACT AND BJTDMY
EMOD = PP_EMOD OR NP_EMOD
RNGX     = PMDMY NOT FW
SEALRING = SEALRINGi NOT RNGX
VIA_EXD  = COPY SEALRINGi
VIA1_EXD = VIA1 NOT VIA_EXD
VIA2_EXD = VIA2 NOT VIA_EXD
VIA3_EXD = VIA3 NOT VIA_EXD
VIA4_EXD = VIA4 NOT VIA_EXD
VIA5_EXD = VIA5 NOT VIA_EXD
#IFDEF FULL_CHIP
CHIP_CORE    = SIZE CHIPx BY -20
#ELSE
CHIP_CORE    = COPY CHIP
#ENDIF
PADH = HOLES (ALL_PAD NOT CHIP_CORE)
SCORE = CHIP_CORE INSIDE PADH
CHIP_WISR = CHIPx INTERACT SCORE
SR_EDGE = CHIP_WISR NOT SCORE
CHIP_NOSR = CHIP NOT INTERACT SR_EDGE
CHIP_EDGE  = CHIP_NOSR OR SCORE
SR_EXC   = EXT SR_EDGE < 73.87 ABUT == 90 REGION INTERSECTING ONLY
SRCSR = SR_EDGE OR SR_EXC
SR_RING = CHIP_WISR NOT ( SIZE (CHIP_WISR NOT SRCSR) BY 10)
EMPTY_AREA = INT CHIP_NOSR < 74 ABUT == 90 REGION INTERSECTING ONLY
CHIP_CHAMFERED = CHIP NOT EMPTY_AREA
#IFDEF FULL_CHIP
DEN_EXC_LOW = (((FWi OR LMARK) OR LOGO) OR INDDMY) OR EMPTY_AREA
DEN_EXC = ((((FWi OR LMARK) OR LOGO) OR INDDMY) OR CSRDMY) OR EMPTY_AREA
#ELSE
DEN_EXC_LOW = ((FWi OR LMARK) OR LOGO) OR INDDMY
DEN_EXC = (((FWi OR LMARK) OR LOGO) OR INDDMY) OR CSRDMY
#ENDIF
METAL_EXC_LOW = COPY DEN_EXC_LOW
METAL_EXC = COPY DEN_EXC
M1_EXC_LOW = COPY METAL_EXC_LOW
M1_EXC = COPY METAL_EXC
M2_EXC_LOW = COPY METAL_EXC_LOW
M2_EXC = COPY METAL_EXC
M3_EXC_LOW = COPY METAL_EXC_LOW
M3_EXC = COPY METAL_EXC
M4_EXC_LOW = METAL_EXC_LOW OR (SIZE CBM BY 1.5)
M4_EXC = COPY METAL_EXC
M5_EXC_LOW = COPY METAL_EXC_LOW
M5_EXC = COPY METAL_EXC
M6_EXC_LOW = COPY METAL_EXC_LOW
M6_EXC = COPY METAL_EXC
SR_M1 = M1 INTERACT SEALRING
SR_M2 = M2 INTERACT SEALRING
SR_M3 = M3 INTERACT SEALRING
SR_M4 = M4 INTERACT SEALRING
SR_M5 = M5 INTERACT SEALRING
SR_M6 = M6 INTERACT SEALRING
CO_BAR = CO INTERACT SEALRINGi
VIA1_BAR = VIA1 INTERACT SEALRINGi
VIA2_BAR = VIA2 INTERACT SEALRINGi
VIA3_BAR = VIA3 INTERACT SEALRINGi
VIA4_BAR = VIA4 INTERACT SEALRINGi
VIA5_BAR = VIA5 INTERACT SEALRINGi
SR_CO = CO_BAR INTERACT SEALRING
SR_VIA1 = VIA1_BAR INTERACT SEALRING
SR_VIA2 = VIA2_BAR INTERACT SEALRING
SR_VIA3 = VIA3_BAR INTERACT SEALRING
SR_VIA4 = VIA4_BAR INTERACT SEALRING
SR_VIA5 = VIA5_BAR INTERACT SEALRING
Block = ((PMDMY OR LOGO) OR SRCSR) OR LMARK
VARIABLE BIG_AREA       4000000
ILP1i = POi NOT RPO_RPDMY
NONWRi = NWi NOT INTERACT NWDMY
NWRiT = (NWi INTERACT NWDMY) NOT NWDMY
RWi = PWELi INSIDE DNWi
NPODi = NPi AND ODi
PPODi = PPi AND ODi
NACTi = NPODi NOT NWi
PACTi = PPODi AND NWi
NSDi  = NACTi NOT POi
PSDi  = PACTi NOT POi
NSDc  = NSDi NOT RPO_RPDMY
PSDc  = PSDi NOT RPO_RPDMY
NSTPi = NPODi AND NONWRi
PSTPi = PPODi NOT NWi
UBMn = UBMi NOT INTERACT Cu_PPIi
UBMd = UBMi INTERACT Cu_PPIi
CONNECT NWEL DNW
CONNECT NSTPi NWi
CONNECT NSTPi PSDc
CONNECT PSTPi RWi
CONNECT PSTPi PWELi
CONNECT PSTPi NSDc
CONNECT COi PSDc
CONNECT COi NSDc
CONNECT COi ILP1i
CONNECT M1i ILP1i NSTPi PSTPi PSDc NSDc NWRiT BY COi
CONNECT M2i M1i BY VIA1i
CONNECT M3i M2i BY VIA2i
CONNECT M4i M3i BY VIA3i
CONNECT M5i CTMi CBMi M4i BY VIA4i
CONNECT M6i M5i BY VIA5i
CONNECT CBi M6i
CONNECT M6i APi  BY RVi
CONNECT M6i APi  BY CBi
CONNECT M6i APi  BY CBDi
CONNECT CB2i APi
CONNECT CB2i PM1i
CONNECT PM1i Cu_PPIi
CONNECT UBMn APi
CONNECT UBMn M6i BY CBDi
CONNECT UBMd Cu_PPIi BY PM2i
NWu   = COPY NWi
RWu   = COPY RWi
PWELu = COPY PWELi
NWRuT = COPY NWRiT
POu   = COPY POi
NSDu  = COPY NSDi
PSDu  = COPY PSDi
NSTPu = NPODi AND NWi
PSTPu = COPY PSTPi
COu   = COPY COi
M1u   = COPY M1i
VIA1u = COPY VIA1i
M2u   = COPY M2i
VIA2u = COPY VIA2i
M3u   = COPY M3i
VIA3u = COPY VIA3i
M4u   = COPY M4i
VIA4u = COPY VIA4i
M5u   = COPY M5i
VIA5u = COPY VIA5i
M6u   = COPY M6i
CBMu  = COPY CBMi
CTMu  = COPY CTMi
RVu   = COPY RVi
CBu   = COPY CBi
CBDu  = COPY CBDi
CB2u  = COPY CB2i
APu   = COPY APi
Cu_PPIu = COPY Cu_PPIi
PM1u   = COPY PM1i
PM2u   = COPY PM2i
UBMnu  = COPY UBMn
UBMdu  = COPY UBMd
CONNECT NSTPu NWu
CONNECT NSTPu PSDu
CONNECT PSTPu RWu
CONNECT PSTPu PWELu
CONNECT PSTPu NSDu
CONNECT COu PSDu
CONNECT COu NSDu
CONNECT COu POu
CONNECT M1u POu NSTPu PSTPu PSDu NSDu BY COu
CONNECT M1u NWRuT BY COu
CONNECT M2u M1u BY VIA1u
CONNECT M3u M2u BY VIA2u
CONNECT M4u M3u BY VIA3u
CONNECT M5u CTMu CBMu M4u BY VIA4u
CONNECT M6u M5u BY VIA5u
CONNECT CBu M6u
CONNECT M6u APu  BY RVu
CONNECT M6u APu  BY CBu
CONNECT M6u APu  BY CBDu
CONNECT CB2u APu
CONNECT CB2u PM1u
CONNECT PM1u Cu_PPIu
CONNECT UBMnu APu
CONNECT UBMnu M6u BY CBDu
CONNECT UBMdu Cu_PPIu BY PM2u
VDD_CBi = NET AREA RATIO CBi NSTPi > 0
VSS_CBi = NET AREA RATIO CBi PSTPi > 0
VDD_CB2i = NET AREA RATIO CB2i NSTPi > 0
VSS_CB2i = NET AREA RATIO CB2i PSTPi > 0
VDD_UBMni = NET AREA RATIO UBMn NSTPi > 0
VSS_UBMni = NET AREA RATIO UBMn PSTPi > 0
VDD_UBMdi = NET AREA RATIO UBMd NSTPi > 0
VSS_UBMdi = NET AREA RATIO UBMd PSTPi > 0
IO_CBi  = (CBi NOT VDD_CBi) NOT VSS_CBi
IO_CB2i = (CB2i NOT VDD_CB2i) NOT VSS_CB2i
IO_UBMni = (UBMn NOT VDD_UBMni) NOT VSS_UBMni
IO_UBMdi = (UBMd NOT VDD_UBMdi) NOT VSS_UBMdi
#IFDEF FULL_CHIP
#DEFINE CHECK_LOW_DENSITY
#ENDIF
#IFDEF LP
#IFDEF LPG
LPG.OPTION.ERR 
brace_data_0000000001
#ENDIF
#ENDIF
#IFDEF HALF_NODE
#IFDEF LPG
LPG.N55.WARN 
brace_data_0000000002
#ENDIF
MIM.N55.ERR
brace_data_0000000003
Inductor.N55.ERR
brace_data_0000000004
#ENDIF
M7.WARN 
brace_data_0000000005
#IFNDEF DFM_ONLY
G.1.UBMi 
brace_data_0000000006
G.1.CBDi 
brace_data_0000000007
G.1.CB2i 
brace_data_0000000008
G.1.PMi 
brace_data_0000000009
G.1.PM2i 
brace_data_0000000010
G.1.Cu_PPIi 
brace_data_0000000011
G.1.DNWi 
brace_data_0000000012
G.1.NWi 
brace_data_0000000013
G.1.OD_18i 
brace_data_0000000014
G.1.OD_25i 
brace_data_0000000015
G.1.OD25_33 
brace_data_0000000016
G.1.OD25_18 
brace_data_0000000017
G.1.OD_33i 
brace_data_0000000018
G.1.OD_DECAP 
brace_data_0000000019
G.1.PPi 
brace_data_0000000020
G.1.NPi 
brace_data_0000000021
G.1.CBi 
brace_data_0000000022
G.1.RPOi 
brace_data_0000000023
G.1.NT_Ni 
brace_data_0000000024
G.1.NCap_NTNi 
brace_data_0000000025
G.1.FWALi 
brace_data_0000000026
G.1.FWCUi 
brace_data_0000000027
G.1.POFUSE 
brace_data_0000000028
G.1.FUSELINK 
brace_data_0000000029
G.1.PM1i 
brace_data_0000000030
G.1.SEALRINGi 
brace_data_0000000031
G.1.VTH_Ni 
brace_data_0000000032
G.1.VTH_Pi 
brace_data_0000000033
G.1.VTL_Ni 
brace_data_0000000034
G.1.VTL_Pi 
brace_data_0000000035
G.1.UHVT_Ni 
brace_data_0000000036
G.1.UHVT_Pi 
brace_data_0000000037
G.1.RH 
brace_data_0000000038
G.1.ESD3 
brace_data_0000000039
G.1.VARi 
brace_data_0000000040
G.1.APi 
brace_data_0000000041
G.1.CBMi 
brace_data_0000000042
G.1.CTMi 
brace_data_0000000043
G.1.RVi 
brace_data_0000000044
G.1.DCOi 
brace_data_0000000045
G.1.HVD_N 
brace_data_0000000046
G.1.HVD_P 
brace_data_0000000047
G.1.HVD_N_nw 
brace_data_0000000048
G.1.BJTDMY 
brace_data_0000000049
G.1.NWDMY 
brace_data_0000000050
G.1.RPDMY 
brace_data_0000000051
G.1.PMDMY 
brace_data_0000000052
G.1.SDI 
brace_data_0000000053
G.1.ESD1DMY 
brace_data_0000000054
G.1.ESD2DMY 
brace_data_0000000055
G.1.SRM 
brace_data_0000000056
G.1.CDUDMY 
brace_data_0000000057
G.1.TCDDMY 
brace_data_0000000058
G.1.LOGO 
brace_data_0000000059
G.1.INDDMY 
brace_data_0000000060
G.1.CTMDMY 
brace_data_0000000061
G.1.CTMDMY_10 
brace_data_0000000062
G.1.CTMDMY_15 
brace_data_0000000063
G.1.CTMDMY_20 
brace_data_0000000064
G.1.MOMDMY_1 
brace_data_0000000065
G.1.MOMDMY_2 
brace_data_0000000066
G.1.MOMDMY_3 
brace_data_0000000067
G.1.MOMDMY_4 
brace_data_0000000068
G.1.MOMDMY_5 
brace_data_0000000069
G.1.MOMDMY_6 
brace_data_0000000070
G.1.MOMDMY_AP 
brace_data_0000000071
G.1.RTMOMDMY 
brace_data_0000000072
G.1.RFDMY 
brace_data_0000000073
G.1.WBDMY 
brace_data_0000000074
G.1.DIODMY 
brace_data_0000000075
G.1.SRAMDMY 
brace_data_0000000076
G.1.SRAMDMY_4 
brace_data_0000000077
G.1.SRAMDMY_5 
brace_data_0000000078
G.1.SRAMDMY_1 
brace_data_0000000079
G.1.OD1Ti 
brace_data_0000000080
G.1.CLDDi 
brace_data_0000000081
G.1.CROWNi 
brace_data_0000000082
G.1.P3i 
brace_data_0000000083
G.1.SNCTi 
brace_data_0000000084
G.1.LUPWDMY 
brace_data_0000000085
G.1.VDDDMY 
brace_data_0000000086
G.1.VSSDMY 
brace_data_0000000087
G.1.M1i 
brace_data_0000000088
G.1.M1_real 
brace_data_0000000089
G.1.DM1_O 
brace_data_0000000090
G.1.DUM1 
brace_data_0000000091
G.1.M2i 
brace_data_0000000092
G.1.M2_real 
brace_data_0000000093
G.1.DM2_O 
brace_data_0000000094
G.1.DUM2 
brace_data_0000000095
G.1.M3i 
brace_data_0000000096
G.1.M3_real 
brace_data_0000000097
G.1.DM3_O 
brace_data_0000000098
G.1.DUM3 
brace_data_0000000099
G.1.M4i 
brace_data_0000000100
G.1.M4_real 
brace_data_0000000101
G.1.DM4_O 
brace_data_0000000102
G.1.DUM4 
brace_data_0000000103
G.1.M5_OLD 
brace_data_0000000104
G.1.M5_NEW 
brace_data_0000000105
G.1.DUM5_OLD 
brace_data_0000000106
G.1.DUM5_NEW 
brace_data_0000000107
G.1.M6_OLD 
brace_data_0000000108
G.1.M6_NEW 
brace_data_0000000109
G.1.DUM6_OLD 
brace_data_0000000110
G.1.DUM6_NEW 
brace_data_0000000111
G.1.M7_OLD 
brace_data_0000000112
G.1.M7_NEW 
brace_data_0000000113
G.1.DUM7_OLD 
brace_data_0000000114
G.1.DUM7_NEW 
brace_data_0000000115
G.1.VIA1i 
brace_data_0000000116
G.1.VIA2i 
brace_data_0000000117
G.1.VIA3i 
brace_data_0000000118
G.1.VIA4_OLD 
brace_data_0000000119
G.1.VIA4_NEW 
brace_data_0000000120
G.1.VIA5_OLD 
brace_data_0000000121
G.1.VIA5_NEW 
brace_data_0000000122
G.1.VIA6_OLD 
brace_data_0000000123
G.1.VIA6_NEW 
brace_data_0000000124
G.1.ODi 
brace_data_0000000125
G.1.DOD 
brace_data_0000000126
G.1.DPO 
brace_data_0000000127
G.1.mVTLi 
brace_data_0000000128
G.1.CO 
brace_data_0000000129
G.1.PO 
brace_data_0000000130
G.2.DNWi 
brace_data_0000000131
G.2.NWi 
brace_data_0000000132
G.2.OD_18i 
brace_data_0000000133
G.2.OD_25i 
brace_data_0000000134
G.2.OD25_33 
brace_data_0000000135
G.2.OD25_18 
brace_data_0000000136
G.2.OD_33i 
brace_data_0000000137
G.2.OD_DECAP 
brace_data_0000000138
G.2.PPi 
brace_data_0000000139
G.2.NPi 
brace_data_0000000140
G.2.COi 
brace_data_0000000141
G.2.CO_PUSH 
brace_data_0000000142
G.2.CBi 
brace_data_0000000143
G.2.CB2i 
brace_data_0000000144
G.2.RPOi 
brace_data_0000000145
G.2.NT_Ni 
brace_data_0000000146
G.2.NCap_NTNi 
brace_data_0000000147
G.2.FWALi 
brace_data_0000000148
G.2.FWCUi 
brace_data_0000000149
G.2.POFUSE 
brace_data_0000000150
G.2.FUSELINK 
brace_data_0000000151
G.2.PMi 
brace_data_0000000152
G.2.PM1i 
brace_data_0000000153
G.2.PM2i 
brace_data_0000000154
G.2.SEALRINGi 
brace_data_0000000155
G.2.VTH_Ni 
brace_data_0000000156
G.2.VTH_Pi 
brace_data_0000000157
G.2.VTL_Ni 
brace_data_0000000158
G.2.VTL_Pi 
brace_data_0000000159
G.2.UHVT_Ni 
brace_data_0000000160
G.2.UHVT_Pi 
brace_data_0000000161
G.2.CBDi 
brace_data_0000000162
G.2.UBMi 
brace_data_0000000163
G.2.RH 
brace_data_0000000164
G.2.ESD3 
brace_data_0000000165
G.2.VARi 
brace_data_0000000166
G.2.APi 
brace_data_0000000167
G.2.Cu_PPIi 
brace_data_0000000168
G.2.CBMi 
brace_data_0000000169
G.2.CTMi 
brace_data_0000000170
G.2.RVi 
brace_data_0000000171
G.2.DCOi 
brace_data_0000000172
G.2.HVD_N 
brace_data_0000000173
G.2.HVD_P 
brace_data_0000000174
G.2.HVD_N_nw 
brace_data_0000000175
G.2.BJTDMY 
brace_data_0000000176
G.2.NWDMY 
brace_data_0000000177
G.2.RPDMY 
brace_data_0000000178
G.2.PMDMY 
brace_data_0000000179
G.2.SDI 
brace_data_0000000180
G.2.ESD1DMY 
brace_data_0000000181
G.2.ESD2DMY 
brace_data_0000000182
G.2.SRM 
brace_data_0000000183
G.2.CDUDMY 
brace_data_0000000184
G.2.TCDDMY 
brace_data_0000000185
G.2.LOGO 
brace_data_0000000186
G.2.INDDMY 
brace_data_0000000187
G.2.CTMDMY 
brace_data_0000000188
G.2.CTMDMY_10 
brace_data_0000000189
G.2.CTMDMY_15 
brace_data_0000000190
G.2.CTMDMY_20 
brace_data_0000000191
G.2.MOMDMY_1 
brace_data_0000000192
G.2.MOMDMY_2 
brace_data_0000000193
G.2.MOMDMY_3 
brace_data_0000000194
G.2.MOMDMY_4 
brace_data_0000000195
G.2.MOMDMY_5 
brace_data_0000000196
G.2.MOMDMY_6 
brace_data_0000000197
G.2.MOMDMY_AP 
brace_data_0000000198
G.2.RTMOMDMY 
brace_data_0000000199
G.2.RFDMY 
brace_data_0000000200
G.2.WBDMY 
brace_data_0000000201
G.2.DIODMY 
brace_data_0000000202
G.2.SRAMDMY 
brace_data_0000000203
G.2.SRAMDMY_4 
brace_data_0000000204
G.2.SRAMDMY_5 
brace_data_0000000205
G.2.SRAMDMY_1 
brace_data_0000000206
G.2.RAM1TDMY 
brace_data_0000000207
G.2.OD1Ti 
brace_data_0000000208
G.2.CLDDi 
brace_data_0000000209
G.2.CROWNi 
brace_data_0000000210
G.2.P3i 
brace_data_0000000211
G.2.SNCTi 
brace_data_0000000212
G.2.LUPWDMY 
brace_data_0000000213
G.2.VDDDMY 
brace_data_0000000214
G.2.VSSDMY 
brace_data_0000000215
G.2.M1i 
brace_data_0000000216
G.2.M1_real 
brace_data_0000000217
G.2.DM1_O 
brace_data_0000000218
G.2.DUM1 
brace_data_0000000219
G.2.M2i 
brace_data_0000000220
G.2.M2_real 
brace_data_0000000221
G.2.DM2_O 
brace_data_0000000222
G.2.DUM2 
brace_data_0000000223
G.2.M3i 
brace_data_0000000224
G.2.M3_real 
brace_data_0000000225
G.2.DM3_O 
brace_data_0000000226
G.2.DUM3 
brace_data_0000000227
G.2.M4i 
brace_data_0000000228
G.2.M4_real 
brace_data_0000000229
G.2.DM4_O 
brace_data_0000000230
G.2.DUM4 
brace_data_0000000231
G.2.M5_OLD 
brace_data_0000000232
G.2.M5_NEW 
brace_data_0000000233
G.2.DUM5_OLD 
brace_data_0000000234
G.2.DUM5_NEW 
brace_data_0000000235
G.2.M6_OLD 
brace_data_0000000236
G.2.M6_NEW 
brace_data_0000000237
G.2.DUM6_OLD 
brace_data_0000000238
G.2.DUM6_NEW 
brace_data_0000000239
G.2.M7_OLD 
brace_data_0000000240
G.2.M7_NEW 
brace_data_0000000241
G.2.DUM7_OLD 
brace_data_0000000242
G.2.DUM7_NEW 
brace_data_0000000243
G.2.VIA1i 
brace_data_0000000244
G.2.VIA2i 
brace_data_0000000245
G.2.VIA3i 
brace_data_0000000246
G.2.VIA4_OLD 
brace_data_0000000247
G.2.VIA4_NEW 
brace_data_0000000248
G.2.VIA5_OLD 
brace_data_0000000249
G.2.VIA5_NEW 
brace_data_0000000250
G.2.VIA6_OLD 
brace_data_0000000251
G.2.VIA6_NEW 
brace_data_0000000252
G.2.ODi 
brace_data_0000000253
G.2.DOD 
brace_data_0000000254
G.2.POi 
brace_data_0000000255
G.2.DPO 
brace_data_0000000256
G.2.mVTLi 
brace_data_0000000257
G.3.DNWi 
brace_data_0000000258
G.3.NWi 
brace_data_0000000259
G.3.OD_18i 
brace_data_0000000260
G.3.OD_25i 
brace_data_0000000261
G.3.OD25_33 
brace_data_0000000262
G.3.OD25_18 
brace_data_0000000263
G.3.OD_33i 
brace_data_0000000264
G.3.OD_DECAP 
brace_data_0000000265
G.3.PPi 
brace_data_0000000266
G.3.NPi 
brace_data_0000000267
G.3.COi 
brace_data_0000000268
G.3.CO_PUSH 
brace_data_0000000269
G.3.CBi 
brace_data_0000000270
G.3.RPOi 
brace_data_0000000271
G.3.NT_Ni 
brace_data_0000000272
G.3.NCap_NTNi 
brace_data_0000000273
G.3.FWALi 
brace_data_0000000274
G.3.FWCUi 
brace_data_0000000275
G.3.POFUSE 
brace_data_0000000276
G.3.FUSELINK 
brace_data_0000000277
G.3.SEALRINGi 
brace_data_0000000278
G.3.VTH_Ni 
brace_data_0000000279
G.3.VTH_Pi 
brace_data_0000000280
G.3.VTL_Ni 
brace_data_0000000281
G.3.VTL_Pi 
brace_data_0000000282
G.3.UHVT_Ni 
brace_data_0000000283
G.3.UHVT_Pi 
brace_data_0000000284
G.3.RH 
brace_data_0000000285
G.3.ESD3 
brace_data_0000000286
G.3.VARi 
brace_data_0000000287
G.3.APi 
brace_data_0000000288
G.3.CBMi 
brace_data_0000000289
G.3.CTMi 
brace_data_0000000290
G.3.RVi 
brace_data_0000000291
G.3.DCOi 
brace_data_0000000292
G.3.HVD_N 
brace_data_0000000293
G.3.HVD_P 
brace_data_0000000294
G.3.HVD_N_nw 
brace_data_0000000295
G.3.BJTDMY 
brace_data_0000000296
G.3.NWDMY 
brace_data_0000000297
G.3.RPDMY 
brace_data_0000000298
G.3.SDI 
brace_data_0000000299
G.3.ESD1DMY 
brace_data_0000000300
G.3.ESD2DMY 
brace_data_0000000301
G.3.SRM 
brace_data_0000000302
G.3.CDUDMY 
brace_data_0000000303
G.3.TCDDMY 
brace_data_0000000304
G.3.LOGO 
brace_data_0000000305
G.3.INDDMY 
brace_data_0000000306
G.3.CTMDMY 
brace_data_0000000307
G.3.CTMDMY_10 
brace_data_0000000308
G.3.CTMDMY_15 
brace_data_0000000309
G.3.CTMDMY_20 
brace_data_0000000310
G.3.MOMDMY_1 
brace_data_0000000311
G.3.MOMDMY_2 
brace_data_0000000312
G.3.MOMDMY_3 
brace_data_0000000313
G.3.MOMDMY_4 
brace_data_0000000314
G.3.MOMDMY_5 
brace_data_0000000315
G.3.MOMDMY_6 
brace_data_0000000316
G.3.MOMDMY_AP 
brace_data_0000000317
G.3.RTMOMDMY 
brace_data_0000000318
G.3.RFDMY 
brace_data_0000000319
G.3.WBDMY 
brace_data_0000000320
G.3.DIODMY 
brace_data_0000000321
G.3.SRAMDMY 
brace_data_0000000322
G.3.SRAMDMY_4 
brace_data_0000000323
G.3.SRAMDMY_5 
brace_data_0000000324
G.3.SRAMDMY_1 
brace_data_0000000325
G.3.RAM1TDMY 
brace_data_0000000326
G.3.OD1Ti 
brace_data_0000000327
G.3.CLDDi 
brace_data_0000000328
G.3.CROWNi 
brace_data_0000000329
G.3.P3i 
brace_data_0000000330
G.3.SNCTi 
brace_data_0000000331
G.3.LUPWDMY 
brace_data_0000000332
G.3.VDDDMY 
brace_data_0000000333
G.3.VSSDMY 
brace_data_0000000334
G.3.M1i 
brace_data_0000000335
G.3.M1_real 
brace_data_0000000336
G.3.DM1_O 
brace_data_0000000337
G.3.DUM1 
brace_data_0000000338
G.3.M2i 
brace_data_0000000339
G.3.M2_real 
brace_data_0000000340
G.3.DM2_O 
brace_data_0000000341
G.3.DUM2 
brace_data_0000000342
G.3.M3i 
brace_data_0000000343
G.3.M3_real 
brace_data_0000000344
G.3.DM3_O 
brace_data_0000000345
G.3.DUM3 
brace_data_0000000346
G.3.M4i 
brace_data_0000000347
G.3.M4_real 
brace_data_0000000348
G.3.DM4_O 
brace_data_0000000349
G.3.DUM4 
brace_data_0000000350
G.3.M5_OLD 
brace_data_0000000351
G.3.M5_NEW 
brace_data_0000000352
G.3.DUM5_OLD 
brace_data_0000000353
G.3.DUM5_NEW 
brace_data_0000000354
G.3.M6_OLD 
brace_data_0000000355
G.3.M6_NEW 
brace_data_0000000356
G.3.DUM6_OLD 
brace_data_0000000357
G.3.DUM6_NEW 
brace_data_0000000358
G.3.M7_OLD 
brace_data_0000000359
G.3.M7_NEW 
brace_data_0000000360
G.3.DUM7_OLD 
brace_data_0000000361
G.3.DUM7_NEW 
brace_data_0000000362
G.3.VIA1i 
brace_data_0000000363
G.3.VIA2i 
brace_data_0000000364
G.3.VIA3i 
brace_data_0000000365
G.3.VIA4_OLD 
brace_data_0000000366
G.3.VIA4_NEW 
brace_data_0000000367
G.3.VIA5_OLD 
brace_data_0000000368
G.3.VIA5_NEW 
brace_data_0000000369
G.3.VIA6_OLD 
brace_data_0000000370
G.3.VIA6_NEW 
brace_data_0000000371
G.3.ODi 
brace_data_0000000372
G.3.DOD 
brace_data_0000000373
G.3.POi 
brace_data_0000000374
G.3.DPO 
brace_data_0000000375
G.3.mVTLi 
brace_data_0000000376
G.4.ODi 
brace_data_0000000377
G.4.POi 
brace_data_0000000378
G.4.VTH_Ni 
brace_data_0000000379
G.4.VTH_Pi 
brace_data_0000000380
G.4.VTL_Ni 
brace_data_0000000381
G.4.VTL_Pi 
brace_data_0000000382
G.4.PPi 
brace_data_0000000383
G.4.NPi 
brace_data_0000000384
G.4.M1i 
brace_data_0000000385
G.4.M2i 
brace_data_0000000386
G.4.M3i 
brace_data_0000000387
G.4.M4i 
brace_data_0000000388
G.5.NOTUSEM1 
brace_data_0000000389
G.5.NOTUSEM2 
brace_data_0000000390
G.5.NOTUSEM3 
brace_data_0000000391
G.5.NOTUSEM4 
brace_data_0000000392
G.5.NOTUSEM5 
brace_data_0000000393
G.5.NOTUSEM6 
brace_data_0000000394
G.5.NOTUSEM7 
brace_data_0000000395
G.5.NOTUSEOD 
brace_data_0000000396
G.5.NOTUSEPO 
brace_data_0000000397
USER_GUIDE.M1 
brace_data_0000000398
USER_GUIDE.M2 
brace_data_0000000399
USER_GUIDE.M3 
brace_data_0000000400
USER_GUIDE.M4 
brace_data_0000000401
USER_GUIDE.M5 
brace_data_0000000402
USER_GUIDE.M6 
brace_data_0000000403
USER_GUIDE.M7 
brace_data_0000000404
USER_GUIDE.VIA1 
brace_data_0000000405
USER_GUIDE.VIA2 
brace_data_0000000406
USER_GUIDE.VIA3 
brace_data_0000000407
USER_GUIDE.VIA4 
brace_data_0000000408
USER_GUIDE.VIA5 
brace_data_0000000409
USER_GUIDE.VIA6 
brace_data_0000000410
USER_GUIDE.2 
brace_data_0000000411
#IFDEF DATATYPE_WARNING
NW_DATATYPE.WARNING1 
brace_data_0000000412
OD_DATATYPE.WARNING1 
brace_data_0000000413
OD_DATATYPE.WARNING2 
brace_data_0000000414
OD_DATATYPE.WARNING3 
brace_data_0000000415
PO_DATATYPE.WARNING1 
brace_data_0000000416
PO_DATATYPE.WARNING2 
brace_data_0000000417
CO_DATATYPE.WARNING1 
brace_data_0000000418
CO_DATATYPE.WARNING2 
brace_data_0000000419
#ENDIF
#IFDEF FRONT_END
NW2V = NWEL AND OD2
NW1V = NWEL NOT OD2
NW.W.1 
brace_data_0000000420
NW.S.1 
brace_data_0000000421
NW.S.2 
brace_data_0000000422
NW.S.3 
brace_data_0000000423
NW.S.4 
brace_data_0000000424
#IFDEF NW_SUGGESTED
SUGGESTED.NW.S.3_NW.S.4 
brace_data_0000000425
#ENDIF
NW.S.5 
brace_data_0000000426
NW.S.6 
brace_data_0000000427
NW.S.7 
brace_data_0000000428
NW.EN.1 
brace_data_0000000429
NW.EN.2 
brace_data_0000000430
NW.EN.3 
brace_data_0000000431
NW.A.1 
brace_data_0000000432
VARIABLE NW_A_2pre ((NW_A_2 + (NW_S_1 * NW_S_1 * 3.142))/(2 * NW_S_1))*((NW_A_2 + (NW_S_1 * NW_S_1 * 3.142))/(2 * NW_S_1))/3.141
NW.A.2 
brace_data_0000000433
NW.A.3 
brace_data_0000000434
VARIABLE NW_A_4pre ((NW_A_4 + (NW_S_1 * NW_S_1 * 3.142))/(2 * NW_S_1))*((NW_A_4 + (NW_S_1 * NW_S_1 * 3.142))/(2 * NW_S_1))/3.141
NW.A.4 
brace_data_0000000435
NWROD.W.1 
brace_data_0000000436
NWROD.S.1 
brace_data_0000000437
NWROD.S.2 
brace_data_0000000438
NWROD.EN.1 
brace_data_0000000439
NWROD.EN.2 
brace_data_0000000440
NWROD.O.1 
brace_data_0000000441
NWROD.O.2 
brace_data_0000000442
NWROD.R.4 
brace_data_0000000443
NWROD.R.5 
brace_data_0000000444
NWROD.R.6 
brace_data_0000000445
NWROD.R.7 
brace_data_0000000446
NWRSTI.EN.1 
brace_data_0000000447
NWRSTI.EN.2 
brace_data_0000000448
NWRSTI.EX.1 
brace_data_0000000449
NWRSTI.O.1 
brace_data_0000000450
NTN_OD      = NTN AND OD
NTN_PO      = NTN AND POLY
NTN_GATE_W  = NTN_PO INSIDE EDGE NTN_OD
NTN_2_3V_GATE_W = NTN_GATE_W INSIDE EDGE (OD_25 OR OD_33)
NTN_18V_GATE_W   = NTN_GATE_W INSIDE EDGE OD_18
NT_N.W.1 
brace_data_0000000451
#IFDEF LP
NTN_GATE_W_less_E  = LENGTH NTN_GATE_W <= NT_N_W_2_2_E
NTN_GATE_W_less_EM = ENC [NTN_GATE_W_less_E] NTN_OD <= NT_N_W_2_2_M OPPOSITE
NT_N.W.2.1 
brace_data_0000000452
NT_N.W.2.2 
brace_data_0000000453
#IFDEF HALF_NODE
NT_N.W.2.3 
brace_data_0000000454
#ENDIF
#ELSE
#IFDEF LPG
NTN_G_GATE_W  = NTN_GATE_W INSIDE EDGE DCO
NTN_LP_GATE_W = NTN_GATE_W NOT INSIDE EDGE DCO
NT_N.W.2 
brace_data_0000000455
NTN_GATE_W_less_E  = LENGTH NTN_LP_GATE_W <= NT_N_W_2_2_E
NTN_GATE_W_less_EM = ENC [NTN_GATE_W_less_E] NTN_OD <= NT_N_W_2_2_M OPPOSITE
NT_N.W.2.1 
brace_data_0000000456
NT_N.W.2.2 
brace_data_0000000457
#ELSE
NT_N.W.2 
brace_data_0000000458
#ENDIF
#ENDIF
NT_N.W.3 
brace_data_0000000459
NT_N.W.4 
brace_data_0000000460
NT_N.W.5 
brace_data_0000000461
NT_N.S.1 
brace_data_0000000462
NTN_exc_ind = NTN NOT INDDMY
NT_N.S.2 
brace_data_0000000463
NT_N.S.3 
brace_data_0000000464
NT_N.EN.1 
brace_data_0000000465
NT_N.EX.1 
brace_data_0000000466
NT_N.A.1 
brace_data_0000000467
VARIABLE NT_N_A_2pre ((NT_N_A_2 + (NT_N_S_1 * NT_N_S_1 * 3.142))/(2 * NT_N_S_1))*((NT_N_A_2 + (NT_N_S_1 * NT_N_S_1 * 3.142))/(2 * NT_N_S_1))/3.141
NT_N.A.2 
brace_data_0000000468
NT_N.A.3 
brace_data_0000000469
VARIABLE NT_N_A_4pre ((NT_N_A_4 + (NT_N_S_1 * NT_N_S_1 * 3.142))/(2 * NT_N_S_1))*((NT_N_A_4 + (NT_N_S_1 * NT_N_S_1 * 3.142))/(2 * NT_N_S_1))/3.141
NT_N.A.4 
brace_data_0000000470
NT_N.R.1 
brace_data_0000000471
NT_N.R.2 
brace_data_0000000472
NT_N.R.3 
brace_data_0000000473
DNW.W.1 
brace_data_0000000474
DNW.S.1 
brace_data_0000000475
DNW.S.2 
brace_data_0000000476
DNW.S.3 
brace_data_0000000477
RW   = PWEL INSIDE DNW
PWELx = PWEL NOT INSIDE DNW
RW1V = RW OUTSIDE OD2
RW2V = RW NOT OUTSIDE OD2
RW1V_NODAL = STAMP RW1V BY RWi
RW2V_NODAL = STAMP RW2V BY RWi
PWEL_NODAL = STAMP PWELx BY PWELi
DNW.S.4 
brace_data_0000000478
DNW.S.5 
brace_data_0000000479
DNW.EN.3 
brace_data_0000000480
DNW.O.1 
brace_data_0000000481
DNW.R.5 
brace_data_0000000482
OD.W.1 
brace_data_0000000483
OD.W.2 
brace_data_0000000484
OD.W.3 
brace_data_0000000485
OD_EDGE_45 = OD ANGLE == 45
OD.W.4 
brace_data_0000000486
OD.S.1 
brace_data_0000000487
HV_OD_E = OD INSIDE EDGE OD2
OD.S.2 
brace_data_0000000488
Wide_OD_0.15 = ( SIZE OD BY OD_S_3_W/2 UNDEROVER ) AND OD
OD.S.3 
brace_data_0000000489
OD.S.3.1 
brace_data_0000000490
OD.S.4 
brace_data_0000000491
OD.S.5 
brace_data_0000000492
OD.A.1 
brace_data_0000000493
VARIABLE OD_A_2pre ((OD_A_2 + (OD_S_1 * OD_S_1 * 3.142))/(2 * OD_S_1))*((OD_A_2 + (OD_S_1 * OD_S_1 * 3.142))/(2 * OD_S_1))/3.141
OD.A.2 
brace_data_0000000494
OD.L.1 
brace_data_0000000495
OD.L.2 
brace_data_0000000496
OD.R.1 
brace_data_0000000497
DOD.W.1 
brace_data_0000000498
DOD.S.1 
brace_data_0000000499
DOD.S.2 
brace_data_0000000500
DOD.S.3 
brace_data_0000000501
DOD.S.5 
brace_data_0000000502
DOD.S.6 
brace_data_0000000503
DOD.S.7 
brace_data_0000000504
DOD.S.7.1 
brace_data_0000000505
DOD.S.8 
brace_data_0000000506
DOD.S.9 
brace_data_0000000507
DOD.S.10 
brace_data_0000000508
DOD.EN.1 
brace_data_0000000509
#IFDEF FULL_CHIP
DOD.EN.2 
brace_data_0000000510
OD.DN.1L 
brace_data_0000000511
OD.DN.1H 
brace_data_0000000512
#ENDIF
OD_EXC = NWDMY OR DEN_EXC
ODx = ALL_OD NOT OD_EXC
CHIP_NOT_ODEXC = CHIP NOT OD_EXC
#IFDEF CHECK_LOW_DENSITY
OD.DN.2L 
brace_data_0000000513
#ENDIF
OD.DN.2H_IO 
brace_data_0000000514
ODx_MAX_CORE = ODx NOT OD2
CHIP_MAX_CORE = CHIP_NOT_ODEXC NOT OD2
OD.DN.2H_CORE 
brace_data_0000000515
OD.DN.3L 
brace_data_0000000516
OD.DN.3H_IO 
brace_data_0000000517
OD.DN.3H_CORE 
brace_data_0000000518
#IFDEF FULL_CHIP
DOD.R.1 
brace_data_0000000519
#ENDIF
DOD.R.3 
brace_data_0000000520
OD2.W.1 
brace_data_0000000521
OD2.S.1 
brace_data_0000000522
OD2.S.2 
brace_data_0000000523
OD2.S.3 
brace_data_0000000524
OD2.S.4 
brace_data_0000000525
OD2.EN.1 
brace_data_0000000526
OD2.EX.1 
brace_data_0000000527
OD2.EX.2 
brace_data_0000000528
OD2.EX.3 
brace_data_0000000529
OD2.O.1 
brace_data_0000000530
OD2.R.1 
brace_data_0000000531
OD2.W.2 
brace_data_0000000532
OD2.S.5 
brace_data_0000000533
OD2.S.6 
brace_data_0000000534
OD2.S.7 
brace_data_0000000535
25_33V_GATE_W = 25V_GATE_W INSIDE EDGE OD25_33
25_18V_GATE_W = 25V_GATE_W INSIDE EDGE OD25_18
OD25_33.W.1 
brace_data_0000000536
OD25_33.W.2 
brace_data_0000000537
OD25_33.R.1 
brace_data_0000000538
OD25_18.W.1 
brace_data_0000000539
OD25_18.R.1 
brace_data_0000000540
POLY_EDGE_45 = POLY ANGLE == 45
PO.W.1 
brace_data_0000000541
PO.S.1 
brace_data_0000000542
PO.S.2 
brace_data_0000000543
PO.W.2 
brace_data_0000000544
PO.W.3 
brace_data_0000000545
PO.W.4 
brace_data_0000000546
PO.W.5 
brace_data_0000000547
PO.S.16 
brace_data_0000000548
PO.S.2.1 
brace_data_0000000549
PO.S.3 
brace_data_0000000550
PO.S.4 
brace_data_0000000551
PO.S.4.1 
brace_data_0000000552
S_GATE_W1 = LENGTH GATE_W < PO_S_5_W
EX_GATEW_EDGE = EXPAND EDGE S_GATE_W1 INSIDE BY GRID EXTEND BY OD_S_1
EX_GATEW_EDGE_T = EX_GATEW_EDGE COIN INSIDE EDGE POLY
PO.S.5 
brace_data_0000000553
SU_GATE = GATE WITH EDGE S_GATE_W1
OD_GATE_EDGE = OD COIN INSIDE EDGE SU_GATE
EX_ODGATE_EDGE = EXPAND EDGE OD_GATE_EDGE INSIDE BY GRID EXTEND BY PO_S_1
EX_ODGATE_EDGE_T = (OD COIN INSIDE EDGE EX_ODGATE_EDGE) TOUCH INSIDE EDGE OD_GATE_EDGE
PO.S.6 
brace_data_0000000554
PO.S.7 
brace_data_0000000555
PO.S.9 
brace_data_0000000556
PO.S.10 
brace_data_0000000557
PO.EX.1 
brace_data_0000000558
PO.EX.2 
brace_data_0000000559
PO.EX.3 
brace_data_0000000560
PO.L.1 
brace_data_0000000561
PO.A.1 
brace_data_0000000562
PO.A.1.1 
brace_data_0000000563
VARIABLE PO_A_2pre ((PO_A_2 + (PO_S_1 * PO_S_1 * 3.142))/(2 * PO_S_1))*((PO_A_2 + (PO_S_1 * PO_S_1 * 3.142))/(2 * PO_S_1))/3.141
PO.A.2 
brace_data_0000000564
#IFDEF FULL_CHIP
PO.DN.1L 
brace_data_0000000565
PO.DN.1H 
brace_data_0000000566
#ENDIF
ALL_POD = ALL_OD OR ALL_POLY
PODEXC  = ((ODBLK OR POBLK) OR NWDMY) OR DEN_EXC
PODx    = ALL_POD NOT PODEXC
CHIP_NOT_PODEXC = CHIP NOT PODEXC
#IFDEF CHECK_LOW_DENSITY
PO.DN.2 
brace_data_0000000567
#ENDIF
POx    = ALL_POLY NOT DEN_EXC
PO_EXC    = POi NOT DEN_EXC
CHIP_NOT_POEXC = CHIP NOT DEN_EXC
CHECK_POBLK = POBLK NOT TCDDMY
CHIP_POBLK = CHIP_NOT_POEXC AND CHECK_POBLK
PO_POBLK = POx AND CHECK_POBLK
PO.DN.3 
brace_data_0000000568
PO.R.1 
brace_data_0000000569
PO.R.4 
brace_data_0000000570
PO.S.15 
brace_data_0000000571
PO.R.6 
brace_data_0000000572
#IFDEF FULL_CHIP
GATEi  = POi AND ODi
GATEu  = STAMP GATEi BY POu
NSDu_g  = NSDu INTERACT POu
PSDu_g  = PSDu INTERACT POu
Float_GATE = NET AREA RATIO GATEu PSTPu NSTPu PSDu_g NSDu_g CBu CB2u UBMnu UBMdu COu > 0
[!AREA(PSTPu)*!AREA(NSTPu)*!AREA(PSDu_g)*!AREA(NSDu_g)*!AREA(CBu)*!AREA(CB2u)*!AREA(UBMnu)*!AREA(UBMdu)+!AREA(COu)]
Float_NSD = NET AREA RATIO NSDu_g PSDu_g GATEu PSTPu NSTPu CBu CB2u UBMnu UBMdu > 0
[~(COUNT(NSDu_g)-1)*!AREA(PSDu_g)*!AREA(GATEu)*!AREA(PSTPu)*!AREA(NSTPu)*!AREA(CBu)*!AREA(CB2u)*!AREA(UBMnu)*!AREA(UBMdu)]
Float_PSD = NET AREA RATIO PSDu_g NSDu_g GATEu PSTPu NSTPu CBu CB2u UBMnu UBMdu > 0
[~(COUNT(PSDu_g)-1)*!AREA(NSDu_g)*!AREA(GATEu)*!AREA(PSTPu)*!AREA(NSTPu)*!AREA(CBu)*!AREA(CB2u)*!AREA(UBMnu)*!AREA(UBMdu)]
effective_NSD = NSDu_g NOT Float_NSD
effective_PSD = PSDu_g NOT Float_PSD
Float_NSD_a = Float_NSD NOT ((Float_NSD OR GATE) TOUCH effective_NSD == 2)
Float_PSD_a = Float_PSD NOT ((Float_PSD OR GATE) TOUCH effective_PSD == 2)
Float_GATE_check = Float_GATE NOT INTERACT (Float_NSD_a OR Float_PSD_a)
PO.R.8
brace_data_0000000573
#ENDIF
#IFDEF GP
PO.FU.R.8 
brace_data_0000000574
#ELSE
#IFDEF HALF_NODE
#IFDEF LP
PO.FU.R.8 
brace_data_0000000575
#ENDIF
#ENDIF
#ENDIF
DPO.W.1 
brace_data_0000000576
DPO.S.1 
brace_data_0000000577
DPO.S.2 
brace_data_0000000578
DPO.S.3 
brace_data_0000000579
DPO.S.5 
brace_data_0000000580
DPO.S.6 
brace_data_0000000581
DPO.S.6.1 
brace_data_0000000582
DPO.S.8 
brace_data_0000000583
DPO.S.9 
brace_data_0000000584
#IFDEF FULL_CHIP
DPO.EN.1 
brace_data_0000000585
DPO.R.1 
brace_data_0000000586
#ENDIF
DPO.R.3 
brace_data_0000000587
Normal_TCD = RECTANGLE TCDDMY ==12 BY ==12 ORTHOGONAL ONLY
Small_TCD = RECTANGLE TCDDMY == 9.245 BY == 9.245 ORTHOGONAL ONLY
DTCD.W.1 
brace_data_0000000588
DTCD.R.1 
brace_data_0000000589
DTCD.R.2
brace_data_0000000590
DTCD.R.3 
brace_data_0000000591
VTH_N.W.1 
brace_data_0000000592
VTH_N.S.1 
brace_data_0000000593
VTH_N.S.2_VTH_N.S.2.1 
brace_data_0000000594
VTH_N.S.3 
brace_data_0000000595
VTH_N.EN.1_VTH_N.EN.2 
brace_data_0000000596
VTH_N.A.1 
brace_data_0000000597
VARIABLE VTH_N_A_2pre ((VTH_N_A_2 + (VTH_N_S_1 * VTH_N_S_1 * 3.142))/(2 * VTH_N_S_1))*((VTH_N_A_2 + (VTH_N_S_1 * VTH_N_S_1 * 3.142))/(2 * VTH_N_S_1))/3.141
VTH_N.A.2 
brace_data_0000000598
VTH_N.R.1 
brace_data_0000000599
VTH_N.R.2 
brace_data_0000000600
VTH_P.W.1 
brace_data_0000000601
VTH_P.S.1 
brace_data_0000000602
VTH_P.S.2_VTH_P.S.2.1 
brace_data_0000000603
VTH_P.S.3 
brace_data_0000000604
VTH_P.EN.1_VTH_P.EN.2 
brace_data_0000000605
VTH_P.A.1 
brace_data_0000000606
VARIABLE VTH_P_A_2pre ((VTH_P_A_2 + (VTH_P_S_1 * VTH_P_S_1 * 3.142))/(2 * VTH_P_S_1))*((VTH_P_A_2 + (VTH_P_S_1 * VTH_P_S_1 * 3.142))/(2 * VTH_P_S_1))/3.141
VTH_P.A.2 
brace_data_0000000607
VTH_P.R.1 
brace_data_0000000608
VTH_P.R.2 
brace_data_0000000609
VTL_N.W.1 
brace_data_0000000610
VTL_N.S.1 
brace_data_0000000611
VTL_N.S.2_VTL_N.S.2.1 
brace_data_0000000612
VTL_N.S.3 
brace_data_0000000613
VTL_N.EN.1_VTL_N.EN.2 
brace_data_0000000614
VTL_N.A.1 
brace_data_0000000615
VARIABLE VTL_N_A_2pre ((VTL_N_A_2 + (VTL_N_S_1 * VTL_N_S_1 * 3.142))/(2 * VTL_N_S_1))*((VTL_N_A_2 + (VTL_N_S_1 * VTL_N_S_1 * 3.142))/(2 * VTL_N_S_1))/3.141
VTL_N.A.2 
brace_data_0000000616
VTL_N.R.1 
brace_data_0000000617
VTL_N.R.2 
brace_data_0000000618
VTL_P.W.1 
brace_data_0000000619
VTL_P.S.1 
brace_data_0000000620
VTL_P.S.2_VTL_P.S.2.1 
brace_data_0000000621
VTL_P.S.3 
brace_data_0000000622
VTL_P.EN.1_VTL_P.EN.2 
brace_data_0000000623
VTL_P.A.1 
brace_data_0000000624
VARIABLE VTL_P_A_2pre ((VTL_P_A_2 + (VTL_P_S_1 * VTL_P_S_1 * 3.142))/(2 * VTL_P_S_1))*((VTL_P_A_2 + (VTL_P_S_1 * VTL_P_S_1 * 3.142))/(2 * VTL_P_S_1))/3.141
VTL_P.A.2 
brace_data_0000000625
VTL_P.R.1 
brace_data_0000000626
VTL_P.R.2 
brace_data_0000000627
mVTL.EN.1 
brace_data_0000000628
mVTL.S.1 
brace_data_0000000629
mVTL.R.1 
brace_data_0000000630
ODIMP = OD COINCIDENT INSIDE EDGE IMP
PP_BEDGE = PP INSIDE EDGE OD
PP.W.1 
brace_data_0000000631
PP.S.1 
brace_data_0000000632
PP.S.2 
brace_data_0000000633
PP.S.4 
brace_data_0000000634
PP.S.5 
brace_data_0000000635
EX_GATEN = EXPAND EDGE GATEN_W OUTSIDE BY PP_S_6 EXTEND BY PP_S_6_J
PP.S.6 
brace_data_0000000636
PP.S.7 
brace_data_0000000637
PP.EN.1 
brace_data_0000000638
PP.EX.1 
brace_data_0000000639
PP.EX.2 
brace_data_0000000640
PP.EX.3 
brace_data_0000000641
PP.EX.4 
brace_data_0000000642
PP.O.1 
brace_data_0000000643
PP.A.1 
brace_data_0000000644
VARIABLE PP_A_2pre ((PP_A_2 + (PP_S_1 * PP_S_1 * 3.142))/(2 * PP_S_1))*((PP_A_2 + (PP_S_1 * PP_S_1 * 3.142))/(2 * PP_S_1))/3.141
PP.A.2 
brace_data_0000000645
PP.A.3 
brace_data_0000000646
PP.R.1 
brace_data_0000000647
PP.R.2 
brace_data_0000000648
NP_BEDGE = NP INSIDE EDGE OD
NP.W.1 
brace_data_0000000649
NP.S.1 
brace_data_0000000650
NP.S.2 
brace_data_0000000651
NP.S.4 
brace_data_0000000652
NP.S.5 
brace_data_0000000653
EX_GATEP = EXPAND EDGE GATEP_W OUTSIDE BY NP_S_6 EXTEND BY NP_S_6_J
NP.S.6 
brace_data_0000000654
NP.S.7 
brace_data_0000000655
NP.EX.1 
brace_data_0000000656
NP.EX.2 
brace_data_0000000657
NP.EX.3 
brace_data_0000000658
NP.EX.4 
brace_data_0000000659
NP.O.1 
brace_data_0000000660
NP.A.1 
brace_data_0000000661
VARIABLE NP_A_2pre ((NP_A_2 + (NP_S_1 * NP_S_1 * 3.142))/(2 * NP_S_1))*((NP_A_2 + (NP_S_1 * NP_S_1 * 3.142))/(2 * NP_S_1))/3.141
NP.A.2 
brace_data_0000000662
NP.A.3 
brace_data_0000000663
NP.R.1 
brace_data_0000000664
VARIABLE  NLDDN1V_SU  0.085
VARIABLE  NLDDN1V_SD  0.17
VARIABLE  NLDDN2V_SU  0.085
VARIABLE  NLDDN2V_SD  0.17
VARIABLE  VTLN_SU     0.085
VARIABLE  VTLN_SD     0.17
VARIABLE  PLDDP1V_SU  0.085
VARIABLE  PLDDP1V_SD  0.17
VARIABLE  PLDDP2V_SU  0.085
VARIABLE  PLDDP2V_SD  0.17
VARIABLE  VTLP_SU     0.085
VARIABLE  VTLP_SD     0.17
VTLND = COPY VTLN
VTLPD = COPY VTLP
NP_NOT_NW = NP NOT NWEL
NLDDN1 = (((NP_NOT_NW NOT OD2) NOT RH) NOT BJTDMY) NOT VAR
NLDDN_CORE1 = NLDDN1 NOT DCO
NLDDN_CORE2 = NLDDN1 AND DCO
NLDDN1V_CORE1 = SIZE (SIZE (SIZE NLDDN_CORE1 BY NLDDN1V_SU) BY -NLDDN1V_SD) BY NLDDN1V_SU
NLDDN1V_CORE2 = SIZE (SIZE (SIZE NLDDN_CORE2 BY NLDDN1V_SU) BY -NLDDN1V_SD) BY NLDDN1V_SU
NLDDN2 = ((((NP_NOT_NW AND OD2) NOT RH) NOT BJTDMY) NOT VAR) NOT DCO
NLDDN2V = SIZE (SIZE (SIZE NLDDN2 BY NLDDN2V_SU) BY -NLDDN2V_SD) BY NLDDN2V_SU
VTL_N_LD = SIZE (SIZE (SIZE (((OD2 OR DCO) OR NWEL) OR VTLND) BY VTLN_SU) BY -VTLN_SD) BY VTLN_SU
PP_AND_NW = PP AND NWEL
PLDDP1 = (((PP_AND_NW NOT OD2) NOT RH) NOT BJTDMY) NOT VAR
PLDDP_CORE1 = PLDDP1 NOT DCO
PLDDP_CORE2 = PLDDP1 AND DCO
PLDDP1V_CORE1 = SIZE (SIZE (SIZE PLDDP_CORE1 BY PLDDP1V_SU) BY -PLDDP1V_SD) BY PLDDP1V_SU
PLDDP1V_CORE2 = SIZE (SIZE (SIZE PLDDP_CORE2 BY PLDDP1V_SU) BY -PLDDP1V_SD) BY PLDDP1V_SU
PLDDP2 = ((((PP_AND_NW AND OD2) NOT RH) NOT BJTDMY) NOT VAR ) NOT DCO
PLDDP2V = SIZE (SIZE (SIZE PLDDP2 BY PLDDP2V_SU) BY -PLDDP2V_SD) BY PLDDP2V_SU
VTL_P_LD = SIZE (SIZE (SIZE (((NWEL NOT OD2) NOT VTLPD) NOT DCO) BY VTLP_SU) BY -VTLP_SD) BY VTLP_SU
LDN.EX.1 
brace_data_0000000665
LDN.EX.1.DCO 
brace_data_0000000666
LDN.O.1 
brace_data_0000000667
LDP.EX.1 
brace_data_0000000668
LDP.EX.1.DCO 
brace_data_0000000669
LDP.O.2 
brace_data_0000000670
VT.S.1 
brace_data_0000000671
VT.EX.2 
brace_data_0000000672
#IFDEF LPG
DCO_EDGE_45 = ANGLE DCOs == 45
DCO.W.1 
brace_data_0000000673
DCO.S.1 
brace_data_0000000674
DCO.S.2 
brace_data_0000000675
DCO.S.3_DCO.S.4 
brace_data_0000000676
DCO.S.5 
brace_data_0000000677
DCO.S.6 
brace_data_0000000678
DCO.EN.1_DCO.EN.2 
brace_data_0000000679
DCO.EX.1 
brace_data_0000000680
DCO.EX.2 
brace_data_0000000681
DCO.EX.3 
brace_data_0000000682
DCO.A.1 
brace_data_0000000683
VARIABLE DCO_A_2pre ((DCO_A_2 + (DCO_S_1 * DCO_S_1 * 3.142))/(2 * DCO_S_1))*((DCO_A_2 + (DCO_S_1 * DCO_S_1 * 3.142))/(2 * DCO_S_1))/3.141
DCO.A.2 
brace_data_0000000684
DCO.O.1 
brace_data_0000000685
DCO.R.2 
brace_data_0000000686
DCO.R.3 
brace_data_0000000687
#ENDIF
NOGT       = GATE NOT SDI
FPO1A      = (FPO1 NOT ESD1DMY) NOT ESD2DMY
Wide_RPO   = RPO INTERACT (SIZE RPO BY - RPO_EX_1_1_W /2)
RPO.W.1 
brace_data_0000000688
RPO.S.1 
brace_data_0000000689
RPO.S.2 
brace_data_0000000690
RPO.S.3 
brace_data_0000000691
RPO.S.4 
brace_data_0000000692
RPO.S.5 
brace_data_0000000693
RPO.EX.1 
brace_data_0000000694
RPO.EX.2 
brace_data_0000000695
RPO.EX.1.1 
brace_data_0000000696
RPO.A.1 
brace_data_0000000697
VARIABLE RPO_A_2pre ((RPO_A_2 + (RPO_S_1 * RPO_S_1 * 3.142))/(2 * RPO_S_1))*((RPO_A_2 + (RPO_S_1 * RPO_S_1 * 3.142))/(2 * RPO_S_1))/3.141
RPO.A.2 
brace_data_0000000698
RPO.R.1 
brace_data_0000000699
#IFDEF GUIDELINE_RES
RES.12g 
brace_data_0000000700
RES.13g 
brace_data_0000000701
#ENDIF
RES.8 
brace_data_0000000702
RES.10 
brace_data_0000000703
RES.11 
brace_data_0000000704
VAR_GATE = GATE NOT OUTSIDE VAR
VAR_RF_GATE = VAR_GATE INSIDE RFDMY
VAR_BASE_GATE = VAR_GATE NOT INSIDE RFDMY
VAR_RF_GATE_W = GATE_W TOUCH INSIDE EDGE VAR_RF_GATE
VAR_RF_HV_GATE_W = VAR_RF_GATE_W INSIDE EDGE OD2
VAR_RF_LV_GATE_W = VAR_RF_GATE_W NOT INSIDE EDGE OD2
VAR_RF_GATE_L = GATE_L TOUCH INSIDE EDGE VAR_RF_GATE
VAR.W.1 
brace_data_0000000705
VAR.W.4 
brace_data_0000000706
VAR.S.1 
brace_data_0000000707
VAR.EN.1 
brace_data_0000000708
VAR.R.1 
brace_data_0000000709
VAR.R.2 
brace_data_0000000710
VAR.R.3 
brace_data_0000000711
VAR.R.4 
brace_data_0000000712
VAR.R.5 
brace_data_0000000713
#IFNDEF HALF_NODE
#IFDEF LP
HVD_Nx = COPY HVD_N_nw
HVD_NMOS_DRAIN = SD INTERACT HVD_Nx
HVD_NGATE = HV_GATE INTERACT HVD_Nx
HVD_N.W.1 
brace_data_0000000714
HVD_N.W.2 
brace_data_0000000715
HVD_N.S.1 
brace_data_0000000716
HVD_N.S.2 
brace_data_0000000717
HVD_N.S.3 
brace_data_0000000718
HVD_N.S.4 
brace_data_0000000719
HVD_N.S.5 
brace_data_0000000720
HVD_N.S.6 
brace_data_0000000721
HVD_N.EX.1 
brace_data_0000000722
HVD_N.O.1 
brace_data_0000000723
HVD_N.L.1 
brace_data_0000000724
HVD_N.A.1 
brace_data_0000000725
HVD_N.A.2 
brace_data_0000000726
HVD_N.R.1 
brace_data_0000000727
HVD_N.R.2 
brace_data_0000000728
HVD_N.R.3 
brace_data_0000000729
HVD_N.R.4 
brace_data_0000000730
HVD_N.R.6 
brace_data_0000000731
#ELSE
HVD_N.WARN 
brace_data_0000000732
#ENDIF
#ELSE
HVD_N.WARN 
brace_data_0000000733
#ENDIF
#IFNDEF HALF_NODE
#IFDEF LP
HVD_PMOS_DRAIN = SD INTERACT HVD_P
HVD_PGATE = HV_GATE INTERACT HVD_P
HVD_P.W.1 
brace_data_0000000734
HVD_P.W.2 
brace_data_0000000735
HVD_P.S.1 
brace_data_0000000736
HVD_P.S.2 
brace_data_0000000737
HVD_P.S.4 
brace_data_0000000738
HVD_P.S.5 
brace_data_0000000739
HVD_P.EX.1 
brace_data_0000000740
HVD_P.EN.1 
brace_data_0000000741
HVD_P.O.1 
brace_data_0000000742
HVD_P.L.1 
brace_data_0000000743
HVD_P.A.1 
brace_data_0000000744
HVD_P.A.2 
brace_data_0000000745
HVD_P.R.1 
brace_data_0000000746
HVD_P.R.2 
brace_data_0000000747
HVD_P.R.3 
brace_data_0000000748
HVD_P.R.4 
brace_data_0000000749
HVD_P.R.6 
brace_data_0000000750
#ELSE
HVD_P.WARN 
brace_data_0000000751
#ENDIF
#ELSE
HVD_P.WARN 
brace_data_0000000752
#ENDIF
HVPMOS = PPOD INTERACT HVD_P
HVNMOS = NPOD INTERACT HVD_N_nw
GR.R.1 
brace_data_0000000753
#IFNDEF HALF_NODE
#IFDEF LP
HVPMOS_GATE = GATE AND HVPMOS
HVNMOS_GATE = GATE AND HVNMOS
BV.W.1g 
brace_data_0000000754
BV.W.2g 
brace_data_0000000755
BV.R.1g 
brace_data_0000000756
#ENDIF
#ENDIF
#ENDIF
CO.W.1 
brace_data_0000000757
CO.W.2 
brace_data_0000000758
CO.S.1 
brace_data_0000000759
CO.S.2 
brace_data_0000000760
CO_NODAL = COPY CO
CONNECT CO_NODAL COi
CO.S.2.1 
brace_data_0000000761
CO.S.2.2 
brace_data_0000000762
CO.S.3 
brace_data_0000000763
CO.S.4 
brace_data_0000000764
CO.S.5 
brace_data_0000000765
CO.S.6 
brace_data_0000000766
CO.EN.1 
brace_data_0000000767
CO.EN.1.1 
brace_data_0000000768
CO.EN.2 
brace_data_0000000769
CO.EN.3_CO.EN.4 
brace_data_0000000770
#IFDEF BACK_END
M1Wide_first = (SIZE M1 BY M1_S_2_W /2 UNDEROVER TRUNCATE M1_S_2_W /2) AND M1
#IFDEF HALF_NODE
M1Wide_0.4 = (SIZE M1Wide_first BY (M1_S_2_1_W + OFFSETX )/2 UNDEROVER TRUNCATE (M1_S_2_1_W + OFFSETX) /2) AND M1Wide_first
M1Wide_0.2  = (SIZE M1 BY M1_S_2_2_W /2 UNDEROVER TRUNCATE M1_S_2_2_W /2) AND M1
M1Wide_0.42 = (SIZE M1Wide_first BY M1_S_2_3_W /2 UNDEROVER TRUNCATE M1_S_2_3_W /2) AND M1Wide_first
#ELSE
M1Wide_0.4 = (SIZE M1Wide_first BY M1_S_2_1_W /2 UNDEROVER TRUNCATE M1_S_2_1_W /2) AND M1Wide_first
#ENDIF
M1Wide_1.5 = (SIZE M1Wide_first BY M1_S_3_W /2 UNDEROVER TRUNCATE M1_S_3_W /2) AND M1Wide_first
M1Wide_4.5 = (SIZE M1Wide_1.5 BY M1_S_4_W /2 UNDEROVER TRUNCATE M1_S_4_W /2) AND M1Wide_1.5
M1_10 = M1Wide_first NOT CB_NON_CUP
M1_11 = M1Wide_0.4 NOT CB_NON_CUP
#IFDEF HALF_NODE
M1_12 = M1Wide_0.2 NOT CB_NON_CUP
M1_13 = M1Wide_0.42 NOT CB_NON_CUP
#ENDIF
M1_2 = M1Wide_1.5 NOT CB_NON_CUP
M1_3 = M1Wide_4.5 NOT CB_NON_CUP
M1AS3 = AREA M1 > M1_S_3_L*M1_W_1
M1AS4 = AREA M1AS3 > M1_S_4_L*M1_W_1
M1_EDGE_45 = M1 ANGLE == 45
M1.W.1 
brace_data_0000000771
M1.W.2 
brace_data_0000000772
M1.W.3 
brace_data_0000000773
M1.S.1 
brace_data_0000000774
M1.S.2 
brace_data_0000000775
M1.S.2.1 
brace_data_0000000776
#IFDEF HALF_NODE
M1.S.2.2 
brace_data_0000000777
M1.S.2.3 
brace_data_0000000778
#ENDIF
M1.S.3 
brace_data_0000000779
M1.S.4 
brace_data_0000000780
M1.S.5 
brace_data_0000000781
M1.S.6 
brace_data_0000000782
M1.EN.1 
brace_data_0000000783
M1.EN.2_M1.EN.3 
brace_data_0000000784
M1Wide_1.0 = (SIZE M1Wide_first BY M1_EN_4_W /2 UNDEROVER TRUNCATE M1_EN_4_W /2) AND M1Wide_first
M1.EN.4 
brace_data_0000000785
M1.A.1 
brace_data_0000000786
VARIABLE M1_A_2pre ((M1_A_2 + (M1_S_1 * M1_S_1 * 3.142))/(2 * M1_S_1))*((M1_A_2 + (M1_S_1 * M1_S_1 * 3.142))/(2 * M1_S_1))/3.141
M1.A.2 
brace_data_0000000787
M1DN1H_EXC = COPY M1_EXC
M1DN1L_EXC = COPY M1_EXC_LOW
#IFDEF CHECK_LOW_DENSITY
M1.DN.1L 
brace_data_0000000788
#ENDIF
M1.DN.1H 
brace_data_0000000789
M1DN2_EXC = COPY EMPTYi
M1.DN.2 
brace_data_0000000790
M1.DN.4 
brace_data_0000000791
M1_CORE = M1x NOT SRCSR
M2Wide_first = (SIZE M2 BY M2_S_2_W /2 UNDEROVER TRUNCATE M2_S_2_W /2) AND M2
M2Wide_0.4 = (SIZE M2Wide_first BY M2_S_2_1_W /2 UNDEROVER TRUNCATE M2_S_2_1_W /2) AND M2Wide_first
#IFDEF HALF_NODE
M2Wide_0.2 = (SIZE M2 BY M2_S_2_2_W /2 UNDEROVER TRUNCATE M2_S_2_2_W /2) AND M2
M2Wide_0.4S = (SIZE M2Wide_first BY M2_S_2_3_W /2 UNDEROVER TRUNCATE M2_S_2_3_W /2) AND M2Wide_first
#ENDIF
M2Wide_1.5 = (SIZE M2Wide_first BY M2_S_3_W /2 UNDEROVER TRUNCATE M2_S_3_W /2) AND M2Wide_first
M2Wide_4.5 = (SIZE M2Wide_1.5 BY M2_S_4_W /2 UNDEROVER TRUNCATE M2_S_4_W /2) AND M2Wide_1.5
M1Wide_0.42_VIA1 = (SIZE M1Wide_first BY VIA1_R_2_W /2 UNDEROVER TRUNCATE VIA1_R_2_W /2) AND M1Wide_first
M1Wide_0.7_VIA1 = (SIZE M1Wide_0.42_VIA1 BY VIA1_R_4_W /2 UNDEROVER TRUNCATE VIA1_R_4_W /2) AND M1Wide_0.42_VIA1
M1Wide_0.98_VIA1 = (SIZE M1Wide_0.7_VIA1 BY VIA1_R_3_W /2 UNDEROVER TRUNCATE VIA1_R_3_W /2) AND M1Wide_0.7_VIA1
M1Wide_2_VIA1 = (SIZE M1Wide_0.98_VIA1 BY VIA1_R_5_W /2 UNDEROVER TRUNCATE VIA1_R_5_W /2) AND M1Wide_0.98_VIA1
M1Wide_3_VIA1 = (SIZE M1Wide_2_VIA1 BY VIA1_R_6_W /2 UNDEROVER TRUNCATE VIA1_R_6_W /2) AND M1Wide_2_VIA1
M2Wide_0.42_VIA1 = (SIZE M2Wide_first BY VIA1_R_2_W /2 UNDEROVER TRUNCATE VIA1_R_2_W /2) AND M2Wide_first
M2Wide_0.7_VIA1 = (SIZE M2Wide_0.42_VIA1 BY VIA1_R_4_W /2 UNDEROVER TRUNCATE VIA1_R_4_W /2) AND M2Wide_0.42_VIA1
M2Wide_0.98_VIA1 = (SIZE M2Wide_0.7_VIA1 BY VIA1_R_3_W /2 UNDEROVER TRUNCATE VIA1_R_3_W /2) AND M2Wide_0.7_VIA1
M2Wide_2_VIA1 = (SIZE M2Wide_0.98_VIA1 BY VIA1_R_5_W /2 UNDEROVER TRUNCATE VIA1_R_5_W /2) AND M2Wide_0.98_VIA1
M2Wide_3_VIA1 = (SIZE M2Wide_2_VIA1 BY VIA1_R_6_W /2 UNDEROVER TRUNCATE VIA1_R_6_W /2) AND M2Wide_2_VIA1
VIA1.W.1 
brace_data_0000000792
VIA1.W.2 
brace_data_0000000793
VIA1.S.1 
brace_data_0000000794
VIA1.S.2 
brace_data_0000000795
VIA1.S.3 
brace_data_0000000796
VIA1.EN.1 
brace_data_0000000797
VIA1.EN.2_VIA1.EN.3 
brace_data_0000000798
#IFDEF HALF_NODE
VARIABLE VIA1_R_2_S2_S1  (VIA1_R_2_S2 - VIA1_R_2_S1 - OFFSETX)/2
#ELSE
VARIABLE VIA1_R_2_S2_S1  (VIA1_R_2_S2 - VIA1_R_2_S1)/2
#ENDIF
VIA1.R.2_VIA1.R.3 
brace_data_0000000799
VIA1.R.4.M1 
brace_data_0000000800
VIA1.R.4.M2 
brace_data_0000000801
VIA1.R.5.M1 
brace_data_0000000802
VIA1.R.5.M2 
brace_data_0000000803
M1Big_3_VIA1 = ENCLOSE RECTANGLE M1Wide_3_VIA1 VIA1_R_6_W VIA1_R_6_L+GRID
VIA1.R.6.M1 
brace_data_0000000804
M2Big_3_VIA1 = ENCLOSE RECTANGLE M2Wide_3_VIA1 VIA1_R_6_W VIA1_R_6_L+GRID
VIA1.R.6.M2 
brace_data_0000000805
VIA1.R.11
brace_data_0000000806
M21 = M2Wide_first NOT CB_NON_CUP
M211 = M2Wide_0.4 NOT CB_NON_CUP
#IFDEF HALF_NODE
M212 = M2Wide_0.2 NOT CB_NON_CUP
M213 = M2Wide_0.4S NOT CB_NON_CUP
#ENDIF
M22 = M2Wide_1.5 NOT CB_NON_CUP
M23 = M2Wide_4.5 NOT CB_NON_CUP
M2AS3 = AREA M2 > M2_S_3_L*M2_W_1
M2AS4 = AREA M2AS3 > M2_S_4_L*M2_W_1
M2_EDGE_45 = M2 ANGLE == 45
M2.W.1 
brace_data_0000000807
M2.W.2 
brace_data_0000000808
M2.W.3 
brace_data_0000000809
M2.S.1 
brace_data_0000000810
M2.S.2 
brace_data_0000000811
M2.S.2.1 
brace_data_0000000812
#IFDEF HALF_NODE
M2.S.2.2 
brace_data_0000000813
M2.S.2.3 
brace_data_0000000814
#ENDIF
M2.S.3 
brace_data_0000000815
M2.S.4 
brace_data_0000000816
M2.S.5 
brace_data_0000000817
M2.EN.1 
brace_data_0000000818
M2.EN.2_M2.EN.3 
brace_data_0000000819
M2.A.1 
brace_data_0000000820
VARIABLE M2_A_2pre ((M2_A_2 + (M2_S_1 * M2_S_1 * 3.142))/(2 * M2_S_1))*((M2_A_2 + (M2_S_1 * M2_S_1 * 3.142))/(2 * M2_S_1))/3.141
M2.A.2 
brace_data_0000000821
M2.S.6 
brace_data_0000000822
M2DN1H_EXC = COPY M2_EXC
M2DN1L_EXC = COPY M2_EXC_LOW
#IFDEF CHECK_LOW_DENSITY
M2.DN.1L 
brace_data_0000000823
#ENDIF
M2.DN.1H 
brace_data_0000000824
M2DN2_EXC = COPY EMPTYi
M2.DN.2 
brace_data_0000000825
M2.DN.4 
brace_data_0000000826
M2_CORE = M2x NOT SRCSR
M3Wide_first = (SIZE M3 BY M3_S_2_W /2 UNDEROVER TRUNCATE M3_S_2_W /2) AND M3
M3Wide_0.4 = (SIZE M3Wide_first BY M3_S_2_1_W /2 UNDEROVER TRUNCATE M3_S_2_1_W /2) AND M3Wide_first
#IFDEF HALF_NODE
M3Wide_0.2 = (SIZE M3 BY M3_S_2_2_W /2 UNDEROVER TRUNCATE M3_S_2_2_W /2) AND M3
M3Wide_0.4S = (SIZE M3Wide_first BY M3_S_2_3_W /2 UNDEROVER TRUNCATE M3_S_2_3_W /2) AND M3Wide_first
#ENDIF
M3Wide_1.5 = (SIZE M3Wide_first BY M3_S_3_W /2 UNDEROVER TRUNCATE M3_S_3_W /2) AND M3Wide_first
M3Wide_4.5 = (SIZE M3Wide_1.5 BY M3_S_4_W /2 UNDEROVER TRUNCATE M3_S_4_W /2) AND M3Wide_1.5
M2Wide_0.42_VIA2 = (SIZE M2Wide_first BY VIA2_R_2_W /2 UNDEROVER TRUNCATE VIA2_R_2_W /2) AND M2Wide_first
M2Wide_0.7_VIA2 = (SIZE M2Wide_0.42_VIA2 BY VIA2_R_4_W /2 UNDEROVER TRUNCATE VIA2_R_4_W /2) AND M2Wide_0.42_VIA2
M2Wide_0.98_VIA2 = (SIZE M2Wide_0.7_VIA2 BY VIA2_R_3_W /2 UNDEROVER TRUNCATE VIA2_R_3_W /2) AND M2Wide_0.7_VIA2
M2Wide_2_VIA2 = (SIZE M2Wide_0.98_VIA2 BY VIA2_R_5_W /2 UNDEROVER TRUNCATE VIA2_R_5_W /2) AND M2Wide_0.98_VIA2
M2Wide_3_VIA2 = (SIZE M2Wide_2_VIA2 BY VIA2_R_6_W /2 UNDEROVER TRUNCATE VIA2_R_6_W /2) AND M2Wide_2_VIA2
M3Wide_0.42_VIA2 = (SIZE M3Wide_first BY VIA2_R_2_W /2 UNDEROVER TRUNCATE VIA2_R_2_W /2) AND M3Wide_first
M3Wide_0.7_VIA2 = (SIZE M3Wide_0.42_VIA2 BY VIA2_R_4_W /2 UNDEROVER TRUNCATE VIA2_R_4_W /2) AND M3Wide_0.42_VIA2
M3Wide_0.98_VIA2 = (SIZE M3Wide_0.7_VIA2 BY VIA2_R_3_W /2 UNDEROVER TRUNCATE VIA2_R_3_W /2) AND M3Wide_0.7_VIA2
M3Wide_2_VIA2 = (SIZE M3Wide_0.98_VIA2 BY VIA2_R_5_W /2 UNDEROVER TRUNCATE VIA2_R_5_W /2) AND M3Wide_0.98_VIA2
M3Wide_3_VIA2 = (SIZE M3Wide_2_VIA2 BY VIA2_R_6_W /2 UNDEROVER TRUNCATE VIA2_R_6_W /2) AND M3Wide_2_VIA2
VIA2.W.1 
brace_data_0000000827
VIA2.W.2 
brace_data_0000000828
VIA2.S.1 
brace_data_0000000829
VIA2.S.2 
brace_data_0000000830
VIA2.S.3 
brace_data_0000000831
VIA2.EN.1 
brace_data_0000000832
VIA2.EN.2_VIA2.EN.3 
brace_data_0000000833
#IFDEF HALF_NODE
VARIABLE VIA2_R_2_S2_S1  (VIA2_R_2_S2 - VIA2_R_2_S1 - OFFSETX)/2
#ELSE
VARIABLE VIA2_R_2_S2_S1  (VIA2_R_2_S2 - VIA2_R_2_S1)/2
#ENDIF
VIA2.R.2_VIA2.R.3 
brace_data_0000000834
VIA2.R.4.M2 
brace_data_0000000835
VIA2.R.4.M3 
brace_data_0000000836
VIA2.R.5.M2 
brace_data_0000000837
VIA2.R.5.M3 
brace_data_0000000838
M2Big_3_VIA2 = ENCLOSE RECTANGLE M2Wide_3_VIA2 VIA2_R_6_W VIA2_R_6_L+GRID
VIA2.R.6.M2 
brace_data_0000000839
M3Big_3_VIA2 = ENCLOSE RECTANGLE M3Wide_3_VIA2 VIA2_R_6_W VIA2_R_6_L+GRID
VIA2.R.6.M3 
brace_data_0000000840
VIA2.R.11
brace_data_0000000841
M31 = M3Wide_first NOT CB_NON_CUP
M311 = M3Wide_0.4 NOT CB_NON_CUP
#IFDEF HALF_NODE
M312 = M3Wide_0.2 NOT CB_NON_CUP
M313 = M3Wide_0.4S NOT CB_NON_CUP
#ENDIF
M32 = M3Wide_1.5 NOT CB_NON_CUP
M33 = M3Wide_4.5 NOT CB_NON_CUP
M3AS3 = AREA M3 > M3_S_3_L*M3_W_1
M3AS4 = AREA M3AS3 > M3_S_4_L*M3_W_1
M3_EDGE_45 = M3 ANGLE == 45
M3.W.1 
brace_data_0000000842
M3.W.2 
brace_data_0000000843
M3.W.3 
brace_data_0000000844
M3.S.1 
brace_data_0000000845
M3.S.2 
brace_data_0000000846
M3.S.2.1 
brace_data_0000000847
#IFDEF HALF_NODE
M3.S.2.2 
brace_data_0000000848
M3.S.2.3 
brace_data_0000000849
#ENDIF
M3.S.3 
brace_data_0000000850
M3.S.4 
brace_data_0000000851
M3.S.5 
brace_data_0000000852
M3.EN.1 
brace_data_0000000853
M3.EN.2_M3.EN.3 
brace_data_0000000854
M3.A.1 
brace_data_0000000855
VARIABLE M3_A_2pre ((M3_A_2 + (M3_S_1 * M3_S_1 * 3.142))/(2 * M3_S_1))*((M3_A_2 + (M3_S_1 * M3_S_1 * 3.142))/(2 * M3_S_1))/3.141
M3.A.2 
brace_data_0000000856
M3.S.6 
brace_data_0000000857
M3DN1H_EXC = COPY M3_EXC
M3DN1L_EXC = COPY M3_EXC_LOW
#IFDEF CHECK_LOW_DENSITY
M3.DN.1L 
brace_data_0000000858
#ENDIF
M3.DN.1H 
brace_data_0000000859
M3DN2_EXC = COPY EMPTYi
M3.DN.2 
brace_data_0000000860
M3.DN.4 
brace_data_0000000861
M3_CORE = M3x NOT SRCSR
M1.DN.5 
brace_data_0000000862
VARIABLE M1_DN_6 0.15
M1DN6_CBM_MERGE = SIZE (SIZE CBM BY 25) BY -25
M1DN6_CHECK_CBM = AREA M1DN6_CBM_MERGE >= 200 * 200
M1DN6_M1_CHECK = M1 AND M1DN6_CHECK_CBM
M1DN6_M2_CHECK = M2 AND M1DN6_CHECK_CBM
M1DN6_M3_CHECK = M3 AND M1DN6_CHECK_CBM
CONNECT M1DN6_CHECK_CBM M1DN6_M1_CHECK
CONNECT M1DN6_CHECK_CBM M1DN6_M2_CHECK
CONNECT M1DN6_CHECK_CBM M1DN6_M3_CHECK
M1.DN.6 
brace_data_0000000863
M4Wide_first = (SIZE M4 BY M4_S_2_W /2 UNDEROVER TRUNCATE M4_S_2_W /2) AND M4
M4Wide_0.4 = (SIZE M4Wide_first BY M4_S_2_1_W /2 UNDEROVER TRUNCATE M4_S_2_1_W /2) AND M4Wide_first
#IFDEF HALF_NODE
M4Wide_0.2 = (SIZE M4 BY M4_S_2_2_W /2 UNDEROVER TRUNCATE M4_S_2_2_W /2) AND M4
M4Wide_0.4S = (SIZE M4Wide_first BY M4_S_2_3_W /2 UNDEROVER TRUNCATE M4_S_2_3_W /2) AND M4Wide_first
#ENDIF
M4Wide_1.5 = (SIZE M4Wide_first BY M4_S_3_W /2 UNDEROVER TRUNCATE M4_S_3_W /2) AND M4Wide_first
M4Wide_4.5 = (SIZE M4Wide_1.5 BY M4_S_4_W /2 UNDEROVER TRUNCATE M4_S_4_W /2) AND M4Wide_1.5
M3Wide_0.42_VIA3 = (SIZE M3Wide_first BY VIA3_R_2_W /2 UNDEROVER TRUNCATE VIA3_R_2_W /2) AND M3Wide_first
M3Wide_0.7_VIA3 = (SIZE M3Wide_0.42_VIA3 BY VIA3_R_4_W /2 UNDEROVER TRUNCATE VIA3_R_4_W /2) AND M3Wide_0.42_VIA3
M3Wide_0.98_VIA3 = (SIZE M3Wide_0.7_VIA3 BY VIA3_R_3_W /2 UNDEROVER TRUNCATE VIA3_R_3_W /2) AND M3Wide_0.7_VIA3
M3Wide_2_VIA3 = (SIZE M3Wide_0.98_VIA3 BY VIA3_R_5_W /2 UNDEROVER TRUNCATE VIA3_R_5_W /2) AND M3Wide_0.98_VIA3
M3Wide_3_VIA3 = (SIZE M3Wide_2_VIA3 BY VIA3_R_6_W /2 UNDEROVER TRUNCATE VIA3_R_6_W /2) AND M3Wide_2_VIA3
M4Wide_0.42_VIA3 = (SIZE M4Wide_first BY VIA3_R_2_W /2 UNDEROVER TRUNCATE VIA3_R_2_W /2) AND M4Wide_first
M4Wide_0.7_VIA3 = (SIZE M4Wide_0.42_VIA3 BY VIA3_R_4_W /2 UNDEROVER TRUNCATE VIA3_R_4_W /2) AND M4Wide_0.42_VIA3
M4Wide_0.98_VIA3 = (SIZE M4Wide_0.7_VIA3 BY VIA3_R_3_W /2 UNDEROVER TRUNCATE VIA3_R_3_W /2) AND M4Wide_0.7_VIA3
M4Wide_2_VIA3 = (SIZE M4Wide_0.98_VIA3 BY VIA3_R_5_W /2 UNDEROVER TRUNCATE VIA3_R_5_W /2) AND M4Wide_0.98_VIA3
M4Wide_3_VIA3 = (SIZE M4Wide_2_VIA3 BY VIA3_R_6_W /2 UNDEROVER TRUNCATE VIA3_R_6_W /2) AND M4Wide_2_VIA3
VIA3.W.1 
brace_data_0000000864
VIA3.W.2 
brace_data_0000000865
VIA3.S.1 
brace_data_0000000866
VIA3.S.2 
brace_data_0000000867
VIA3.S.3 
brace_data_0000000868
VIA3.EN.1 
brace_data_0000000869
VIA3.EN.2_VIA3.EN.3 
brace_data_0000000870
#IFDEF HALF_NODE
VARIABLE VIA3_R_2_S2_S1  (VIA3_R_2_S2 - VIA3_R_2_S1 - OFFSETX)/2
#ELSE
VARIABLE VIA3_R_2_S2_S1  (VIA3_R_2_S2 - VIA3_R_2_S1)/2
#ENDIF
VIA3.R.2_VIA3.R.3 
brace_data_0000000871
VIA3.R.4.M3 
brace_data_0000000872
VIA3.R.4.M4 
brace_data_0000000873
VIA3.R.5.M3 
brace_data_0000000874
VIA3.R.5.M4 
brace_data_0000000875
M3Big_3_VIA3 = ENCLOSE RECTANGLE M3Wide_3_VIA3 VIA3_R_6_W VIA3_R_6_L+GRID
VIA3.R.6.M3 
brace_data_0000000876
M4Big_3_VIA3 = ENCLOSE RECTANGLE M4Wide_3_VIA3 VIA3_R_6_W VIA3_R_6_L+GRID
VIA3.R.6.M4 
brace_data_0000000877
VIA3.R.11
brace_data_0000000878
M41 = M4Wide_first NOT CB_NON_CUP
M411 = M4Wide_0.4 NOT CB_NON_CUP
#IFDEF HALF_NODE
M412 = M4Wide_0.2 NOT CB_NON_CUP
M413 = M4Wide_0.4S NOT CB_NON_CUP
#ENDIF
M42 = M4Wide_1.5 NOT CB_NON_CUP
M43 = M4Wide_4.5 NOT CB_NON_CUP
M4AS3 = AREA M4 > M4_S_3_L*M4_W_1
M4AS4 = AREA M4AS3 > M4_S_4_L*M4_W_1
M4_EDGE_45 = M4 ANGLE == 45
M4.W.1 
brace_data_0000000879
M4.W.2 
brace_data_0000000880
M4.W.3 
brace_data_0000000881
M4.S.1 
brace_data_0000000882
M4.S.2 
brace_data_0000000883
M4.S.2.1 
brace_data_0000000884
#IFDEF HALF_NODE
M4.S.2.2 
brace_data_0000000885
M4.S.2.3 
brace_data_0000000886
#ENDIF
M4.S.3 
brace_data_0000000887
M4.S.4 
brace_data_0000000888
M4.S.5 
brace_data_0000000889
M4.EN.1 
brace_data_0000000890
M4.EN.2_M4.EN.3 
brace_data_0000000891
M4.A.1 
brace_data_0000000892
VARIABLE M4_A_2pre ((M4_A_2 + (M4_S_1 * M4_S_1 * 3.142))/(2 * M4_S_1))*((M4_A_2 + (M4_S_1 * M4_S_1 * 3.142))/(2 * M4_S_1))/3.141
M4.A.2 
brace_data_0000000893
M4.S.6 
brace_data_0000000894
M4DN1H_EXC = COPY M4_EXC
M4DN1L_EXC = COPY M4_EXC_LOW
#IFDEF CHECK_LOW_DENSITY
M4.DN.1L 
brace_data_0000000895
#ENDIF
M4.DN.1H 
brace_data_0000000896
M4DN2_EXC = COPY EMPTYi
M4.DN.2 
brace_data_0000000897
M4.DN.4 
brace_data_0000000898
M4_CORE = M4x NOT SRCSR
M2.DN.5 
brace_data_0000000899
VARIABLE M2_DN_6 0.15
M2DN6_CBM_MERGE = SIZE (SIZE CBM BY 25) BY -25
M2DN6_CHECK_CBM = AREA M2DN6_CBM_MERGE >= 200 * 200
M2DN6_M2_CHECK = M2 AND M2DN6_CHECK_CBM
M2DN6_M3_CHECK = M3 AND M2DN6_CHECK_CBM
M2DN6_M4_CHECK = M4 AND M2DN6_CHECK_CBM
CONNECT M2DN6_CHECK_CBM M2DN6_M2_CHECK
CONNECT M2DN6_CHECK_CBM M2DN6_M3_CHECK
CONNECT M2DN6_CHECK_CBM M2DN6_M4_CHECK
M2.DN.6 
brace_data_0000000900
VIA4.W.1 
brace_data_0000000901
VIA4.W.2 
brace_data_0000000902
VIA4.S.1 
brace_data_0000000903
VIA4.S.2 
brace_data_0000000904
VIA4.EN.1 
brace_data_0000000905
VIA4.EN.2 
brace_data_0000000906
M5Wide_1.8_VIA4T = (SIZE M5 BY VIA4_R_2_W /2 UNDEROVER TRUNCATE VIA4_R_2_W /2) AND M5
M4Wide_1.8_VIA4T = (SIZE M4 BY VIA4_R_2_W /2 UNDEROVER TRUNCATE VIA4_R_2_W /2) AND M4
M5Wide_3_VIA4T = (SIZE M5Wide_1.8_VIA4T BY VIA4_R_3_W /2 UNDEROVER TRUNCATE VIA4_R_3_W /2) AND M5Wide_1.8_VIA4T
M4Wide_3_VIA4T = (SIZE M4Wide_1.8_VIA4T BY VIA4_R_3_W /2 UNDEROVER TRUNCATE VIA4_R_3_W /2) AND M4Wide_1.8_VIA4T
VIA4.R.2 
brace_data_0000000907
M4Big_3_VIA4T = ENCLOSE RECTANGLE M4Wide_3_VIA4T VIA4_R_3_W VIA4_R_3_L+GRID
VIA4.R.3.M4 
brace_data_0000000908
M5Big_3_VIA4T = ENCLOSE RECTANGLE M5Wide_3_VIA4T VIA4_R_3_W VIA4_R_3_L+GRID
VIA4.R.3.M5 
brace_data_0000000909
VCAP = COPY VIA4
MCAP = COPY M5
MCAPx = COPY M5x
MBOT = COPY M4
MBOTx = COPY M4x
VCAP_CTMDMY = VCAP AND CTMDMY
VCAP_ICTMDMY = VCAP INSIDE CTMDMY
MCAP_CTMDMY = MCAP AND CTMDMY
MCAPx_CTMDMY = MCAPx AND CTMDMY
MBOT_ICTMDMY = MBOT NOT OUTSIDE CTMDMY
MBOTx_ICTMDMY = MBOTx NOT OUTSIDE CTMDMY
MCAP_ICTMDMY = MCAP NOT OUTSIDE CTMDMY
MCAPx_ICTMDMY = MCAPx NOT OUTSIDE CTMDMY
VCAP_CTM = VCAP AND CTM
VCAP_CBM = (VCAP AND CBM) NOT CTM
VIA4.EN.3 
brace_data_0000000910
VIA4.EN.4 
brace_data_0000000911
VIA4.S.3
brace_data_0000000912
VIA4.S.4 
brace_data_0000000913
VIA4.S.5 
brace_data_0000000914
VIA4.R.7 
brace_data_0000000915
M5Wide_1.5 = (SIZE M5 BY M5_S_2_W /2 UNDEROVER TRUNCATE M5_S_2_W /2) AND M5
M5Wide_4.5 = (SIZE M5Wide_1.5 BY M5_S_3_W /2 UNDEROVER TRUNCATE M5_S_3_W /2) AND M5Wide_1.5
M51 = M5Wide_1.5 NOT CB
M52 = M5Wide_4.5 NOT CB
M5nAS2 = AREA M5 > M5_S_2_L*M5_W_1
M5nAS3 = AREA M5nAS2 > M5_S_3_L*M5_W_1
M5.W.1 
brace_data_0000000916
M5.W.2 
brace_data_0000000917
M5.S.1 
brace_data_0000000918
M5.S.2 
brace_data_0000000919
M5.S.3 
brace_data_0000000920
M5.EN.1 
brace_data_0000000921
M5.EN.2 
brace_data_0000000922
M5.A.1 
brace_data_0000000923
VARIABLE M5_A_2pre ((M5_A_2 + (M5_S_1 * M5_S_1 * 3.142))/(2 * M5_S_1))*((M5_A_2 + (M5_S_1 * M5_S_1 * 3.142))/(2 * M5_S_1))/3.141
M5.A.2 
brace_data_0000000924
M5DN1H_EXC =  M5_EXC OR WBDMY
M5DN1L_EXC = COPY M5_EXC_LOW
#IFDEF CHECK_LOW_DENSITY
M5.DN.1L 
brace_data_0000000925
#ENDIF
M5.DN.1H 
brace_data_0000000926
M5DN2_EXC = WBDMY OR IND_EXD
M5.DN.2 
brace_data_0000000927
M5.DN.4 
brace_data_0000000928
M5.EN.3 
brace_data_0000000929
M5.DN.5L 
brace_data_0000000930
M5.DN.5H 
brace_data_0000000931
M5.W.4 
brace_data_0000000932
M5.S.4 
brace_data_0000000933
VIA5.W.1 
brace_data_0000000934
VIA5.W.2 
brace_data_0000000935
VIA5.S.1 
brace_data_0000000936
VIA5.S.2 
brace_data_0000000937
VIA5.EN.5 
brace_data_0000000938
M6Wide_1.8_VIA5T = (SIZE M6 BY VIA5_R_2_W /2 UNDEROVER TRUNCATE VIA5_R_2_W /2) AND M6
M5Wide_1.8_VIA5T = (SIZE M5 BY VIA5_R_2_W /2 UNDEROVER TRUNCATE VIA5_R_2_W /2) AND M5
M6Wide_3_VIA5T = (SIZE M6Wide_1.8_VIA5T BY VIA5_R_3_W /2 UNDEROVER TRUNCATE VIA5_R_3_W /2) AND M6Wide_1.8_VIA5T
M5Wide_3_VIA5T = (SIZE M5Wide_1.8_VIA5T BY VIA5_R_3_W /2 UNDEROVER TRUNCATE VIA5_R_3_W /2) AND M5Wide_1.8_VIA5T
VIA5.R.8 
brace_data_0000000939
M5Big_3_VIA5T = ENCLOSE RECTANGLE M5Wide_3_VIA5T VIA5_R_3_W VIA5_R_3_L+GRID
VIA5.R.3.M5 
brace_data_0000000940
M6Big_3_VIA5T = ENCLOSE RECTANGLE M6Wide_3_VIA5T VIA5_R_3_W VIA5_R_3_L+GRID
VIA5.R.3.M6 
brace_data_0000000941
M6.W.1 
brace_data_0000000942
M6.W.2 
brace_data_0000000943
M6.S.1 
brace_data_0000000944
M6.EN.1 
brace_data_0000000945
M6.A.1 
brace_data_0000000946
M6.A.2 
brace_data_0000000947
#IFDEF FULL_CHIP
M6.DN.1L 
brace_data_0000000948
M6.DN.1H 
brace_data_0000000949
#ENDIF
M6DN2H_EXC =  M6_EXC OR MTOP_EXC
M6DN2L_EXC =  COPY M6_EXC_LOW
#IFDEF CHECK_LOW_DENSITY
M6.DN.2L 
brace_data_0000000950
#ENDIF
M6.DN.2H 
brace_data_0000000951
#IFDEF HALF_NODE
CTM.R.2
brace_data_0000000952
CTM.R.3 
brace_data_0000000953
#ELSE
CTM.W.1 
brace_data_0000000954
CTM.W.2 
brace_data_0000000955
CTM.S.1 
brace_data_0000000956
CTM.EN.1 
brace_data_0000000957
CTM.R.1 
brace_data_0000000958
#ENDIF
#IFDEF HALF_NODE
CBM.WARN 
brace_data_0000000959
#ELSE
CBM.W.1 
brace_data_0000000960
CBM.W.2 
brace_data_0000000961
CBM.S.1 
brace_data_0000000962
CBM.S.2 
brace_data_0000000963
CBM.S.3 
brace_data_0000000964
CBM.EN.2 
brace_data_0000000965
CBM.R.1 
brace_data_0000000966
#ENDIF
CHIP_MOM_WIVIA = COPY CHIP
CHIP_MOM_WOVIA = COPY CHIP
CONNECT CHIP_MOM_WIVIA
CONNECT CHIP_MOM_WOVIA
MOM_VIA1 = VIA1 AND (( MOMDMY_1 AND MOMDMY_2) ENCLOSE VIA1 > 4)
MOM_VIA1_C = STAMP MOM_VIA1 BY CHIP_MOM_WIVIA
MOM_VIA2 = VIA2 AND (( MOMDMY_2 AND MOMDMY_3) ENCLOSE VIA2 > 4)
MOM_VIA2_C = STAMP MOM_VIA2 BY CHIP_MOM_WIVIA
MOM_VIA3 = VIA3 AND (( MOMDMY_3 AND MOMDMY_4) ENCLOSE VIA3 > 4)
MOM_VIA3_C = STAMP MOM_VIA3 BY CHIP_MOM_WIVIA
MOM_VIA4 = VIA4 AND (( MOMDMY_4 AND MOMDMY_5) ENCLOSE VIA4 > 4)
MOM_VIA4_C = STAMP MOM_VIA4 BY CHIP_MOM_WIVIA
MOM_VIA5 = VIA5 AND (( MOMDMY_5 AND MOMDMY_6) ENCLOSE VIA5 > 4)
MOM_VIA5_C = STAMP MOM_VIA5 BY CHIP_MOM_WIVIA
MOM_RV =  RV AND (( MOMDMY_6 AND MOMDMY_AP) ENCLOSE RV > 4)
MOM_RV_C = STAMP MOM_RV BY CHIP_MOM_WIVIA
MOMDMY_1_WIVIA = MOMDMY_1 ENCLOSE MOM_VIA1
MOMDMY_1_WOVIA = MOMDMY_1 NOT MOMDMY_1_WIVIA
MOM_M1_WIVIA = MOMDMY_1_WIVIA AND M1
MOM_M1_WOVIA = MOMDMY_1_WOVIA AND M1
MOM_M1 = MOM_M1_WIVIA OR MOM_M1_WOVIA
MOM_M1_EDGE = M1 COIN INSIDE EDGE MOM_M1
MOM_M1_LINE_END = CONVEX EDGE MOM_M1_EDGE ANGLE1==90 ANGLE2==90
MOM_M1_SIDE_EDGE = MOM_M1_EDGE NOT COIN INSIDE EDGE MOM_M1_LINE_END
MOM_M1_CAP_EDGE_b1 = ENC MOM_M1_LINE_END MOMDMY_1 <= 4 OPPOSITE REGION
MOM_M1_CAP_EDGE_b2 = MOM_M1 NOT COIN EDGE MOM_M1_EDGE
MOM_M1_CAP_EDGE_b3 = (MOMDMY_1 TOUCH EDGE MOM_M1_CAP_EDGE_b2) NOT COIN EDGE MOM_M1_CAP_EDGE_b2
MOM_M1_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_M1_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_M1_CAP_EDGE_b1)
MOM_M1_CAP_EDGE_b5 = (MOMDMY_1 NOT (MOM_M1_CAP_EDGE_b1 OR MOM_M1)) INTERACT MOM_M1 == 1
MOM_M1_CAP_EDGE    = ((MOM_M1_SIDE_EDGE  NOT COIN EDGE MOMDMY_1) NOT COIN EDGE MOM_M1_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_M1_CAP_EDGE_b4
MOM_M1_CAP_EDGE_EXP = EXPAND EDGE MOM_M1_CAP_EDGE INSIDE BY 0.001
MOM_M1_CAP_EDGE_EXP_WIVIA = MOM_M1_CAP_EDGE_EXP AND MOM_M1_WIVIA
MOM_M1_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_M1_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_M1_CAP_EDGE_EXP_WOVIA = MOM_M1_CAP_EDGE_EXP AND MOM_M1_WOVIA
MOM_M1_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_M1_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
MOMDMY_2_WIVIA = (MOMDMY_2 ENCLOSE MOM_VIA1) OR (MOMDMY_2 ENCLOSE MOM_VIA2)
MOMDMY_2_WOVIA = MOMDMY_2 NOT MOMDMY_2_WIVIA
MOM_M2_WIVIA = MOMDMY_2_WIVIA AND M2
MOM_M2_WOVIA = MOMDMY_2_WOVIA AND M2
MOM_M2 = MOM_M2_WIVIA OR MOM_M2_WOVIA
MOM_M2_EDGE = M2 COIN INSIDE EDGE MOM_M2
MOM_M2_LINE_END = CONVEX EDGE MOM_M2_EDGE ANGLE1==90 ANGLE2==90
MOM_M2_SIDE_EDGE = MOM_M2_EDGE NOT COIN INSIDE EDGE MOM_M2_LINE_END
MOM_M2_CAP_EDGE_b1 = ENC MOM_M2_LINE_END MOMDMY_2 <= 4 OPPOSITE REGION
MOM_M2_CAP_EDGE_b2 = MOM_M2 NOT COIN EDGE MOM_M2_EDGE
MOM_M2_CAP_EDGE_b3 = (MOMDMY_2 TOUCH EDGE MOM_M2_CAP_EDGE_b2) NOT COIN EDGE MOM_M2_CAP_EDGE_b2
MOM_M2_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_M2_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_M2_CAP_EDGE_b1)
MOM_M2_CAP_EDGE_b5 = (MOMDMY_2 NOT (MOM_M2_CAP_EDGE_b1 OR MOM_M2)) INTERACT MOM_M2 == 1
MOM_M2_CAP_EDGE    = ((MOM_M2_SIDE_EDGE  NOT COIN EDGE MOMDMY_2) NOT COIN EDGE MOM_M2_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_M2_CAP_EDGE_b4
MOM_M2_CAP_EDGE_EXP = EXPAND EDGE MOM_M2_CAP_EDGE INSIDE BY 0.001
MOM_M2_CAP_EDGE_EXP_WIVIA = MOM_M2_CAP_EDGE_EXP AND MOM_M2_WIVIA
MOM_M2_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_M2_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_M2_CAP_EDGE_EXP_WOVIA = MOM_M2_CAP_EDGE_EXP AND MOM_M2_WOVIA
MOM_M2_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_M2_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
MOMDMY_3_WIVIA = (MOMDMY_3 ENCLOSE MOM_VIA2) OR (MOMDMY_3 ENCLOSE MOM_VIA3)
MOMDMY_3_WOVIA = MOMDMY_3 NOT MOMDMY_3_WIVIA
MOM_M3_WIVIA = MOMDMY_3_WIVIA AND M3
MOM_M3_WOVIA = MOMDMY_3_WOVIA AND M3
MOM_M3 = MOM_M3_WIVIA OR MOM_M3_WOVIA
MOM_M3_EDGE = M3 COIN INSIDE EDGE MOM_M3
MOM_M3_LINE_END = CONVEX EDGE MOM_M3_EDGE ANGLE1==90 ANGLE2==90
MOM_M3_SIDE_EDGE = MOM_M3_EDGE NOT COIN INSIDE EDGE MOM_M3_LINE_END
MOM_M3_CAP_EDGE_b1 = ENC MOM_M3_LINE_END MOMDMY_3 <= 4 OPPOSITE REGION
MOM_M3_CAP_EDGE_b2 = MOM_M3 NOT COIN EDGE MOM_M3_EDGE
MOM_M3_CAP_EDGE_b3 = (MOMDMY_3 TOUCH EDGE MOM_M3_CAP_EDGE_b2) NOT COIN EDGE MOM_M3_CAP_EDGE_b2
MOM_M3_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_M3_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_M3_CAP_EDGE_b1)
MOM_M3_CAP_EDGE_b5 = (MOMDMY_3 NOT (MOM_M3_CAP_EDGE_b1 OR MOM_M3)) INTERACT MOM_M3 == 1
MOM_M3_CAP_EDGE    = ((MOM_M3_SIDE_EDGE  NOT COIN EDGE MOMDMY_3) NOT COIN EDGE MOM_M3_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_M3_CAP_EDGE_b4
MOM_M3_CAP_EDGE_EXP = EXPAND EDGE MOM_M3_CAP_EDGE INSIDE BY 0.001
MOM_M3_CAP_EDGE_EXP_WIVIA = MOM_M3_CAP_EDGE_EXP AND MOM_M3_WIVIA
MOM_M3_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_M3_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_M3_CAP_EDGE_EXP_WOVIA = MOM_M3_CAP_EDGE_EXP AND MOM_M3_WOVIA
MOM_M3_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_M3_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
MOMDMY_4_WIVIA = (MOMDMY_4 ENCLOSE MOM_VIA3) OR (MOMDMY_4 ENCLOSE MOM_VIA4)
MOMDMY_4_WOVIA = MOMDMY_4 NOT MOMDMY_4_WIVIA
MOM_M4_WIVIA = MOMDMY_4_WIVIA AND M4
MOM_M4_WOVIA = MOMDMY_4_WOVIA AND M4
MOM_M4 = MOM_M4_WIVIA OR MOM_M4_WOVIA
MOM_M4_EDGE = M4 COIN INSIDE EDGE MOM_M4
MOM_M4_LINE_END = CONVEX EDGE MOM_M4_EDGE ANGLE1==90 ANGLE2==90
MOM_M4_SIDE_EDGE = MOM_M4_EDGE NOT COIN INSIDE EDGE MOM_M4_LINE_END
MOM_M4_CAP_EDGE_b1 = ENC MOM_M4_LINE_END MOMDMY_4 <= 4 OPPOSITE REGION
MOM_M4_CAP_EDGE_b2 = MOM_M4 NOT COIN EDGE MOM_M4_EDGE
MOM_M4_CAP_EDGE_b3 = (MOMDMY_4 TOUCH EDGE MOM_M4_CAP_EDGE_b2) NOT COIN EDGE MOM_M4_CAP_EDGE_b2
MOM_M4_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_M4_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_M4_CAP_EDGE_b1)
MOM_M4_CAP_EDGE_b5 = (MOMDMY_4 NOT (MOM_M4_CAP_EDGE_b1 OR MOM_M4)) INTERACT MOM_M4 == 1
MOM_M4_CAP_EDGE    = ((MOM_M4_SIDE_EDGE  NOT COIN EDGE MOMDMY_4) NOT COIN EDGE MOM_M4_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_M4_CAP_EDGE_b4
MOM_M4_CAP_EDGE_EXP = EXPAND EDGE MOM_M4_CAP_EDGE INSIDE BY 0.001
MOM_M4_CAP_EDGE_EXP_WIVIA = MOM_M4_CAP_EDGE_EXP AND MOM_M4_WIVIA
MOM_M4_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_M4_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_M4_CAP_EDGE_EXP_WOVIA = MOM_M4_CAP_EDGE_EXP AND MOM_M4_WOVIA
MOM_M4_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_M4_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
MOMDMY_5_WIVIA = (MOMDMY_5 ENCLOSE MOM_VIA4) OR (MOMDMY_5 ENCLOSE MOM_VIA5)
MOMDMY_5_WOVIA = MOMDMY_5 NOT MOMDMY_5_WIVIA
MOM_M5_WIVIA = MOMDMY_5_WIVIA AND M5
MOM_M5_WOVIA = MOMDMY_5_WOVIA AND M5
MOM_M5 = MOM_M5_WIVIA OR MOM_M5_WOVIA
MOM_M5_EDGE = M5 COIN INSIDE EDGE MOM_M5
MOM_M5_LINE_END = CONVEX EDGE MOM_M5_EDGE ANGLE1==90 ANGLE2==90
MOM_M5_SIDE_EDGE = MOM_M5_EDGE NOT COIN INSIDE EDGE MOM_M5_LINE_END
MOM_M5_CAP_EDGE_b1 = ENC MOM_M5_LINE_END MOMDMY_5 <= 4 OPPOSITE REGION
MOM_M5_CAP_EDGE_b2 = MOM_M5 NOT COIN EDGE MOM_M5_EDGE
MOM_M5_CAP_EDGE_b3 = (MOMDMY_5 TOUCH EDGE MOM_M5_CAP_EDGE_b2) NOT COIN EDGE MOM_M5_CAP_EDGE_b2
MOM_M5_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_M5_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_M5_CAP_EDGE_b1)
MOM_M5_CAP_EDGE_b5 = (MOMDMY_5 NOT (MOM_M5_CAP_EDGE_b1 OR MOM_M5)) INTERACT MOM_M5 == 1
MOM_M5_CAP_EDGE    = ((MOM_M5_SIDE_EDGE  NOT COIN EDGE MOMDMY_5) NOT COIN EDGE MOM_M5_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_M5_CAP_EDGE_b4
MOM_M5_CAP_EDGE_EXP = EXPAND EDGE MOM_M5_CAP_EDGE INSIDE BY 0.001
MOM_M5_CAP_EDGE_EXP_WIVIA = MOM_M5_CAP_EDGE_EXP AND MOM_M5_WIVIA
MOM_M5_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_M5_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_M5_CAP_EDGE_EXP_WOVIA = MOM_M5_CAP_EDGE_EXP AND MOM_M5_WOVIA
MOM_M5_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_M5_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
MOMDMY_6_WIVIA = (MOMDMY_6 ENCLOSE MOM_VIA5) OR (MOMDMY_6 ENCLOSE MOM_RV)
MOMDMY_6_WOVIA = MOMDMY_6 NOT MOMDMY_6_WIVIA
MOM_M6_WIVIA = MOMDMY_6_WIVIA AND M6
MOM_M6_WOVIA = MOMDMY_6_WOVIA AND M6
MOM_M6 = MOM_M6_WIVIA OR MOM_M6_WOVIA
MOM_M6_EDGE = M6 COIN INSIDE EDGE MOM_M6
MOM_M6_LINE_END = CONVEX EDGE MOM_M6_EDGE ANGLE1==90 ANGLE2==90
MOM_M6_SIDE_EDGE = MOM_M6_EDGE NOT COIN INSIDE EDGE MOM_M6_LINE_END
MOM_M6_CAP_EDGE_b1 = ENC MOM_M6_LINE_END MOMDMY_6 <= 4 OPPOSITE REGION
MOM_M6_CAP_EDGE_b2 = MOM_M6 NOT COIN EDGE MOM_M6_EDGE
MOM_M6_CAP_EDGE_b3 = (MOMDMY_6 TOUCH EDGE MOM_M6_CAP_EDGE_b2) NOT COIN EDGE MOM_M6_CAP_EDGE_b2
MOM_M6_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_M6_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_M6_CAP_EDGE_b1)
MOM_M6_CAP_EDGE_b5 = (MOMDMY_6 NOT (MOM_M6_CAP_EDGE_b1 OR MOM_M6)) INTERACT MOM_M6 == 1
MOM_M6_CAP_EDGE    = ((MOM_M6_SIDE_EDGE  NOT COIN EDGE MOMDMY_6) NOT COIN EDGE MOM_M6_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_M6_CAP_EDGE_b4
MOM_M6_CAP_EDGE_EXP = EXPAND EDGE MOM_M6_CAP_EDGE INSIDE BY 0.001
MOM_M6_CAP_EDGE_EXP_WIVIA = MOM_M6_CAP_EDGE_EXP AND MOM_M6_WIVIA
MOM_M6_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_M6_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_M6_CAP_EDGE_EXP_WOVIA = MOM_M6_CAP_EDGE_EXP AND MOM_M6_WOVIA
MOM_M6_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_M6_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
MOMDMY_AP_WIVIA = MOMDMY_AP ENCLOSE MOM_RV
MOMDMY_AP_WOVIA = MOMDMY_AP NOT MOMDMY_AP_WIVIA
MOM_AP_WIVIA = MOMDMY_AP_WIVIA AND AP
MOM_AP_WOVIA = MOMDMY_AP_WOVIA AND AP
MOM_AP = MOM_AP_WIVIA OR MOM_AP_WOVIA
MOM_AP_EDGE = AP COIN INSIDE EDGE MOM_AP
MOM_AP_LINE_END = CONVEX EDGE MOM_AP_EDGE ANGLE1==90 ANGLE2==90
MOM_AP_SIDE_EDGE = MOM_AP_EDGE NOT COIN INSIDE EDGE MOM_AP_LINE_END
MOM_AP_CAP_EDGE_b1 = ENC MOM_AP_LINE_END MOMDMY_AP <= 4 OPPOSITE REGION
MOM_AP_CAP_EDGE_b2 = MOM_AP NOT COIN EDGE MOM_AP_EDGE
MOM_AP_CAP_EDGE_b3 = (MOMDMY_AP TOUCH EDGE MOM_AP_CAP_EDGE_b2) NOT COIN EDGE MOM_AP_CAP_EDGE_b2
MOM_AP_CAP_EDGE_b4 = EXTENTS ((EXPAND EDGE MOM_AP_CAP_EDGE_b3 OUTSIDE BY GRID) OR MOM_AP_CAP_EDGE_b1)
MOM_AP_CAP_EDGE_b5 = (MOMDMY_AP NOT (MOM_AP_CAP_EDGE_b1 OR MOM_AP)) INTERACT MOM_AP == 1
MOM_AP_CAP_EDGE    = ((MOM_AP_SIDE_EDGE  NOT COIN EDGE MOMDMY_AP) NOT COIN EDGE MOM_AP_CAP_EDGE_b5) NOT COIN OUTSIDE EDGE MOM_AP_CAP_EDGE_b4
MOM_AP_CAP_EDGE_EXP = EXPAND EDGE MOM_AP_CAP_EDGE INSIDE BY 0.001
MOM_AP_CAP_EDGE_EXP_WIVIA = MOM_AP_CAP_EDGE_EXP AND MOM_AP_WIVIA
MOM_AP_CAP_EDGE_EXP_WIVIA_C = STAMP MOM_AP_CAP_EDGE_EXP_WIVIA BY CHIP_MOM_WIVIA
MOM_AP_CAP_EDGE_EXP_WOVIA = MOM_AP_CAP_EDGE_EXP AND MOM_AP_WOVIA
MOM_AP_CAP_EDGE_EXP_WOVIA_C = STAMP MOM_AP_CAP_EDGE_EXP_WOVIA BY CHIP_MOM_WOVIA
#IFDEF HALF_NODE
VARIABLE m1_thickness 0.16
#ELSE
VARIABLE m1_thickness 0.18
#ENDIF
#IFDEF HALF_NODE
VARIABLE m2_thickness 0.2
#ELSE
VARIABLE m2_thickness 0.22
#ENDIF
VARIABLE v1_thickness 0.175
#IFDEF HALF_NODE
VARIABLE m3_thickness 0.2
#ELSE
VARIABLE m3_thickness 0.22
#ENDIF
VARIABLE v2_thickness 0.175
#IFDEF HALF_NODE
VARIABLE m4_thickness 0.2
#ELSE
VARIABLE m4_thickness 0.22
#ENDIF
VARIABLE v3_thickness 0.175
VARIABLE m5_thickness 0.9
VARIABLE v4_thickness 0.595
VARIABLE m6_thickness 3.3
VARIABLE v5_thickness 0.595
#IFDEF 28K_AP
VARIABLE ap_thickness 2.8
#ELSE
VARIABLE ap_thickness 1.45
#ENDIF
VARIABLE rv_thickness 0.8
MOM.S.1
brace_data_0000000967
MOM.S.2.M1
brace_data_0000000968
MOM.S.2.M2
brace_data_0000000969
MOM.S.2.M3
brace_data_0000000970
MOM.S.2.M4
brace_data_0000000971
MOM.A.1
brace_data_0000000972
MOM.S.3.M1
brace_data_0000000973
MOM.S.3.M2
brace_data_0000000974
MOM.S.3.M3
brace_data_0000000975
MOM.S.3.M4
brace_data_0000000976
MOM.S.4.VIA1
brace_data_0000000977
MOM.S.4.VIA2
brace_data_0000000978
MOM.S.4.VIA3
brace_data_0000000979
MOM.A.2
brace_data_0000000980
VARIABLE IND_W_1  0.4
VARIABLE IND_W_2  0.6
VARIABLE IND_W_3  0.8
VARIABLE IND_S_1  0.4
VARIABLE IND_S_2  0.6
VARIABLE IND_S_3  0.8
VARIABLE IND_S_4  1.0
VARIABLE IND_S_5  2.0
VARIABLE IND_W_6  30.0
IND_REGION = SIZE INDDMY BY 12
IND_M1 =  M1 AND IND_REGION
IND_WideM11.5 = IND_M1 WITH WIDTH > 1.5
IND_WideM14.5 = IND_WideM11.5 WITH WIDTH > 4.5
IND_M2 =  M2 AND IND_REGION
IND_WideM21.5 = IND_M2 WITH WIDTH > 1.5
IND_WideM24.5 = IND_WideM21.5 WITH WIDTH > 4.5
IND_M3 =  M3 AND IND_REGION
IND_WideM31.5 = IND_M3 WITH WIDTH > 1.5
IND_WideM34.5 = IND_WideM31.5 WITH WIDTH > 4.5
IND_M4 =  M4 AND IND_REGION
IND_WideM41.5 = IND_M4 WITH WIDTH > 1.5
IND_WideM44.5 = IND_WideM41.5 WITH WIDTH > 4.5
IND_M5 =  M5 AND IND_REGION
IND_WideM51.5 = IND_M5 WITH WIDTH > 1.5
IND_WideM54.5 = IND_WideM51.5 WITH WIDTH > 4.5
IND_M6 =  M6 AND IND_REGION
IND_WideM61.5 = IND_M6 WITH WIDTH > 1.5
IND_WideM64.5 = IND_WideM61.5 WITH WIDTH > 4.5
IND.W.1 
brace_data_0000000981
IND.W.2.M2 
brace_data_0000000982
IND.W.2.M3 
brace_data_0000000983
IND.W.2.M4 
brace_data_0000000984
IND.W.3.M5 
brace_data_0000000985
IND.S.1 
brace_data_0000000986
IND.S.2.M2 
brace_data_0000000987
IND.S.2.M3 
brace_data_0000000988
IND.S.2.M4 
brace_data_0000000989
IND.S.3.M5 
brace_data_0000000990
IND.S.4.M1 
brace_data_0000000991
IND.S.5.M1 
brace_data_0000000992
IND.S.4.M2 
brace_data_0000000993
IND.S.5.M2 
brace_data_0000000994
IND.S.4.M3 
brace_data_0000000995
IND.S.5.M3 
brace_data_0000000996
IND.S.4.M4 
brace_data_0000000997
IND.S.5.M4 
brace_data_0000000998
IND.S.4.M5 
brace_data_0000000999
IND.S.5.M5 
brace_data_0000001000
IND.W.6.M5 
brace_data_0000001001
IND.W.6.M6 
brace_data_0000001002
IND.W.7 
brace_data_0000001003
REGION_A = SIZE INDDMY BY -4
REGION_B = INDDMY NOT REGION_A
REGION_C = (SIZE INDDMY BY 6 ) NOT INDDMY
REGION_D = (SIZE INDDMY BY 12 ) NOT (SIZE INDDMY BY 6)
REGION_BCD = (REGION_B OR REGION_C) OR REGION_D
IND_JOG_EDGE = CONVEX EDGE INDDMY ANGLE1==90 ANGLE2==270
IND_R_EDGE  = INDDMY NOT COIN EDGE IND_JOG_EDGE
PO_ISLAND_pre = POLY NOT OUTSIDE REGION_BCD
PO_ISLAND = (PO_ISLAND_pre NOT INTERACT OD) NOT INTERACT CO
M1_ISLAND_pre = M1 NOT OUTSIDE REGION_BCD
M1_ISLAND = ((RECTANGLE M1_ISLAND_pre > 2.99 < 3.01 BY > 2.99 < 3.01) NOT INTERACT VIA1) NOT INTERACT CO
M2_ISLAND_pre = M2 NOT OUTSIDE REGION_BCD
M2_ISLAND = ((RECTANGLE M2_ISLAND_pre > 2.99 < 3.01 BY > 2.99 < 3.01) NOT INTERACT VIA2) NOT INTERACT VIA1
M3_ISLAND_pre = M3 NOT OUTSIDE REGION_BCD
M3_ISLAND = ((RECTANGLE M3_ISLAND_pre > 2.99 < 3.01 BY > 2.99 < 3.01) NOT INTERACT VIA3) NOT INTERACT VIA2
M4_ISLAND_pre = M4 NOT OUTSIDE REGION_BCD
M4_ISLAND = ((RECTANGLE M4_ISLAND_pre > 2.99 < 3.01 BY > 2.99 < 3.01) NOT INTERACT VIA4) NOT INTERACT VIA3
M5_ISLAND_pre = M5 NOT OUTSIDE REGION_BCD
M5_ISLAND = ((RECTANGLE M5_ISLAND_pre > 2.99 < 3.01 BY > 2.99 < 3.01) NOT INTERACT VIA5) NOT INTERACT VIA4
M6_ISLAND_pre = M6 NOT OUTSIDE REGION_BCD
M6_ISLAND = ((RECTANGLE M6_ISLAND_pre > 2.99 < 3.01 BY > 2.99 < 3.01) NOT INTERACT VIA5) NOT INTERACT RV
IND_TM = (M6 AND IND_REGION) NOT M6_ISLAND
IND_TM_A = EXT IND_TM INDDMY < 0.01 ABUT>0<=135 INTERSECTING ONLY REGION
IND_TM_B = M6 TOUCH OUTSIDE EDGE IND_TM_A
IND_TM_B1 = EXPAND EDGE IND_TM_B INSIDE BY 0.005
IND_TM_B2 = EXPAND EDGE (INDDMY INSIDE EDGE IND_TM) BY 0.005
IND_TM_C = EXTENTS (IND_TM_B1 OR IND_TM_B2)
IND_TM_leading = (INT IND_TM_B < 30.005 OPPOSITE REGION) AND IND_TM_C
IND_TM_spiral = (IND_TM NOT IND_TM_leading) AND INDDMY
LEADING  = IND_TM_leading AND REGION_BCD
LEADING_EXD = SIZE LEADING BY 20
M1_GUARD_RING = (M1 NOT OUTSIDE REGION_B ) INTERACT (COOD INSIDE REGION_B)
M1_GUARD_RING_P = M1_GUARD_RING AND REGION_BCD
M1_GUARD_RING_Px = SIZE M1_GUARD_RING_P BY 20
M1_GUARD_RING_P1 = M1_GUARD_RING AND REGION_C
M1_GUARD_RING_P1x = SIZE M1_GUARD_RING_P1 BY 20
CTAP_EXD  = IND_CTAP AND REGION_BCD
CTAP_EXDx = SIZE CTAP_EXD BY 20
REGION_Bx = (((EXPAND EDGE IND_R_EDGE INSIDE BY 4) NOT LEADING_EXD) NOT M1_GUARD_RING_P1x) NOT CTAP_EXDx
CONNECT REGION_B
IND.DN.1.M1 
brace_data_0000001004
IND.DN.1.M2 
brace_data_0000001005
IND.DN.1.M3 
brace_data_0000001006
IND.DN.1.M4 
brace_data_0000001007
IND.DN.1.M5 
brace_data_0000001008
IND.DN.1.M6 
brace_data_0000001009
IND.R.8.M1 
brace_data_0000001010
IND.R.8.M2 
brace_data_0000001011
IND.R.8.M3 
brace_data_0000001012
IND.R.8.M4 
brace_data_0000001013
IND.R.8.M5 
brace_data_0000001014
IND.R.8.M6 
brace_data_0000001015
IND.R.1 
brace_data_0000001016
IND.R.2_IND.R.3.VIA4 
brace_data_0000001017
IND.R.2_IND.R.3.VIA5 
brace_data_0000001018
IND.R.4 
brace_data_0000001019
IND.R.13 
brace_data_0000001020
IND.R.6 
brace_data_0000001021
#IFDEF FULL_CHIP
IND.DN.6 
brace_data_0000001022
IND.DN.9 
brace_data_0000001023
#ENDIF
IND.DN.7.M1 
brace_data_0000001024
IND.DN.7.M2 
brace_data_0000001025
IND.DN.7.M3 
brace_data_0000001026
IND.DN.7.M4 
brace_data_0000001027
IND.DN.7.M5 
brace_data_0000001028
IND.DN.8.M1 
brace_data_0000001029
IND.DN.8.M2 
brace_data_0000001030
IND.DN.8.M3 
brace_data_0000001031
IND.DN.8.M4 
brace_data_0000001032
IND.DN.8.M5 
brace_data_0000001033
#IFDEF FULL_CHIP
CSR.R.1.DNWi 
brace_data_0000001034
CSR.R.1.NWi 
brace_data_0000001035
CSR.R.1.OD_18i 
brace_data_0000001036
CSR.R.1.OD_25i 
brace_data_0000001037
CSR.R.1.OD25_33 
brace_data_0000001038
CSR.R.1.OD25_18 
brace_data_0000001039
CSR.R.1.OD_33i 
brace_data_0000001040
CSR.R.1.OD_DECAP 
brace_data_0000001041
CSR.R.1.PPi 
brace_data_0000001042
CSR.R.1.NPi 
brace_data_0000001043
CSR.R.1.COi 
brace_data_0000001044
CSR.R.1.CO_PUSH 
brace_data_0000001045
CSR.R.1.CBi 
brace_data_0000001046
CSR.R.1.CB2i 
brace_data_0000001047
CSR.R.1.RPOi 
brace_data_0000001048
CSR.R.1.NT_Ni 
brace_data_0000001049
CSR.R.1.NCap_NTNi 
brace_data_0000001050
CSR.R.1.FWALi 
brace_data_0000001051
CSR.R.1.FWCUi 
brace_data_0000001052
CSR.R.1.POFUSE 
brace_data_0000001053
CSR.R.1.FUSELINK 
brace_data_0000001054
CSR.R.1.PMi 
brace_data_0000001055
CSR.R.1.PM1i 
brace_data_0000001056
CSR.R.1.PM2i 
brace_data_0000001057
CSR.R.1.SEALRINGi 
brace_data_0000001058
CSR.R.1.VTH_Ni 
brace_data_0000001059
CSR.R.1.VTH_Pi 
brace_data_0000001060
CSR.R.1.VTL_Ni 
brace_data_0000001061
CSR.R.1.VTL_Pi 
brace_data_0000001062
CSR.R.1.UHVT_Ni 
brace_data_0000001063
CSR.R.1.UHVT_Pi 
brace_data_0000001064
CSR.R.1.CBDi 
brace_data_0000001065
CSR.R.1.UBMi 
brace_data_0000001066
CSR.R.1.RH 
brace_data_0000001067
CSR.R.1.ESD3 
brace_data_0000001068
CSR.R.1.VARi 
brace_data_0000001069
CSR.R.1.APi 
brace_data_0000001070
CSR.R.1.Cu_PPIi 
brace_data_0000001071
CSR.R.1.CBMi 
brace_data_0000001072
CSR.R.1.CTMi 
brace_data_0000001073
CSR.R.1.RVi 
brace_data_0000001074
CSR.R.1.DCOi 
brace_data_0000001075
CSR.R.1.HVD_N 
brace_data_0000001076
CSR.R.1.HVD_P 
brace_data_0000001077
CSR.R.1.HVD_N_nw 
brace_data_0000001078
CSR.R.1.BJTDMY 
brace_data_0000001079
CSR.R.1.NWDMY 
brace_data_0000001080
CSR.R.1.RPDMY 
brace_data_0000001081
CSR.R.1.PMDMY 
brace_data_0000001082
CSR.R.1.SDI 
brace_data_0000001083
CSR.R.1.ESD1DMY 
brace_data_0000001084
CSR.R.1.ESD2DMY 
brace_data_0000001085
CSR.R.1.LMARK 
brace_data_0000001086
CSR.R.1.SRM 
brace_data_0000001087
CSR.R.1.CSRDMY 
brace_data_0000001088
CSR.R.1.CDUDMY 
brace_data_0000001089
CSR.R.1.TCDDMY 
brace_data_0000001090
CSR.R.1.LOGO 
brace_data_0000001091
CSR.R.1.INDDMY 
brace_data_0000001092
CSR.R.1.CTMDMY 
brace_data_0000001093
CSR.R.1.CTMDMY_10 
brace_data_0000001094
CSR.R.1.CTMDMY_15 
brace_data_0000001095
CSR.R.1.CTMDMY_20 
brace_data_0000001096
CSR.R.1.MOMDMY_1 
brace_data_0000001097
CSR.R.1.MOMDMY_2 
brace_data_0000001098
CSR.R.1.MOMDMY_3 
brace_data_0000001099
CSR.R.1.MOMDMY_4 
brace_data_0000001100
CSR.R.1.MOMDMY_5 
brace_data_0000001101
CSR.R.1.MOMDMY_6 
brace_data_0000001102
CSR.R.1.MOMDMY_AP 
brace_data_0000001103
CSR.R.1.RTMOMDMY 
brace_data_0000001104
CSR.R.1.RFDMY 
brace_data_0000001105
CSR.R.1.WBDMY 
brace_data_0000001106
CSR.R.1.DIODMY 
brace_data_0000001107
CSR.R.1.SRAMDMY 
brace_data_0000001108
CSR.R.1.SRAMDMY_4 
brace_data_0000001109
CSR.R.1.SRAMDMY_5 
brace_data_0000001110
CSR.R.1.SRAMDMY_1 
brace_data_0000001111
CSR.R.1.RAM1TDMY 
brace_data_0000001112
CSR.R.1.OD1Ti 
brace_data_0000001113
CSR.R.1.CLDDi 
brace_data_0000001114
CSR.R.1.CROWNi 
brace_data_0000001115
CSR.R.1.P3i 
brace_data_0000001116
CSR.R.1.SNCTi 
brace_data_0000001117
CSR.R.1.LUPWDMY 
brace_data_0000001118
CSR.R.1.VDDDMY 
brace_data_0000001119
CSR.R.1.VSSDMY 
brace_data_0000001120
CSR.R.1.M1i 
brace_data_0000001121
CSR.R.1.M1_real 
brace_data_0000001122
CSR.R.1.DM1_O 
brace_data_0000001123
CSR.R.1.DUM1 
brace_data_0000001124
CSR.R.1.M2i 
brace_data_0000001125
CSR.R.1.M2_real 
brace_data_0000001126
CSR.R.1.DM2_O 
brace_data_0000001127
CSR.R.1.DUM2 
brace_data_0000001128
CSR.R.1.M3i 
brace_data_0000001129
CSR.R.1.M3_real 
brace_data_0000001130
CSR.R.1.DM3_O 
brace_data_0000001131
CSR.R.1.DUM3 
brace_data_0000001132
CSR.R.1.M4i 
brace_data_0000001133
CSR.R.1.M4_real 
brace_data_0000001134
CSR.R.1.DM4_O 
brace_data_0000001135
CSR.R.1.DUM4 
brace_data_0000001136
CSR.R.1.M5_OLD 
brace_data_0000001137
CSR.R.1.M5_NEW 
brace_data_0000001138
CSR.R.1.DUM5_OLD 
brace_data_0000001139
CSR.R.1.DUM5_NEW 
brace_data_0000001140
CSR.R.1.M6_OLD 
brace_data_0000001141
CSR.R.1.M6_NEW 
brace_data_0000001142
CSR.R.1.DUM6_OLD 
brace_data_0000001143
CSR.R.1.DUM6_NEW 
brace_data_0000001144
CSR.R.1.M7_OLD 
brace_data_0000001145
CSR.R.1.M7_NEW 
brace_data_0000001146
CSR.R.1.DUM7_OLD 
brace_data_0000001147
CSR.R.1.DUM7_NEW 
brace_data_0000001148
CSR.R.1.VIA1i 
brace_data_0000001149
CSR.R.1.VIA2i 
brace_data_0000001150
CSR.R.1.VIA3i 
brace_data_0000001151
CSR.R.1.VIA4_OLD 
brace_data_0000001152
CSR.R.1.VIA4_NEW 
brace_data_0000001153
CSR.R.1.VIA5_OLD 
brace_data_0000001154
CSR.R.1.VIA5_NEW 
brace_data_0000001155
CSR.R.1.VIA6_OLD 
brace_data_0000001156
CSR.R.1.VIA6_NEW 
brace_data_0000001157
CSR.R.1.ODi 
brace_data_0000001158
CSR.R.1.DOD 
brace_data_0000001159
CSR.R.1.POi 
brace_data_0000001160
CSR.R.1.DPO 
brace_data_0000001161
CSR.R.1.mVTLi 
brace_data_0000001162
#ENDIF
LMARK_METAL_CSR = LMARK_METAL AND CSRDMY
LMARK_SLOT_CSR = LSLOT AND CSRDMY
LMARK_MS_CSR = LMARK_METAL_CSR OR LMARK_SLOT_CSR
#IFDEF WLCSP_SEALRING
CSR_ED = CONVEX EDGE CSRDMY ANGLE1 == 135 ANGLE2 == 45
#ELSE
CSR_ED = CONVEX EDGE CSRDMY ANGLE1 == 90 ANGLE2 == 45
#ENDIF
CSR_EXD = EXPAND EDGE CSR_ED INSIDE BY 2
CC_CO = ((CO AND CSRDMY) NOT VIA_EXD) NOT CSR_EXD
CC_M1 = M1 AND CSRDMY
CC_V1 = ((VIA1 AND CSRDMY) NOT VIA_EXD) NOT CSR_EXD
CC_M1_HOLE  = HOLES (SIZE CC_M1 BY 0.6 UNDEROVER)
CC_M1_LSLOT = AREA CC_M1_HOLE > 300
CC_M1_FENCE_HOLE  = AREA CC_M1_HOLE <= 300
CC_M1_FENCE_CROSS = SIZE ((CC_M1 NOT (EXPAND EDGE CC_M1_FENCE_HOLE OUTSIDE BY 2.5)) NOT INTERACT SEALRING ) BY 0.4 UNDEROVER
CC_M2 = M2 AND CSRDMY
CC_V2 = ((VIA2 AND CSRDMY) NOT VIA_EXD) NOT CSR_EXD
CC_M2_HOLE  = HOLES (SIZE CC_M2 BY 0.6 UNDEROVER)
CC_M2_LSLOT = AREA CC_M2_HOLE > 300
CC_M2_FENCE_HOLE  = AREA CC_M2_HOLE <= 300
CC_M2_FENCE_CROSS = SIZE ((CC_M2 NOT (EXPAND EDGE CC_M2_FENCE_HOLE OUTSIDE BY 2.5)) NOT INTERACT SEALRING ) BY 0.4 UNDEROVER
CC_M3 = M3 AND CSRDMY
CC_V3 = ((VIA3 AND CSRDMY) NOT VIA_EXD) NOT CSR_EXD
CC_M3_HOLE  = HOLES (SIZE CC_M3 BY 0.6 UNDEROVER)
CC_M3_LSLOT = AREA CC_M3_HOLE > 300
CC_M3_FENCE_HOLE  = AREA CC_M3_HOLE <= 300
CC_M3_FENCE_CROSS = SIZE ((CC_M3 NOT (EXPAND EDGE CC_M3_FENCE_HOLE OUTSIDE BY 2.5)) NOT INTERACT SEALRING ) BY 0.4 UNDEROVER
CC_M4 = M4 AND CSRDMY
CC_V4 = ((VIA4 AND CSRDMY) NOT VIA_EXD) NOT CSR_EXD
CC_M4_HOLE  = HOLES (SIZE CC_M4 BY 0.6 UNDEROVER)
CC_M4_LSLOT = AREA CC_M4_HOLE > 300
CC_M4_FENCE_HOLE  = AREA CC_M4_HOLE <= 300
CC_M4_FENCE_CROSS = SIZE ((CC_M4 NOT (EXPAND EDGE CC_M4_FENCE_HOLE OUTSIDE BY 2.5)) NOT INTERACT SEALRING ) BY 0.4 UNDEROVER
CC_M5 = M5 AND CSRDMY
CC_V5 = ((VIA5 AND CSRDMY) NOT VIA_EXD) NOT CSR_EXD
CC_M5_HOLE  = HOLES (SIZE CC_M5 BY 0.6 UNDEROVER)
CC_M5_LSLOT = AREA CC_M5_HOLE > 300
CC_M5_FENCE_HOLE  = AREA CC_M5_HOLE <= 300
CC_M5_FENCE_CROSS = SIZE ((CC_M5 NOT (EXPAND EDGE CC_M5_FENCE_HOLE OUTSIDE BY 2.5)) NOT INTERACT SEALRING ) BY 0.4 UNDEROVER
CC_M6 = M6i AND CSRDMY
CSR.R.2A 
brace_data_0000001163
CSR.R.2B 
brace_data_0000001164
CSR.R.2C 
brace_data_0000001165
CSR.R.2D 
brace_data_0000001166
CSR.R.2E 
brace_data_0000001167
CSR.R.2F 
brace_data_0000001168
CSR.S.1 
brace_data_0000001169
CSR.EN.1 
brace_data_0000001170
CSR.S.2 
brace_data_0000001171
CSR.EN.2 
brace_data_0000001172
CSR.S.4 
brace_data_0000001173
CSR.EN.4 
brace_data_0000001174
CSR.R.3.CO 
brace_data_0000001175
CSR.R.3.VIA1 
brace_data_0000001176
CSR.R.3.VIA2 
brace_data_0000001177
CSR.R.3.VIA3 
brace_data_0000001178
CSR.R.3.VIA4 
brace_data_0000001179
CSR.R.3.VIA5 
brace_data_0000001180
CSR.W.1 
brace_data_0000001181
CSR.W.2 
brace_data_0000001182
CSR.L.1 
brace_data_0000001183
#IFDEF WLCSP_SEALRING
CSR.EN.5.1 
brace_data_0000001184
#ELSE
CSR.EN.5 
brace_data_0000001185
#ENDIF
#IFDEF WLCSP_SEALRING
TM_SR_EXT = (EXTENT M6) INTERACT CSRDMY
TM_SR_CORNER_A = INT TM_SR_EXT <= CSR_EN_6_1_L1 ABUT == 90 REGION INTERSECTING ONLY
TM_SR_CORNER_B = INT TM_SR_EXT <= CSR_EN_6_1_L2 ABUT == 90 REGION INTERSECTING ONLY
CSR.EN.6.1.M1i 
brace_data_0000001186
CSR.EN.6.1.M2i 
brace_data_0000001187
CSR.EN.6.1.M3i 
brace_data_0000001188
CSR.EN.6.1.M4i 
brace_data_0000001189
CSR.EN.6.1.M5i 
brace_data_0000001190
CSR.EN.6.1.M6i 
brace_data_0000001191
CSR.EN.6.1.APi 
brace_data_0000001192
#ELSE
CSR.EN.6 
brace_data_0000001193
#ENDIF
CSR.EN.7.VIA1 
brace_data_0000001194
CSR.EN.7.VIA2 
brace_data_0000001195
CSR.EN.7.VIA3 
brace_data_0000001196
CSR.EN.7.VIA4 
brace_data_0000001197
CSR.EN.7.VIA5 
brace_data_0000001198
CSR.EN.8 
brace_data_0000001199
ASSH = HOLES ((M1i AND SR_RING) INTERACT SEALRING) INNER
ASS  = SIZE ASSH BY SR_S_1 UNDEROVER
CORR = SIZE ASS BY -SR_S_1
ISOR = ASS NOT CORR
#IFDEF FULL_CHIP
SR.S.1 
brace_data_0000001200
SR.S.1.M1 
brace_data_0000001201
SR.S.1.M2 
brace_data_0000001202
SR.S.1.M3 
brace_data_0000001203
SR.S.1.M4 
brace_data_0000001204
SR.S.1.M5 
brace_data_0000001205
SR.S.1.M6 
brace_data_0000001206
#IFDEF WLCSP_SEALRING
SR.S.1.AP 
brace_data_0000001207
SR.AP.WARN 
brace_data_0000001208
#ELSE
SR.S.1.AP 
brace_data_0000001209
SR.AP.WARN 
brace_data_0000001210
#ENDIF
SR.CB2.WARN 
brace_data_0000001211
SR.CB.WARN 
brace_data_0000001212
SR.CBD_RV.WARN 
brace_data_0000001213
SR.UBM.WARN 
brace_data_0000001214
SR.CO_VIA.WARN 
brace_data_0000001215
SR.R.0 
brace_data_0000001216
SR.EN.1 
brace_data_0000001217
#ENDIF
#IFDEF FULL_CHIP
CDU.R.1 
brace_data_0000001218
#ENDIF
CDU.R.2 
brace_data_0000001219
CDU.WARN1 
brace_data_0000001220
CDU.WARN2 
brace_data_0000001221
DM1.W.1 
brace_data_0000001222
DM1.W.2 
brace_data_0000001223
DM1.S.1 
brace_data_0000001224
DM1.S.2 
brace_data_0000001225
DM1.S.3 
brace_data_0000001226
DM1.S.3.1 
brace_data_0000001227
DM1.S.4 
brace_data_0000001228
DM1.S.5 
brace_data_0000001229
DM1.S.5.1 
brace_data_0000001230
DM1.S.7 
brace_data_0000001231
DM1.S.8 
brace_data_0000001232
DM1.S.10 
brace_data_0000001233
#IFDEF FULL_CHIP
DM1.EN.1 
brace_data_0000001234
#ENDIF
DM1.A.1 
brace_data_0000001235
DM1.A.2 
brace_data_0000001236
#IFDEF FULL_CHIP
DM1.R.1 
brace_data_0000001237
#ENDIF
DM1.R.3 
brace_data_0000001238
DM1_O.R.1 
brace_data_0000001239
DM2.W.1 
brace_data_0000001240
DM2.W.2 
brace_data_0000001241
DM2.S.1 
brace_data_0000001242
DM2.S.2 
brace_data_0000001243
DM2.S.3 
brace_data_0000001244
DM2.S.3.1 
brace_data_0000001245
DM2.S.4 
brace_data_0000001246
DM2.S.5 
brace_data_0000001247
DM2.S.5.1 
brace_data_0000001248
DM2.S.7 
brace_data_0000001249
DM2.S.8 
brace_data_0000001250
DM2.S.10 
brace_data_0000001251
#IFDEF FULL_CHIP
DM2.EN.1 
brace_data_0000001252
#ENDIF
DM2.A.1 
brace_data_0000001253
DM2.A.2 
brace_data_0000001254
#IFDEF FULL_CHIP
DM2.R.1 
brace_data_0000001255
#ENDIF
DM2.R.3 
brace_data_0000001256
DM2_O.R.1 
brace_data_0000001257
DM3.W.1 
brace_data_0000001258
DM3.W.2 
brace_data_0000001259
DM3.S.1 
brace_data_0000001260
DM3.S.2 
brace_data_0000001261
DM3.S.3 
brace_data_0000001262
DM3.S.3.1 
brace_data_0000001263
DM3.S.4 
brace_data_0000001264
DM3.S.5 
brace_data_0000001265
DM3.S.5.1 
brace_data_0000001266
DM3.S.7 
brace_data_0000001267
DM3.S.8 
brace_data_0000001268
DM3.S.10 
brace_data_0000001269
#IFDEF FULL_CHIP
DM3.EN.1 
brace_data_0000001270
#ENDIF
DM3.A.1 
brace_data_0000001271
DM3.A.2 
brace_data_0000001272
#IFDEF FULL_CHIP
DM3.R.1 
brace_data_0000001273
#ENDIF
DM3.R.3 
brace_data_0000001274
DM3_O.R.1 
brace_data_0000001275
DM4.W.1 
brace_data_0000001276
DM4.W.2 
brace_data_0000001277
DM4.S.1 
brace_data_0000001278
DM4.S.2 
brace_data_0000001279
DM4.S.3 
brace_data_0000001280
DM4.S.3.1 
brace_data_0000001281
DM4.S.4 
brace_data_0000001282
DM4.S.5 
brace_data_0000001283
DM4.S.5.1 
brace_data_0000001284
DM4.S.7 
brace_data_0000001285
DM4.S.8 
brace_data_0000001286
DM4.S.9 
brace_data_0000001287
DM4.S.10 
brace_data_0000001288
#IFDEF FULL_CHIP
DM4.EN.1 
brace_data_0000001289
#ENDIF
DM4.A.1 
brace_data_0000001290
DM4.A.2 
brace_data_0000001291
#IFDEF FULL_CHIP
DM4.R.1 
brace_data_0000001292
#ENDIF
DM4.R.3 
brace_data_0000001293
DM4_O.R.1 
brace_data_0000001294
DM5.W.1 
brace_data_0000001295
DM5.W.2 
brace_data_0000001296
DM5.S.1 
brace_data_0000001297
DM5.S.2 
brace_data_0000001298
DM5.S.3 
brace_data_0000001299
DM5.S.4 
brace_data_0000001300
DM5.S.5 
brace_data_0000001301
DM5.S.5.1 
brace_data_0000001302
DM5.S.7 
brace_data_0000001303
DM5.S.8 
brace_data_0000001304
#IFDEF FULL_CHIP
DM5.EN.1 
brace_data_0000001305
#ENDIF
DM5.A.1 
brace_data_0000001306
DM5.A.2 
brace_data_0000001307
#IFDEF FULL_CHIP
DM5.R.1 
brace_data_0000001308
#ENDIF
DM5.R.3 
brace_data_0000001309
DM6.W.1 
brace_data_0000001310
DM6.W.2 
brace_data_0000001311
DM6.S.1 
brace_data_0000001312
DM6.S.2 
brace_data_0000001313
M6Wide_1.5 = (SIZE M6i BY  DM6_S_3_1_W/2 UNDEROVER TRUNCATE DM6_S_3_1_W/2) AND M6i
M6Wide_4.5 = (SIZE M6Wide_1.5 BY DM6_S_3_W/2 UNDEROVER TRUNCATE DM6_S_3_W/2) AND M6Wide_1.5
DM6.S.3 
brace_data_0000001314
DM6.S.4 
brace_data_0000001315
DM6.S.5 
brace_data_0000001316
DM6.S.5.1 
brace_data_0000001317
DM6.S.7 
brace_data_0000001318
DM6.S.8 
brace_data_0000001319
#IFDEF FULL_CHIP
DM6.EN.1 
brace_data_0000001320
#ENDIF
DM6.A.1 
brace_data_0000001321
DM6.A.2 
brace_data_0000001322
#IFDEF FULL_CHIP
DM6.R.1 
brace_data_0000001323
#ENDIF
DM6.R.3 
brace_data_0000001324
RV_CHECK = RV NOT INSIDE SR_EDGE
RV.W.1 
brace_data_0000001325
RV.S.1 
brace_data_0000001326
RV.S.3 
brace_data_0000001327
RV.EN.1 
brace_data_0000001328
#IFDEF WLCSP_SEALRING
RV.R.1 
brace_data_0000001329
#ELSE
RV.R.1 
brace_data_0000001330
#ENDIF
AP_CHECK = AP NOT INSIDE SR_EDGE
CHIP_INT_AP = CHIP_EDGE INTERACT (FW_AP OR RV)
CB_CHECK   = CB NOT INSIDE SR_EDGE
CB2_CHECK  = CB2 NOT INSIDE SR_EDGE
CB_CHECK2  = CB_CHECK INTERACT CHIP_INT_AP
CB2_CHECK2  = CB2_CHECK INTERACT CHIP_INT_AP
AP.W.1 
brace_data_0000001331
AP.W.2 
brace_data_0000001332
AP.S.1 
brace_data_0000001333
AP.S.2 
brace_data_0000001334
AP.S.3 
brace_data_0000001335
AP.EN.1 
brace_data_0000001336
AP.EN.2 
brace_data_0000001337
#IFDEF FULL_CHIP
AP.DN.1.L 
brace_data_0000001338
AP.DN.1.H 
brace_data_0000001339
#ENDIF
F_M0    = FW_AP AND POLY
F_V0    = FW_AP AND CO
F_M1    = FW_AP AND M1
F_V1	= FW_AP AND VIA1
F_M2    = FW_AP AND M2
F_V2	= FW_AP AND VIA2
F_M3    = FW_AP AND M3
F_V3	= FW_AP AND VIA3
F_M4    = FW_AP AND M4
F_V4	= FW_AP AND VIA4
F_M5    = FW_AP AND M5
F_V5	= FW_AP AND VIA5
F_M6    = FW_AP AND M6
MTFS    = FW_AP AND AP
R_M0    = RNGX AND POLY
R_V0    = RNGX AND CO
R_M1    = RNGX AND M1
R_V1    = RNGX AND VIA1
R_M2    = RNGX AND M2
R_V2    = RNGX AND VIA2
R_M3    = RNGX AND M3
R_V3    = RNGX AND VIA3
R_M4    = RNGX AND M4
R_V4    = RNGX AND VIA4
R_M5    = RNGX AND M5
R_V5    = RNGX AND VIA5
R_M6    = RNGX AND M6
H_RM1   = HOLES R_M1
H_RV1   = HOLES R_V1
H_RM2   = HOLES R_M2
H_RV2   = HOLES R_V2
H_RM3   = HOLES R_M3
H_RV3   = HOLES R_V3
H_RM4   = HOLES R_M4
H_RV4   = HOLES R_V4
H_RM5   = HOLES R_M5
H_RV5   = HOLES R_V5
H_RM6  = HOLES R_M6
MTFS_W = CONVEX EDGE MTFS ANGLE1==270 ANGLE2==270
MTFS_B = CONVEX EDGE MTFS ANGLE1==270 ANGLE2==90
MTFS_D = CONVEX EDGE MTFS ANGLE1==90  ANGLE2==90
MTFS_E  = INT MTFS_D MTFS_B < 15 ABUT<90 OPPOSITE REGION
MTFS_EA = MTFS_E AND MTFS
MTFS_R  = MTFS NOT MTFS_EA
MTFS_CR = INT MTFS_W < 3 ABUT<90 OPPOSITE REGION
CONNECT F_V0 MTFS
CONNECT F_V1 MTFS
CONNECT F_V2 MTFS
CONNECT F_V3 MTFS
CONNECT F_V4 MTFS
CONNECT F_V5 MTFS
CONNECT F_M0 MTFS
CONNECT F_M1 MTFS
CONNECT F_M2 MTFS
CONNECT F_M3 MTFS
CONNECT F_M4 MTFS
CONNECT F_M5 MTFS
CONNECT F_M6 MTFS
FUSE_WARN.1 
brace_data_0000001340
FUSE_WARN.2 
brace_data_0000001341
FUSE_WARN.3 
brace_data_0000001342
FU.W.1 
brace_data_0000001343
FU.W.2 
brace_data_0000001344
FU.L.1 
brace_data_0000001345
FU.L.1.1 
brace_data_0000001346
FU.S.1 
brace_data_0000001347
FU.S.1.1 
brace_data_0000001348
FU.S.2_CO 
brace_data_0000001349
FU.S.2_V1 
brace_data_0000001350
FU.S.2_V2 
brace_data_0000001351
FU.S.2_V3 
brace_data_0000001352
FU.S.2_V4 
brace_data_0000001353
FU.S.2_V5 
brace_data_0000001354
FU.S.3_PO 
brace_data_0000001355
FU.S.3_M1 
brace_data_0000001356
FU.S.3_M2 
brace_data_0000001357
FU.S.3_M3 
brace_data_0000001358
FU.S.3_M4 
brace_data_0000001359
FU.S.3_M5 
brace_data_0000001360
FU.S.3_M6 
brace_data_0000001361
#IFDEF FULL_CHIP
FU.S.4 
brace_data_0000001362
#ENDIF
FU.EN.1 
brace_data_0000001363
FU.EN.1.1 
brace_data_0000001364
FU.EN.2 
brace_data_0000001365
FU.EN.3.M1 
brace_data_0000001366
FU.EN.3.M2 
brace_data_0000001367
FU.EN.3.M3 
brace_data_0000001368
FU.EN.3.M4 
brace_data_0000001369
FU.EN.3.M5 
brace_data_0000001370
FU.EN.3.M6 
brace_data_0000001371
FU.A.1 
brace_data_0000001372
FU.R.1 
brace_data_0000001373
FU.R.2 
brace_data_0000001374
FU.R.3 
brace_data_0000001375
PR.W.1_V1 
brace_data_0000001376
PR.EN.1_V1 
brace_data_0000001377
PR.W.1_V2 
brace_data_0000001378
PR.EN.1_V2 
brace_data_0000001379
PR.W.1_V3 
brace_data_0000001380
PR.EN.1_V3 
brace_data_0000001381
PR.W.1_V4 
brace_data_0000001382
PR.EN.1_V4 
brace_data_0000001383
PR.W.1_V5 
brace_data_0000001384
PR.EN.1_V5 
brace_data_0000001385
PR.S.1_M1 
brace_data_0000001386
PR.S.1_M2 
brace_data_0000001387
PR.S.1_M3 
brace_data_0000001388
PR.S.1_M4 
brace_data_0000001389
PR.S.1_M5 
brace_data_0000001390
PR.S.1_M6 
brace_data_0000001391
PR.S.2_M1 
brace_data_0000001392
PR.S.2_M2 
brace_data_0000001393
PR.S.2_M3 
brace_data_0000001394
PR.S.2_M4 
brace_data_0000001395
PR.S.2_M5 
brace_data_0000001396
PR.S.2_M6 
brace_data_0000001397
PR.S.3 
brace_data_0000001398
PR.EX.2 
brace_data_0000001399
PR.R.1 
brace_data_0000001400
PR.R.2 
brace_data_0000001401
LMARK_NOT_CSR = LMARK OUTSIDE CSRDMY
MTLM = M6i AND LMARK_NOT_CSR
MTLMH = HOLES MTLM EMPTY
MTLMH_L = CONVEX EDGE MTLMH ANGLE1==90 ANGLE2==90 WITH LENGTH <= LW_W_1_MAX
MTLMH_P = CONVEX EDGE MTLMH ANGLE1==90 ANGLE2==90 WITH LENGTH >= LW_L_1_MIN
LW.W.1 
brace_data_0000001402
LW.L.1 
brace_data_0000001403
LW.EN.1 
brace_data_0000001404
LW.EN.2 
brace_data_0000001405
LW.S.1 
brace_data_0000001406
#IFDEF FULL_CHIP
LW.S.2 
brace_data_0000001407
#ENDIF
LW.R.1 
brace_data_0000001408
LW.R.2 
brace_data_0000001409
LW.R.3 
brace_data_0000001410
LW.R.4 
brace_data_0000001411
#ENDIF
LOGO.S.1 
brace_data_0000001412
LOGO.O.1 
brace_data_0000001413
#IFDEF FRONT_END
#IFDEF DISCONNECT_AFTER_RESISTOR
NSTPiu = NSTPi NOT EMPTYi
PSTPiu = PSTPi NOT EMPTYi
NSDiu  = NSDc  NOT EMPTYi
PSDiu  = PSDc  NOT EMPTYi
CBiu   = CBi   NOT EMPTYi
CB2iu  = CB2i  NOT EMPTYi
UBMniu = UBMn  NOT EMPTYi
UBMdiu = UBMd  NOT EMPTYi
PWR_M1iu_BY_TEXT = M1i WITH TEXT VDD_TEXT 131 PRIMARY ONLY
GND_M1iu_BY_TEXT = M1i WITH TEXT VSS_TEXT 131 PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1i WITH TEXT PAD_TEXT 131 PRIMARY ONLY
PWR_M2iu_BY_TEXT = M2i WITH TEXT VDD_TEXT 132 PRIMARY ONLY
GND_M2iu_BY_TEXT = M2i WITH TEXT VSS_TEXT 132 PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2i WITH TEXT PAD_TEXT 132 PRIMARY ONLY
PWR_M3iu_BY_TEXT = M3i WITH TEXT VDD_TEXT 133 PRIMARY ONLY
GND_M3iu_BY_TEXT = M3i WITH TEXT VSS_TEXT 133 PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3i WITH TEXT PAD_TEXT 133 PRIMARY ONLY
PWR_M4iu_BY_TEXT = M4i WITH TEXT VDD_TEXT 134 PRIMARY ONLY
GND_M4iu_BY_TEXT = M4i WITH TEXT VSS_TEXT 134 PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4i WITH TEXT PAD_TEXT 134 PRIMARY ONLY
PWR_M5iu_BY_TEXT = M5i WITH TEXT VDD_TEXT 135 PRIMARY ONLY
GND_M5iu_BY_TEXT = M5i WITH TEXT VSS_TEXT 135 PRIMARY ONLY
PAD_M5iu_BY_TEXT = M5i WITH TEXT PAD_TEXT 135 PRIMARY ONLY
PWR_M6iu_BY_TEXT = M6i WITH TEXT VDD_TEXT 136 PRIMARY ONLY
GND_M6iu_BY_TEXT = M6i WITH TEXT VSS_TEXT 136 PRIMARY ONLY
PAD_M6iu_BY_TEXT = M6i WITH TEXT PAD_TEXT 136 PRIMARY ONLY
PWR_APiu_BY_TEXT = APi WITH TEXT VDD_TEXT 126 PRIMARY ONLY
GND_APiu_BY_TEXT = APi WITH TEXT VSS_TEXT 126 PRIMARY ONLY
PAD_APiu_BY_TEXT = APi WITH TEXT PAD_TEXT 126 PRIMARY ONLY
#ELSE
NSTPiu = NSTPu NOT EMPTYi
PSTPiu = PSTPu NOT EMPTYi
NSDiu  = NSDu  NOT EMPTYi
PSDiu  = PSDu  NOT EMPTYi
CBiu   = CBu   NOT EMPTYi
CB2iu  = CB2u  NOT EMPTYi
UBMniu = UBMnu NOT EMPTYi
UBMdiu = UBMdu NOT EMPTYi
PWR_M1iu_BY_TEXT = M1u WITH TEXT VDD_TEXT 131 PRIMARY ONLY
GND_M1iu_BY_TEXT = M1u WITH TEXT VSS_TEXT 131 PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1u WITH TEXT PAD_TEXT 131 PRIMARY ONLY
PWR_M2iu_BY_TEXT = M2u WITH TEXT VDD_TEXT 132 PRIMARY ONLY
GND_M2iu_BY_TEXT = M2u WITH TEXT VSS_TEXT 132 PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2u WITH TEXT PAD_TEXT 132 PRIMARY ONLY
PWR_M3iu_BY_TEXT = M3u WITH TEXT VDD_TEXT 133 PRIMARY ONLY
GND_M3iu_BY_TEXT = M3u WITH TEXT VSS_TEXT 133 PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3u WITH TEXT PAD_TEXT 133 PRIMARY ONLY
PWR_M4iu_BY_TEXT = M4u WITH TEXT VDD_TEXT 134 PRIMARY ONLY
GND_M4iu_BY_TEXT = M4u WITH TEXT VSS_TEXT 134 PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4u WITH TEXT PAD_TEXT 134 PRIMARY ONLY
PWR_M5iu_BY_TEXT = M5u WITH TEXT VDD_TEXT 135 PRIMARY ONLY
GND_M5iu_BY_TEXT = M5u WITH TEXT VSS_TEXT 135 PRIMARY ONLY
PAD_M5iu_BY_TEXT = M5u WITH TEXT PAD_TEXT 135 PRIMARY ONLY
PWR_M6iu_BY_TEXT = M6u WITH TEXT VDD_TEXT 136 PRIMARY ONLY
GND_M6iu_BY_TEXT = M6u WITH TEXT VSS_TEXT 136 PRIMARY ONLY
PAD_M6iu_BY_TEXT = M6u WITH TEXT PAD_TEXT 136 PRIMARY ONLY
PWR_APiu_BY_TEXT = APu WITH TEXT VDD_TEXT 126 PRIMARY ONLY
GND_APiu_BY_TEXT = APu WITH TEXT VSS_TEXT 126 PRIMARY ONLY
PAD_APiu_BY_TEXT = APu WITH TEXT PAD_TEXT 126 PRIMARY ONLY
#ENDIF
NSTPux = NSTPiu NOT INTERACT RNWEL
CONNECT NSTPux NSTPiu
VDD_CB   = NET AREA RATIO CBiu   NSTPux > 0
VSS_CB   = NET AREA RATIO CBiu   PSTPiu > 0
VDD_CB2  = NET AREA RATIO CB2iu  NSTPux > 0
VSS_CB2  = NET AREA RATIO CB2iu  PSTPiu > 0
VDD_UBMn = NET AREA RATIO UBMniu NSTPux > 0
VDD_UBMd = NET AREA RATIO UBMdiu NSTPux > 0
VDD_UBM  = VDD_UBMn OR VDD_UBMd
VSS_UBMn = NET AREA RATIO UBMniu PSTPiu > 0
VSS_UBMd = NET AREA RATIO UBMdiu PSTPiu > 0
VSS_UBM  = VSS_UBMn OR VSS_UBMd
VDD_CB_BY_DUMMY   = CBiu   INTERACT VDDDMY
VSS_CB_BY_DUMMY   = CBiu   INTERACT VSSDMY
VDD_CB2_BY_DUMMY  = CB2iu  INTERACT VDDDMY
VSS_CB2_BY_DUMMY  = CB2iu  INTERACT VSSDMY
VDD_UBMn_BY_DUMMY = UBMniu INTERACT VDDDMY
VDD_UBMd_BY_DUMMY = UBMdiu INTERACT VDDDMY
VSS_UBMn_BY_DUMMY = UBMniu INTERACT VSSDMY
VSS_UBMd_BY_DUMMY = UBMdiu INTERACT VSSDMY
IO_CB   = (((CBiu   NOT VDD_CB)  NOT VSS_CB)  NOT VDD_CB_BY_DUMMY)   NOT VSS_CB_BY_DUMMY
IO_CB2  = (((CB2iu  NOT VDD_CB2) NOT VSS_CB2) NOT VDD_CB2_BY_DUMMY)  NOT VSS_CB2_BY_DUMMY
IO_UBMn = (((UBMniu NOT VDD_UBM) NOT VSS_UBM) NOT VDD_UBMn_BY_DUMMY) NOT VSS_UBMn_BY_DUMMY
IO_UBMd = (((UBMdiu NOT VDD_UBM) NOT VSS_UBM) NOT VDD_UBMd_BY_DUMMY) NOT VSS_UBMd_BY_DUMMY
PSD_PAD = NET AREA RATIO PSDiu CBiu CB2iu UBMniu UBMdiu > 0 [!!AREA(CBiu)+!!AREA(CB2iu)+!!AREA(UBMniu)+!!AREA(UBMdiu)]
NSD_PAD = NET AREA RATIO NSDiu CBiu CB2iu UBMniu UBMdiu > 0 [!!AREA(CBiu)+!!AREA(CB2iu)+!!AREA(UBMniu)+!!AREA(UBMdiu)]
PSD_IOPAD_stp = NET AREA RATIO PSDiu IO_CB IO_CB2 IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB)+!!AREA(IO_CB2)+!!AREA(IO_UBMn)+!!AREA(IO_UBMd)]
NSD_IOPAD_stp = NET AREA RATIO NSDiu IO_CB IO_CB2 IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB)+!!AREA(IO_CB2)+!!AREA(IO_UBMn)+!!AREA(IO_UBMd)]
MOS = DACT INTERACT GATE
#IFDEF DEFINE_PAD_BY_TEXT
PSD_PAD_TEXT = NET AREA RATIO PSDiu OVER PAD_M6iu_BY_TEXT PAD_M5iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M1iu_BY_TEXT PAD_APiu_BY_TEXT > 0
NSD_PAD_TEXT = NET AREA RATIO NSDiu OVER PAD_M6iu_BY_TEXT PAD_M5iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M1iu_BY_TEXT PAD_APiu_BY_TEXT > 0
PSD_VDD_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER PWR_M6iu_BY_TEXT PWR_M5iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M1iu_BY_TEXT PWR_APiu_BY_TEXT GND_M6iu_BY_TEXT GND_M5iu_BY_TEXT GND_M4iu_BY_TEXT GND_M3iu_BY_TEXT GND_M2iu_BY_TEXT GND_M1iu_BY_TEXT GND_APiu_BY_TEXT > 0
NSD_VDD_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER PWR_M6iu_BY_TEXT PWR_M5iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M1iu_BY_TEXT PWR_APiu_BY_TEXT GND_M6iu_BY_TEXT GND_M5iu_BY_TEXT GND_M4iu_BY_TEXT GND_M3iu_BY_TEXT GND_M2iu_BY_TEXT GND_M1iu_BY_TEXT GND_APiu_BY_TEXT > 0
PSD_IOPAD = PSDiu INTERACT ((PSD_IOPAD_stp OR PSD_PAD_TEXT) NOT PSD_VDD_VSS_PAD_TEXT)
NSD_IOPAD = NSDiu INTERACT ((NSD_IOPAD_stp OR NSD_PAD_TEXT) NOT NSD_VDD_VSS_PAD_TEXT)
PMOS_filter = COPY EMPTYi
NMOS_filter = COPY EMPTYi
#ELSE
PSD_IOPAD = PSDiu INTERACT PSD_IOPAD_stp
NSD_IOPAD = NSDiu INTERACT NSD_IOPAD_stp
MOS_filter_DMY = CHIP INTERACT (VDDDMY OR VSSDMY)
PMOS_filter = (MOS INTERACT PSD_PAD == 1 BY NET) NOT MOS_filter_DMY
NMOS_filter = (MOS INTERACT NSD_PAD == 1 BY NET) NOT MOS_filter_DMY
#ENDIF
SD_IOPAD = PSD_IOPAD OR NSD_IOPAD
DUMMY_MOS   = (MOS NOT INTERACT CO) NOT INTERACT (POLY INTERACT CO)
DUMMY_DIODE = (DACT NOT INTERACT POLY) NOT INTERACT CO
G_DIODE     = MOS INTERACT ((GATE INTERACT PP) INTERACT NP)
DACT_real   = ((((DACT NOT INTERACT ODRES) NOT INTERACT RNWEL) NOT DUMMY_MOS) NOT G_DIODE) NOT DUMMY_DIODE
PACT_real = PACT AND DACT_real
NACT_real = NACT AND DACT_real
POST_DRIVER_ACT1 = DACT_real AND SDI
POST_DRIVER_ACT2 = ((DACT_real NOT PMOS_filter) NOT NMOS_filter) INTERACT SD_IOPAD
#IFDEF CHECK_LATCHUP_BY_PAD_CONNECTION
POST_DRIVER_ACT = POST_DRIVER_ACT1 OR POST_DRIVER_ACT2
#ELSE
POST_DRIVER_ACT = COPY POST_DRIVER_ACT1
#ENDIF
POST_DRIVER_PACT = (POST_DRIVER_ACT INTERACT PSDiu) NOT INSIDE LUPWDMY
POST_DRIVER_NACT = (POST_DRIVER_ACT INTERACT NSDiu) NOT INSIDE LUPWDMY
NW_inside_guard_ring_pre1 = NWi NOT NSTPi
NW_inside_guard_ring_pre2 = NW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE NSTPi
NW_inside_guard_ring = NW_inside_guard_ring_pre1 NOT WITH EDGE NW_inside_guard_ring_pre2
PW_inside_guard_ring_pre1 = PWELi NOT PSTPi
PW_inside_guard_ring_pre2 = PW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE PSTPi
PW_inside_guard_ring = PW_inside_guard_ring_pre1 NOT WITH EDGE PW_inside_guard_ring_pre2
NTAP_guard_ring_hole = ((HOLES NSTPi INNER) INSIDE NWi) OR NW_inside_guard_ring
PTAP_guard_ring_hole = ((HOLES PSTPi INNER) INSIDE PWELi) OR PW_inside_guard_ring
POST_DRIVER_PMOS = (POST_DRIVER_PACT INTERACT GATE) NOT G_DIODE
POST_DRIVER_PMOS_NW = STAMP POST_DRIVER_PMOS BY NWEL
POST_DRIVER_PMOS_NW_HV  = POST_DRIVER_PMOS_NW INTERACT HV_GATE
POST_DRIVER_PMOS_NW_5V  = ((POST_DRIVER_PMOS_NW_HV INTERACT OD_25) INTERACT HVD_P) NOT INTERACT DNW
POST_DRIVER_PMOS_NW_33V = POST_DRIVER_PMOS_NW_HV INTERACT OD_33
POST_DRIVER_PMOS_NW_25V = (POST_DRIVER_PMOS_NW_HV INTERACT OD_25) NOT INTERACT HVD_P
POST_DRIVER_PMOS_NW_18V = POST_DRIVER_PMOS_NW_HV INTERACT OD_18
POST_DRIVER_PMOS_NW_LV  = POST_DRIVER_PMOS_NW NOT POST_DRIVER_PMOS_NW_HV
POST_DRIVER_PMOS_NWi = STAMP POST_DRIVER_PMOS BY NWi
POST_DRIVER_PMOS_NWi_HV  = POST_DRIVER_PMOS_NWi INTERACT HV_GATE
POST_DRIVER_PMOS_NWi_5V  = ((POST_DRIVER_PMOS_NWi_HV INTERACT OD_25) INTERACT HVD_P) NOT INTERACT DNW
POST_DRIVER_PMOS_NWi_33V = POST_DRIVER_PMOS_NWi_HV INTERACT OD_33
POST_DRIVER_PMOS_NWi_25V = (POST_DRIVER_PMOS_NWi_HV INTERACT OD_25) NOT INTERACT HVD_P
POST_DRIVER_PMOS_NWi_18V = POST_DRIVER_PMOS_NWi_HV INTERACT OD_18
POST_DRIVER_PMOS_NWi_LV  = POST_DRIVER_PMOS_NWi NOT POST_DRIVER_PMOS_NWi_HV
POST_DRIVER_NMOS = (POST_DRIVER_NACT INTERACT GATE) NOT G_DIODE
POST_DRIVER_NMOS_RW = STAMP (POST_DRIVER_NMOS INSIDE DNW) BY DNW
POST_DRIVER_NMOS_PW = POST_DRIVER_NMOS NOT POST_DRIVER_NMOS_RW
POST_DRIVER_NMOS_RW_HV  = POST_DRIVER_NMOS_RW INTERACT HV_GATE
POST_DRIVER_NMOS_RW_33V = POST_DRIVER_NMOS_RW_HV INTERACT OD_33
POST_DRIVER_NMOS_RW_25V = (POST_DRIVER_NMOS_RW_HV INTERACT OD_25) NOT INTERACT HVD_N
POST_DRIVER_NMOS_RW_18V = POST_DRIVER_NMOS_RW_HV INTERACT OD_18
POST_DRIVER_NMOS_RW_LV  = POST_DRIVER_NMOS_RW NOT POST_DRIVER_NMOS_RW_HV
POST_DRIVER_NMOS_PW_HV  = POST_DRIVER_NMOS_PW INTERACT HV_GATE
POST_DRIVER_NMOS_PW_5V  = ((POST_DRIVER_NMOS_PW_HV INTERACT OD_25) INTERACT HVD_N) NOT INTERACT DNW
POST_DRIVER_NMOS_PW_33V = POST_DRIVER_NMOS_PW_HV INTERACT OD_33
POST_DRIVER_NMOS_PW_25V = (POST_DRIVER_NMOS_PW_HV INTERACT OD_25) NOT INTERACT HVD_N
POST_DRIVER_NMOS_PW_18V = POST_DRIVER_NMOS_PW_HV INTERACT OD_18
POST_DRIVER_NMOS_PW_LV  = POST_DRIVER_NMOS_PW NOT POST_DRIVER_NMOS_PW_HV
DNWc = STAMP DNW BY NWi
POST_DRIVER_NMOS_RWi = STAMP (POST_DRIVER_NMOS INSIDE DNWc) BY DNWc
POST_DRIVER_NMOS_RWi_HV  = POST_DRIVER_NMOS_RWi INTERACT HV_GATE
POST_DRIVER_NMOS_RWi_33V = POST_DRIVER_NMOS_RWi_HV INTERACT OD_33
POST_DRIVER_NMOS_RWi_25V = POST_DRIVER_NMOS_RWi_HV INTERACT OD_25
POST_DRIVER_NMOS_RWi_18V = POST_DRIVER_NMOS_RWi_HV INTERACT OD_18
POST_DRIVER_NMOS_RWi_LV  = POST_DRIVER_NMOS_RWi NOT POST_DRIVER_NMOS_RWi_HV
POST_DRIVER_MOS = POST_DRIVER_NMOS OR POST_DRIVER_PMOS
BESIDE_POST_DRIVER = SIZE POST_DRIVER_MOS BY LUP_2
BESIDE_POST_DRIVER_NMOS = ((((NACT_real INTERACT GATE) INTERACT BESIDE_POST_DRIVER) NOT POST_DRIVER_NACT) NOT DUMMY_MOS) NOT G_DIODE
BESIDE_POST_DRIVER_PMOS = ((((PACT_real INTERACT GATE) INTERACT BESIDE_POST_DRIVER) NOT POST_DRIVER_PACT) NOT DUMMY_MOS) NOT G_DIODE
BESIDE_POST_DRIVER_PMOS_NW = STAMP BESIDE_POST_DRIVER_PMOS BY NWEL
BESIDE_POST_DRIVER_PMOS_NW_HV  = BESIDE_POST_DRIVER_PMOS_NW INTERACT HV_GATE
BESIDE_POST_DRIVER_PMOS_NW_5V  = ((BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD_25) INTERACT HVD_P) NOT INTERACT DNW
BESIDE_POST_DRIVER_PMOS_NW_33V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD_33
BESIDE_POST_DRIVER_PMOS_NW_25V = (BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD_25) NOT INTERACT HVD_P
BESIDE_POST_DRIVER_PMOS_NW_18V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD_18
BESIDE_POST_DRIVER_PMOS_NW_LV  = BESIDE_POST_DRIVER_PMOS_NW NOT BESIDE_POST_DRIVER_PMOS_NW_HV
BESIDE_POST_DRIVER_PMOS_NWi = STAMP BESIDE_POST_DRIVER_PMOS BY NWi
BESIDE_POST_DRIVER_PMOS_NWi_HV  = BESIDE_POST_DRIVER_PMOS_NWi INTERACT HV_GATE
BESIDE_POST_DRIVER_PMOS_NWi_5V  = ((BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD_25) INTERACT HVD_P) NOT INTERACT DNW
BESIDE_POST_DRIVER_PMOS_NWi_33V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD_33
BESIDE_POST_DRIVER_PMOS_NWi_25V = (BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD_25) NOT INTERACT HVD_P
BESIDE_POST_DRIVER_PMOS_NWi_18V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD_18
BESIDE_POST_DRIVER_PMOS_NWi_LV  = BESIDE_POST_DRIVER_PMOS_NWi NOT BESIDE_POST_DRIVER_PMOS_NWi_HV
BESIDE_POST_DRIVER_NMOS_RW = STAMP (BESIDE_POST_DRIVER_NMOS INSIDE DNW) BY DNW
BESIDE_POST_DRIVER_NMOS_PW = BESIDE_POST_DRIVER_NMOS NOT BESIDE_POST_DRIVER_NMOS_RW
BESIDE_POST_DRIVER_NMOS_RW_HV  = BESIDE_POST_DRIVER_NMOS_RW INTERACT HV_GATE
BESIDE_POST_DRIVER_NMOS_RW_33V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD_33
BESIDE_POST_DRIVER_NMOS_RW_25V = (BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD_25) NOT INTERACT HVD_N
BESIDE_POST_DRIVER_NMOS_RW_18V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD_18
BESIDE_POST_DRIVER_NMOS_RW_LV  = BESIDE_POST_DRIVER_NMOS_RW NOT BESIDE_POST_DRIVER_NMOS_RW_HV
BESIDE_POST_DRIVER_NMOS_PW_HV  = BESIDE_POST_DRIVER_NMOS_PW INTERACT HV_GATE
BESIDE_POST_DRIVER_NMOS_PW_5V  = ((BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD_25) INTERACT HVD_N) NOT INTERACT DNW
BESIDE_POST_DRIVER_NMOS_PW_33V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD_33
BESIDE_POST_DRIVER_NMOS_PW_25V = (BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD_25) NOT INTERACT HVD_N
BESIDE_POST_DRIVER_NMOS_PW_18V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD_18
BESIDE_POST_DRIVER_NMOS_PW_LV  = BESIDE_POST_DRIVER_NMOS_PW NOT BESIDE_POST_DRIVER_NMOS_PW_HV
BESIDE_POST_DRIVER_NMOS_RWi = STAMP (BESIDE_POST_DRIVER_NMOS INSIDE DNWc) BY DNWc
BESIDE_POST_DRIVER_NMOS_RWi_HV  = BESIDE_POST_DRIVER_NMOS_RWi INTERACT HV_GATE
BESIDE_POST_DRIVER_NMOS_RWi_33V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD_33
BESIDE_POST_DRIVER_NMOS_RWi_25V = (BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD_25) NOT INTERACT HVD_N
BESIDE_POST_DRIVER_NMOS_RWi_18V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD_18
BESIDE_POST_DRIVER_NMOS_RWi_LV  = BESIDE_POST_DRIVER_NMOS_RWi NOT BESIDE_POST_DRIVER_NMOS_RWi_HV
PTAP_guard_ring_holex = PTAP_guard_ring_hole ENCLOSE (POST_DRIVER_NACT OR BESIDE_POST_DRIVER_NMOS)
NTAP_guard_ring_holex = NTAP_guard_ring_hole ENCLOSE (POST_DRIVER_PACT OR BESIDE_POST_DRIVER_PMOS)
PTAP_guard_ring_wide = (PSTPi TOUCH PTAP_guard_ring_holex) WITH WIDTH >= LUP_3_W
NTAP_guard_ring_wide = (NSTPi TOUCH NTAP_guard_ring_holex) WITH WIDTH >= LUP_3_W
PW_inside_guard_ring_wide_pre1 = PW_inside_guard_ring NOT COIN OUTSIDE EDGE PTAP_guard_ring_wide
PW_inside_guard_ring_wide = PW_inside_guard_ring NOT WITH EDGE PW_inside_guard_ring_wide_pre1
NW_inside_guard_ring_wide_pre1 = NW_inside_guard_ring NOT COIN OUTSIDE EDGE NTAP_guard_ring_wide
NW_inside_guard_ring_wide = NW_inside_guard_ring NOT WITH EDGE NW_inside_guard_ring_wide_pre1
PTAP_guard_ring_wide_hole = (HOLES PTAP_guard_ring_wide INNER) OR PW_inside_guard_ring_wide
NTAP_guard_ring_wide_hole = (HOLES NTAP_guard_ring_wide INNER) OR NW_inside_guard_ring_wide
POST_DRIVER_PMOS_NW_5V_NG  = POST_DRIVER_PMOS_NW_5V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NW_33V_NG = POST_DRIVER_PMOS_NW_33V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NW_25V_NG = POST_DRIVER_PMOS_NW_25V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NW_18V_NG =  POST_DRIVER_PMOS_NW_18V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NW_LV_NG  = POST_DRIVER_PMOS_NW_LV NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NWi_5V_NG  = POST_DRIVER_PMOS_NWi_5V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NWi_33V_NG = POST_DRIVER_PMOS_NWi_33V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NWi_25V_NG = POST_DRIVER_PMOS_NWi_25V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NWi_18V_NG = POST_DRIVER_PMOS_NWi_18V NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_PMOS_NWi_LV_NG  = POST_DRIVER_PMOS_NWi_LV NOT INSIDE NTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RW_33V_NG  = POST_DRIVER_NMOS_RW_33V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RW_25V_NG  = POST_DRIVER_NMOS_RW_25V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RW_18V_NG  = POST_DRIVER_NMOS_RW_18V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RW_LV_NG   = POST_DRIVER_NMOS_RW_LV NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_PW_5V_NG   = POST_DRIVER_NMOS_PW_5V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_PW_33V_NG  = POST_DRIVER_NMOS_PW_33V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_PW_25V_NG  = POST_DRIVER_NMOS_PW_25V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_PW_18V_NG  = POST_DRIVER_NMOS_PW_18V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_PW_LV_NG   = POST_DRIVER_NMOS_PW_LV  NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RWi_33V_NG  = POST_DRIVER_NMOS_RWi_33V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RWi_25V_NG  = POST_DRIVER_NMOS_RWi_25V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RWi_18V_NG  = POST_DRIVER_NMOS_RWi_18V NOT INSIDE PTAP_guard_ring_wide_hole
POST_DRIVER_NMOS_RWi_LV_NG   = POST_DRIVER_NMOS_RWi_LV NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NW_NG = BESIDE_POST_DRIVER_PMOS_NW NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NW_5V_NG = BESIDE_POST_DRIVER_PMOS_NW_5V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NW_33V_NG = BESIDE_POST_DRIVER_PMOS_NW_33V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NW_25V_NG = BESIDE_POST_DRIVER_PMOS_NW_25V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NW_18V_NG = BESIDE_POST_DRIVER_PMOS_NW_18V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NW_LV_NG  = BESIDE_POST_DRIVER_PMOS_NW_LV NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NWi_NG = BESIDE_POST_DRIVER_PMOS_NWi NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NWi_5V_NG = BESIDE_POST_DRIVER_PMOS_NWi_5V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NWi_33V_NG = BESIDE_POST_DRIVER_PMOS_NWi_33V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NWi_25V_NG = BESIDE_POST_DRIVER_PMOS_NWi_25V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NWi_18V_NG = BESIDE_POST_DRIVER_PMOS_NWi_18V NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_PMOS_NWi_LV_NG  = BESIDE_POST_DRIVER_PMOS_NWi_LV NOT INSIDE NTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RW_NG = BESIDE_POST_DRIVER_NMOS_RW NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_PW_NG = BESIDE_POST_DRIVER_NMOS_PW NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RW_33V_NG = BESIDE_POST_DRIVER_NMOS_RW_33V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RW_25V_NG = BESIDE_POST_DRIVER_NMOS_RW_25V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RW_18V_NG = BESIDE_POST_DRIVER_NMOS_RW_18V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RW_LV_NG  = BESIDE_POST_DRIVER_NMOS_RW_LV NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_PW_5V_NG = BESIDE_POST_DRIVER_NMOS_PW_5V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_PW_33V_NG = BESIDE_POST_DRIVER_NMOS_PW_33V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_PW_25V_NG = BESIDE_POST_DRIVER_NMOS_PW_25V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_PW_18V_NG = BESIDE_POST_DRIVER_NMOS_PW_18V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_PW_LV_NG  = BESIDE_POST_DRIVER_NMOS_PW_LV NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RWi_NG = BESIDE_POST_DRIVER_NMOS_RWi NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RWi_33V_NG = BESIDE_POST_DRIVER_NMOS_RWi_33V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RWi_25V_NG = BESIDE_POST_DRIVER_NMOS_RWi_25V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RWi_18V_NG = BESIDE_POST_DRIVER_NMOS_RWi_18V NOT INSIDE PTAP_guard_ring_wide_hole
BESIDE_POST_DRIVER_NMOS_RWi_LV_NG  = BESIDE_POST_DRIVER_NMOS_RWi_LV NOT INSIDE PTAP_guard_ring_wide_hole
#IFDEF GUIDELINE_LUP
LUP.1g 
brace_data_0000001414
LUP.2g 
brace_data_0000001415
LUP.3.1.1g 
brace_data_0000001416
LUP.3.1.2g 
brace_data_0000001417
LUP.3.2.1g 
brace_data_0000001418
LUP.3.2.2g 
brace_data_0000001419
LUP.3.3.1g 
brace_data_0000001420
LUP.3.3.2g 
brace_data_0000001421
LUP.3.4.1g 
brace_data_0000001422
LUP.3.4.2g 
brace_data_0000001423
#IFDEF LP
#IFNDEF HALF_NODE
LUP.3.5.1g 
brace_data_0000001424
LUP.3.5.2g 
brace_data_0000001425
#ENDIF
#ENDIF
LUP.4g 
brace_data_0000001426
LUP.5.1.1g 
brace_data_0000001427
LUP.5.1.2g 
brace_data_0000001428
LUP.5.2.1g 
brace_data_0000001429
LUP.5.2.2g 
brace_data_0000001430
LUP.5.3.1g 
brace_data_0000001431
LUP.5.3.2g 
brace_data_0000001432
LUP.5.4.1g 
brace_data_0000001433
LUP.5.4.2g 
brace_data_0000001434
#IFDEF LP
#IFNDEF HALF_NODE
LUP.5.5.1g 
brace_data_0000001435
LUP.5.5.2g 
brace_data_0000001436
#ENDIF
#ENDIF
#ENDIF
CO_PACT = COi OR (PSDc NOT OUTSIDE COi)
NPUi = NSTPi INTERACT CO_PACT
NPUi_SRAM = NPUi INSIDE SRM
NSTP_OS = SIZE NPUi BY LUP_6 INSIDE OF NWi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
NSTP_OS_SRAM = SIZE NPUi_SRAM BY LUP_6_SRAM INSIDE OF NWi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
PACT_CHECK = ((PACTi INTERACT COi) INTERACT POi) NOT POi
PACT_CHECK_NON_SRAM = PACT_CHECK NOT INSIDE SRM
PACT_CHECK_SRAM =  PACT_CHECK INSIDE SRM
CO_NACT = COi OR (NSDc NOT OUTSIDE COi)
PPUi = PSTPi INTERACT CO_NACT
PPUi_SRAM = PPUi INSIDE SRM
PSTP_OS = SIZE PPUi BY LUP_6 INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
PSTP_OS_SRAM = SIZE PPUi_SRAM BY LUP_6_SRAM INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
NACT_CHECK = ((NACTi INTERACT COi) INTERACT POi) NOT POi
NACT_CHECK_NON_SRAM = NACT_CHECK NOT INSIDE SRM
NACT_CHECK_SRAM =  NACT_CHECK INSIDE SRM
LUP.6 
brace_data_0000001437
#IFDEF GUIDELINE_ESD
NSDc_HVMOS = NSDc INTERACT HV_GATE
NSDc_LVMOS = NSDc INTERACT LV_GATE
PSDc_HVMOS = PSDc INTERACT HV_GATE
PSDc_LVMOS = PSDc INTERACT LV_GATE
NSDc_HVMOS_SDI = NSDc_HVMOS INTERACT SDI
NSDc_LVMOS_SDI = NSDc_LVMOS INTERACT SDI
PSDc_HVMOS_SDI = PSDc_HVMOS INTERACT SDI
PSDc_LVMOS_SDI = PSDc_LVMOS INTERACT SDI
HV_GATEc = STAMP HV_GATE BY ILP1i
LV_GATEc = STAMP LV_GATE BY ILP1i
PMOSi = (PACTi INTERACT POi) INTERACT COi
NMOSi = (NACTi INTERACT POi) INTERACT COi
ESD_PMOS = SDI AND PMOSi
ESD_NMOS = SDI AND NMOSi
ESD_MOS  = ESD_PMOS OR ESD_NMOS
ESD_GATE = SDI AND GATE
ESD_GATE_fully_RPO = ESD_GATE INSIDE RPO
ESD_GATE_partial_RPO = ESD_GATE CUT RPO
ESD_GATE_RPO = ESD_GATE INTERACT RPO
ESD_GATE_noRPO = ESD_GATE NOT INTERACT RPO
ESD_GATE_W = GATE_W INSIDE EDGE SDI
ESD_GATE_L = GATE_L INSIDE EDGE SDI
ESD_COOD = COOD AND ESD_MOS
ESD_NSD = NSDu INTERACT ESD_GATE
ESD_PSD = PSDu INTERACT ESD_GATE
ESD_NSD_STACK = ESD_NSD NOT INTERACT CO
PSTPi_real = PSTPu NOT DIODMY
NSTPi_real = NSTPu NOT DIODMY
ESD_NMOS_SOURCE_pre1 = NET AREA RATIO ESD_NSD PSTPi_real  > 0 [!!AREA(ESD_NSD)*!!AREA(PSTPi_real)]
ESD_NMOS_SOURCE_pre2 = ((ESD_NMOS_SOURCE_pre1 OR ESD_GATE) OR ESD_NSD_STACK ) INTERACT ESD_NMOS_SOURCE_pre1
ESD_NMOS_DRAIN_pre1 = (ESD_NSD NOT ESD_NMOS_SOURCE_pre2) INTERACT ESD_NMOS_SOURCE_pre2
ESD_NMOS_DRAIN_pre2 = ((ESD_NMOS_DRAIN_pre1 OR ESD_GATE) OR ESD_NSD_STACK ) INTERACT ESD_NMOS_DRAIN_pre1
ESD_NMOS_SOURCE_pre3 = (ESD_NSD NOT ESD_NMOS_DRAIN_pre2) INTERACT ESD_NMOS_DRAIN_pre2
ESD_NMOS_SOURCE_pre4 = ESD_NMOS_SOURCE_pre1 OR ESD_NMOS_SOURCE_pre3
ESD_NMOS_DRAIN_pre4  = ESD_NSD NOT ESD_NMOS_SOURCE_pre4
ESD_NMOS_normal = (ESD_NMOS INTERACT ESD_NMOS_SOURCE_pre4) INTERACT ESD_NMOS_DRAIN_pre4
ESD_NMOS_special = ESD_NMOS NOT ESD_NMOS_normal
ESD_NMOS_SOURCE =  ((ESD_NSD INTERACT ESD_NMOS_special) NOT INTERACT RPO) OR (ESD_NMOS_SOURCE_pre4 INTERACT ESD_NMOS_normal)
ESD_NMOS_DRAIN   = ESD_NSD NOT ESD_NMOS_SOURCE
ESD_PMOS_SOURCE_pre1 = NET AREA RATIO ESD_PSD NSTPi_real > 0 [!!AREA(ESD_PSD)*!!AREA(NSTPi_real)]
ESD_PMOS_SOURCE_pre2 = ESD_PMOS_SOURCE_pre1 OR (ESD_GATE INTERACT ESD_PMOS_SOURCE_pre1)
ESD_PMOS_DRAIN_pre1 = (ESD_PSD NOT ESD_PMOS_SOURCE_pre2) INTERACT ESD_PMOS_SOURCE_pre2
ESD_PMOS_DRAIN_pre2 = ESD_PMOS_DRAIN_pre1 OR (ESD_GATE INTERACT ESD_PMOS_DRAIN_pre1)
ESD_PMOS_SOURCE_pre3 = (ESD_PSD NOT ESD_PMOS_DRAIN_pre2) INTERACT ESD_PMOS_DRAIN_pre2
ESD_PMOS_SOURCE_pre4 = ESD_PMOS_SOURCE_pre1 OR ESD_PMOS_SOURCE_pre3
ESD_PMOS_DRAIN_pre4  = ESD_PSD NOT ESD_PMOS_SOURCE_pre4
ESD_PMOS_normal = (ESD_PMOS INTERACT ESD_PMOS_SOURCE_pre4) INTERACT ESD_PMOS_DRAIN_pre4
ESD_PMOS_special = ESD_PMOS NOT ESD_PMOS_normal
ESD_PMOS_SOURCE =  ((ESD_PSD INTERACT ESD_PMOS_special) NOT INTERACT RPO) OR (ESD_PMOS_SOURCE_pre4 INTERACT ESD_PMOS_normal)
ESD_PMOS_DRAIN   = ESD_PSD NOT ESD_PMOS_SOURCE
ESD_MOS_SOURCE  = ESD_NMOS_SOURCE OR ESD_PMOS_SOURCE
ESD_MOS_DRAIN   = ESD_NMOS_DRAIN OR ESD_PMOS_DRAIN
ESD_NMOSc = STAMP ESD_NMOS BY ESD_NMOS_DRAIN
ESD_PMOSc = STAMP ESD_PMOS BY ESD_PMOS_DRAIN
#IFDEF FULL_CHIP
ESD.WARN.1 
brace_data_0000001438
#ENDIF
ESD.WARN.2 
brace_data_0000001439
ESD.1g 
brace_data_0000001440
ESD.3g
brace_data_0000001441
ESD.4g
brace_data_0000001442
ESD.5g
brace_data_0000001443
ESD.6g
brace_data_0000001444
PSDc_CB= NET AREA RATIO PSDc IO_CBi IO_CB2i IO_UBMni IO_UBMdi >0[!!AREA(IO_CBi)+!!AREA(IO_CB2i)+!!AREA(IO_UBMni)+!!AREA(IO_UBMdi)]
NSDc_CB= NET AREA RATIO NSDc IO_CBi IO_CB2i IO_UBMni IO_UBMdi >0[!!AREA(IO_CBi)+!!AREA(IO_CB2i)+!!AREA(IO_UBMni)+!!AREA(IO_UBMdi)]
NWELc = COPY NWEL
CONNECT NWELc
PWELc = COPY PWEL
CONNECT PWELc
ESD.7g
brace_data_0000001445
ESD.12g
brace_data_0000001446
ESD_PMOS_GATE_W = ESD_GATE_W INSIDE EDGE PP
ESD_NMOS_GATE_W = ESD_GATE_W INSIDE EDGE NP
ESD_PMOS_GATE_W_EXP = EXPAND EDGE ESD_PMOS_GATE_W INSIDE BY GRID
ESD_NMOS_GATE_W_EXP = EXPAND EDGE ESD_NMOS_GATE_W INSIDE BY GRID
ESD_PMOS_GATE_W_EXPc = STAMP ESD_PMOS_GATE_W_EXP BY ESD_PMOSc
ESD_NMOS_GATE_W_EXPc = STAMP ESD_NMOS_GATE_W_EXP BY ESD_NMOSc
ESD.16g
brace_data_0000001447
ESD.17g
brace_data_0000001448
33V_ESD_GATE_W = ESD_GATE_W INSIDE EDGE OD_33
25V_ESD_GATE_W = ESD_GATE_W INSIDE EDGE OD_25
18V_ESD_GATE_W = ESD_GATE_W INSIDE EDGE OD_18
LV_ESD_GATE_W  = ESD_GATE_W NOT INSIDE EDGE OD2
ESD.18g 
brace_data_0000001449
RegularIO_NMOS = (ESD_NMOS INTERACT ESD_GATE_partial_RPO) NOT INTERACT ESD_GATE_fully_RPO
RegularIO_PMOS = (ESD_PMOS INTERACT ESD_GATE_partial_RPO) NOT INTERACT ESD_GATE_fully_RPO
RegularIO_MOS  = RegularIO_NMOS OR RegularIO_PMOS
RegularIO_NMOS_DRAIN = ESD_NMOS_DRAIN AND RegularIO_NMOS
RegularIO_PMOS_DRAIN = ESD_PMOS_DRAIN AND RegularIO_PMOS
RegularIO_MOS_DRAIN = ESD_MOS_DRAIN AND RegularIO_MOS
RegularIO_GATE = ESD_GATE AND RegularIO_MOS
ESD.19g 
brace_data_0000001450
ESD.20g
brace_data_0000001451
ESD.21g
brace_data_0000001452
ESD.22g
brace_data_0000001453
ESD.23g
brace_data_0000001454
HV_TOL_IO_NMOS = (ESD_NMOS INTERACT ESD_GATE_fully_RPO) INTERACT ESD_GATE_partial_RPO
HV_TOL_IO_NMOS_DRAIN = (ESD_NMOS_DRAIN INTERACT CO) AND HV_TOL_IO_NMOS
HV_TOL_IO_NMOS_DRAIN_x = (ESD_NMOS_DRAIN NOT INTERACT CO) AND HV_TOL_IO_NMOS
HV_TOL_IO_NMOS_SOURCE = ESD_NMOS_SOURCE AND HV_TOL_IO_NMOS
HV_TOL_IO_GATE = ESD_GATE AND HV_TOL_IO_NMOS
HV_TOL_IO_GATEa = HV_TOL_IO_GATE INTERACT HV_TOL_IO_NMOS_DRAIN
HV_TOL_IO_GATEb = (HV_TOL_IO_GATE NOT INTERACT HV_TOL_IO_NMOS_DRAIN) INTERACT HV_TOL_IO_NMOS_DRAIN_x
ESD.27g
brace_data_0000001455
ESD.28g
brace_data_0000001456
ESD.30g
brace_data_0000001457
ESD.32g
brace_data_0000001458
ESD.33g
brace_data_0000001459
ESD.34g
brace_data_0000001460
NCS_NMOS = ESD_NMOS NOT INTERACT RPO
NCS_NMOS_GATE_W = ESD_GATE_W INSIDE EDGE NCS_NMOS
NCS_NMOS_GATE_W_EXP = EXPAND EDGE NCS_NMOS_GATE_W INSIDE BY GRID
NCS_NMOS_GATE_W_EXPc = STAMP NCS_NMOS_GATE_W_EXP BY  ESD_NMOSc
NCS_NMOS_GATE = ESD_GATE AND NCS_NMOS
ESD.37g
brace_data_0000001461
RegularIO_type2_NMOS = (ESD_NMOS INTERACT RPO) NOT INTERACT ESD_GATE_RPO
RegularIO_type2_PMOS = (ESD_PMOS INTERACT RPO) NOT INTERACT ESD_GATE_RPO
RegularIO_type2_MOS  = RegularIO_type2_NMOS OR RegularIO_type2_PMOS
RegularIO_type2_NMOS_DRAIN = ESD_NMOS_DRAIN AND RegularIO_type2_NMOS
RegularIO_type2_PMOS_DRAIN = ESD_PMOS_DRAIN AND RegularIO_type2_PMOS
RegularIO_type2_MOS_DRAIN = ESD_MOS_DRAIN AND RegularIO_type2_MOS
RegularIO_type2_GATE = ESD_GATE AND RegularIO_type2_MOS
ESD.47g
brace_data_0000001462
ESD.48g
brace_data_0000001463
ESD.49g
brace_data_0000001464
ESD.50g
brace_data_0000001465
ESD.51g
brace_data_0000001466
ESD.52g
brace_data_0000001467
NCS_type2_NMOS = ((ESD_NMOS INTERACT RPO) INTERACT ESD_GATE_fully_RPO) NOT INTERACT ESD_GATE_partial_RPO
NCS_type2_NMOS_DRAIN = ESD_NMOS_DRAIN AND NCS_type2_NMOS
NCS_type2_NMOS_SOURCE = ESD_NMOS_SOURCE AND NCS_type2_NMOS
NCS_type2_NMOS_GATE = ESD_GATE AND NCS_type2_NMOS
ESD.55g
brace_data_0000001468
ESD.56g
brace_data_0000001469
ESD.57g
brace_data_0000001470
NFD = ((NACT NOT INTERACT POLY) AND SDI) CUT RPO
PFD = ((PACT NOT INTERACT POLY) AND SDI) CUT RPO
NFDc = STAMP NFD BY NSDc
PFDc = STAMP PFD BY PSDc
NFD_Emitter = NET AREA RATIO NFDc PSTPi > 0
NFD_Collector = NFDc NOT NFD_Emitter
PFD_Emitter = NET AREA RATIO PFDc NSTPi > 0
PFD_Collector = PFDc NOT PFD_Emitter
NFD_STI = EXT NFD_Collector NFD_Emitter == ESD_60g OPPOSITE REGION
PFD_STI = EXT PFD_Collector PFD_Emitter == ESD_60g OPPOSITE REGION
ESD.58g 
brace_data_0000001471
ESD.59g 
brace_data_0000001472
ESD.60g 
brace_data_0000001473
ESD.61g	
brace_data_0000001474
ESD.62g	
brace_data_0000001475
ESD.63g 
brace_data_0000001476
ESD.64g	
brace_data_0000001477
ESD.65g	
brace_data_0000001478
ESD.66g 
brace_data_0000001479
ESD.72g 
brace_data_0000001480
#ENDIF
SRAM.W.1 
brace_data_0000001481
SRAM.S.1 
brace_data_0000001482
SRAM.S.2 
brace_data_0000001483
SRAM.EN.1 
brace_data_0000001484
SRAM.EX.1 
brace_data_0000001485
SRAM.O.1 
brace_data_0000001486
SRAM.R.12 
brace_data_0000001487
SRAM.R.13 
brace_data_0000001488
#IFDEF HALF_NODE
SRAM.R.15 
brace_data_0000001489
#ELSE
SRAM.R.15 
brace_data_0000001490
#ENDIF
SRAM.R.17 
brace_data_0000001491
#IFDEF HALF_NODE
SRAM.R.18 
brace_data_0000001492
#ENDIF
SRAM.A.1
brace_data_0000001493
NW.S.1.SRM_SRAMDMY 
brace_data_0000001494
OD.S.1.SRM_SRAMDMY 
brace_data_0000001495
PO.S.1.SRM_SRAMDMY 
brace_data_0000001496
NP.S.1.SRM_SRAMDMY 
brace_data_0000001497
PP.S.1.SRM_SRAMDMY 
brace_data_0000001498
CO.S.1.SRM_SRAMDMY 
brace_data_0000001499
M1.S.1.SRM_SRAMDMY 
brace_data_0000001500
VIA1.S.1.SRM_SRAMDMY 
brace_data_0000001501
OD_PERI = ODi AND SRAMDMY_PERI
CO_PERI = COi NOT OUTSIDE SRAMDMY_PERI
CO_PERI_4 = CO_PERI NOT OUTSIDE SRAMDMY_4
CO_PERI_5 = CO_PERI NOT OUTSIDE SRAMDMY_5
COOD_PERI = CO_PERI NOT OUTSIDE OD_PERI
CONNECT COOD_PERI OD_PERI
NPOD_PERI = OD_PERI AND NPi
PPOD_PERI = OD_PERI AND PPi
NSTP_PERI = NPOD_PERI AND NWi
PSTP_PERI = PPOD_PERI NOT NWi
STP_PERI = NSTP_PERI OR PSTP_PERI
NACT_PERI = NPOD_PERI NOT NWi
PACT_PERI = PPOD_PERI AND NWi
DACT_PERI = NACT_PERI OR PACT_PERI
ACT_PERI = DACT_PERI INTERACT POi
SD_PERI = ACT_PERI NOT POi
WLD.R.1 
brace_data_0000001502
WLD.R.2 
brace_data_0000001503
WLD.R.3 
brace_data_0000001504
WLD.R.6 
brace_data_0000001505
WLD.R.7 
brace_data_0000001506
POS14m_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
POS14m_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
POS14m_POCell = POS14m_POCellIn AND POS14m_POCellOut
POS14m_POMarker = POi AND RRuleAnalog
POS14m_PO = ((( POS14m_POCell OR POS14m_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
POS14m_GATE = ( GATE_NP AND POS14m_PO ) NOT OD2
POS14m_NW = OD2 OR (NWEL OR NTN)
PO.S.14m 
brace_data_0000001507
POEN1m_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
POEN1m_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
POEN1m_POCell = POEN1m_POCellIn AND POEN1m_POCellOut
POEN1m_POMarker = POi AND RRuleAnalog
POEN1m_PO = ((( POEN1m_POCell OR POEN1m_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
POEN1m_GATE = ( GATE_PP AND POEN1m_PO ) NOT OD2
POEN1m_NW = (NWEL NOT OD_33) NOT NTN
PO.EN.1m 
brace_data_0000001508
POEN2m_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
POEN2m_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
POEN2m_POCell = POEN2m_POCellIn AND POEN2m_POCellOut
POEN2m_POMarker = POi AND RRuleAnalog
POEN2m_PO = ((( POEN2m_POCell OR POEN2m_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
POEN2m_GATE = ( GATE_NP AND POEN2m_PO ) AND OD2
POEN2m_NW = OD2 NOT ( NWEL OR NTN)
PO.EN.2m 
brace_data_0000001509
POEN3m_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
POEN3m_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
POEN3m_POCell = POEN3m_POCellIn AND POEN3m_POCellOut
POEN3m_POMarker = POi AND RRuleAnalog
POEN3m_PO = ((( POEN3m_POCell OR POEN3m_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
POEN3m_GATE =  GATE_PP AND POEN3m_PO
POEN3m_GATE33 = POEN3m_GATE AND OD_33
POEN3m_GATE1825 = POEN3m_GATE AND (OD_25 OR OD_18)
POEN3m_NW = NWEL NOT NTN
POEN3m_NW33 = POEN3m_NW AND OD_33
PO.EN.3m 
brace_data_0000001510
BJT.R.1 
brace_data_0000001511
BJT.R.8 
brace_data_0000001512
RES2m_ODCellIn = INSIDE CELL ODi CellsForRRuleAnalog
RES2m_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleAnalog
RES2m_ODCell = RES2m_ODCellIn AND RES2m_ODCellOut
RES2m_ODMarker = ODi AND RRuleAnalog
RES2m_OD = ((( RES2m_ODCell OR RES2m_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
RES2m_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
RES2m_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
RES2m_POCell = RES2m_POCellIn AND RES2m_POCellOut
RES2m_POMarker = POi AND RRuleAnalog
RES2m_PO = ((( RES2m_POCell OR RES2m_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
RES2m_ODRES = ODRES AND RES2m_OD
RES2m_PORES = PORESg AND RES2m_PO
RES.2m.OD 
brace_data_0000001513
RES.2m.PO 
brace_data_0000001514
NWRODR1m_NWCellIn = INSIDE CELL NWi CellsForRRuleAnalog
NWRODR1m_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleAnalog
NWRODR1m_NWCell = NWRODR1m_NWCellIn AND NWRODR1m_NWCellOut
NWRODR1m_NWMarker = NWi AND RRuleAnalog
NWRODR1m_NW = ((( NWRODR1m_NWCell OR NWRODR1m_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleAnalog
NWRODR1m_NWRES = ( NWRODR1m_NW AND NWRES ) AND NWDMY
NWROD.R.1m 
brace_data_0000001515
NWRSTIR1m_NWCellIn = INSIDE CELL NWi CellsForRRuleAnalog
NWRSTIR1m_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleAnalog
NWRSTIR1m_NWCell = NWRSTIR1m_NWCellIn AND NWRSTIR1m_NWCellOut
NWRSTIR1m_NWMarker = NWi AND RRuleAnalog
NWRSTIR1m_NW = ((( NWRSTIR1m_NWCell OR NWRSTIR1m_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleAnalog
NWRSTIR1m_NWRES = ( NWRSTIR1m_NW AND NWRES_STI ) AND NWDMY
NWRSTI.R.1m 
brace_data_0000001516
#ENDIF
#ELSE
#IFNDEF DFM
DFM_OPTION.ERR1
brace_data_0000001517
#ENDIF
#ENDIF
#IFDEF DFM
#IFDEF Required
#DEFINE _POS2_
#DEFINE _POEX2_
#DEFINE _POS5_
#DEFINE _POS14_
#DEFINE _POEN1_
#DEFINE _POEN2_
#DEFINE _POEN3_
#ENDIF
#IFDEF Recommended
#DEFINE _OPCR1_
#DEFINE _DNWEN1_
#DEFINE _ODW2_
#DEFINE _ODS1_
#DEFINE _ODS6_
#DEFINE _NWRODS3_
#DEFINE _NWRODR1_
#DEFINE _NWRSTIEN2_
#DEFINE _NWRSTIR1_
#DEFINE _POS1_
#DEFINE _POS4_1_
#DEFINE _POS11_
#DEFINE _POS13_
#DEFINE _RES2_
#DEFINE _RES8_
#DEFINE _RES9_
#DEFINE _VARA1_
#DEFINE _COEN1_
#DEFINE _COEN3_
#DEFINE _COS3_
#DEFINE _M1S1_
#DEFINE _M1S7_
#DEFINE _M1EN1_M1EN2_
#DEFINE _VIA1EN1_VIA1EN2_
#DEFINE _M2S1_
#DEFINE _M2S7_
#DEFINE _M2EN1_M2EN2_
#DEFINE _VIA2EN1_VIA2EN2_
#DEFINE _M3S1_
#DEFINE _M3S7_
#DEFINE _M3EN1_M3EN2_
#DEFINE _VIA3EN1_VIA3EN2_
#DEFINE _M4S1_
#DEFINE _M4S7_
#DEFINE _M4EN1_M4EN2_
#DEFINE _DTCDDN1_
#ENDIF
#IFDEF Guideline
#DEFINE _OPCR2_
#DEFINE _NWR1_
#DEFINE _DNWR6_
#DEFINE _NWRODR3_NWRSTIR3_
#DEFINE _COS6_
#DEFINE _COR5_
#DEFINE _VIA1R9_
#DEFINE _VIA2R9_
#DEFINE _VIA3R9_
#DEFINE _VIA4R5_
#DEFINE _VIA5R5_
#ENDIF
#IFDEF Analog
#DEFINE _POS5m_
#DEFINE _POS6m_
#DEFINE _RES5m_
#DEFINE _BJTR2_
#DEFINE _BJTR3_
#DEFINE _BJTR4_
#DEFINE _BJTR5_
#DEFINE _BJTR6_
#DEFINE _BJTR7_
#DEFINE _ANR17_
#DEFINE _ANR20_
#ENDIF
#IFDEF First_priority
#DEFINE _COS3_
#DEFINE _COR5_
#DEFINE _M1EN1_M1EN2_
#DEFINE _VIA1EN1_VIA1EN2_
#DEFINE _M2EN1_M2EN2_
#DEFINE _VIA1R9_
#DEFINE _VIA2EN1_VIA2EN2_
#DEFINE _M3EN1_M3EN2_
#DEFINE _VIA2R9_
#DEFINE _VIA3EN1_VIA3EN2_
#DEFINE _M4EN1_M4EN2_
#DEFINE _VIA3R9_
#DEFINE _VIA4R5_
#DEFINE _VIA5R5_
#ENDIF
#IFDEF Systematic
#DEFINE _OPCR2_
#DEFINE _NWR1_
#DEFINE _DNWR6_
#DEFINE _POS2_
#DEFINE _POEX2_
#DEFINE _POS5_
#DEFINE _POS14_
#DEFINE _POEN1_
#DEFINE _POEN2_
#DEFINE _POEN3_
#DEFINE _OPCR1_
#DEFINE _DNWEN1_
#DEFINE _ODS6_
#DEFINE _POS11_
#DEFINE _POS13_
#DEFINE _COEN1_
#DEFINE _COEN3_
#DEFINE _COS3_
#DEFINE _M1S7_
#DEFINE _M1EN1_M1EN2_
#DEFINE _VIA1EN1_VIA1EN2_
#DEFINE _M2S7_
#DEFINE _M2EN1_M2EN2_
#DEFINE _VIA2EN1_VIA2EN2_
#DEFINE _M3S7_
#DEFINE _M3EN1_M3EN2_
#DEFINE _VIA3EN1_VIA3EN2_
#DEFINE _M4S7_
#DEFINE _M4EN1_M4EN2_
#DEFINE _DTCDDN1_
#ENDIF
#IFDEF Defect
#DEFINE _ODS1_
#DEFINE _COS3_
#DEFINE _POS1_
#DEFINE _M1S1_
#DEFINE _COR5_
#DEFINE _VIA1R9_
#DEFINE _M2S1_
#DEFINE _VIA2R9_
#DEFINE _M3S1_
#DEFINE _VIA3R9_
#DEFINE _M4S1_
#DEFINE _VIA4R5_
#DEFINE _VIA5R5_
#ENDIF
#IFDEF SPICE
#DEFINE _POS2_
#DEFINE _POEX2_
#DEFINE _POS5_
#DEFINE _POS14_
#DEFINE _POEN1_
#DEFINE _POEN2_
#DEFINE _POEN3_
#DEFINE _ODW2_
#DEFINE _NWRODS3_
#DEFINE _NWRODR1_
#DEFINE _NWRSTIEN2_
#DEFINE _NWRSTIR1_
#DEFINE _POS4_1_
#DEFINE _RES2_
#DEFINE _RES8_
#DEFINE _RES9_
#DEFINE _VARA1_
#DEFINE _COEN1_
#DEFINE _COEN3_
#DEFINE _M1EN1_M1EN2_
#DEFINE _VIA1EN1_VIA1EN2_
#DEFINE _M2EN1_M2EN2_
#DEFINE _VIA2EN1_VIA2EN2_
#DEFINE _M3EN1_M3EN2_
#DEFINE _VIA3EN1_VIA3EN2_
#DEFINE _M4EN1_M4EN2_
#DEFINE _NWR1_
#DEFINE _DNWR6_
#DEFINE _NWRODR3_NWRSTIR3_
#DEFINE _COS6_
#DEFINE _COR5_
#DEFINE _VIA1R9_
#DEFINE _VIA2R9_
#DEFINE _VIA3R9_
#DEFINE _VIA4R5_
#DEFINE _VIA5R5_
#ENDIF
#IFDEF _POS2_
#IFDEF GP
POS2_ODCellIn = INSIDE CELL ODi CellsForRRuleRequired
POS2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRequired
POS2_ODCell = POS2_ODCellIn AND POS2_ODCellOut
POS2_ODMarker = ODi AND RRuleRequired
POS2_OD = ((( POS2_ODCell OR POS2_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POS2_GATE_W = POLY INSIDE EDGE POS2_OD
RR:AR:SP:POS2 
brace_data_0000001518
#ELSE
#IFDEF LP
POS2_ODCellIn = INSIDE CELL ODi CellsForRRuleRequired
POS2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRequired
POS2_ODCell = POS2_ODCellIn AND POS2_ODCellOut
POS2_ODMarker = ODi AND RRuleRequired
POS2_OD = ((( POS2_ODCell OR POS2_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POS2_GATE_W = POLY INSIDE EDGE POS2_OD
RR:AR:SP:POS2 
brace_data_0000001519
#ELSE
#IFDEF LPG
POS2_ODCellIn = INSIDE CELL ODi CellsForRRuleRequired
POS2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRequired
POS2_ODCell = POS2_ODCellIn AND POS2_ODCellOut
POS2_ODMarker = ODi AND RRuleRequired
POS2_OD = ((( POS2_ODCell OR POS2_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POS2_GATE_W = (POLY INSIDE EDGE POS2_OD) NOT INSIDE EDGE DCO
RR:AR:SP:POS2 
brace_data_0000001520
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF _POEX2_
POEX2_ODCellIn = INSIDE CELL ODi CellsForRRuleRequired
POEX2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRequired
POEX2_ODCell = POEX2_ODCellIn AND POEX2_ODCellOut
POEX2_ODMarker = ODi AND RRuleRequired
POEX2_OD = ((( POEX2_ODCell OR POEX2_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
RR:AR:SP:POEX2 
brace_data_0000001521
#ENDIF
GateW2Check = LENGTH GATE_W >= 0.15
GATE2Check =  GATE WITH EDGE GateW2Check
#IFDEF _POS5_
POS5_POCellIn = INSIDE CELL POi CellsForRRuleRequired
POS5_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRequired
POS5_POCell = POS5_POCellIn AND POS5_POCellOut
POS5_POMarker = POi AND RRuleRequired
POS5_PO = ((( POS5_POCell OR POS5_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POS5_GateW = (GATE_W COIN INSIDE EDGE POS5_PO) COIN INSIDE EDGE GATE2Check
POS5_GateWExp = EXPAND EDGE POS5_GateW INSIDE BY GRID EXTEND BY OD_S_1
POS5_GateWExe = POS5_PO COIN INSIDE EDGE POS5_GateWExp
POS5B_A = EXT POS5_GateWExe ODi < 0.1 ABUT<90 OPPOSITE REGION
POS5B_B = EXPAND EDGE POS5_GateW OUTSIDE BY 0.1
POS5B_C = POS5B_B AND OD
POS5B_D = POS5B_C TOUCH OUTSIDE EDGE POS5B_A
POS5B_E = EXPAND EDGE POS5B_D OUTSIDE BY 0.21
POS5B_F = EXPAND EDGE POS5B_D OUTSIDE BY 0.005
POS5B_G = POS5B_E AND OD
POS5B_H = POS5B_G INTERACT POS5B_F
POS5B_I = POS5B_H NOT TOUCH EDGE POS5B_F
POS5B_J = POS5B_I INSIDE EDGE OD
RR:AR:SP:POS5
brace_data_0000001522
#ENDIF
#IFDEF _POS14_
POS14_POCellIn = INSIDE CELL POi CellsForRRuleRequired
POS14_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRequired
POS14_POCell = POS14_POCellIn AND POS14_POCellOut
POS14_POMarker = POi AND RRuleRequired
POS14_PO = ((( POS14_POCell OR POS14_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POS14_GATE = (GATE_NP AND POS14_PO) NOT OD2
POS14_NW = OD2 OR ( NWEL OR NTN )
RR:AR:SP:POS14 
brace_data_0000001523
#ENDIF
#IFDEF _POEN1_
POEN1_POCellIn = INSIDE CELL POi CellsForRRuleRequired
POEN1_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRequired
POEN1_POCell = POEN1_POCellIn AND POEN1_POCellOut
POEN1_POMarker = POi AND RRuleRequired
POEN1_PO = ((( POEN1_POCell OR POEN1_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POEN1_GATE = (GATE_PP AND POEN1_PO) NOT OD2
POEN1_NW = ( NWEL NOT OD_33 ) NOT NTN
RR:AR:SP:POEN1 
brace_data_0000001524
#ENDIF
#IFDEF _POEN2_
POEN2_POCellIn = INSIDE CELL POi CellsForRRuleRequired
POEN2_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRequired
POEN2_POCell = POEN2_POCellIn AND POEN2_POCellOut
POEN2_POMarker = POi AND RRuleRequired
POEN2_PO = ((( POEN2_POCell OR POEN2_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POEN2_GATE = (GATE_NP AND POEN2_PO) AND OD2
POEN2_NW = OD2 NOT ( NWEL OR NTN )
RR:AR:SP:POEN2 
brace_data_0000001525
#ENDIF
#IFDEF _POEN3_
POEN3_POCellIn = INSIDE CELL POi CellsForRRuleRequired
POEN3_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRequired
POEN3_POCell = POEN3_POCellIn AND POEN3_POCellOut
POEN3_POMarker = POi AND RRuleRequired
POEN3_PO = ((( POEN3_POCell OR POEN3_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRequired
POEN3_GATE = GATE_PP AND POEN3_PO
POEN3_GATE33 = POEN3_GATE AND OD_33
POEN3_GATE1825 = POEN3_GATE AND (OD_18 OR OD_25)
POEN3_NW   = NWEL NOT NTN
POEN3_NW33 = POEN3_NW AND OD_33
RR:AR:SP:POEN3 
brace_data_0000001526
#ENDIF
#IFDEF _OPCR1_
OPCR1_PPCellIn = INSIDE CELL PPi CellsForRRuleRecommended
OPCR1_PPCellOut = NOT INSIDE CELL PPi ExclCellsForRRuleRecommended
OPCR1_PPCell = OPCR1_PPCellIn AND OPCR1_PPCellOut
OPCR1_PPMarker = PPi AND RRuleRecommended
OPCR1_PP = ((( OPCR1_PPCell OR OPCR1_PPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_PP_45ANGLE = OPCR1_PP ANGLE == 45
RR:RE:S:OPCR1:PP 
brace_data_0000001527
OPCR1_NPCellIn = INSIDE CELL NPi CellsForRRuleRecommended
OPCR1_NPCellOut = NOT INSIDE CELL NPi ExclCellsForRRuleRecommended
OPCR1_NPCell = OPCR1_NPCellIn AND OPCR1_NPCellOut
OPCR1_NPMarker = NPi AND RRuleRecommended
OPCR1_NP = ((( OPCR1_NPCell OR OPCR1_NPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_NP_45ANGLE = OPCR1_NP ANGLE == 45
RR:RE:S:OPCR1:NP 
brace_data_0000001528
OPCR1_VTHNCellIn = INSIDE CELL VTH_Ni CellsForRRuleRecommended
OPCR1_VTHNCellOut = NOT INSIDE CELL VTH_Ni ExclCellsForRRuleRecommended
OPCR1_VTHNCell = OPCR1_VTHNCellIn AND OPCR1_VTHNCellOut
OPCR1_VTHNMarker = VTH_Ni AND RRuleRecommended
OPCR1_VTHN = ((( OPCR1_VTHNCell OR OPCR1_VTHNMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_VTHN_45ANGLE = OPCR1_VTHN ANGLE == 45
RR:RE:S:OPCR1:VTHN 
brace_data_0000001529
OPCR1_VTHPCellIn = INSIDE CELL VTH_Pi CellsForRRuleRecommended
OPCR1_VTHPCellOut = NOT INSIDE CELL VTH_Pi ExclCellsForRRuleRecommended
OPCR1_VTHPCell = OPCR1_VTHPCellIn AND OPCR1_VTHPCellOut
OPCR1_VTHPMarker = VTH_Pi AND RRuleRecommended
OPCR1_VTHP = ((( OPCR1_VTHPCell OR OPCR1_VTHPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_VTHP_45ANGLE = OPCR1_VTHP ANGLE == 45
RR:RE:S:OPCR1:VTHP 
brace_data_0000001530
OPCR1_VTLNCellIn = INSIDE CELL VTL_Ni CellsForRRuleRecommended
OPCR1_VTLNCellOut = NOT INSIDE CELL VTL_Ni ExclCellsForRRuleRecommended
OPCR1_VTLNCell = OPCR1_VTLNCellIn AND OPCR1_VTLNCellOut
OPCR1_VTLNMarker = VTL_Ni AND RRuleRecommended
OPCR1_VTLN = ((( OPCR1_VTLNCell OR OPCR1_VTLNMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_VTLN_45ANGLE = OPCR1_VTLN ANGLE == 45
RR:RE:S:OPCR1:VTLN 
brace_data_0000001531
OPCR1_VTLPCellIn = INSIDE CELL VTL_Pi CellsForRRuleRecommended
OPCR1_VTLPCellOut = NOT INSIDE CELL VTL_Pi ExclCellsForRRuleRecommended
OPCR1_VTLPCell = OPCR1_VTLPCellIn AND OPCR1_VTLPCellOut
OPCR1_VTLPMarker = VTL_Pi AND RRuleRecommended
OPCR1_VTLP = ((( OPCR1_VTLPCell OR OPCR1_VTLPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_VTLP_45ANGLE = OPCR1_VTLP ANGLE == 45
RR:RE:S:OPCR1:VTLP 
brace_data_0000001532
OPCR1_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
OPCR1_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
OPCR1_ODCell = OPCR1_ODCellIn AND OPCR1_ODCellOut
OPCR1_ODMarker = ODi AND RRuleRecommended
OPCR1_OD = ((( OPCR1_ODCell OR OPCR1_ODMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_OD_45ANGLE = OPCR1_OD ANGLE == 45
RR:RE:S:OPCR1:OD 
brace_data_0000001533
OPCR1_POCellIn = INSIDE CELL POi CellsForRRuleRecommended
OPCR1_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRecommended
OPCR1_POCell = OPCR1_POCellIn AND OPCR1_POCellOut
OPCR1_POMarker = POi AND RRuleRecommended
OPCR1_PO = ((( OPCR1_POCell OR OPCR1_POMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_PO_45ANGLE = OPCR1_PO ANGLE == 45
RR:RE:S:OPCR1:PO 
brace_data_0000001534
OPCR1_M1CellIn = INSIDE CELL M1i CellsForRRuleRecommended
OPCR1_M1CellOut = NOT INSIDE CELL M1i ExclCellsForRRuleRecommended
OPCR1_M1Cell = OPCR1_M1CellIn AND OPCR1_M1CellOut
OPCR1_M1Marker = M1i AND RRuleRecommended
OPCR1_M1 = ((( OPCR1_M1Cell OR OPCR1_M1Marker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
OPCR1_M1_45ANGLE = OPCR1_M1 ANGLE == 45
RR:RE:S:OPCR1:M1 
brace_data_0000001535
OPCR1_M2CellIn = INSIDE CELL M2i CellsForRRuleRecommended
OPCR1_M2CellOut = NOT INSIDE CELL M2i ExclCellsForRRuleRecommended
OPCR1_M2Cell = OPCR1_M2CellIn AND OPCR1_M2CellOut
OPCR1_M2Marker = M2i AND RRuleRecommended
OPCR1_M2 = ((OPCR1_M2Cell OR OPCR1_M2Marker) NOT Block ) NOT excludeRRuleRecommended
OPCR1_M2_45ANGLE = OPCR1_M2 ANGLE == 45
RR:RE:S:OPCR1:M2 
brace_data_0000001536
OPCR1_M3CellIn = INSIDE CELL M3i CellsForRRuleRecommended
OPCR1_M3CellOut = NOT INSIDE CELL M3i ExclCellsForRRuleRecommended
OPCR1_M3Cell = OPCR1_M3CellIn AND OPCR1_M3CellOut
OPCR1_M3Marker = M3i AND RRuleRecommended
OPCR1_M3 = ((OPCR1_M3Cell OR OPCR1_M3Marker) NOT Block ) NOT excludeRRuleRecommended
OPCR1_M3_45ANGLE = OPCR1_M3 ANGLE == 45
RR:RE:S:OPCR1:M3 
brace_data_0000001537
OPCR1_M4CellIn = INSIDE CELL M4i CellsForRRuleRecommended
OPCR1_M4CellOut = NOT INSIDE CELL M4i ExclCellsForRRuleRecommended
OPCR1_M4Cell = OPCR1_M4CellIn AND OPCR1_M4CellOut
OPCR1_M4Marker = M4i AND RRuleRecommended
OPCR1_M4 = ((OPCR1_M4Cell OR OPCR1_M4Marker) NOT Block ) NOT excludeRRuleRecommended
OPCR1_M4_45ANGLE = OPCR1_M4 ANGLE == 45
RR:RE:S:OPCR1:M4 
brace_data_0000001538
#ENDIF
#IFDEF _ODS6_
ODS6_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
ODS6_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
ODS6_ODCell = ODS6_ODCellIn AND ODS6_ODCellOut
ODS6_ODMarker = ODi AND RRuleRecommended
ODS6_OD = ((( ODS6_ODCell OR ODS6_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
ODS6Area = AREA ( ODi NOT INTERACT SEALRING ) > BIG_AREA
RR:RE:S:ODS6 
brace_data_0000001539
#ENDIF
#IFDEF _DNWEN1_
DNWEN1_DNWCellIn = INSIDE CELL DNWi CellsForRRuleRecommended
DNWEN1_DNWCellOut = NOT INSIDE CELL DNWi ExclCellsForRRuleRecommended
DNWEN1_DNWCell = DNWEN1_DNWCellIn AND DNWEN1_DNWCellOut
DNWEN1_DNWMarker = DNWi AND RRuleRecommended
DNWEN1_DNW = ((( DNWEN1_DNWCell OR DNWEN1_DNWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
RR:RE:S:DNWEN1 
brace_data_0000001540
#ENDIF
#IFDEF _POS11_
POS11_POCellIn = INSIDE CELL POi CellsForRRuleRecommended
POS11_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRecommended
POS11_POCell = POS11_POCellIn AND POS11_POCellOut
POS11_POMarker = POi AND RRuleRecommended
POS11_PO = ((( POS11_POCell OR POS11_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
POS11_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
POS11_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
POS11_ODCell = POS11_ODCellIn AND POS11_ODCellOut
POS11_ODMarker = ODi AND RRuleRecommended
POS11_OD = ((( POS11_ODCell OR POS11_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
POS11_GATE = POS11_PO AND POS11_OD
POS11_GATEW = POS11_PO COIN INSIDE EDGE POS11_GATE
POS11_CHECK  = INT [POS11_GATEW] <= 0.08 OPPOSITE
POS11_CHIP = SIZE CHIP BY - ( 1.0 - GRID )
POS11_EDGE1 = POS11_CHECK TOUCH EDGE ( POS11_CHECK INSIDE EDGE POS11_CHIP )
POS11_EXPD = EXPAND EDGE POS11_EDGE1 OUTSIDE BY 1.0
POS11_ALL = ALL_POLY INTERACT POS11_EXPD
POS11_EXT = EXT [POS11_CHECK] POS11_ALL < 1.0 ABUT < 90 OPPOSITE
RR:RE:S:POS11 
brace_data_0000001541
#ENDIF
#IFDEF _POS13_
POS13_POCellIn = INSIDE CELL POi CellsForRRuleRecommended
POS13_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRecommended
POS13_POCell = POS13_POCellIn AND POS13_POCellOut
POS13_POMarker = POi AND RRuleRecommended
POS13_PO = ((( POS13_POCell OR POS13_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
POS13_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
POS13_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
POS13_ODCell = POS13_ODCellIn AND POS13_ODCellOut
POS13_ODMarker = ODi AND RRuleRecommended
POS13_OD = ((( POS13_ODCell OR POS13_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
POS13_GATE = POS13_PO AND POS13_OD
POS13_GATEW  = POS13_PO COIN INSIDE EDGE POS13_GATE
POS13_CHECK  = INT [POS13_GATEW] == 0.06 OPPOSITE
POS13_BAD19  = EXT POS13_CHECK ALL_POLY < 0.19 OPPOSITE REGION
POS13_Ext27  = EXT [POS13_CHECK] ALL_POLY <= 0.27 OPPOSITE
POS13_Left27 = POS13_CHECK NOT COIN INSIDE EDGE POS13_Ext27
POS13_BAD295 = EXT POS13_Left27 ALL_POLY  < 0.295 OPPOSITE REGION
POS13_Ext39  = EXT [POS13_CHECK] ALL_POLY <= 0.39 OPPOSITE
POS13_Left39 = POS13_CHECK NOT COIN INSIDE EDGE POS13_Ext39
POS13_BAD455 = EXT POS13_Left39 ALL_POLY  < 0.455 OPPOSITE REGION
POS13_Ext94  = EXT [POS13_CHECK] ALL_POLY <= 0.94 OPPOSITE
POS13_Left94 = POS13_CHECK NOT COIN INSIDE EDGE POS13_Ext94
RR:RE:S:POS13 
brace_data_0000001542
#ENDIF
#IFDEF _NWRODS3_
NWRODS3_NWCellIn = INSIDE CELL NWi CellsForRRuleRecommended
NWRODS3_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleRecommended
NWRODS3_NWCell = NWRODS3_NWCellIn AND NWRODS3_NWCellOut
NWRODS3_NWMarker = NWi AND RRuleRecommended
NWRODS3_NW = ((( NWRODS3_NWCell OR NWRODS3_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
RR:RE:P:NWRODS3 
brace_data_0000001543
#ENDIF
#IFDEF _NWRODR1_
NWRODR1_NWCellIn = INSIDE CELL NWi CellsForRRuleRecommended
NWRODR1_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleRecommended
NWRODR1_NWCell = NWRODR1_NWCellIn AND NWRODR1_NWCellOut
NWRODR1_NWMarker = NWi AND RRuleRecommended
NWRODR1_NW = ((( NWRODR1_NWCell OR NWRODR1_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
NWRODR1_NWRES = ( NWRODR1_NW AND NWRES ) AND NWDMY
RR:RE:P:NWRODR1 
brace_data_0000001544
#ENDIF
#IFDEF _NWRSTIEN2_
NWRSTIEN2_NWCellIn = INSIDE CELL NWi CellsForRRuleRecommended
NWRSTIEN2_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleRecommended
NWRSTIEN2_NWCell = NWRSTIEN2_NWCellIn AND NWRSTIEN2_NWCellOut
NWRSTIEN2_NWMarker = NWi AND RRuleRecommended
NWRSTIEN2_NW = ((( NWRSTIEN2_NWCell OR NWRSTIEN2_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
RR:RE:P:NWRSTIEN2 
brace_data_0000001545
#ENDIF
#IFDEF _NWRSTIR1_
NWRSTIR1_NWCellIn = INSIDE CELL NWi CellsForRRuleRecommended
NWRSTIR1_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleRecommended
NWRSTIR1_NWCell = NWRSTIR1_NWCellIn AND NWRSTIR1_NWCellOut
NWRSTIR1_NWMarker = NWi AND RRuleRecommended
NWRSTIR1_NW = ((( NWRSTIR1_NWCell OR NWRSTIR1_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
NWRSTIR1_NWRES = ( NWRSTIR1_NW AND NWRES_STI ) AND NWDMY
RR:RE:P:NWRSTIR1 
brace_data_0000001546
#ENDIF
#IFDEF _ODW2_
ODW2_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
ODW2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
ODW2_ODCell = ODW2_ODCellIn AND ODW2_ODCellOut
ODW2_ODMarker = ODi AND RRuleRecommended
ODW2_OD = ((( ODW2_ODCell OR ODW2_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
ODW2_POCellIn = INSIDE CELL POi CellsForRRuleRecommended
ODW2_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRecommended
ODW2_POCell = ODW2_POCellIn AND ODW2_POCellOut
ODW2_POMarker = POi AND RRuleRecommended
ODW2_PO = ((( ODW2_POCell OR ODW2_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
ODW2_GATE_W = ( ODW2_PO INSIDE EDGE ODW2_OD ) NOT INSIDE EDGE OD2
RR:RE:P:ODW2 
brace_data_0000001547
#ENDIF
#IFDEF _POS4_1_
POS4_1_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
POS4_1_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
POS4_1_ODCell = POS4_1_ODCellIn AND POS4_1_ODCellOut
POS4_1_ODMarker = ODi AND RRuleRecommended
POS4_1_OD = ((( POS4_1_ODCell OR POS4_1_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
POS4_1_GATE  = POLY AND POS4_1_OD
RR:RE:P:POS4_1 
brace_data_0000001548
#ENDIF
#IFDEF _RES2_
RES2_POCellIn = INSIDE CELL POi CellsForRRuleRecommended
RES2_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRecommended
RES2_POCell = RES2_POCellIn AND RES2_POCellOut
RES2_POMarker = POi AND RRuleRecommended
RES2_PO = ((( RES2_POCell OR RES2_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RES2_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
RES2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
RES2_ODCell = RES2_ODCellIn AND RES2_ODCellOut
RES2_ODMarker = ODi AND RRuleRecommended
RES2_OD = ((( RES2_ODCell OR RES2_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RES2_ODRES = ODRES AND RES2_OD
RES2_PORES = PORESg AND RES2_PO
RR:RE:P:RES2.OD 
brace_data_0000001549
RR:RE:P:RES2.PO 
brace_data_0000001550
#ENDIF
#IFDEF _RES8_
RES8_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
RES8_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
RES8_ODCell = RES8_ODCellIn AND RES8_ODCellOut
RES8_ODMarker = ODi AND RRuleRecommended
RES8_OD = ((( RES8_ODCell OR RES8_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RES8_GATE = GATE AND RES8_OD
RR:RE:P:RES8 
brace_data_0000001551
#ENDIF
#IFDEF _RES9_
RES9_RHCellIn = INSIDE CELL RH CellsForRRuleRecommended
RES9_RHCellOut = NOT INSIDE CELL RH ExclCellsForRRuleRecommended
RES9_RHCell = RES9_RHCellIn AND RES9_RHCellOut
RES9_RHMarker = RH AND RRuleRecommended
RES9_RH = ((( RES9_RHCell OR RES9_RHMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:P:RES9 
brace_data_0000001552
#ENDIF
#IFDEF _COEN1_
COEN1_COCellIn = INSIDE CELL COi CellsForRRuleRecommended
COEN1_COCellOut = NOT INSIDE CELL COi ExclCellsForRRuleRecommended
COEN1_COCell = COEN1_COCellIn AND COEN1_COCellOut
COEN1_COMarker = COi AND RRuleRecommended
COEN1_CO = ((( COEN1_COCell OR COEN1_COMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:SP:COEN1 
brace_data_0000001553
#ENDIF
#IFDEF _COEN3_
COEN3_COCellIn = INSIDE CELL COi CellsForRRuleRecommended
COEN3_COCellOut = NOT INSIDE CELL COi ExclCellsForRRuleRecommended
COEN3_COCell = COEN3_COCellIn AND COEN3_COCellOut
COEN3_COMarker = COi AND RRuleRecommended
COEN3_CO = ((( COEN3_COCell OR COEN3_COMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:SP:COEN3 
brace_data_0000001554
#ENDIF
#IFDEF _COS3_
COS3_COCellIn = INSIDE CELL COi CellsForRRuleRecommended
COS3_COCellOut = NOT INSIDE CELL COi ExclCellsForRRuleRecommended
COS3_COCell = COS3_COCellIn AND COS3_COCellOut
COS3_COMarker = COi AND RRuleRecommended
COS3_CO = ((( COS3_COCell OR COS3_COMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:FSD:COS3 
brace_data_0000001555
#ENDIF
#IFDEF _ODS1_
ODS1_ODCellIn = INSIDE CELL ODi CellsForRRuleRecommended
ODS1_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleRecommended
ODS1_ODCell = ODS1_ODCellIn AND ODS1_ODCellOut
ODS1_ODMarker = ODi AND RRuleRecommended
ODS1_OD = ((( ODS1_ODCell OR ODS1_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:D:ODS1 
brace_data_0000001556
#ENDIF
#IFDEF _POS1_
POS1_POCellIn = INSIDE CELL POi CellsForRRuleRecommended
POS1_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleRecommended
POS1_POCell = POS1_POCellIn AND POS1_POCellOut
POS1_POMarker = POi AND RRuleRecommended
POS1_PO = ((( POS1_POCell OR POS1_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
POS1Err = EXT [POS1_PO] < 0.15 ABUT < 90
POS1ErrLong = POS1Err NOT TOUCH EDGE GATE
RR:RE:D:POS1 
brace_data_0000001557
#ENDIF
#IFDEF _M1S1_
M1S1_M1CellIn = INSIDE CELL M1i CellsForRRuleRecommended
M1S1_M1CellOut = NOT INSIDE CELL M1i ExclCellsForRRuleRecommended
M1S1_M1Cell = M1S1_M1CellIn AND M1S1_M1CellOut
M1S1_M1Marker = M1i AND RRuleRecommended
M1S1_M1 = ((( M1S1_M1Cell OR M1S1_M1Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:D:M1S1 
brace_data_0000001558
#ENDIF
#IFDEF _M1EN1_M1EN2_
M1EN1_M1EN2_COCellIn = INSIDE CELL COi CellsForRRuleRecommended
M1EN1_M1EN2_COCellOut = NOT INSIDE CELL COi ExclCellsForRRuleRecommended
M1EN1_M1EN2_COCell = M1EN1_M1EN2_COCellIn AND M1EN1_M1EN2_COCellOut
M1EN1_M1EN2_COMarker = COi AND RRuleRecommended
M1EN1_M1EN2_CO = ((( M1EN1_M1EN2_COCell OR M1EN1_M1EN2_COMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleRecommended
RR:RE:FP:M1EN1_M1EN2 
brace_data_0000001559
#ENDIF
#IFDEF _M1S7_
M1S7_M1CellIn = INSIDE CELL M1i CellsForRRuleRecommended
M1S7_M1CellOut = NOT INSIDE CELL M1i ExclCellsForRRuleRecommended
M1S7_M1Cell = M1S7_M1CellIn AND M1S7_M1CellOut
M1S7_M1Marker = M1i AND RRuleRecommended
M1S7_M1 = ((M1S7_M1Cell OR M1S7_M1Marker) NOT Block ) NOT excludeRRuleRecommended
M1S7_DM1CellIn = INSIDE CELL DUM1 CellsForRRuleRecommended
M1S7_DM1CellOut = NOT INSIDE CELL DUM1 ExclCellsForRRuleRecommended
M1S7_DM1Cell = M1S7_DM1CellIn AND M1S7_DM1CellOut
M1S7_DM1Marker = DUM1 AND RRuleRecommended
M1S7_DM1 = ((M1S7_DM1Cell OR M1S7_DM1Marker) NOT Block ) NOT excludeRRuleRecommended
M1S7_M1x = M1S7_M1 OR M1S7_DM1
M1S7_NOT_M1x = CHIP NOT M1x
M1S7_BIGAREA = AREA M1S7_NOT_M1x > BIG_AREA
M1S7_ERROR = (EXT M1S7_BIGAREA M1S7_NOT_M1x < 0.35 SPACE ABUT < 90 SINGULAR REGION) NOT OUTSIDE M1S7_M1x
RR:RE:S:M1S7 
brace_data_0000001560
#ENDIF
#IFDEF _VIA1EN1_VIA1EN2_
VIA1EN1_VIA1EN2_VIA1CellIn = INSIDE CELL VIA1i CellsForRRuleRecommended
VIA1EN1_VIA1EN2_VIA1CellOut = NOT INSIDE CELL VIA1i ExclCellsForRRuleRecommended
VIA1EN1_VIA1EN2_VIA1Cell = VIA1EN1_VIA1EN2_VIA1CellIn AND VIA1EN1_VIA1EN2_VIA1CellOut
VIA1EN1_VIA1EN2_VIA1Marker = VIA1i AND RRuleRecommended
VIA1EN1_VIA1EN2_VIA1 = ((( VIA1EN1_VIA1EN2_VIA1Cell OR VIA1EN1_VIA1EN2_VIA1Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:FP:VIA1EN1_VIA1EN2 
brace_data_0000001561
#ENDIF
#IFDEF _M2EN1_M2EN2_
M2EN1_M2EN2_VIA1CellIn = INSIDE CELL VIA1i CellsForRRuleRecommended
M2EN1_M2EN2_VIA1CellOut = NOT INSIDE CELL VIA1i ExclCellsForRRuleRecommended
M2EN1_M2EN2_VIA1Cell = M2EN1_M2EN2_VIA1CellIn AND M2EN1_M2EN2_VIA1CellOut
M2EN1_M2EN2_VIA1Marker = VIA1i AND RRuleRecommended
M2EN1_M2EN2_VIA1 = ((( M2EN1_M2EN2_VIA1Cell OR M2EN1_M2EN2_VIA1Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:FP:M2EN1_M2EN2 
brace_data_0000001562
#ENDIF
#IFDEF _M2S1_
M2S1_M2CellIn = INSIDE CELL M2i CellsForRRuleRecommended
M2S1_M2CellOut = NOT INSIDE CELL M2i ExclCellsForRRuleRecommended
M2S1_M2Cell = M2S1_M2CellIn AND M2S1_M2CellOut
M2S1_M2Marker = M2i AND RRuleRecommended
M2S1_M2 = ((M2S1_M2Cell OR M2S1_M2Marker) NOT Block ) NOT excludeRRuleRecommended
RR:RE:D:M2S1 
brace_data_0000001563
#ENDIF
#IFDEF _M2S7_
M2S7_M2CellIn = INSIDE CELL M2i CellsForRRuleRecommended
M2S7_M2CellOut = NOT INSIDE CELL M2i ExclCellsForRRuleRecommended
M2S7_M2Cell = M2S7_M2CellIn AND M2S7_M2CellOut
M2S7_M2Marker = M2i AND RRuleRecommended
M2S7_M2 = ((M2S7_M2Cell OR M2S7_M2Marker) NOT Block ) NOT excludeRRuleRecommended
M2S7_DM2CellIn = INSIDE CELL DUM2 CellsForRRuleRecommended
M2S7_DM2CellOut = NOT INSIDE CELL DUM2 ExclCellsForRRuleRecommended
M2S7_DM2Cell = M2S7_DM2CellIn AND M2S7_DM2CellOut
M2S7_DM2Marker = DUM2 AND RRuleRecommended
M2S7_DM2 = ((M2S7_DM2Cell OR M2S7_DM2Marker) NOT Block ) NOT excludeRRuleRecommended
M2S7_M2x = M2S7_M2 OR M2S7_DM2
M2S7_NOT_M2x = CHIP NOT M2x
M2S7_BIGAREA = AREA M2S7_NOT_M2x > BIG_AREA
M2S7_ERROR = (EXT M2S7_BIGAREA M2S7_NOT_M2x < 0.35 SPACE ABUT < 90 SINGULAR REGION) NOT OUTSIDE M2S7_M2x
RR:RE:S:M2S7 
brace_data_0000001564
#ENDIF
#IFDEF _VIA2EN1_VIA2EN2_
VIA2EN1_VIA2EN2_VIA2CellIn = INSIDE CELL VIA2i CellsForRRuleRecommended
VIA2EN1_VIA2EN2_VIA2CellOut = NOT INSIDE CELL VIA2i ExclCellsForRRuleRecommended
VIA2EN1_VIA2EN2_VIA2Cell = VIA2EN1_VIA2EN2_VIA2CellIn AND VIA2EN1_VIA2EN2_VIA2CellOut
VIA2EN1_VIA2EN2_VIA2Marker = VIA2i AND RRuleRecommended
VIA2EN1_VIA2EN2_VIA2 = ((( VIA2EN1_VIA2EN2_VIA2Cell OR VIA2EN1_VIA2EN2_VIA2Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:FP:VIA2EN1_VIA2EN2 
brace_data_0000001565
#ENDIF
#IFDEF _M3EN1_M3EN2_
M3EN1_M3EN2_VIA2CellIn = INSIDE CELL VIA2i CellsForRRuleRecommended
M3EN1_M3EN2_VIA2CellOut = NOT INSIDE CELL VIA2i ExclCellsForRRuleRecommended
M3EN1_M3EN2_VIA2Cell = M3EN1_M3EN2_VIA2CellIn AND M3EN1_M3EN2_VIA2CellOut
M3EN1_M3EN2_VIA2Marker = VIA2i AND RRuleRecommended
M3EN1_M3EN2_VIA2 = ((( M3EN1_M3EN2_VIA2Cell OR M3EN1_M3EN2_VIA2Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleRecommended
RR:RE:FP:M3EN1_M3EN2 
brace_data_0000001566
#ENDIF
#IFDEF _M3S1_
M3S1_M3CellIn = INSIDE CELL M3i CellsForRRuleRecommended
M3S1_M3CellOut = NOT INSIDE CELL M3i ExclCellsForRRuleRecommended
M3S1_M3Cell = M3S1_M3CellIn AND M3S1_M3CellOut
M3S1_M3Marker = M3i AND RRuleRecommended
M3S1_M3 = ((M3S1_M3Cell OR M3S1_M3Marker) NOT Block ) NOT excludeRRuleRecommended
RR:RE:D:M3S1 
brace_data_0000001567
#ENDIF
#IFDEF _M3S7_
M3S7_M3CellIn = INSIDE CELL M3i CellsForRRuleRecommended
M3S7_M3CellOut = NOT INSIDE CELL M3i ExclCellsForRRuleRecommended
M3S7_M3Cell = M3S7_M3CellIn AND M3S7_M3CellOut
M3S7_M3Marker = M3i AND RRuleRecommended
M3S7_M3 = ((M3S7_M3Cell OR M3S7_M3Marker) NOT Block ) NOT excludeRRuleRecommended
M3S7_DM3CellIn = INSIDE CELL DUM3 CellsForRRuleRecommended
M3S7_DM3CellOut = NOT INSIDE CELL DUM3 ExclCellsForRRuleRecommended
M3S7_DM3Cell = M3S7_DM3CellIn AND M3S7_DM3CellOut
M3S7_DM3Marker = DUM3 AND RRuleRecommended
M3S7_DM3 = ((M3S7_DM3Cell OR M3S7_DM3Marker) NOT Block ) NOT excludeRRuleRecommended
M3S7_M3x = M3S7_M3 OR M3S7_DM3
M3S7_NOT_M3x = CHIP NOT M3x
M3S7_BIGAREA = AREA M3S7_NOT_M3x > BIG_AREA
M3S7_ERROR = (EXT M3S7_BIGAREA M3S7_NOT_M3x < 0.35 SPACE ABUT < 90 SINGULAR REGION) NOT OUTSIDE M3S7_M3x
RR:RE:S:M3S7 
brace_data_0000001568
#ENDIF
#IFDEF _VIA3EN1_VIA3EN2_
VIA3EN1_VIA3EN2_VIA3CellIn = INSIDE CELL VIA3i CellsForRRuleRecommended
VIA3EN1_VIA3EN2_VIA3CellOut = NOT INSIDE CELL VIA3i ExclCellsForRRuleRecommended
VIA3EN1_VIA3EN2_VIA3Cell = VIA3EN1_VIA3EN2_VIA3CellIn AND VIA3EN1_VIA3EN2_VIA3CellOut
VIA3EN1_VIA3EN2_VIA3Marker = VIA3i AND RRuleRecommended
VIA3EN1_VIA3EN2_VIA3 = ((VIA3EN1_VIA3EN2_VIA3Cell OR VIA3EN1_VIA3EN2_VIA3Marker) NOT Block ) NOT excludeRRuleRecommended
RR:RE:FP:VIA3EN1_VIA3EN2 
brace_data_0000001569
#ENDIF
#IFDEF _M4EN1_M4EN2_
M4EN1_M4EN2_VIA3CellIn = INSIDE CELL VIA3i CellsForRRuleRecommended
M4EN1_M4EN2_VIA3CellOut = NOT INSIDE CELL VIA3i ExclCellsForRRuleRecommended
M4EN1_M4EN2_VIA3Cell = M4EN1_M4EN2_VIA3CellIn AND M4EN1_M4EN2_VIA3CellOut
M4EN1_M4EN2_VIA3Marker = VIA3i AND RRuleRecommended
M4EN1_M4EN2_VIA3 = ((M4EN1_M4EN2_VIA3Cell OR M4EN1_M4EN2_VIA3Marker) NOT Block ) NOT excludeRRuleRecommended
RR:RE:FP:M4EN1_M4EN2 
brace_data_0000001570
#ENDIF
#IFDEF _M4S1_
M4S1_M4CellIn = INSIDE CELL M4i CellsForRRuleRecommended
M4S1_M4CellOut = NOT INSIDE CELL M4i ExclCellsForRRuleRecommended
M4S1_M4Cell = M4S1_M4CellIn AND M4S1_M4CellOut
M4S1_M4Marker = M4i AND RRuleRecommended
M4S1_M4 = ((M4S1_M4Cell OR M4S1_M4Marker) NOT Block ) NOT excludeRRuleRecommended
RR:RE:D:M4S1 
brace_data_0000001571
#ENDIF
#IFDEF _M4S7_
M4S7_M4CellIn = INSIDE CELL M4i CellsForRRuleRecommended
M4S7_M4CellOut = NOT INSIDE CELL M4i ExclCellsForRRuleRecommended
M4S7_M4Cell = M4S7_M4CellIn AND M4S7_M4CellOut
M4S7_M4Marker = M4i AND RRuleRecommended
M4S7_M4 = ((M4S7_M4Cell OR M4S7_M4Marker) NOT Block ) NOT excludeRRuleRecommended
M4S7_DM4CellIn = INSIDE CELL DUM4 CellsForRRuleRecommended
M4S7_DM4CellOut = NOT INSIDE CELL DUM4 ExclCellsForRRuleRecommended
M4S7_DM4Cell = M4S7_DM4CellIn AND M4S7_DM4CellOut
M4S7_DM4Marker = DUM4 AND RRuleRecommended
M4S7_DM4 = ((M4S7_DM4Cell OR M4S7_DM4Marker) NOT Block ) NOT excludeRRuleRecommended
M4S7_M4x = M4S7_M4 OR M4S7_DM4
M4S7_NOT_M4x = CHIP NOT M4x
M4S7_BIGAREA = AREA M4S7_NOT_M4x > BIG_AREA
M4S7_ERROR = (EXT M4S7_BIGAREA M4S7_NOT_M4x < 0.35 SPACE ABUT < 90 SINGULAR REGION) NOT OUTSIDE M4S7_M4x
RR:RE:S:M4S7 
brace_data_0000001572
#ENDIF
#IFDEF FULL_CHIP
#IFDEF _DTCDDN1_
RR:RE:S:DTCDDN1
brace_data_0000001573
#ENDIF
#ENDIF
#IFDEF _OPCR2_
OPCR2_PPCellIn = INSIDE CELL PPi CellsForRRuleGuideline
OPCR2_PPCellOut = NOT INSIDE CELL PPi ExclCellsForRRuleGuideline
OPCR2_PPCell = OPCR2_PPCellIn AND OPCR2_PPCellOut
OPCR2_PPMarker = PPi AND RRuleGuideline
OPCR2_PP = ((( OPCR2_PPCell OR OPCR2_PPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:PP 
brace_data_0000001574
OPCR2_NPCellIn = INSIDE CELL NPi CellsForRRuleGuideline
OPCR2_NPCellOut = NOT INSIDE CELL NPi ExclCellsForRRuleGuideline
OPCR2_NPCell = OPCR2_NPCellIn AND OPCR2_NPCellOut
OPCR2_NPMarker = NPi AND RRuleGuideline
OPCR2_NP = ((( OPCR2_NPCell OR OPCR2_NPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:NP 
brace_data_0000001575
OPCR2_VTHNCellIn = INSIDE CELL VTH_Ni CellsForRRuleGuideline
OPCR2_VTHNCellOut = NOT INSIDE CELL VTH_Ni ExclCellsForRRuleGuideline
OPCR2_VTHNCell = OPCR2_VTHNCellIn AND OPCR2_VTHNCellOut
OPCR2_VTHNMarker = VTH_Ni AND RRuleGuideline
OPCR2_VTHN = ((( OPCR2_VTHNCell OR OPCR2_VTHNMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:VTHN 
brace_data_0000001576
OPCR2_VTHPCellIn = INSIDE CELL VTH_Pi CellsForRRuleGuideline
OPCR2_VTHPCellOut = NOT INSIDE CELL VTH_Pi ExclCellsForRRuleGuideline
OPCR2_VTHPCell = OPCR2_VTHPCellIn AND OPCR2_VTHPCellOut
OPCR2_VTHPMarker = VTH_Pi AND RRuleGuideline
OPCR2_VTHP = ((( OPCR2_VTHPCell OR OPCR2_VTHPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:VTHP 
brace_data_0000001577
OPCR2_VTLNCellIn = INSIDE CELL VTL_Ni CellsForRRuleGuideline
OPCR2_VTLNCellOut = NOT INSIDE CELL VTL_Ni ExclCellsForRRuleGuideline
OPCR2_VTLNCell = OPCR2_VTLNCellIn AND OPCR2_VTLNCellOut
OPCR2_VTLNMarker = VTL_Ni AND RRuleGuideline
OPCR2_VTLN = ((( OPCR2_VTLNCell OR OPCR2_VTLNMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:VTLN 
brace_data_0000001578
OPCR2_VTLPCellIn = INSIDE CELL VTL_Pi CellsForRRuleGuideline
OPCR2_VTLPCellOut = NOT INSIDE CELL VTL_Pi ExclCellsForRRuleGuideline
OPCR2_VTLPCell = OPCR2_VTLPCellIn AND OPCR2_VTLPCellOut
OPCR2_VTLPMarker = VTL_Pi AND RRuleGuideline
OPCR2_VTLP = ((( OPCR2_VTLPCell OR OPCR2_VTLPMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:VTLP 
brace_data_0000001579
OPCR2_ODCellIn = INSIDE CELL ODi CellsForRRuleGuideline
OPCR2_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleGuideline
OPCR2_ODCell = OPCR2_ODCellIn AND OPCR2_ODCellOut
OPCR2_ODMarker = ODi AND RRuleGuideline
OPCR2_OD = ((( OPCR2_ODCell OR OPCR2_ODMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:OD 
brace_data_0000001580
OPCR2_POCellIn = INSIDE CELL POi CellsForRRuleGuideline
OPCR2_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleGuideline
OPCR2_POCell = OPCR2_POCellIn AND OPCR2_POCellOut
OPCR2_POMarker = POi AND RRuleGuideline
OPCR2_PO = ((( OPCR2_POCell OR OPCR2_POMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:PO 
brace_data_0000001581
OPCR2_M1CellIn = INSIDE CELL M1i CellsForRRuleGuideline
OPCR2_M1CellOut = NOT INSIDE CELL M1i ExclCellsForRRuleGuideline
OPCR2_M1Cell = OPCR2_M1CellIn AND OPCR2_M1CellOut
OPCR2_M1Marker = M1i AND RRuleGuideline
OPCR2_M1 = ((( OPCR2_M1Cell OR OPCR2_M1Marker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:M1 
brace_data_0000001582
OPCR2_M2CellIn = INSIDE CELL M2i CellsForRRuleGuideline
OPCR2_M2CellOut = NOT INSIDE CELL M2i ExclCellsForRRuleGuideline
OPCR2_M2Cell = OPCR2_M2CellIn AND OPCR2_M2CellOut
OPCR2_M2Marker = M2i AND RRuleGuideline
OPCR2_M2 = ((OPCR2_M2Cell OR OPCR2_M2Marker) NOT Block ) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:M2 
brace_data_0000001583
OPCR2_M3CellIn = INSIDE CELL M3i CellsForRRuleGuideline
OPCR2_M3CellOut = NOT INSIDE CELL M3i ExclCellsForRRuleGuideline
OPCR2_M3Cell = OPCR2_M3CellIn AND OPCR2_M3CellOut
OPCR2_M3Marker = M3i AND RRuleGuideline
OPCR2_M3 = ((OPCR2_M3Cell OR OPCR2_M3Marker) NOT Block ) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:M3 
brace_data_0000001584
OPCR2_M4CellIn = INSIDE CELL M4i CellsForRRuleGuideline
OPCR2_M4CellOut = NOT INSIDE CELL M4i ExclCellsForRRuleGuideline
OPCR2_M4Cell = OPCR2_M4CellIn AND OPCR2_M4CellOut
OPCR2_M4Marker = M4i AND RRuleGuideline
OPCR2_M4 = ((OPCR2_M4Cell OR OPCR2_M4Marker) NOT Block ) NOT excludeRRuleGuideline
RR:GL:S:OPCR2:M4 
brace_data_0000001585
#ENDIF
#IFDEF _NWR1_
NWR1_NWCellIn = INSIDE CELL NWi CellsForRRuleGuideline
NWR1_NWCellOut = NOT INSIDE CELL NWi ExclCellsForRRuleGuideline
NWR1_NWCell = NWR1_NWCellIn AND NWR1_NWCellOut
NWR1_NWMarker = NWi AND RRuleGuideline
NWR1_NW = ((( NWR1_NWCell OR NWR1_NWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:SP:NWR1 
brace_data_0000001586
#ENDIF
#IFDEF _DNWR6_
DNWR6_DNWCellIn = INSIDE CELL DNWi CellsForRRuleGuideline
DNWR6_DNWCellOut = NOT INSIDE CELL DNWi ExclCellsForRRuleGuideline
DNWR6_DNWCell = DNWR6_DNWCellIn AND DNWR6_DNWCellOut
DNWR6_DNWMarker = DNWi AND RRuleGuideline
DNWR6_DNW = ((( DNWR6_DNWCell OR DNWR6_DNWMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:SP:DNWR6 
brace_data_0000001587
#ENDIF
#IFDEF _NWRODR3_NWRSTIR3_
NWRODR3_NWDMYCellIn = INSIDE CELL NWDMY CellsForRRuleGuideline
NWRODR3_NWDMYCellOut = NOT INSIDE CELL NWDMY ExclCellsForRRuleGuideline
NWRODR3_NWDMYCell = NWRODR3_NWDMYCellIn AND NWRODR3_NWDMYCellOut
NWRODR3_NWDMYMarker = NWDMY AND RRuleGuideline
NWRODR3_NWDMY = ((( NWRODR3_NWDMYCell OR NWRODR3_NWDMYMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:P:NWRODR3_NWRSTIR3 
brace_data_0000001588
#ENDIF
#IFDEF _COS6_
COS6_ODCellIn = INSIDE CELL ODi CellsForRRuleGuideline
COS6_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleGuideline
COS6_ODCell = COS6_ODCellIn AND COS6_ODCellOut
COS6_ODMarker = ODi AND RRuleGuideline
COS6_OD = ((( COS6_ODCell OR COS6_ODMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:P:COS6 
brace_data_0000001589
#ENDIF
#IFDEF _COR5_
COR5_COCellIn = INSIDE CELL COi CellsForRRuleGuideline
COR5_COCellOut = NOT INSIDE CELL COi ExclCellsForRRuleGuideline
COR5_COCell = COR5_COCellIn AND COR5_COCellOut
COR5_COMarker = COi AND RRuleGuideline
COR5_CO = ((( COR5_COCell OR COR5_COMarker ) NOT INSIDE SRAM_EXCLUDE ) OUTSIDE Block) NOT excludeRRuleGuideline
RR:GL:FDP:COR5 
brace_data_0000001590
#ENDIF
#IFDEF _VIA1R9_
VIA1R9_VIA1CellIn = INSIDE CELL VIA1i CellsForRRuleGuideline
VIA1R9_VIA1CellOut = NOT INSIDE CELL VIA1i ExclCellsForRRuleGuideline
VIA1R9_VIA1Cell = VIA1R9_VIA1CellIn AND VIA1R9_VIA1CellOut
VIA1R9_VIA1Marker = VIA1i AND RRuleGuideline
VIA1R9_VIA1 = ((( VIA1R9_VIA1Cell OR VIA1R9_VIA1Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleGuideline
RR:GL:FDP:VIA1R9
brace_data_0000001591
#ENDIF
#IFDEF _VIA2R9_
VIA2R9_VIA2CellIn = INSIDE CELL VIA2i CellsForRRuleGuideline
VIA2R9_VIA2CellOut = NOT INSIDE CELL VIA2i ExclCellsForRRuleGuideline
VIA2R9_VIA2Cell = VIA2R9_VIA2CellIn AND VIA2R9_VIA2CellOut
VIA2R9_VIA2Marker = VIA2i AND RRuleGuideline
VIA2R9_VIA2 = ((( VIA2R9_VIA2Cell OR VIA2R9_VIA2Marker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleGuideline
RR:GL:FDP:VIA2R9
brace_data_0000001592
#ENDIF
#IFDEF _VIA3R9_
VIA3R9_VIA3CellIn = INSIDE CELL VIA3i CellsForRRuleGuideline
VIA3R9_VIA3CellOut = NOT INSIDE CELL VIA3i ExclCellsForRRuleGuideline
VIA3R9_VIA3Cell = VIA3R9_VIA3CellIn AND VIA3R9_VIA3CellOut
VIA3R9_VIA3Marker = VIA3i AND RRuleGuideline
VIA3R9_VIA3 = ((VIA3R9_VIA3Cell OR VIA3R9_VIA3Marker) NOT Block ) NOT excludeRRuleGuideline
RR:GL:FDP:VIA3R9
brace_data_0000001593
#ENDIF
#IFDEF _VIA4R5_
#IFDEF MIXED_SCHEME
VIA4R5_VIA4_OLDCellIn = INSIDE CELL VIA4_OLD CellsForRRuleGuideline
VIA4R5_VIA4_OLDCellOut = NOT INSIDE CELL VIA4_OLD ExclCellsForRRuleGuideline
VIA4R5_VIA4_OLDCell = VIA4R5_VIA4_OLDCellIn AND VIA4R5_VIA4_OLDCellOut
VIA4R5_VIA4_OLDMarker = VIA4_OLD AND RRuleGuideline
VIA4R5_VIA4_OLD = ((VIA4R5_VIA4_OLDCell OR VIA4R5_VIA4_OLDMarker) NOT Block ) NOT excludeRRuleGuideline
VIA4R5_VIA4_NEWCellIn = INSIDE CELL VIA4_NEW CellsForRRuleGuideline
VIA4R5_VIA4_NEWCellOut = NOT INSIDE CELL VIA4_NEW ExclCellsForRRuleGuideline
VIA4R5_VIA4_NEWCell = VIA4R5_VIA4_NEWCellIn AND VIA4R5_VIA4_NEWCellOut
VIA4R5_VIA4_NEWMarker = VIA4_NEW AND RRuleGuideline
VIA4R5_VIA4_NEW = ((VIA4R5_VIA4_NEWCell OR VIA4R5_VIA4_NEWMarker) NOT Block ) NOT excludeRRuleGuideline
VIA4R5_VIA4 = VIA4R5_VIA4_OLD OR VIA4R5_VIA4_NEW
#ELSE
VIA4R5_VIA4CellIn = INSIDE CELL VIA4_NEW CellsForRRuleGuideline
VIA4R5_VIA4CellOut = NOT INSIDE CELL VIA4_NEW ExclCellsForRRuleGuideline
VIA4R5_VIA4Cell = VIA4R5_VIA4CellIn AND VIA4R5_VIA4CellOut
VIA4R5_VIA4Marker = VIA4_NEW AND RRuleGuideline
VIA4R5_VIA4 = ((VIA4R5_VIA4Cell OR VIA4R5_VIA4Marker) NOT Block ) NOT excludeRRuleGuideline
#ENDIF
RR:GL:FDP:VIA4R5
brace_data_0000001594
#ENDIF
#IFDEF _VIA5R5_
#IFDEF MIXED_SCHEME
VIA5R5_VIA5_OLDCellIn = INSIDE CELL VIA5_OLD CellsForRRuleGuideline
VIA5R5_VIA5_OLDCellOut = NOT INSIDE CELL VIA5_OLD ExclCellsForRRuleGuideline
VIA5R5_VIA5_OLDCell = VIA5R5_VIA5_OLDCellIn AND VIA5R5_VIA5_OLDCellOut
VIA5R5_VIA5_OLDMarker = VIA5_OLD AND RRuleGuideline
VIA5R5_VIA5_OLD = ((VIA5R5_VIA5_OLDCell OR VIA5R5_VIA5_OLDMarker) NOT Block ) NOT excludeRRuleGuideline
VIA5R5_VIA5_NEWCellIn = INSIDE CELL VIA5_NEW CellsForRRuleGuideline
VIA5R5_VIA5_NEWCellOut = NOT INSIDE CELL VIA5_NEW ExclCellsForRRuleGuideline
VIA5R5_VIA5_NEWCell = VIA5R5_VIA5_NEWCellIn AND VIA5R5_VIA5_NEWCellOut
VIA5R5_VIA5_NEWMarker = VIA5_NEW AND RRuleGuideline
VIA5R5_VIA5_NEW = ((VIA5R5_VIA5_NEWCell OR VIA5R5_VIA5_NEWMarker) NOT Block ) NOT excludeRRuleGuideline
VIA5R5_VIA5 = VIA5R5_VIA5_OLD OR VIA5R5_VIA5_NEW
#ELSE
VIA5R5_VIA5CellIn = INSIDE CELL VIA5_NEW CellsForRRuleGuideline
VIA5R5_VIA5CellOut = NOT INSIDE CELL VIA5_NEW ExclCellsForRRuleGuideline
VIA5R5_VIA5Cell = VIA5R5_VIA5CellIn AND VIA5R5_VIA5CellOut
VIA5R5_VIA5Marker = VIA5_NEW AND RRuleGuideline
VIA5R5_VIA5 = ((VIA5R5_VIA5Cell OR VIA5R5_VIA5Marker) NOT Block ) NOT excludeRRuleGuideline
#ENDIF
RR:GL:FDP:VIA5R5
brace_data_0000001595
#ENDIF
#IFDEF _POS5m_
POS5m_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
POS5m_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
POS5m_POCell = POS5m_POCellIn AND POS5m_POCellOut
POS5m_POMarker = POi AND RRuleAnalog
POS5m_PO = ((( POS5m_POCell OR POS5m_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
POS5m_GateW = GATE_W COIN INSIDE EDGE POS5m_PO
POS5m_GateWExp = EXPAND EDGE POS5m_GateW INSIDE BY GRID EXTEND BY OD_S_1
POS5m_GateWExe = POS5m_PO COIN INSIDE EDGE POS5m_GateWExp
RR:AN:POS5m 
brace_data_0000001596
#ENDIF
#IFDEF _POS6m_
POS6m_ODCellIn = INSIDE CELL ODi CellsForRRuleAnalog
POS6m_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleAnalog
POS6m_ODCell = POS6m_ODCellIn AND POS6m_ODCellOut
POS6m_ODMarker = ODi AND RRuleAnalog
POS6m_OD = ((( POS6m_ODCell OR POS6m_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
POS6m_GateL = GATE_L COIN INSIDE EDGE POS6m_OD
POS6m_GateLExp = EXPAND EDGE POS6m_GateL INSIDE BY GRID EXTEND BY PO_S_1
POS6m_GateLExe = (POS6m_OD COIN INSIDE EDGE POS6m_GateLExp) TOUCH INSIDE EDGE POS6m_GateL
RR:AN:POS6m 
brace_data_0000001597
#ENDIF
#IFDEF _RES5m_
RES5_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
RES5_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
RES5_POCell = RES5_POCellIn AND RES5_POCellOut
RES5_POMarker = POi AND RRuleAnalog
RES5_PO = ((( RES5_POCell OR RES5_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
RES5_ODCellIn = INSIDE CELL ODi CellsForRRuleAnalog
RES5_ODCellOut = NOT INSIDE CELL ODi ExclCellsForRRuleAnalog
RES5_ODCell = RES5_ODCellIn AND RES5_ODCellOut
RES5_ODMarker = ODi AND RRuleAnalog
RES5_OD = ((( RES5_ODCell OR RES5_ODMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
RR:AN:RES5m.OD 
brace_data_0000001598
RR:AN:RES5m.PO 
brace_data_0000001599
#ENDIF
#IFDEF _BJTR2_
BJT.R.2R 
brace_data_0000001600
#ENDIF
#IFDEF _BJTR3_
BJT.R.3R 
brace_data_0000001601
#ENDIF
BJT_NW = NWEL AND BJTDMY
BJT_DNW = DNW AND BJTDMY
BJT_RW = BJT_DNW NOT BJT_NW
#IFDEF _BJTR4_
BJT.R.4R 
brace_data_0000001602
#ENDIF
#IFDEF _BJTR5_
BJT.R.5R 
brace_data_0000001603
#ENDIF
#IFDEF _BJTR6_
BJT.R.6R 
brace_data_0000001604
#ENDIF
#IFDEF _BJTR7_
BJT.R.7R 
brace_data_0000001605
#ENDIF
#IFDEF _ANR17_
ANR17mg_POCellIn = INSIDE CELL POi CellsForRRuleAnalog
ANR17mg_POCellOut = NOT INSIDE CELL POi ExclCellsForRRuleAnalog
ANR17mg_POCell = ANR17mg_POCellIn AND ANR17mg_POCellOut
ANR17mg_POMarker = POi AND RRuleAnalog
ANR17mg_PO = ((( ANR17mg_POCell OR ANR17mg_POMarker ) NOT SRAM_EXCLUDE ) OUTSIDE Block ) NOT excludeRRuleAnalog
ANR17mg_PORES = ANR17mg_PO AND PORES
RR:AN:ANR17mg 
brace_data_0000001606
#ENDIF
#IFDEF _ANR20_
ANR20mg_VARCellIn = INSIDE CELL VARi CellsForRRuleAnalog
ANR20mg_VARCellOut = NOT INSIDE CELL VARi ExclCellsForRRuleAnalog
ANR20mg_VARCell = ANR20mg_VARCellIn AND ANR20mg_VARCellOut
ANR20mg_VARMarker = VARi AND RRuleAnalog
ANR20mg_VAR = ((ANR20mg_VARCell OR ANR20mg_VARMarker) NOT Block ) NOT excludeRRuleAnalog
ANR20mg_VAROD = ANR20mg_VAR AND OD
RR:AN:ANR20mg 
brace_data_0000001607
#ENDIF
#ENDIF
