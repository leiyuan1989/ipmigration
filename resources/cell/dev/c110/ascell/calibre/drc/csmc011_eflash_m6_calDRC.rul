//;;****************************************************************************
//; chose topmetal process.
//; if top metal is AT, please chose "metal6_process".
//; if top metal is TT, please chose "thickmetal6_process"

#DEFINE metal6_process           
//#DEFINE thickmetal6_process

//;;****************************************************************************

//;;****************************************************************************
//; variable for check SRAM inside layer EXCL:
//; By default, we exclude DRC check inside SRAM region covered by exclude layer "EXCL(118,1)". 
//; However, customers could enable this option to check A1/TO area and M2 and upward layers inside EXCL 
//; in order to check logic rules inside SRAM.Please notice that turn on this option will 
//; also disable the waiving function of EXCL.And the region covered by EXCL will be examined 
//; with A1/TO area and M2 and upward layers' rules.Please un-comment the line below to enable this function

//#DEFINE CHECK_SRAM_EXCL

//;;****************************************************************************

//;;****************************************************************************

// ;;This option just for CSMC IP or I/O.
// ;;If use CSMC IP or I/O, please open it.

//#DEFINE CHECK_CSMC_IP_DRC_Rule

//;;****************************************************************************

//;;****************************************************************************
//; SLOT Guideline checking choice,add the mark "//" will check "SLOT"

//DRC UNSELECT CHECK GSLOT_Rule     
     
//;;**************************************************************************** 

//;;****************************************************************************
//; PAD Opening Guideline checking choice,add the mark "//" will check "CP"

//DRC UNSELECT CHECK GCP_Rule  
          
//;;****************************************************************************    

//;;****************************************************************************
//; All Recommended Rule checking choice,add the mark "//" will check recommended rule

DRC UNSELECT CHECK GRecommend      
      
//;;****************************************************************************

//;;****************************************************************************
//; TO/GT/Metal density check choice

#DEFINE CHECK_DENSITY                

//;;**************************************************************************** 

//;;****************************************************************************
//; TO/GT/Metal dummy layer check choice

#DEFINE CHECK_DUMMY                  

//;;**************************************************************************** 

//;;****************************************************************************

// This rule file will check AT 6 as Top Metal
//	AT -- "Top Metal" ==> for layout using Regular-Top-Metal DRC check
//	TT -- "Thick Top Metal" ==> for layout using Thick-Top-Metal DRC check
//            TT rule ONLY for Mix-signal Users !

// ;;##################################################################
// ;; (@)# CSMC CALIBRE DRC COMMAND FILE
// ;; (@)# FOR CSMC 0.11 eflash 2P8M Salicide 1.5V/3.3V/5V
// ;; (@)# METAL LAYER PROCESS: METAL6 & THICK METAL6
// ;;##################################################################

LAYOUT PATH "CELLNAME.gds"
LAYOUT PRIMARY "CELLNAME"
LAYOUT SYSTEM GDSII
DRC RESULTS DATABASE "drc.db" ASCII
DRC MAXIMUM RESULTS ALL
DRC MAXIMUM VERTEX ALL
DRC SUMMARY REPORT "drc.sum" REPLACE HIER
DRC CHECK TEXT ALL

PRECISION 1000
RESOLUTION 1
TEXT DEPTH PRIMARY
LVS POWER NAME ?VDD? ?vdd?
LVS GROUND NAME ?VSS? ?vss? ?GND? ?gnd?
VIRTUAL CONNECT NAME ?VDD? ?vdd? ?gnd? ?GND?
PORT LAYER TEXT 1001 1005 1009 1013 1017 1021 1025 1029 1103 1104
FLAG OFFGRID YES    
FLAG SKEW YES
FLAG NONSIMPLE YES


offgrid_check {
    @ Grid violation
    DRAWN OFFGRID
}

ortho_45_check {
    @ Orthogonal and 45 degree violation
    DRAWN SKEW
}

LAYER empty 999

LAYER A1 1000                          
LAYER MAP 7 DATATYPE 0 1000

LAYER A1_text 1001
LAYER MAP 121 TEXTTYPE 0 1001
TEXT LAYER A1_text

LAYER A1SLOT_slot 1002
LAYER MAP 136 DATATYPE 3 1002

LAYER A1_bnd_ori 1003                            //Block layer for prevent A1 dummy insertion
LAYER MAP 7 DATATYPE 5 1003

LAYER A2 1004
LAYER MAP 9 DATATYPE 0 1004

LAYER A2_text 1005
LAYER MAP 122 TEXTTYPE 0 1005
TEXT LAYER A2_text

LAYER A2SLOT_slot 1006
LAYER MAP 137 DATATYPE 3 1006

LAYER A2_bnd_ori 1007                            //Block layer for prevent A2 dummy insertion
LAYER MAP 9 DATATYPE 5 1007

LAYER A3 1008
LAYER MAP 41 DATATYPE 0 1008

LAYER A3_text 1009
LAYER MAP 123 TEXTTYPE 0 1009
TEXT LAYER A3_text

LAYER A3SLOT_slot 1010
LAYER MAP 138 DATATYPE 3 1010

LAYER A3_bnd_ori 1011                              //Block layer for prevent A3 dummy insertion
LAYER MAP 41 DATATYPE 5 1011

LAYER A4 1012
LAYER MAP 62 DATATYPE 0 1012

LAYER A4_text 1013
LAYER MAP 124 TEXTTYPE 0 1013
TEXT LAYER A4_text

LAYER A4SLOT_slot 1014
LAYER MAP 135 DATATYPE 3 1014

LAYER A4_bnd_ori 1015                              //Block layer for prevent A4 dummy insertion
LAYER MAP 62 DATATYPE 5 1015

LAYER A5 1016
LAYER MAP 92 DATATYPE 0 1016

LAYER A5_text 1017
LAYER MAP 125 TEXTTYPE 0 1017
TEXT LAYER A5_text

LAYER A5SLOT_slot 1018
LAYER MAP 134 DATATYPE 3 1018

LAYER A5_bnd_ori 1019                              //Block layer for prevent A5 dummy insertion
LAYER MAP 92 DATATYPE 5 1019

LAYER AT 1028
LAYER MAP 94 DATATYPE 0 1028

LAYER AT_text 1029
LAYER MAP 126 TEXTTYPE 0 1029
TEXT LAYER AT_text

LAYER ATSLOT_slot 1030
LAYER MAP 133 DATATYPE 3 1030

LAYER AT_bnd_ori 1031                                  //Block layer for prevent AT dummy insertion
LAYER MAP 94 DATATYPE 5 1031

LAYER W1 1032
LAYER MAP 6 DATATYPE 0 1032

LAYER W2 1033
LAYER MAP 8 DATATYPE 0 1033

LAYER W3 1034
LAYER MAP 40 DATATYPE 0 1034

LAYER W4 1035
LAYER MAP 61 DATATYPE 0 1035

LAYER W5 1036
LAYER MAP 91 DATATYPE 0 1036

LAYER WT 1039
LAYER MAP 93 DATATYPE 0 1039

LAYER TB 1040
LAYER MAP 1 DATATYPE 0 1040

LAYER TO 1041
LAYER MAP 2 DATATYPE 0 1041

LAYER GT 1042
LAYER MAP 3 DATATYPE 0 1042

LAYER SP 1043
LAYER MAP 4 DATATYPE 0 1043

LAYER SN 1044
LAYER MAP 5 DATATYPE 0 1044

LAYER CP 1045
LAYER MAP 10 DATATYPE 0 1045

LAYER HV 1046
LAYER MAP 17 DATATYPE 0 1046

LAYER NA 1047
LAYER MAP 21 DATATYPE 0 1047

LAYER PA 1048
LAYER MAP 22 DATATYPE 0 1048

LAYER SI 1049
LAYER MAP 25 DATATYPE 0 1049

LAYER NH 1050
LAYER MAP 27 DATATYPE 0 1050

LAYER PH 1051
LAYER MAP 28 DATATYPE 0 1051

LAYER PWB 1052
LAYER MAP 31 DATATYPE 0 1052

LAYER HR 1053
LAYER MAP 33 DATATYPE 0 1053

LAYER SE 1054
LAYER MAP 46 DATATYPE 0 1054

LAYER DN 1055
LAYER MAP 55 DATATYPE 0 1055

LAYER SCRIBE 1056
LAYER MAP 60 DATATYPE 0 1056

LAYER CT 1057
LAYER MAP 78 DATATYPE 0 1057

LAYER TT 1058
LAYER MAP 86 DATATYPE 0 1058

LAYER TTSLOT_slot 1059
LAYER MAP 130 DATATYPE 3 1059

LAYER TT_bnd_ori 1060
LAYER MAP 86 DATATYPE 5 1060

LAYER TODUM 1061
LAYER MAP 148 DATATYPE 2 1061

LAYER GTDUM 1062
LAYER MAP 149 DATATYPE 2 1062

LAYER A1DUM 1063
LAYER MAP 170 DATATYPE 2 1063

LAYER A2DUM 1064
LAYER MAP 171 DATATYPE 2 1064

LAYER A3DUM 1065
LAYER MAP 172 DATATYPE 2 1065

LAYER A4DUM 1066
LAYER MAP 173 DATATYPE 2 1066

LAYER A5DUM 1067
LAYER MAP 174 DATATYPE 2 1067

LAYER ATDUM 1070
LAYER MAP 175 DATATYPE 2 1070

LAYER TTDUM 1071
LAYER MAP 176 DATATYPE 2 1071

LAYER FUSE 1072
LAYER MAP 81 DATATYPE 0 1072

LAYER RES_TO_mark 1073
LAYER MAP 161 DATATYPE 1 1073

LAYER RES_PY_mark 1074
LAYER MAP 162 DATATYPE 1 1074

LAYER RES_NW_mark 1075
LAYER MAP 112 DATATYPE 1 1075

LAYER RES_HR_mark 1076
LAYER MAP 169 DATATYPE 1 1076

LAYER RES_M1_mark 1077
LAYER MAP 163 DATATYPE 1 1077

LAYER RES_M2_mark 1078
LAYER MAP 164 DATATYPE 1 1078

LAYER RES_M3_mark 1079
LAYER MAP 165 DATATYPE 1 1079

LAYER RES_M4_mark 1080
LAYER MAP 166 DATATYPE 1 1080

LAYER RES_M5_mark 1081
LAYER MAP 167 DATATYPE 1 1081

LAYER RES_M6_mark 1082
LAYER MAP 119 DATATYPE 1 1082

LAYER RES_M7_mark 1083
LAYER MAP 120 DATATYPE 1 1083

LAYER RES_MT_mark 1084
LAYER MAP 168 DATATYPE 1 1084

LAYER EXCL 1085
LAYER MAP 118 DATATYPE 1 1085

LAYER VARMOS 1086
LAYER MAP 105 DATATYPE 1 1086

LAYER VTSRAM_mark 1087
LAYER MAP 182 DATATYPE 1 1087

LAYER SEALRING_mark 1088
LAYER MAP 100 DATATYPE 1 1088

LAYER PMDMY_mark 1089
LAYER MAP 102 DATATYPE 1 1089

LAYER LOGO_mark 1090
LAYER MAP 103 DATATYPE 1 1090

LAYER ESD_mark 1091
LAYER MAP 180 DATATYPE 1 1091

LAYER MCTM5 1092
LAYER MAP 151 DATATYPE 153 1092

LAYER INDUM_mark 1093
LAYER MAP 117 DATATYPE 1 1093

LAYER PI 1094
LAYER MAP 34 DATATYPE 0 1094

LAYER RNDUM 1095
LAYER MAP 155 DATATYPE 1 1095

LAYER RPDUM 1096
LAYER MAP 156 DATATYPE 1 1096

LAYER DUMBM_mark 1097              // Block layer for all dummy metal insertion
LAYER MAP 157 DATATYPE 1 1097

LAYER DUMBP_mark 1098              // Block layer for dummy poly insertion
LAYER MAP 158 DATATYPE 1 1098

LAYER DUMBA_mark 1099              // Block layer for dummy active insertion
LAYER MAP 159 DATATYPE 1 1099

LAYER NODMF_mark 1100              // Block layer for no dummy insertion
LAYER MAP 160 DATATYPE 1 1100

LAYER PSUB2 1101
LAYER MAP 150 DATATYPE 1 1101

LAYER LMARK_mark 1102
LAYER MAP 101 DATATYPE 1 1102

LAYER TB_txt 1103
LAYER MAP 1 TEXTTYPE 20 1103
TEXT LAYER TB_txt

LAYER PT_txt 1104
LAYER MAP 11 TEXTTYPE 20 1104
TEXT LAYER PT_txt

LAYER SPW 1105
LAYER MAP 53 DATATYPE 0 1105

LAYER SNW 1106
LAYER MAP 54 DATATYPE 0 1106

LAYER EECELL 1107
LAYER MAP 184 DATATYPE 1 1107

LAYER MOM_mark 1108
LAYER MAP 114 DATATYPE 6 1108

LAYER MOM_ter 1109
LAYER MAP 114 DATATYPE 7 1109

LAYER DIODE_ISO 1110
LAYER MAP 113 DATATYPE 2 1110

LAYER BJT_mark 1111
LAYER MAP 115 DATATYPE 1 1111

LAYER DIODE_mark 1112
LAYER MAP 113 DATATYPE 1 1112

LAYER Merge_Ring 1113
LAYER MAP 100 DATATYPE 10 1113

LAYER UHVM 1114
LAYER MAP 20 DATATYPE 1 1114

LAYER A1DUM_block 1115                           //Block layer for prevent A1 dummy insertion
LAYER MAP 170 DATATYPE 30 1115

LAYER A2DUM_block 1116                           //Block layer for prevent A2 dummy insertion
LAYER MAP 171 DATATYPE 30 1116

LAYER A3DUM_block 1117                           //Block layer for prevent A3 dummy insertion
LAYER MAP 172 DATATYPE 30 1117

LAYER A4DUM_block 1118                           //Block layer for prevent A4 dummy insertion
LAYER MAP 173 DATATYPE 30 1118

LAYER A5DUM_block 1119                           //Block layer for prevent A5 dummy insertion
LAYER MAP 174 DATATYPE 30 1119

LAYER ATDUM_block 1122                           //Block layer for prevent AT dummy insertion
LAYER MAP 175 DATATYPE 30 1122

LAYER TTDUM_block 1123                           //Block layer for prevent TT dummy insertion
LAYER MAP 176 DATATYPE 30 1123

//--------------------------------------

ALL_TO=OR TO TODUM        // for TO density checks
ALL_GT=OR GT GTDUM        // for GT density checks
ALL_A1=OR A1 A1DUM        // for A1 density checks
ALL_A2=OR A2 A2DUM        // for A2 density checks
ALL_A3=OR A3 A3DUM        // for A3 density checks
ALL_A4=OR A4 A4DUM        // for A4 density checks
ALL_A5=OR A5 A5DUM        // for A5 density checks
ALL_AT=OR AT ATDUM        // for AT density checks
ALL_TT=OR TT TTDUM        // for TT density checks


// Global derived layers for rule checks
//--------------------------------------

chip=EXTENT
bulk=SIZE chip BY 1.0

#IFDEF CHECK_SRAM_EXCL

EXCL_N  = chip NOT bulk       // an empty layer to disable the usage of EXCL

#ELSE

EXCL_N  = COPY EXCL      // EXCL_N = EXCL

#ENDIF
// Exclude unchecked regions
//--------------------------------------

A1SLOT_slot_drc=COPY A1SLOT_slot
A2SLOT_slot_drc=COPY A2SLOT_slot
A3SLOT_slot_drc=COPY A3SLOT_slot
A4SLOT_slot_drc=COPY A4SLOT_slot
A5SLOT_slot_drc=COPY A5SLOT_slot
ATSLOT_slot_drc=COPY ATSLOT_slot
TTSLOT_slot_drc=COPY TTSLOT_slot
SNW_drc=COPY SNW
SPW_drc=COPY SPW
EECELL_drc=COPY EECELL
TO_drc=COPY TO
GT_drc=COPY GT
CP_drc=COPY CP
HV_drc=COPY HV
NA_drc=COPY NA
PA_drc=COPY PA
SI_drc=COPY SI
NH_drc=COPY NH
PH_drc=COPY PH
PWB_drc=COPY PWB
HR_drc=COPY HR
SE_drc=COPY SE
DN_drc=COPY DN
CT_drc=COPY CT
PI_drc=COPY PI
W1_drc=COPY W1
W2_drc=COPY W2
TB_drc=COPY TB
SP_drc=COPY SP
SN_drc=COPY SN
W3_drc=COPY W3
W4_drc=COPY W4
W5_drc=COPY W5
WT_drc=COPY WT

A1_drc=ALL_A1 NOT A1SLOT_slot_drc
A2_drc=ALL_A2 NOT A2SLOT_slot_drc
A3_drc=ALL_A3 NOT A3SLOT_slot_drc
A4_drc=ALL_A4 NOT A4SLOT_slot_drc
A5_drc=ALL_A5 NOT A5SLOT_slot_drc
AT_drc=ALL_AT NOT ATSLOT_slot_drc
TT_drc=ALL_TT NOT TTSLOT_slot_drc

A1_bnd=OR (OR A1_bnd_ori A1DUM_block) DUMBM_mark
A2_bnd=OR (OR A2_bnd_ori A2DUM_block) DUMBM_mark
A3_bnd=OR (OR A3_bnd_ori A3DUM_block) DUMBM_mark
A4_bnd=OR (OR A4_bnd_ori A4DUM_block) DUMBM_mark
A5_bnd=OR (OR A5_bnd_ori A5DUM_block) DUMBM_mark
AT_bnd=OR (OR AT_bnd_ori ATDUM_block) DUMBM_mark
TT_bnd=OR (OR TT_bnd_ori TTDUM_block) DUMBM_mark

metal_bnd=(((((A1_bnd OR A2_bnd) OR A3_bnd) OR A4_bnd) OR A5_bnd) OR AT_bnd) OR TT_bnd

// a1_conn=A1_drc andnot RES_M1_mark andnot INDUM_mark
a1_nres=NOT A1_drc RES_M1_mark
a1_conn=NOT a1_nres INDUM_mark

// a2_conn=A2_drc andnot RES_M2_mark andnot INDUM_mark
a2_nres=NOT A2_drc RES_M2_mark
a2_conn=NOT a2_nres INDUM_mark

// a3_conn=A3_drc andnot RES_M3_mark andnot INDUM_mark
a3_nres=NOT A3_drc RES_M3_mark
a3_conn=NOT a3_nres INDUM_mark

// a4_conn=A4_drc andnot RES_M4_mark andnot INDUM_mark
a4_nres=NOT A4_drc RES_M4_mark
a4_conn=NOT a4_nres INDUM_mark

// a5_conn=A5_drc andnot RES_M5_mark andnot INDUM_mark
a5_nres=NOT A5_drc RES_M5_mark
a5_conn=NOT a5_nres INDUM_mark

// at_conn=AT_drc andnot RES_MT_mark andnot INDUM_mark
at_nres=NOT AT_drc RES_MT_mark
at_conn=NOT at_nres INDUM_mark

// tt_conn=TT_drc andnot RES_MT_mark andnot INDUM_mark
tt_nres=NOT TT_drc RES_MT_mark
tt_conn=NOT tt_nres INDUM_mark

// PSUB2_cut=PSUB2 size 0.1 andnot PSUB2
psub01=SIZE PSUB2 BY 0.1
PSUB2_cut=NOT psub01 PSUB2

// pwell=bulk andnot TB_drc andnot PSUB2_cut
nwella=(OR TB_drc PSUB2_cut) OR SNW_drc
pwell=NOT bulk nwella

// hvnwell=TB_drc overlap HV_drc
hvnwell=INTERACT TB_drc HV_drc

// lvnwell=TB_drc andnot hvnwell
lvnwell=NOT TB_drc hvnwell

// tb_conn=TB_drc andnot RES_NW_mark
tb_conn=NOT TB_drc RES_NW_mark

// ndiff=TO_drc and SN_drc
ndiff=AND SN_drc TO_drc

// pdiff=TO_drc and SP_drc
pdiff=AND SP_drc TO_drc

// nsd=ndiff andnot GT_drc andnot RES_TO_mark
nsd=NOT(NOT ndiff GT_drc) RES_TO_mark

// hntap=ndiff and hvnwell
hntap=AND hvnwell nsd

// lntap=ndiff and lvnwell
lntap=AND lvnwell nsd

snw_ntap=AND SNW_drc nsd

// ntap=hntap or lntap
ntap=(OR hntap lntap) OR snw_ntap

// nsdg=ndiff andnot ntap
nsdg=NOT ndiff ntap

// psd=pdiff andnot GT_drc andnot RES_TO_mark
psd=NOT(NOT pdiff GT_drc) RES_TO_mark

// ptap=pdiff andnot TB_drc
ptap=(NOT pdiff TB_drc) NOT SNW_drc

// all_tap=ntap or ptap
all_tap=OR ntap ptap

// psdg=pdiff andnot ptap
psdg=NOT pdiff ptap

// all_sdg=nsdg or psdg
all_sdg=OR nsdg psdg

// w1_and_gt=W1_drc and GT_drc
w1_and_gt=AND GT_drc W1_drc

// w1_and_nsd=W1_drc and nsd
w1_and_nsd=AND W1_drc nsd

// w1_and_psd=W1_drc and psd
w1_and_psd=AND W1_drc psd

// w1_to=W1_drc and TO_drc
w1_to=AND TO_drc W1_drc

// pgate=GT_drc and pdiff
pgate=AND GT_drc pdiff

// ngate=GT_drc and ndiff
ngate=AND GT_drc ndiff

// gate=ngate or pgate
gate=OR ngate pgate

// pgate33=pgate and HV_drc
pgate33=INSIDE pgate HV_drc

// pgate5=pgate and SNW_drc
pgate5=AND pgate SNW_drc

// pgate15=pgate andnot pgate33
pgate15=(NOT pgate pgate33) NOT pgate5

// ngate33=ngate and HV_drc
ngate33=(INSIDE ngate HV_drc) OUTSIDE VARMOS

// ngate5=ngate and SPW_drc
ngate5=AND ngate SPW_drc

// ngate15=ngate andnot ngate33
ngate15=((NOT ngate ngate33) NOT ngate5) OUTSIDE VARMOS

// gate15=ngate15 or pgate15
gate15=OR ngate15 pgate15

// gate33=ngate33 or pgate33
gate33=OR ngate33 pgate33

// gate5=ngate5 or pgate5
gate5=OR ngate5 pgate5

// gate_w=GT_drc inside edge TO_drc
gate_w=INSIDE EDGE GT_drc TO_drc

// gate_l=TO_drc inside edge GT_drc
gate_l=INSIDE EDGE TO_drc GT_drc

// ngate_w=gate_w inside edge SN_drc
ngate_w=INSIDE EDGE gate_w SN_drc

// pgate_w=gate_w inside edge SP_drc
pgate_w=INSIDE EDGE gate_w SP_drc

// hv_ngate_w=ngate_w inside edge HV_drc
hv_ngate_w=INSIDE EDGE ngate_w HV_drc

// hv_pgate_w=pgate_w inside edge HV_drc
hv_pgate_w=INSIDE EDGE pgate_w HV_drc

// lv_ngate_w=ngate_w not inside edge HV_drc
lv_ngate_w=ngate_w NOT INSIDE EDGE HV_drc

// lv_pgate_w=pgate_w not inside edge HV_drc
lv_pgate_w=pgate_w NOT INSIDE EDGE HV_drc

// to_undoped=TO_drc andnot SP_drc andnot SN_drc
to_not_sp=NOT TO_drc SP_drc
to_undoped=NOT to_not_sp SN_drc

// sn_to_butt_sp_to=SN_drc overlap (ndiff buttOnly pdiff)
ndiff_butt_pdiff=TOUCH ndiff pdiff
sn_to_butt_sp_to=NOT OUTSIDE SN_drc ndiff_butt_pdiff

// sp_to_butt_sn_to=SP_drc overlap (pdiff buttOnly ndiff)
pdiff_butt_ndiff=TOUCH pdiff ndiff
sp_to_butt_sn_to=NOT OUTSIDE SP_drc pdiff_butt_ndiff

// gt_conn=(GT_drc andnot gate) andnot RES_PY_mark
fpoly=NOT GT_drc gate
gt_conn=NOT fpoly RES_PY_mark

// w1_note_err5=W1_drc andnot (w1_and_gt or w1_to)
all_cont=OR w1_and_gt w1_to
w1_note_err5=NOT W1_drc all_cont   

// tb_hole=TB_drc holes
tb_hole=HOLES TB_drc INNER

// to_res=TO_drc overlap RES_TO_mark
to_res=NOT OUTSIDE TO_drc RES_TO_mark

// gt_res=GT_drc overlap RES_PY_mark
gt_res=NOT OUTSIDE GT_drc RES_PY_mark

// salic_res_to=to_res notoverlap SI_drc
salic_res_to=OUTSIDE to_res SI_drc

// non_salic_res_to=to_res overlap SI_drc
non_salic_res_to=NOT OUTSIDE to_res SI_drc

// salic_res_gt=gt_res notoverlap SI_drc
salic_res_gt=OUTSIDE gt_res SI_drc

// non_salic_res_gt=gt_res overlap SI_drc
non_salic_res_gt=NOT OUTSIDE gt_res SI_drc

// non_salic_res_gt_body=gt_res overlap SI_drc and RES_PY_mark
non_salic_res_gt_body=AND non_salic_res_gt RES_PY_mark

// non_salic_res_to_body=to_res overlap SI_drc and RES_TO_mark
non_salic_res_to_body=AND non_salic_res_to RES_TO_mark

// res_hr_poly_body=(GT_drc and HR_drc) and RES_HR_mark
res_hr_poly=AND GT_drc HR_drc
res_hr_poly_body=AND res_hr_poly RES_HR_mark

// gt_err_h=((TO_drc andnot gate) butt==2 gate) enclose>=1 w1_to
sdgcon=NOT TO_drc gate
gate_space_to=TOUCH sdgcon gate == 2
gate_space_to_w1=ENCLOSE gate_space_to w1_to >=1

// w1_not_gt_to=W1_drc andnot GT_drc andnot TO_drc
w1_not_gt=NOT W1_drc GT_drc
w1_not_gt_to=NOT w1_not_gt TO_drc

// err_mtt_j=(W2_drc or W3_drc or W4_drc or W5_drc ) andnot 
// ((W2_drc or W3_drc or W4_drc or W5_drc ) and (TT_drc and INDUM_mark))
indu_tt=AND TT_drc INDUM_mark
v12=OR W2_drc W3_drc
v123=OR v12 W4_drc
v1234=OR v123 W5_drc
vmtt=AND v1234 indu_tt
vind=AND v1234 INDUM_mark
err_mtt_j=NOT vind vmtt

// wt_and_ct=WT_drc and mctcap
wt_and_ct=AND WT_drc mctcap

// wt_not_ct=WT_drc andnot mctcap
wt_not_ct=NOT WT_drc mctcap

#IFDEF metal6_process

    CONNECT at_conn mctcap BY wt_and_ct
    CONNECT at_conn a5_conn BY wt_not_ct
    CONNECT a5_conn a4_conn BY W5
    CONNECT a4_conn a3_conn BY W4
    CONNECT a3_conn a2_conn BY W3
    CONNECT a2_conn a1_conn BY W2
    CONNECT a1_conn gt_conn BY w1_and_gt
    CONNECT a1_conn nsd BY w1_and_nsd
    CONNECT a1_conn psd BY w1_and_psd

    SCONNECT nsd hvnwell BY hntap
    SCONNECT nsd lvnwell BY lntap
    SCONNECT nsd SNW_drc BY snw_ntap
    SCONNECT psd pwell BY ptap

    ATTACH AT_text at_conn
    ATTACH A5_text a5_conn
    ATTACH A4_text a4_conn
    ATTACH A3_text a3_conn
    ATTACH A2_text a2_conn
    ATTACH A1_text a1_conn
    ATTACH TB_txt  hvnwell
    ATTACH TB_txt  lvnwell
    ATTACH TB_txt  SNW_drc 
    ATTACH PT_txt  pwell

#ENDIF

#IFDEF thickmetal6_process

    CONNECT tt_conn mctcap BY wt_and_ct
    CONNECT tt_conn a5_conn BY wt_not_ct
    CONNECT a5_conn a4_conn BY W5
    CONNECT a4_conn a3_conn BY W4
    CONNECT a3_conn a2_conn BY W3
    CONNECT a2_conn a1_conn BY W2
    CONNECT a1_conn gt_conn BY w1_and_gt
    CONNECT a1_conn nsd BY w1_and_nsd
    CONNECT a1_conn psd BY w1_and_psd

    SCONNECT nsd hvnwell BY hntap
    SCONNECT nsd lvnwell BY lntap
    SCONNECT psd pwell BY ptap

    ATTACH AT_text tt_conn
    ATTACH A5_text a5_conn
    ATTACH A4_text a4_conn
    ATTACH A3_text a3_conn
    ATTACH A2_text a2_conn
    ATTACH A1_text a1_conn
    ATTACH TB_txt  hvnwell
    ATTACH TB_txt  lvnwell
    ATTACH PT_txt  pwell

#ENDIF

//===================
//  Recommended Part
//===================
GROUP GRecommend
   GTO
   8_2_1
   GGT 
   GSI
   GW1
   GA1
   GW2
   GA2
   GW3
   GA3
   GW4
   GA4
   GW5
   GA5
   GWT
   GVAR
   GGT_RES


//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.1 N-well(TB): Define the N-well for P channel devices
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VARIABLE TB_a 0.62
VARIABLE TB_a1 1.62
VARIABLE TB_b 0.62
VARIABLE TB_c 0.9
VARIABLE TB_c1 1.08
VARIABLE TB_c2 1.08
VARIABLE TB_d 1.0
VARIABLE TB_e 0.384

hothnw=NOT NET hvnwell "?VDD?" "?VCC?"
hotlnw=NOT NET lvnwell "?VDD?" "?VCC?"

TB.a {
    @TB.a: Minimum TB width must be >= ^TB_a um
    L1001=INTERNAL TB_drc < TB_a REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

TB.a1 {
    @TB.a1: Minimum Hot TB width(NW not connected to the most positive voltage-Vdd) must be >=^TB_a1 um
    L1001=INTERNAL hothnw < TB_a1 REGION SINGULAR ABUT<90
    L1002=INTERNAL hotlnw < TB_a1 REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
}

TB.b {
    @TB.b: Min TB space must be >= ^TB_b um
    L1001=EXTERNAL TB_drc < TB_b REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

TB.c {
    @TB.c: Min space of LV N-well with the different potential must be >= ^TB_c um
    L1001=EXTERNAL lvnwell < TB_c REGION NOT CONNECTED SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

TB.c1 {
    @TB.c1: Min space of LV N-well to HV N-well must be >= ^TB_c1 um
    L1001=EXTERNAL lvnwell hvnwell < TB_c1 REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

TB.c2 {
    @TB.c2: Min space of HV N-well with the different potential must be >= ^TB_c2 um
    L1001=EXTERNAL hvnwell < TB_c2 REGION NOT CONNECTED SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

TB.d {
    @TB.d: Min TB area must be>= ^TB_d um2.
    AREA TB_drc < TB_d
}

TB.e {
    @TB.e: Min enclose area must be >=^TB_e um2
    HOLES TB_drc < TB_e INNER
}

// ;TB.f do not check

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.2.1 Nwell resistor within TO
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE 8_2_1_a 1.8
VARIABLE 8_2_1_b 1.2
VARIABLE 8_2_1_c 0.3
VARIABLE 8_2_1_d 1.0
VARIABLE 8_2_1_e 0.3
VARIABLE 8_2_1_f 0.22
VARIABLE 8_2_1_g 0.4
VARIABLE 8_2_1_h 0.3
VARIABLE 8_2_1_h_guid 0.3

GROUP 8_2_1
      8.2.1h_guid    

restb_in_to=INSIDE tb_res TO_drc
restb_with_sab=NOT OUTSIDE restb_in_to SI_drc
restb_sab_body=AND restb_with_sab RES_NW_mark
salicres_w1=INTERACT w1_and_nsd restb_with_sab
salicres_si=INTERACT SI_drc restb_with_sab
salicres_sn=INTERACT SN_drc restb_with_sab
salicres_to=CUT TO_drc salicres_sn

8.2.1a {
    @8.2.1a: Min with of NW resistor must be >= ^8_2_1_a um
    L1001=INTERNAL restb_with_sab < 8_2_1_a REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.1b1 {
    @8.2.1b1: Min space of NW resistor to NW must be >= ^8_2_1_b um
    L1001=EXTERNAL restb_with_sab tb_conn < 8_2_1_b REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.1b2 {
    @8.2.1b2: Min space of NW resistor to NW resistor must be >= ^8_2_1_b um
    L1001=EXTERNAL restb_sab_body < 8_2_1_b REGION SINGULAR
    NOT INSIDE L1001 EXCL
}

8.2.1c {
    @8.2.1c: Min clearance from NW resistor to SI must be >= ^8_2_1_c um
    L1001=EXTERNAL tb_res salicres_si < 8_2_1_c REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.1d {
    @8.2.1d: Min extension of TO beyond NW resistor must be >= ^8_2_1_d um
    L1001=ENCLOSURE tb_res salicres_to < 8_2_1_d REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.1e {
    @8.2.1e: Min extension of NW resistor beyond W1 must be >= ^8_2_1_e um
    L1001=ENCLOSURE salicres_w1 restb_with_sab < 8_2_1_e REGION SINGULAR ABUT<90 OVERLAP
    L1002=EXTERNAL salicres_w1 salicres_si < 8_2_1_e REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL    
}

8.2.1f {
    @8.2.1f: Min extension of SI beyond TO must be >= ^8_2_1_f um
    L1001=ENCLOSURE salicres_to salicres_si < 8_2_1_f REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.1g {
    @8.2.1g: Min overlap of SI with N+ must be >= ^8_2_1_g um
    L1001=INTERNAL salicres_sn salicres_si < 8_2_1_g REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
    X=HOLES salicres_si INNER
    X NOT salicres_sn
}

8.2.1h {
      @8.2.1h: Min. clearance from SAB to N-Well Resistor contact must be >= ^8_2_1_h um
      L1001=EXTERNAL salicres_w1 salicres_si < 8_2_1_h REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

imp_reg=OR SN_drc SP_drc
8.2.1i {
    @8.2.1i: LDD,SN and SP is not allowed in NW resistor region.
    AND imp_reg restb_sab_body
}

8.2.1j {
    @8.2.1j: (TO and NWDMY) overlap of P+,N+ is not allowed.
    AND restb_sab_body SP_drc
    AND restb_sab_body SN_drc
}

8.2.1k {
    @8.2.1k: (TO and NWDMY) interact with DNW is not allowed.
    INTERACT restb_sab_body DN_drc
}

//; 8.2.1l and 8.2.1m do not check.

8.2.1h_guid {
      @8.2.1h_guid: Min. clearance from SAB to N-Well Resistor contact must be >= ^8_2_1_h_guid um
      L1001=(AND salicres_si TB_drc) NOT RES_NW_mark 
      L1002=SIZE L1001 BY ( 8_2_1_h_guid + 0.001 )
      L1003=NOT CUT L1002 salicres_w1  
      NOT INSIDE L1003 EXCL
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.2.2 Nwell resistor Under STI
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE 8_2_2_a 1.8
VARIABLE 8_2_2_b 1.2
VARIABLE 8_2_2_c 0.18

tb_res=NOT OUTSIDE TB_drc RES_NW_mark
restb_udsti=NOT INTERACT tb_res SI_drc
restb_udsti_sn=INTERACT SN_drc restb_udsti
restb_udsti_to=INSIDE TO_drc restb_udsti
restb_udsti_body=AND restb_udsti RES_NW_mark

8.2.2a {
    @8.2.2a: Min with of N-Well resistor under STI must be >= ^8_2_2_a um
    L1001=INTERNAL restb_udsti < 8_2_2_a REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.2b1 {
    @8.2.2b1: Min space of N-Well Resistor (Under STI) to TB must be >= ^8_2_2_b um
    L1001=EXTERNAL restb_udsti tb_conn < 8_2_2_b REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

8.2.2b2 {
    @8.2.2b2: Min space of N-Well Resistor (Under STI) to N-Well Resistor (within TO) must be >= ^8_2_2_b um
    L1001=EXTERNAL restb_udsti restb_with_sab < 8_2_2_b REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

8.2.2b3 {
    @8.2.2b3: Min space of N-Well Resistor (Under STI) to N-Well Resistor (Under STI) must be >= ^8_2_2_b um
    L1001=EXTERNAL restb_udsti < 8_2_2_b REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

8.2.2c {
    @8.2.2c: Min extension of N+ beyond TO must be >= ^8_2_2_c um
    L1001=ENCLOSURE restb_udsti_to restb_udsti_sn < 8_2_2_c REGION SINGULAR ABUT<90 
    NOT INSIDE L1001 EXCL
}

// 8.2.2d do not check

8.2.2e {
    @8.2.2e: LDD and SP is not allowed in NW resistor region.
    AND SP_drc restb_udsti_body
}

8.2.2f {
    @8.2.2f: NWDMY of N-Well Resistor under STI overlap of TO is not allowed.
    AND restb_udsti_body TO_drc
}

8.2.2g {
    @8.2.2g: NWDMY of N-Well Resistor under STI overlap of DNW is not allowed.
    AND restb_udsti_body DN_drc
}

//; 8.2.2h do not check.

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.3  Active Area(TO): Define the active areas for N and P
//       channel devices and diffused interconnect
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE TO_ab	0.135
VARIABLE TO_a_guid	0.3
VARIABLE TO_a1	0.8
VARIABLE TO_a2	1.2
VARIABLE TO_a3  1
VARIABLE TO_b1	0.22
VARIABLE TO_c	0.185
VARIABLE TO_c_guid	0.26
VARIABLE TO_c1	0.18
VARIABLE TO_c2	0.8
VARIABLE TO_c3	0.5	
VARIABLE TO_d	0.215
VARIABLE TO_e	0.275
VARIABLE TO_e1	0.275
VARIABLE TO_f	0.275
VARIABLE TO_g	0.215
VARIABLE TO_h	0.285
VARIABLE TO_h1	0.360
VARIABLE TO_i	0
VARIABLE TO_j	0.27
VARIABLE TO_j1	0.25
VARIABLE TO_k	0.54
VARIABLE TO_l	0.385
VARIABLE TO_m_guid	0.35
VARIABLE TO_n	0.1
VARIABLE TO_o	0.122

GROUP GTO
    TO.a.guid
    TO.c.guid
    TO.m.guid

TO.ab {
     @TO.ab: Min TO width must be >= ^TO_ab um
     L1001=INTERNAL TO_drc < TO_ab REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.a1 {
     @TO.a1: Min TO width for 5V/Quasi_HV NMOS and 5V/Quasi_HV PMOS Channel Width must be >= ^TO_a1 um
     L1001=PATH LENGTH gate_w < TO_a1
     L1002=EXPAND EDGE L1001 OUTSIDE BY 0.005
     L1003=L1002 INSIDE SNW_drc
     L1004=L1002 INSIDE SPW_drc
     NOT INSIDE L1003 EXCL
     NOT INSIDE L1004 EXCL
}

TO.a2 {
     @TO.a2: Min TO width for 5V/Quasi_HV ZMOS Channel Width must be >= ^TO_a2 um
     L1001=PATH LENGTH gate_w < TO_a2
     L1002=EXPAND EDGE L1001 OUTSIDE BY 0.005
     L1003=L1002 INSIDE SPW_drc
     L1004=L1003 INSIDE PWB_drc
     NOT INSIDE L1004 EXCL
}

TO.a3 {
     @TO.a3: Min TO width for 1.5V ZMOS and 3.3V ZMOS Channel Width must be >= ^TO_a3 um
     L1001=PATH LENGTH gate_w < TO_a3
     L1002=EXPAND EDGE L1001 OUTSIDE BY 0.005
     L1003=L1002 INSIDE PWB_drc
     NOT INSIDE L1003 EXCL
}

5V_well=OR SNW_drc SPW_drc

TO.b1 {
     @TO.b1: Min TO width for interconnect for 5V/Quasi_HV MOS must be >= ^TO_b1 um
     L1001=INTERNAL (AND TO_drc 5V_well) < TO_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.c {
     @TO.c: Min TO except SRAM cell and 5V/Quasi_HV MOS area space must be >= ^TO_c um
     L1001=EXTERNAL (TO_drc OUTSIDE VTSRAM_mark) < TO_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.c1 {
     @TO.c1: Min TO in SRAM cell space must be >= ^TO_c1 um
     L1001=EXTERNAL (TO_drc INSIDE VTSRAM_mark) TO_drc < TO_c1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

nmos_to_5v=(ndiff ENCLOSE ngate) INSIDE SPW_drc
pmos_to_5v=(pdiff ENCLOSE pgate) INSIDE SNW_drc
TO.c2 {
     @TO.c2:Min TO space when 5V/Quasi_HV MOS is involved, except pickup must be >= ^TO_c2 um
     L1001=EXT nmos_to_5v < TO_c2 REGION SINGULAR ABUT<90
     L1002=EXT pmos_to_5v < TO_c2 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

TO.c3 {
     @TO.c3:Min TO space when 5V/Quasi_HV MOS TO to pickup TO must be >= ^TO_c3 um
     L1001=EXT nmos_to_5v pdiff < TO_c3 REGION SINGULAR ABUT >0 <90
     L1002=EXT pmos_to_5v ndiff < TO_c3 REGION SINGULAR ABUT >0 <90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

TO.sram {
     @TO.sram: TO cross VTSRAM layer is not allowed.
     L1001=CUT TO_drc VTSRAM_mark
     L1002=TOUCH TO_drc VTSRAM_mark
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

TO.d {
     @TO.d: Min extension of TB beyond N+TO region which is inside the TB must be >= ^TO_d um
     L1001=ENCLOSURE ndiff TB_drc < TO_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.e {
     @TO.e: Min clearance from TB edge to N+TO region which is outside cold/hot TB must be >= ^TO_e um
     A=NOT ndiff salicres_to
     L1001=EXTERNAL A TB_drc < TO_e REGION SINGULAR ABUT<90 OVERLAP
     NOT INSIDE L1001 EXCL
}

TO.f {
     @TO.f: Min extension of TB beyond P+TO region which is inside TB must be >= ^TO_f um
     L1001=ENCLOSURE pdiff TB_drc < TO_f REGION SINGULAR ABUT<90 OVERLAP
     NOT INSIDE L1001 EXCL
}

TO.g {
     @TO.g: Min clearance from TB edge to P+TO region which is outside TB must be >= ^TO_g um
     L1001=EXTERNAL pdiff TB_drc < TO_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.h {
     @TO.h: Min clearance from poly edge to the edge of a butted diffusion TO region 
     @ that has no common run length parallel to transistor channel must be >= ^TO_h um
     X = EXPAND EDGE ngate_w OUTSIDE BY TO_h
     L1001=X TOUCH ptap
     Y = EXPAND EDGE pgate_w OUTSIDE BY TO_h
     L1002=Y TOUCH ntap
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

nbutt_edge=COINCIDENT EDGE ndiff pdiff
TO.h1.1 {
     @TO.h1.1: Min clearance from poly edge to the edge of a butted diffusion TO region 
     @ that is parallel to transistor channel must be >= ^TO_h1 um
     L1001=ENCLOSURE ngate_w nbutt_edge < TO_h1 REGION 
     NOT INSIDE L1001 EXCL
}

TO.h1.2 {
     @TO.h1.2: Min clearance from poly edge to the edge of a butted diffusion TO region 
     @ that is parallel to transistor channel must be >= ^TO_h1 um
     L1001=EXTERNAL pgate_w nbutt_edge < TO_h1 REGION 
     NOT INSIDE L1001 EXCL
}

// TO.i checked by SN_SP.t

butt_nedge=COINCIDENT EDGE ntap psdg
butt_pedge=COINCIDENT EDGE ptap nsdg

TO.j {
    @TO.j: One segment of the consecutive SN/SP edge of a butted 
    @ diffusion active should be longer than ^TO_j um
    A = LENGTH butt_pedge >= TO_j      // Gets edges segments that are OK
    B = EXPAND EDGE butt_pedge         // Create polygon from separate edges
        INSIDE BY 0.004                // by expanding toward tap and extending
        EXTEND BY 0.004                // endpoints by small database unit.
    L1001=(NOT RECTANGLE B) NOT WITH EDGE A  // All edges not including an OK edge
    C = LENGTH butt_nedge >= TO_j      
    D = EXPAND EDGE butt_nedge
        INSIDE BY 0.004 
        EXTEND BY 0.004
    L1002=(NOT RECTANGLE D) NOT WITH EDGE C 
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
}

TO.j_1 {
     @TO.j_1: Min implant area for the butted diffusion is ^TO_j1 um2
     AREA sn_to_butt_sp_to < TO_j1 
     AREA sp_to_butt_sn_to < TO_j1
}

TO.k {
    @TO.k:When J<0.3um,Max length of (TO(source) interact with butted diffusion) must be <= ^TO_k um 

    poly1=GT_drc not ((pdiff touch ndiff) or (ndiff touch pdiff))
    poly2=poly1 INTERACT TO_drc ==1
    butt_ndiff=(nsd TOUCH pdiff) NOT GT_drc
    butt_pdiff=(psd TOUCH ndiff) NOT GT_drc

    active1_sn=TOUCH EDGE ndiff poly2
    active2_sn=EXPAND EDGE active1_sn INSIDE BY 0.001
    active1_sp=TOUCH EDGE pdiff poly2
    active2_sp=EXPAND EDGE active1_sp INSIDE BY 0.001
    active4_sn=(INT (ndiff INTERACT GT_drc) < 0.3 REGION OPPOSITE) INSIDE butt_ndiff
    active5_sn=EXT active4_sn active1_sn < 0.01 REGION ABUT==90 INTERSECTING ONLY
    active6_sn=TOUCH EDGE active4_sn active5_sn
    active7_sn=EXPAND EDGE active6_sn INSIDE BY 0.001
    active8_sn=TOUCH active7_sn active5_sn ==1
    active9_sn=ENCLOSE active4_sn active8_sn
    active10_sn=ndiff NOT active9_sn
    active11_sn=TOUCH EDGE active9_sn active10_sn

    active4_sp=(INT (pdiff INTERACT GT_drc) < 0.3 REGION OPPOSITE) INSIDE butt_pdiff
    active5_sp=EXT active4_sp active1_sp < 0.01 REGION ABUT==90 INTERSECTING ONLY
    active6_sp=TOUCH EDGE active4_sp active5_sp
    active7_sp=EXPAND EDGE active6_sp INSIDE BY 0.001
    active8_sp=TOUCH active7_sp active5_sp ==1
    active9_sp=ENCLOSE active4_sp active8_sp
    active10_sp=pdiff NOT active9_sp
    active11_sp=TOUCH EDGE active9_sp active10_sp

    L1001=INT active11_sn > TO_k < 99 REGION OPPOSITE PROJECTING PARALLEL
    L1002=INT active11_sp > TO_k < 99 REGION OPPOSITE PROJECTING PARALLEL
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
}

TO.l {
     @TO.l: Min. clearance from TB edge to a N+TO region which is outside a TB connected to DN must be >= ^TO_l um.
     X=TB_drc TOUCH tb_hole
     Y=X INTERACT DN_drc
     L1001=EXTERNAL ndiff Y < TO_l REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.n {
     @TO.n: Min. TO area must be >= ^TO_n um2.
     L1001=AREA TO_drc < TO_n
     NOT INSIDE L1001 EXCL_N
}

TO.o {
     @TO.o: Min. TO enclosure area must be >= ^TO_o um2.
     HOLES TO_drc < TO_o INNER
}

TO.t {
     @TO.t: TO must be fully covered BY N+/P+ except dummy active,Logo and NW resistor within TO
     tmp1=NOT to_undoped TODUM
     tmp2=NOT tmp1 LOGO_mark
     NOT tmp2 (salicres_to OR EECELL_drc)
}

TO.a.guid {
     @TO.a.guid: Recommended Min. TO width for stable Idsat(avoid corner rounding effect) must be >= ^TO_a_guid um
     L1001=PATH LENGTH gate_w < TO_a_guid 
     L1002=EXPAND EDGE L1001 OUTSIDE BY 0.005  
     NOT INSIDE L1002 EXCL
}

TO.c.guid {
     @TO.c.guid: Recommended Min .TO space is ^TO_c_guid um to reduce short possibility caseed by particle
     L1001=EXTERNAL TO_drc < TO_c_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TO.m.guid {
     @TO.m.guid: Recommanded Min. TO space >= ^TO_m_guid um when TO area is more than 4,000,000um2
     large_to=AREA TO_drc > 4000000
     L1001=EXTERNAL large_to TO_drc< TO_m_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.4  HVGOX (HV)
//          This mask defines the HV gate oxide area
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE HV_a 0.62
VARIABLE HV_b 0.86
VARIABLE HV_c 0.27
VARIABLE HV_d 0.27
VARIABLE HV_e 0.34
VARIABLE HV_f 0.34
VARIABLE HV_g 0.62
VARIABLE HV_h 0.62
VARIABLE HV_i 0.62
VARIABLE HV_j 1
VARIABLE HV_k 0.384

HV.a {
      @HV.a: Min. HV width must be >= ^HV_a um.
      L1001=INTERNAL HV_drc < HV_a REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

HV.b {
      @HV.b: Min. HV space must be >= ^HV_b um.
      L1001=EXTERNAL HV_drc < HV_b REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

HV.c.1 {
      @HV.c.1: Min. extension of HV beyond TO must be >= ^HV_c um.
      check_edge_n=ENCLOSURE [nsdg] HV_drc < HV_c ABUT < 90 SINGULAR
      check_edge_n NOT COIN OUTSIDE EDGE (ptap NOT INSIDE EXCL)
      check_edge_p=ENCLOSURE [psdg] HV_drc < HV_c ABUT < 90 SINGULAR
      check_edge_p NOT COIN OUTSIDE EDGE (ntap NOT INSIDE EXCL)
      L1001=HV_drc INSIDE all_sdg
      NOT INSIDE L1001 EXCL
      Y = all_sdg INTERACT HV_drc
      Z = Y NOT HV_drc
      L1002=Z OUTSIDE gate
      NOT INSIDE L1002 EXCL
}

//HV.c.2 {
//      @HV.c.2: Min. extension of HV beyond GT must be >= ^HV_c um.
//      ENCLOSURE GT_drc HV_drc < HV_c REGION SINGULAR ABUT<90
//}

HV.d {
      @HV.d: Min. clearance from TO to HV must be >= ^HV_d um.
      L1001=EXTERNAL TO_drc HV_drc < HV_d REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

HV.e.1 {
      @HV.e.1: Min. clearance from HV to 1.5V/5V/Quasi_HV transistor ngate poly must be >= ^HV_e um.
      L1001=EXTERNAL ngate15 HV_drc < HV_e REGION SINGULAR ABUT<90 OVERLAP
      L1002=EXTERNAL ngate5 HV_drc < HV_e REGION SINGULAR ABUT<90 OVERLAP
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
}

HV.e.2 {
      @HV.e.2: Min. clearance from HV to 1.5V/5V/Quasi_HV transistor pgate poly must be >= ^HV_e um.
      L1001=EXTERNAL pgate15 HV_drc < HV_e REGION SINGULAR ABUT<90 OVERLAP
      L1002=EXTERNAL pgate5 HV_drc < HV_e REGION SINGULAR ABUT<90 OVERLAP
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
}

HV.f.1 {
      @HV.f.1: Min. extension of HV beyond 3.3V transistor ngate poly in S/D direction must be >= ^HV_f um.
      L1001=ENCLOSURE hv_ngate_w HV_drc < HV_f REGION ABUT<90
      NOT INSIDE L1001 EXCL
      COIN EDGE ngate33 HV_drc
}

HV.f.2 {
      @HV.f.2: Min. extension of HV beyond 3.3V transistor pgate poly in S/D direction must be >= ^HV_f um.
      L1001=ENCLOSURE hv_pgate_w HV_drc < HV_f REGION ABUT<90
      NOT INSIDE L1001 EXCL
      COIN EDGE pgate33 HV_drc
}

HV.g {
      @HV.g: Min. extension of TB beyond HV. Align if the space is smaller than this value must be >= ^HV_g um.
      L1001=ENCLOSURE HV_drc TB_drc < HV_g REGION SINGULAR ABUT>0<90
      NOT INSIDE L1001 EXCL
}

HV.h {
      @HV.h: Min. clearance from HV to TB. Align if the space is smaller than this value must be >= ^HV_h um.
      L1001=EXTERNAL TB_drc HV_drc < HV_h REGION SINGULAR ABUT>0<90
      L1002=ENCLOSURE TB_drc HV_drc < HV_h REGION SINGULAR ABUT>0<90
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
}

HV.i {
      @HV.i: Min. overlap of HV with TB must be >= ^HV_i um. overlap=0 is allowed.
      L1001=INTERNAL TB_drc HV_drc < HV_i REGION SINGULAR ABUT>0<90
      NOT INSIDE L1001 EXCL
}

HV.j {
      @HV.j: Min. HV area must be >= ^HV_j um2
      AREA HV_drc < HV_j
}

HV.k {
     @HV.k: Min. enclosed area must be >= ^HV_k um2.
     HOLES HV_drc < HV_k INNER
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.5  Poly (GT)
//          This mask defines the areas form the gate,poly 
//          interconnects,and poly word lines in the array.
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE GT_a1	0.13
VARIABLE GT_a2	0.30
VARIABLE GT_a3	0.8	
VARIABLE GT_a4	1.0	
VARIABLE GT_b1	0.13
VARIABLE GT_b2	0.35
VARIABLE GT_b3	0.8
VARIABLE GT_b4	1.0
VARIABLE GT_c	0.13
VARIABLE GT_c1	0.2
VARIABLE GT_d	0.145
VARIABLE GT_d_guid	0.23
VARIABLE GT_d1	0.315
VARIABLE GT_e	0.16
VARIABLE GT_e_guid	0.23
VARIABLE GT_e1	0.225	
VARIABLE GT_e2	0.4
VARIABLE GT_f	0.06
VARIABLE GT_f1	0.2
VARIABLE GT_g	0.16
VARIABLE GT_g1	0.3
VARIABLE GT_g2	0.4
VARIABLE GT_h	0.14
VARIABLE GT_i	0.205
VARIABLE GT_i_guid	0.34
VARIABLE GT_i1	0.44
VARIABLE GT_j	0.073
VARIABLE GT_k	0.122
VARIABLE GT_l_guid	0.105

GROUP GGT
   GT.d.guid
   GT.e.guid
   GT.i.guid
   GT.l.guid

pgate15_l=COINCIDENT EDGE (pgate15 NOT INSIDE EXCL) TO_drc
GT.a1 {
      @GT.a1: Min. width for channel length of LPMOS(1.5V) must be >= ^GT_a1 um
      LENGTH pgate15_l < GT_a1
}

pgate33_l=COINCIDENT EDGE (pgate33 NOT INSIDE EXCL) TO_drc
GT.a2 {
      @GT.a2: Min. width for channel length of HPMOS(3.3V) must be >= ^GT_a2 um
      LENGTH pgate33_l < GT_a2
}

pgate5_l=COINCIDENT EDGE ((pgate5 NOT INSIDE EXCL) INTERACT UHVM) TO_drc

GT.a3 {
      @GT.a3: Min. width for channel length of HPMOS(5V) must be >= ^GT_a3 um
      LENGTH pgate5_l < GT_a3
}

pgate5_l_quasi=COINCIDENT EDGE ((pgate5 NOT INSIDE EXCL) NOT INTERACT UHVM) TO_drc

GT.a4 {
      @GT.a4: Min. width for channel length of Quasi_HV PMOS must be >= ^GT_a4 um
      LENGTH pgate5_l_quasi < GT_a4
}

ngate15_l=COINCIDENT EDGE (ngate15 NOT INSIDE EXCL) TO_drc
GT.b1 {
      @GT.b1: Min. width for channel length of LNMOS(1.5V) must be >= ^GT_b1 um
      LENGTH ngate15_l < GT_b1
}

ngate33_l=COINCIDENT EDGE (ngate33 NOT INSIDE EXCL) TO_drc
GT.b2 {
      @GT.b2: Min. width for channel length of HNMOS(3.3V) must be >= ^GT_b2 um
      LENGTH ngate33_l < GT_b2
}

ngate5_l=COINCIDENT EDGE ((ngate5 NOT INSIDE EXCL) INSIDE UHVM) TO_drc
GT.b3 {
      @GT.b3: Min. width for channel length of HNMOS(5V) must be >= ^GT_b3 um
      LENGTH ngate5_l < GT_b3
}

ngate5_l_quasi=COINCIDENT EDGE ((ngate5 NOT INSIDE EXCL) NOT INSIDE UHVM) TO_drc
GT.b4 {
      @GT.b4: Min. width for channel length of Quasi_HV HNMOS must be >= ^GT_b4 um
      LENGTH ngate5_l_quasi < GT_b4
}

GT.c {
      @GT.c: Min. width for interconnect must be >= ^GT_c um
      L1001=INTERNAL GT_drc < GT_c REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

5v_poly=GT_drc ENCLOSE gate5
GT.c1 {
      @GT.c1: Min. width for interconnect for 5V/Quasi_HV MOS must be >= ^GT_c1 um
      L1001=INTERNAL 5v_poly < GT_c1 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.d {
      @GT.d: Min. spacing between two GT regions must be >= ^GT_d um
      L1001=EXTERNAL GT_drc < GT_d REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.d1 {
     @GT.d1: Min. GT space >= ^GT_d1 um when GT area is more than 4,000,000um2
     large_gt=AREA GT_drc > 4000000
     L1001=EXTERNAL large_gt GT_drc < GT_d1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

channel_region=GT_drc AND TO_drc
GT.e {
      @GT.e: Min. spacing between two GT regions in the same TO must be >= ^GT_e um
      L1001=EXT channel_region < GT_e REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

3d3v_poly=INTERACT GT_drc HV_drc
GT.e1 {
      @GT.e1: Min. spacing between two GT regions in the 3.3V region must be >= ^GT_e1 um
      L1001=EXTERNAL (3d3v_poly AND TO_drc) channel_region < GT_e1 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.e2 {
      @GT.e2: Min. spacing between two GT regions in the 5V/Quasi_HV region must be >= ^GT_e2 um
      L1001=EXTERNAL (5v_poly AND TO_drc) channel_region < GT_e2 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.f {
      @GT.f: Min. clearance from TO region to a GT on field oxide must be >= ^GT_f um
      X = TO_drc INSIDE EDGE GT_drc
      Y = TO_drc NOT COIN EDGE X
      L1001=EXT Y gt_conn < GT_f ABUT<90 REGION
      NOT INSIDE L1001 EXCL
}

GT.f1 {
      @GT.f1: Min. clearance from TO region to a GT on field oxide for 5V/Quasi_HV MOS must be >= ^GT_f1 um
      X = TO_drc INSIDE EDGE 5v_poly
      Y = (TO_drc INTERACT 5v_poly) NOT COIN EDGE X
      L1001=EXT Y gt_conn < GT_f1 ABUT<90 REGION
      NOT INSIDE L1001 EXCL
}

GT.g {
      @GT.g: Min. endcap with GT over TO must be >= ^GT_g um
      L1001=ENCLOSURE TO_drc GT_drc < GT_g REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.g1 {
      @GT.g1: Min. endcap with GT over TO for 5V/Quasi_HV NMOS and 5V/Quasi_HV PMOS must be >= ^GT_g1 um
      L1001=ENCLOSURE (TO_drc NOT INTERACT PWB_drc) 5v_poly < GT_g1 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.g2 {
      @GT.g2: Min. endcap with GT over TO for 5V/Quasi_HV ZMOS must be >= ^GT_g2 um
      L1001=ENCLOSURE (TO_drc INTERACT PWB_drc) 5v_poly < GT_g2 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

bend_poly=ANGLE gt_conn == 45
GT.h {
      @GT.h: Min. width of 45 degree bend poly on field oxied must be >= ^GT_h um
      @ if the bend poly length is >=0.39um
      long_bend_poly=LENGTH bend_poly >=0.39
      L1001=INTERNAL long_bend_poly < GT_h REGION ABUT<90
      NOT INSIDE L1001 EXCL
}

GT.i {
      @GT.i: Min. extension of TO region beyond a related GT inside TO must be >= ^GT_i um
      L1001=ENCLOSURE GT_drc TO_drc < GT_i REGION SINGULAR ABUT<89.5 OPPOSITE
      NOT INSIDE L1001 (EXCL OR EECELL_drc)
}

GT.i1 {
      @GT.i1: Min. extension of TO region beyond a related GT inside TO for 5V/Quasi_HV MOS must be >= ^GT_i1 um
      L1001=ENCLOSURE 5v_poly TO_drc < GT_i1 REGION SINGULAR ABUT<89.5 OPPOSITE
      NOT INSIDE L1001 EXCL
}

GT.j {
      @GT.j: Min. GT area must be >= ^GT_j um2
      AREA GT_drc < GT_j
}

GT.k {
     @GT.k: Min. GT enclosure area must be >= ^GT_k um2.
     HOLES GT_drc < GT_k INNER
}

//; GT.o, GT,p, GT.q do not check

GT.n {
     @GT.n: Intrinsic (un-implanted) poly line is not allowed.Poly lines must be implanted with N+ or P+ implant except HR.
     (NOT (GT_drc OUTSIDE HR_drc) imp_reg) NOT EECELL_drc
}

GT.s {
     @GT.s: The 45 degree and 90 degree angle are not allowed for poly gate in TO. 
     @All GT must be orthogonal to TO edge
     EXTERNAL gate_w < 0.01 ABUT == 135 REGION
     EXTERNAL gate_w < 0.01 ABUT == 90 REGION
     EXTERNAL gate_w < 0.01 ABUT == 45 REGION
     INTERNAL gate_w < 0.01 ABUT == 135 REGION
     INTERNAL gate_w < 0.01 ABUT == 90 REGION
     INTERNAL gate_w < 0.01 ABUT == 45 REGION
}

GT.d.guid {
     @GT.d.guid: Recommended min interconnect GT space is ^GT_d_guid um to reduce short possibility caused by particle.
     L1001=EXTERNAL fpoly < GT_d_guid REGION SINGULAR ABUT<90     
     NOT INSIDE L1001 EXCL
}

GT.e.guid {
     @GT.e.guid: Recommended min space between two GT region in the same TO to avoid Isat degradation is ^GT_e_guid um.
     L1001=EXT channel_region < GT_e_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

GT.i.guid {
     @GT.i.guid: Recommended min extension of TO region beyond a related GT inside TO is ^GT_i_guid um.
     L1001=ENCLOSURE GT_drc TO_drc < GT_i_guid REGION SINGULAR ABUT<89.5 OPPOSITE
     NOT INSIDE L1001 (EXCL OR EECELL_drc)     
}

to_w=TO_drc INSIDE EDGE GT_drc
channel3=INT to_w <0.3001 ABUT<90 REGION

GT.l.guid {
     @GT.l.guid: For small MOS (channel width <=0.3 ), Recommended min clearance from L-shape or T-shape GT to TO must be >= ^GT_l_guid um
     @when GT and TO are in the same MOS
     gt_corner=EXT (GT_drc ENCLOSE gate) <0.001 SINGULAR ABUT==90 REGION
     gt_inEdge=GT_drc TOUCH INSIDE EDGE gate
     channel_extend=((EXPAND EDGE gt_inEdge INSIDE BY 0.001) INTERACT channel3) NOT TO_drc
     extend_region=(TOUCH channel_extend gt_corner) NOT INSIDE EXCL
     extend_edge=COINCIDENT EDGE extend_region GT_drc
     LENGTH extend_edge < GT_l_guid
}

///;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.6 TO or Poly Resistor
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VARIABLE 8_6_a_1	1.0 
VARIABLE 8_6_a_2	1.0 
VARIABLE 8_6_b_1	2.0 
VARIABLE 8_6_b_2	5.0
VARIABLE 8_6_c_1	2.0
VARIABLE 8_6_c_2	5.0
VARIABLE 8_6_d		0.22	
VARIABLE 8_6_e		0.3
VARIABLE 8_6_f		0.2
VARIABLE 8_6_g		0.22
VARIABLE 8_6_h		0.07
VARIABLE 8_6_i		0.2
VARIABLE 8_6_k		0.4		
VARIABLE 8_6_l		0.2

GROUP GGT_RES
   8.6.n.guid

8.6.a.2 {
      @8.6.a.2: Min. width of non-salicided TO resistor must be >= ^8_6_a_2 um
      L1001=INTERNAL non_salic_res_to_body < 8_6_a_2 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

8.6.a.3 {
      @8.6.a.3: Min. width of HR poly resistor must be >= ^8_6_a_2 um
      L1001=INTERNAL res_hr_poly_body < 8_6_a_2 REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

8.6.b.2 {
      @8.6.b.2: Min. length of non-salicided TO resistor must be >= ^8_6_b_2 um
      nsali_resto_exp1=EXPAND EDGE non_salic_res_to_body OUTSIDE BY 0.01
      nsali_resto_length=OUTSIDE nsali_resto_exp1 non_salic_res_to
      nsali_resto_length_err=LENGTH nsali_resto_length < 8_6_b_2
      L1001=WITH EDGE non_salic_res_to_body nsali_resto_length_err
      NOT INSIDE L1001 EXCL
}

8.6.b.3 {
      @8.6.b.3: Min. length of HR poly resistor must be >= ^8_6_b_2 um
      reshr_exp1=EXPAND EDGE res_hr_poly_body OUTSIDE BY 0.01
      reshr_length=OUTSIDE reshr_exp1 res_hr_poly
      reshr_length_err=LENGTH reshr_length < 8_6_b_2 
      L1001=WITH EDGE res_hr_poly_body reshr_length_err
      NOT INSIDE L1001 EXCL
}

// 8.6.c do not check

res_to_sab_w1=NOT OUTSIDE W1_drc non_salic_res_to
res_to_sab=INTERACT SI_drc non_salic_res_to
8.6.d.1 {
      @8.6.d.1: Min. & Max. clearance from SAB to W1 on TO resistor must be == ^8_6_d um
      L1001=EXTERNAL res_to_sab_w1 res_to_sab < 8_6_d REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
      tmp1=SIZE res_to_sab BY ( 8_6_d + 0.001 )
      res_to_sab_w1 OUTSIDE tmp1
}

8.6.e.1 {
      @8.6.e.1: Min. clearance from TO resistor to unrelated SAB must be >= ^8_6_e um
      L1001=EXTERNAL to_res SI_drc < 8_6_e REGION SINGULAR ABUT<90 MEASURE ALL
      NOT INSIDE L1001 EXCL
}

8.6.e.2 {
      @8.6.e.2: Min. clearance from poly resistor to unrelated SAB must be >= ^8_6_e um
      L1001=EXTERNAL gt_res SI_drc < 8_6_e REGION SINGULAR ABUT<90 MEASURE ALL
      NOT INSIDE L1001 EXCL
}

8.6.f.1 {
      @8.6.f.1: Min. clearance from TO resistor to unrelated implant region must be >= ^8_6_f um
      L1001=EXTERNAL to_res imp_reg < 8_6_f REGION SINGULAR ABUT<90 MEASURE ALL
      NOT INSIDE L1001 EXCL
}

8.6.f.2 {
      @8.6.f.2: Min. clearance from poly resistor to unrelated implant region must be >= ^8_6_f um
      L1001=EXTERNAL gt_res imp_reg < 8_6_f REGION SINGULAR ABUT<90 MEASURE ALL
      NOT INSIDE L1001 EXCL
}

8.6.g.1 {
      @8.6.g.1: Min. extension of SAB beyond TO resistor must be >= ^8_6_g um
      L1001=ENCLOSURE to_res res_to_sab < 8_6_g REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

8.6.g.2 {
      @8.6.g.2: Min. extension of SAB beyond poly resistor must be >= ^8_6_g um
      L1001=ENCLOSURE gt_res res_gt_sab < 8_6_g REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

res_to_w1=NOT OUTSIDE W1_drc to_res
8.6.h.1 {
      @8.6.h.1: Min. extension of TO resistor beyond W1 must be >= ^8_6_h um
      L1001=ENCLOSURE res_to_w1 to_res < 8_6_h REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

8.6.h.2 {
      @8.6.h.2: Min. extension of poly resistor beyond W1 must be >= ^8_6_h um
      L1001=ENCLOSURE res_gt_w1 gt_res < 8_6_h REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
}

8.6.i.1 {
      @8.6.i.1: Min. extension of N+/P+ diffusion or RDMY beyond TO resistor must be >= ^8_6_i um
      L1001=ENCLOSURE to_res imp_reg < 8_6_i REGION SINGULAR ABUT<90
      L1002=ENCLOSURE to_res RNDUM < 8_6_i REGION SINGULAR ABUT<90
      L1003=ENCLOSURE to_res RPDUM < 8_6_i REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
      NOT INSIDE L1003 EXCL
}

8.6.i.2 {
      @8.6.i.2: Min. extension of N+/P+ diffusion or RDMY beyond poly resistor must be >= ^8_6_i um
      L1001=ENCLOSURE gt_res imp_reg < 8_6_i REGION SINGULAR ABUT<90
      L1002=ENCLOSURE gt_res RNDUM < 8_6_i REGION SINGULAR ABUT<90
      L1003=ENCLOSURE gt_res RPDUM < 8_6_i REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
      NOT INSIDE L1003 EXCL
}

//; 8.6.j / 8.6.m / 8.6.o do not check

8.6.k {
      @8.6.k: Min. clearance from RDMY to Gate in source or drain direction must be >= ^8_6_k um
      L1001=EXTERNAL gate_w RNDUM < 8_6_k REGION
      L1002=EXTERNAL gate_w RPDUM < 8_6_k REGION
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
}

//; 8.6.l checked in 8.6.i

8.6.n.guid {
      @8.6.n.guid: It is strongly recommended not to use dog-bone at the end of TO-GT resistor for contact pickup.
      to_res_body=to_res AND RES_TO_mark
      to_res_term=to_res NOT RES_TO_mark
      X1=TOUCH EDGE to_res_term to_res_body
      Y1=EXPAND EDGE X1 OUTSIDE BY 0.01
      out_piece1=Y1 NOT INSIDE to_res_body
      INTERACT to_res_body out_piece1

      gt_res_body=gt_res AND RES_PY_mark
      gt_res_term=gt_res NOT RES_PY_mark
      X2=TOUCH EDGE gt_res_term gt_res_body
      Y2=EXPAND EDGE X2 OUTSIDE BY 0.01
      out_piece2=Y2 NOT INSIDE gt_res_body
      INTERACT gt_res_body out_piece2
}

8.6.p {
      @8.6.p: Poly resistor laid on TO area is not recommended.
      (gt_res AND RES_PY_mark) AND TO_drc
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.7 N+ implant area (SN)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE SN_a	0.275
VARIABLE SN_b	0.275
VARIABLE SN_c	0.16
VARIABLE SN_c1	0.025
VARIABLE SN_c2	0.03
VARIABLE SN_d	0.36
VARIABLE SN_e	0.36
VARIABLE SN_f	0.16
VARIABLE SN_g	0.16
VARIABLE SN_g1	0.27
VARIABLE SN_g2	0.4
VARIABLE SN_h	0.025
VARIABLE SN_h1	0.0
VARIABLE SN_h2	0.03
VARIABLE SN_i	0.0
VARIABLE SN_k	0.24
VARIABLE SN_l	0.18
VARIABLE SN_m	0.18
VARIABLE SN_SP_p	0.18
VARIABLE SN_q	0.2
VARIABLE SN_r	0.2

SN.a {
     @SN.a: Min. width of SN region must be >= ^SN_a um.
     L1001=INTERNAL SN_drc < SN_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SN.b {
     @SN.b: Min. space between two SN regions must be >= ^SN_b um.
     L1001=EXTERNAL SN_drc < SN_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SN.c {
     @SN.c: Min. clearance from a SN region to a P+ active TO region(inside TB) must be >= ^SN_c um.
     L1001=EXTERNAL SN_drc psdg < SN_c REGION SINGULAR ABUT>0<90
     NOT INSIDE L1001 EXCL
}

SN.c1 {
     @SN.c1: Min. clearance from a SN region inside PT to a non-butted
     @ edge of PT pick-up P_TO region must be >= ^SN_c1 um.
     L1001=EXTERNAL SN_drc ptap < SN_c1 REGION SINGULAR ABUT>0<90 INSIDE ALSO
     X=EXT SN_drc [ptap] <0.001 ABUT==0
     Y=EXPAND EDGE X OUTSIDE BY 0.001
     L1002=Y NOT INTERACT ndiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

SN.c2 {
     @SN.c2: Min. clearance from a SN region inside SPW to a pick-up P+ TO region must be >= ^SN_c2 um.
     L1001=EXTERNAL SN_drc (pdiff AND SPW_drc) < SN_c2 REGION SINGULAR ABUT>0<90
     NOT INSIDE L1001 EXCL
}

sn_bedge=INSIDE EDGE SN_drc TO_drc
SN.d {
     @SN.d: Min clearance from an SN edge to a P-channel poly gate must be >= ^SN_d um.
     L1001=EXTERNAL sn_bedge pgate_w < SN_d REGION ABUT < 90
     NOT INSIDE L1001 EXCL
}

//; SN.e is checked by TO.h1.1

SN.f {
     @SN.f: Min overlap from a SN edge to a TO region must be >= ^SN_f um.
     L1001=INTERNAL SN_drc TO_drc < SN_f REGION ABUT < 90
     NOT INSIDE L1001 EXCL
}


nsdg1=NOT nsdg salicres_to
SN.g {
     @SN.g: Min extension of a SN region beyond a N+ active TO region must be >= ^SN_g um
     @ if the distance to the related poly >0.27um.
     L1001=ENCLOSURE nsdg1 SN_drc < SN_g SINGULAR ABUT >0<90 REGION
     Y = ENCLOSURE [nsdg1] SN_drc < 0.001 ABUT == 0
     Z = EXPAND EDGE Y OUTSIDE BY 0.001
     L1002=Z NOT INTERACT pdiff
     NOT INSIDE L1001 (EXCL OR EECELL_drc)
     NOT INSIDE L1002 (EXCL OR EECELL_drc)
}

// note: SN.g check all devices except ntap. The description of SN.g is not correct.

/*
SN.g {
     @SN.g: For 1.5V or 3.3V device, Min extension of a SN region beyond a N+ active TO region must be >= ^SN_g um
     @ if the distance to the related poly >0.27um.
     sn_channel=SN_drc NOT OUTSIDE ngate 
     L1001=ENC gate (sn_channel) <= 0.27 SINGULAR ABUT<90 
     L1002=NOT COIN EDGE L1001 pdiff
     L1003=ENC (ndiff ENCLOSE gate) L1002 < SN_g REGION ABUT<90
     NOT INSIDE L1003 EXCL
}
*/
SN.g1 {
     @SN.g1: Min extension of a SN region beyond a N+ active TO region must be >= ^SN_g1 um
     @ if the distance to the related poly <=0.27um.
     sn_channel=SN_drc NOT OUTSIDE ngate 
     L1001=ENC gate [sn_channel] <= 0.27 SINGULAR ABUT<90 
     L1002=ENC (TO_drc ENCLOSE gate) L1001 < SN_g1 REGION ABUT<90
     NOT INSIDE L1002 (EXCL OR EECELL_drc)
}

SN.g2 {
     @SN.g2: For 5V/Quasi_HV device, Min extension of a SN region beyond a N+ active TO region must be >= ^SN_g2 um
     sn_channel=INSIDE SN_drc 5V_well 
     L1002=NOT COIN EDGE sn_channel pdiff
     L1003=ENC (TO_drc NOT INTERACT ntap) L1002 < SN_g2 REGION ABUT<90
     NOT INSIDE L1003 (EXCL OR EECELL_drc)
}

ntap1=NOT (OR hntap lntap) salicres_to

SN.h {
     @SN.h: Min extension of a SN region beyond a TB pick-up N+TO region must be >= ^SN_h um.
     L1001=ENCLOSURE ntap1 SN_drc < SN_h  REGION SINGULAR ABUT >0< 90
     Y = ENCLOSURE [ntap1] SN_drc < 0.001 ABUT == 0
     Z = EXPAND EDGE Y OUTSIDE BY 0.001
     L1002=Z NOT INTERACT pdiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

//;SN.h1 has no need check (butting diffusion==0).

SN.h2 {
     @SN.h2: Min extension of a SN region beyond a SNW pick-up N+TO region must be >= ^SN_h2 um.
     L1001=ENCLOSURE snw_ntap SN_drc < SN_h2  REGION SINGULAR ABUT >0< 90
     Y = ENCLOSURE [snw_ntap] SN_drc < 0.001 ABUT == 0
     Z = EXPAND EDGE Y OUTSIDE BY 0.001
     L1002=Z NOT INTERACT pdiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

//;SN.i has no need check (butting diffusion==0)

/*
SN.k {
     @SN.k:Min clearance from a butted diffusion SN to the related poly edge in TB must be >= ^SN_k um
     @SN.k:if butting P+ TO extending J <0.3

     pgate_channel_edge=EXPAND EDGE (pdiff INSIDE EDGE GT_drc) OUTSIDE BY 0.001
     pgate_edge=TOUCH EDGE pdiff pgate_channel_edge
     pgate_corner=EXT pgate_edge pdiff < 0.01 REGION ABUT==90
     pdiff_extend0d3=EXT SN_drc pdiff <0.3 REGION OPPOSITE
     sn_butt_region=(NOT OUTSIDE pdiff_extend0d3 pgate_corner) NOT INSIDE EXCL
     p_poly=GT_drc ENCLOSE pgate
     EXT sn_butt_region [p_poly] < SN_k SINGULAR ABUT<90 
}
*/

SN.k {
     @SN.k:Min clearance from a butted diffusion SN to the related poly edge in TB must be >= ^SN_k um
     @SN.k:if butting P+ TO extending J <0.3

     pgate_channel_edge=EXPAND EDGE (pdiff INSIDE EDGE GT_drc) OUTSIDE BY 0.001
     pgate_edge=TOUCH EDGE pdiff pgate_channel_edge
     pgate_corner=EXT pgate_edge pdiff < 0.01 REGION ABUT==90
     SN_butt_edge=TOUCH EDGE SN_drc butt_nedge
     pdiff_extend0d3=EXT SN_butt_edge pdiff <0.3 REGION OPPOSITE
     sn_butt_region=(NOT OUTSIDE pdiff_extend0d3 pgate_corner) NOT INSIDE EXCL
     p_poly=GT_drc ENCLOSE pgate
     EXT sn_butt_region [p_poly] < SN_k SINGULAR ABUT<90 
}

SN.l {
     @SN.l: Min extension of SN region beyond an N type poly resistor must be >= ^SN_l um
     L1001=ENCLOSURE (gt_res AND SN_drc) SN_drc < SN_l REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SN.m {
     @SN.m: Min clearance from a SN edge to a P type resistor must be >= ^SN_m um
     L1001=EXTERNAL (gt_res AND SP_drc) SN_drc < SN_m REGION SINGULAR ABUT <90
     L1002=EXTERNAL (to_res AND SP_drc) SN_drc < SN_m REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

gt_not_hr=GT_drc OUTSIDE HR_drc
gt_not_hr_gr02=SIZE gt_not_hr BY 0.2
SN_SP.p {
     @SN_SP.p:Implant polylines on field with N+ or P+ implant to ensure low resistance of salicide polylines
     @ The implant to Poly extension with N+ and P+ implants combined as a whole is ^SN_SP_p um
     L1001=ENCLOSURE gt_not_hr imp_reg < SN_SP_p REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SN.q {
     @SN.q: Min area of SN region must be >= ^SN_q um2.
     AREA SN_drc < SN_q
}

SN.r {
     @SN.r: Min enclosed area must be >= ^SN_r um2.
     HOLES SN_drc < SN_r INNER
}

SN_SP.t {
     @SN_SP.t: SN is not allowed to overlap SP.
     AND SN_drc SP_drc
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.8 P+ implant area (SP)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE SP_a	0.275
VARIABLE SP_b	0.275
VARIABLE SP_c	0.16
VARIABLE SP_c1	0.025
VARIABLE SP_c2	0.03
VARIABLE SP_d	0.36
VARIABLE SP_e	0.36
VARIABLE SP_f	0.16
VARIABLE SP_g	0.16
VARIABLE SP_g1	0.27
VARIABLE SP_g2	0.4
VARIABLE SP_h	0.025
VARIABLE SP_h1	0.0
VARIABLE SP_h2	0.03
VARIABLE SP_i	0.0
VARIABLE SP_k	0.24
VARIABLE SP_l	0.18
VARIABLE SP_m	0.18
VARIABLE SP_SP_p	0.18
VARIABLE SP_q	0.2
VARIABLE SP_r	0.2

SP.a {
     @SP.a: Min. width of SP region must be >= ^SP_a um.
     L1001=INTERNAL SP_drc < SP_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SP.b {
     @SP.b: Min. space between two SP regions must be >= ^SP_b um.
     L1001=EXTERNAL SP_drc < SP_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SP.c {
     @SP.c: Min. clearance from a SP region to a N+ active TO region(inside PT) must be >= ^SP_c um.
     L1001=EXTERNAL SP_drc nsdg < SP_c REGION SINGULAR ABUT>0<90
     NOT INSIDE L1001 EXCL
}

SP.c1 {
     @SP.c1: Min. clearance from a SP region inside TB to a non-butted
     @ edge of TB pick-up N+TO region must be >= ^SP_c1 um.
     L1001=EXTERNAL SP_drc ntap < SP_c1 REGION SINGULAR ABUT>0<90 INSIDE ALSO
     X=EXT SP_drc [ntap] <0.001 ABUT==0
     Y=EXPAND EDGE X OUTSIDE BY 0.001
     L1002=Y NOT INTERACT pdiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

SP.c2 {
     @SP.c2: Min. clearance from a SP region inside SNW to a pick-up N+ TO region must be >= ^SP_c2 um.
     L1001=EXTERNAL SP_drc (ndiff AND SNW_drc) < SP_c2 REGION SINGULAR ABUT>0<90
     NOT INSIDE L1001 EXCL
}

sp_bedge=INSIDE EDGE SP_drc TO_drc
SP.d {
     @SP.d: Min clearance from an SP edge to an N-channel poly gate must be >= ^SP_d um.
     L1001=EXTERNAL sp_bedge ngate_w < SP_d REGION ABUT < 90
     NOT INSIDE L1001 EXCL
}

//; SP.e is checked by TO.h1.2

SP.f {
     @SP.f: Min overlap from a SP edge to a TO region must be >= ^SP_f um.
     L1001=INTERNAL SP_drc TO_drc < SP_f REGION ABUT < 90
     NOT INSIDE L1001 EXCL
}


SP.g {
     @SG.g: Min extension of a SP region beyond a P+ active TO region must be >= ^SP_g um
     @ if the distance to the related poly > 0.27um.
     L1001=ENCLOSURE psdg SP_drc < SP_g SINGULAR ABUT >0<90 REGION
     Y = ENCLOSURE [psdg] SP_drc < 0.001 ABUT == 0
     Z = EXPAND EDGE Y OUTSIDE BY 0.001
     L1002=Z NOT INTERACT ndiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

// note: SP.g check all devices except ptap. The description of SP.g is not correct.

/*
SP.g {
     @SP.g: For 1.5V or 3.3V device, Min extension of a SP region beyond a P+ active TO region must be >= ^SP_g um
     @ if the distance to the related poly >0.27um.
     sp_channel=SP_drc NOT OUTSIDE pgate 
     L1001=ENC gate (sp_channel) <= 0.27 SINGULAR ABUT<90 
     L1002=NOT COIN EDGE L1001 ndiff
     L1003=ENC (pdiff ENCLOSE gate) L1002 < SP_g REGION ABUT<90
     NOT INSIDE L1003 EXCL
}
*/
SP.g1 {
     @SP.g1: Min extension of a SP region beyond a P+ active TO region must be >= ^SP_g1 um
     @ if the distance to the related poly <=0.27um.
     sp_channel=SP_drc NOT OUTSIDE pgate 
     L1001=ENC gate [sp_channel] <= 0.27 SINGULAR ABUT<90 
     L1002=ENC (TO_drc ENCLOSE gate) L1001 < SP_g1 REGION ABUT<90
     NOT INSIDE L1002 EXCL
}

SP.g2 {
     @SP.g2: For 5V/Quasi_HV device, Min extension of a SP region beyond a P+ active TO region must be >= ^SP_g2 um
     sp_channel=INSIDE SP_drc 5V_well 
     L1002=NOT COIN EDGE sp_channel ndiff
     L1003=ENC (TO_drc NOT INTERACT ptap) L1002 < SP_g2 REGION ABUT<90
     NOT INSIDE L1003 EXCL
}

ptap_1=ptap NOT SPW_drc

SP.h {
     @SP.h: Min extension of a SP region beyond a PT pick-up P+TO region must be >= ^SP_h um.
     L1001=ENCLOSURE ptap_1 SP_drc < SP_h REGION SINGULAR ABUT >0< 90
     Y = ENCLOSURE [ptap_1] SP_drc < 0.001 ABUT == 0
     Z = EXPAND EDGE Y OUTSIDE BY 0.001
     L1002=Z NOT INTERACT ndiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

//; SP.h1 has no need check (butting diffusion==0).

ptap_2=ptap AND SPW_drc

SP.h2 {
     @SP.h2: Min extension of a SP region beyond a SPW pick-up P+TO region must be >= ^SP_h2 um.
     L1001=ENCLOSURE ptap_2 SP_drc < SP_h2 REGION SINGULAR ABUT >0< 90
     Y = ENCLOSURE [ptap_2] SP_drc < 0.001 ABUT == 0
     Z = EXPAND EDGE Y OUTSIDE BY 0.001
     L1002=Z NOT INTERACT ndiff
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

//; SP.i has no need check (butting diffusion==0)

/*
SP.k {
     @SP.k:Min clearance from a butted diffusion SP to the related poly edge in PT must be >= ^SP_k um
     @SP.k:if butting P+ TO extending J <0.3

     ngate_channel_edge=EXPAND EDGE (ndiff INSIDE EDGE GT_drc) OUTSIDE BY 0.001
     ngate_edge=TOUCH EDGE ndiff ngate_channel_edge
     ngate_corner=EXT ngate_edge ndiff < 0.01 REGION ABUT==90
     pdiff_extend0d3=EXT SP_drc ndiff <0.3 REGION OPPOSITE
     sp_butt_region=(NOT OUTSIDE pdiff_extend0d3 ngate_corner) NOT INSIDE EXCL
     n_poly=GT_drc ENCLOSE ngate
     EXT sp_butt_region [n_poly] < SP_k SINGULAR ABUT<90 
}
*/

SP.k {
     @SP.k:Min clearance from a butted diffusion SP to the related poly edge in PT must be >= ^SP_k um
     @SP.k:if butting P+ TO extending J <0.3

     ngate_channel_edge=EXPAND EDGE (ndiff INSIDE EDGE GT_drc) OUTSIDE BY 0.001
     ngate_edge=TOUCH EDGE ndiff ngate_channel_edge
     ngate_corner=EXT ngate_edge ndiff < 0.01 REGION ABUT==90
     SP_butt_edge=TOUCH EDGE SP_drc butt_pedge
     pdiff_extend0d3=EXT SP_butt_edge ndiff <0.3 REGION OPPOSITE
     sp_butt_region=(NOT OUTSIDE pdiff_extend0d3 ngate_corner) NOT INSIDE EXCL
     n_poly=GT_drc ENCLOSE ngate
     EXT sp_butt_region [n_poly] < SP_k SINGULAR ABUT<90 
}

SP.l {
     @SP.l: Min extension of SP region beyond an P type poly resistor must be >= ^SP_l um
     L1001=ENCLOSURE (gt_res AND SP_drc) SP_drc < SP_l REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SP.m {
     @SP.m: Min clearance from a SP edge to a N type resistor must be >= ^SP_m um
     L1001=EXTERNAL (gt_res AND SN_drc) SP_drc < SP_m REGION SINGULAR ABUT <90
     L1002=EXTERNAL (to_res AND SN_drc) SP_drc < SP_m REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

//; SP.p checked in SN_SP.p

SP.q {
     @SP.q: Min area of SP region must be >= ^SP_q um2.
     AREA SP_drc < SP_q
}

SP.r {
     @SP.r: Min enclosed area must be >= ^SP_r um2.
     HOLES SP_drc < SP_r INNER
}

//; SP.t checked in SN.t

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.10 SAB-salicide block (SI)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE SI_a	0.385
VARIABLE SI_b	0.385
VARIABLE SI_c	0.195
VARIABLE SI_d	0.195
VARIABLE SI_e	0.34
VARIABLE SI_f	0.195
VARIABLE SI_f_guid	0.3
VARIABLE SI_g	0.195
VARIABLE SI_h	0.22
VARIABLE SI_h_guid	0.3
VARIABLE SI_i	0.27
VARIABLE SI_j	0.27
VARIABLE SI_k	0.81
VARIABLE SI_l	0.81

GROUP GSI
   SI.f.guid
   SI.h.guid

SI.a {
     @SI.a: Min SI width must be >= ^SI_a um
     L1001=INTERNAL SI_drc < SI_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 (EXCL OR EECELL_drc)
}

SI.b {
     @SI.b: Min SI spacing must be >= ^SI_b um
     L1001=EXTERNAL SI_drc < SI_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SI.c {
     @SI.c: Min clearance from SI to unrelated TO must be >= ^SI_c um
     L1001=EXTERNAL SI_drc TO_drc < SI_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 (EXCL OR EECELL_drc)
}

SI.d {
     @SI.d: Min clearance from SI to W1 (overlap is not allowed) must be >= ^SI_d um
     L1001=EXTERNAL SI_drc W1_drc < SI_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND SI_drc W1_drc
}

SI.e {
     @SI.e: Min clearance from SI to poly on TO must be >= ^SI_e um
     L1001=EXTERNAL SI_drc gate < SI_e REGION SINGULAR ABUT <90
     NOT INSIDE L1001 (EXCL OR EECELL_drc)
     (AND SI_drc gate) NOT (ESD_mark OR EECELL_drc)
}

SI.f {
     @SI.f: Min extension of SI beyond related TO must be >= ^SI_f um
     L1001=ENCLOSURE TO_drc SI_drc < SI_f REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SI.g {
     @SI.g: Min extension of TO to SI must be >= ^SI_g um
     L1001=ENCLOSURE SI_drc TO_drc < SI_g REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SI.h {
     @SI.h: Min extension of SI to poly resistor on STI must be >= ^SI_h um
     L1001=ENCLOSURE gt_res SI_drc < SI_h REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

res_hr_sp=INTERACT SP_drc res_hr_poly
res_hr_si=INTERACT SI_drc res_hr_poly
SI.i {
     @SI.i: Min overlap of SP or SN to SI for a high resistor area must be >= ^SI_i um
     L1001=INTERNAL res_hr_sp res_hr_si < SI_i REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SI.j {
     @SI.j: Min clearance of SI to unrelated poly on field oxied must be >= ^SI_j um
     L1001=EXTERNAL SI_drc fpoly < SI_j REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SI.k {
     @SI.k: Min area of SI must be >= ^SI_k um2
     AREA SI_drc < SI_k
}

SI.l {
    @SI.l: Min enclosed area must be >= ^SI_l um2
    HOLES SI_drc < SI_l INNER
}

SI.m {
    @SI.m: Contacts must be salicided.
    AND W1_drc SI_drc
}

SI.n.1 {
    @SI.n.1: Butted N+/P+ on unsalicided GT is not allowed.
    si_gt=AND GT_drc SI_drc
    nsi_gt=AND SN_drc si_gt
    psi_gt=AND SP_drc si_gt
    snsp=INTERACT nsi_gt psi_gt
    si_gt INTERACT snsp
}

SI.n.2 {
    @SI.n.2: Butted N+/P+ on unsalicided TO is not allowed.
    si_to=AND TO_drc SI_drc
    nsi_to=AND SN_drc si_to
    psi_to=AND SP_drc si_to
    snsp=INTERACT nsi_to psi_to
    si_to INTERACT snsp
}

si_gt_10=SIZE SI_drc BY 4.999 UNDEROVER
SI.f.guid {
     @SI.f.guid: Recommended Min extension of SI beyond related TO (SI width>=10um) is ^SI_f_guid um.
     L1001=ENCLOSURE TO_drc si_gt_10 < SI_f_guid REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

SI.h.guid {
     @SI.h.guid: Recommended Min extension of SI to poly resistor on STI(SI width>=10um) is ^SI_h_guid um.
     L1001=ENCLOSURE gt_res si_gt_10 < SI_h_guid REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.11 Contact (W1)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE W1_a1	0.14
VARIABLE W1_a2	0.14
//;W1_a2_ext defined for W1_a2/2 can meet the calibre request (0.001)
VARIABLE W1_a2_ext 0
VARIABLE W1_b	0.165
VARIABLE W1_b1	0.18
VARIABLE W1_c1	0.095
VARIABLE W1_c2	0.115
VARIABLE W1_c3	0.13
VARIABLE W1_d	0.125
VARIABLE W1_e	0.06
VARIABLE W1_e_guid	0.12
VARIABLE W1_e1	0.045
VARIABLE W1_f	0.06
VARIABLE W1_f_guid	0.12
VARIABLE W1_g	0.08
VARIABLE W1_h	0.08

GROUP GW1
   W1.e.guid
   W1.f.guid

pm_not_fu=NOT PMDMY_mark FUSE
pm_not_fu_not_seal=OR pm_not_fu SEALRING_mark
via_exd=OR pm_not_fu_not_seal CP_drc

W1.a.1 {
     @W1.a.1: Min. & Max. Contact size must be == ^W1_a1 um
     tmp=NOT RECTANGLE W1_drc == W1_a1 BY == W1_a1 ORTHOGONAL ONLY   
     L1001=NOT tmp pm_not_fu_not_seal
     NOT INSIDE L1001 EXCL
}

w1_sealring=AND W1_drc SEALRING_mark
W1.a.2 {
     @W1.a.2: Min. & Max. Contact width of W1 bar must be == ^W1_a2, W1 bar is only allowed in seal ring
     L1001=INTERNAL w1_sealring < W1_a2 REGION SINGULAR ABUT<90
     L1002=SIZE w1_sealring BY ( W1_a2 + W1_a2_ext ) / 2 UNDEROVER
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

W1.b {
     @W1.b: Min W1 space must be >= ^W1_b um
     L1001=EXTERNAL W1_drc < W1_b REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

VARIABLE w1_b1_space 0.21
VARIABLE w1_b1_num 4
VARIABLE w1_b1_param ( ( w1_b1_num - 1) * W1_a1 + ( w1_b1_num - 2 ) * w1_b1_space ) / 2
W1.b1 {
     @W1.b1: Min W1 space in W1 array must be >= ^W1_b1 um.
     @(W1 number >= ^w1_b1_num x ^w1_b1_num (row and column>=w1_b1_num) with space <= ^w1_b1_space um)
     w1Merge=SIZE W1_drc BY w1_b1_space/2 OVERUNDER     // space <= ^w1_b1_space um treated as array
     MinArray=SIZE w1Merge BY w1_b1_param UNDEROVER    
     w1Array=INTERACT MinArray W1_drc >= w1_b1_num * w1_b1_num    // get array larger than or equal to ^w1_b1_num x ^w1_b1_num
     w1InArray=INTERACT W1_drc w1Array
     EXT (w1InArray NOT INSIDE EXCL) < W1_b1 ABUT <90 
}

W1.c.1 {
     @W1.c.1: Min clearance from W1 on TO region to a GT of 1.5V devices must be >= ^W1_c1 um.
     L1001=EXTERNAL w1_to gate < W1_c1 REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

W1.c.2 {
     @W1.c.2: Min clearance from W1 on TO region to a GT of 3.3V devices must be >= ^W1_c2 um.
     L1001=EXTERNAL w1_to (AND gate HV_drc) < W1_c2 REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

W1.c.3 {
     @W1.c.3: Min clearance from W1 on TO region to a GT of 5V/Quasi_HV devices must be >= ^W1_c3 um.
     L1001=EXTERNAL w1_to gate5 < W1_c3 REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

W1.d {
     @W1.d: Min clearance from W1 on GT to TO must be >= ^W1_d um.
     L1001=EXTERNAL w1_and_gt TO_drc < W1_d REGION SINGULAR ABUT <90 INSIDE ALSO
     NOT INSIDE L1001 EXCL
}

W1.e {
     @W1.e: Min extension of TO beyond TO W1 must be >= ^W1_e um.
     L1001=ENCLOSURE w1_to TO_drc < W1_e REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

// W1.e1 do not check

W1.f {
     @W1.f: Min extension of GT beyond a poly W1 must be >= ^W1_f um.
     L1001=ENCLOSURE w1_and_gt GT_drc < W1_f REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

nsdg_ptap_bte=COIN OUTSIDE EDGE nsdg ptap
W1.g.1 {
     @W1.g.1: Min extension of butted SP region beyond an TO W1 region must be >= ^W1_g um
     L1001=EXTERNAL w1_to nsdg_ptap_bte < W1_g REGION ABUT <90
     NOT INSIDE L1001 EXCL
}

ntap_psdg_bte=COIN OUTSIDE EDGE ntap psdg
W1.g.2 {
     @W1.g.2: Min extension of butted SP region beyond an TO W1 region must be >= ^W1_g um
     L1001=EXTERNAL w1_to ntap_psdg_bte < W1_g REGION ABUT <90
     CUT w1_to SP_drc
     ENCLOSURE w1_to SP_drc <0.001 ABUT<90 SINGULAR
     NOT INSIDE L1001 EXCL
}

psdg_ntap_bte=COIN OUTSIDE EDGE psdg ntap
W1.h.1 {
     @W1.g.1: Min extension of butted SN region beyond an TO W1 region must be >= ^W1_h um.
     L1001=EXTERNAL w1_to psdg_ntap_bte < W1_h REGION ABUT <90
     NOT INSIDE L1001 EXCL
}

ptap_nsdg_bte=COIN OUTSIDE EDGE ptap nsdg
W1.h.2 {
     @W1.g.2: Min extension of butted SN region beyond an TO W1 region must be >= ^W1_h um.
     L1001=EXTERNAL w1_to ptap_nsdg_bte < W1_h REGION ABUT <90
     CUT w1_to SN_drc
     ENCLOSURE w1_to SN_drc <0.001 ABUT<90 SINGULAR
     NOT INSIDE L1001 EXCL
}

W1.k {
     @W1.k: W1 without the cover of (GATE or TO) is not allowed
     (W1_drc NOT TO_drc) NOT GT_drc
}

//; W1.l is checked by W1.g.2/W1.h.2
//; W1.m is checked by W1.a

RES_ALL_mark=(((RES_TO_mark OR RES_PY_mark) OR RES_M1_mark) OR RES_HR_mark) OR RES_NW_mark
W1.note {
     @W1.note:W1 on the body of any resistor is not allowed.
     W1_drc AND RES_ALL_mark
}

W1.e.guid {
     @W1.e.guid: Recommended Min extension of TO beyond TO W1 to avoid high Rc is ^W1_e_guid um.
     L1001=ENCLOSURE w1_to TO_drc < W1_e_guid REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

W1.f.guid {
     @W1.f.guid: Recommended Min extension of GT beyond a Poly W1 to avoid high Rc is W1_f_guid um.
     L1001=ENCLOSURE w1_and_gt GT_drc < W1_f_guid REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}


//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.12 Metal 1 (A1)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE A1_a	0.14
VARIABLE A1_a1	0.18
VARIABLE A1_b	0.165
VARIABLE A1_c	0	
VARIABLE A1_c1	0.045
VARIABLE A1_c2_guid	0.08
VARIABLE A1_c3_guid	0.08
VARIABLE A1_d1	0.45 	
VARIABLE A1_d2	0.45 	
VARIABLE A1_e	0.2
VARIABLE A1_f	0.195
VARIABLE A1_g_guid	0.35
VARIABLE A1_h	0.1
VARIABLE A1_i	0.162

GROUP GA1
   A1.c1.guid
   A1.c1.guid2 
   A1.g.guid

A1Wide0.3 = (SIZE A1_drc BY 0.149 UNDEROVER TRUNCATE 0.149) AND A1_drc
A1Wide0.27 = (SIZE A1_drc BY 0.134 UNDEROVER TRUNCATE 0.134) AND A1_drc
A1Wide1.4 = (SIZE A1Wide0.3 BY 0.7 UNDEROVER TRUNCATE 0.7) AND A1Wide0.3
A1Wide5   = (SIZE A1Wide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND A1Wide1.4
A1Wide7   = (SIZE A1Wide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND A1Wide1.4
A1Stack   = (SIZE A1Wide7 BY 1.1) AND A1_drc
A1StackR  = (SIZE A1Wide5 BY 1.1) AND A1_drc

A2Wide0.4 = (SIZE A2_drc BY 0.199 UNDEROVER TRUNCATE 0.199) AND A2_drc
A2Wide1.4 = (SIZE A2Wide0.4 BY 0.7 UNDEROVER TRUNCATE 0.7) AND A2Wide0.4
A2Wide5   = (SIZE A2Wide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND A2Wide1.4
A2Wide7   = (SIZE A2Wide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND A2Wide1.4
A2Stack   = (SIZE A2Wide7 BY 1.1) AND A2_drc
A2StackR  = (SIZE A2Wide5 BY 1.1) AND A2_drc

a1_edge_45=ANGLE A1_drc == 45
a1_edge_45l=LENGTH a1_edge_45 >=0.45
A1.a {
     @A1.a: Min width of A1 region must be >= ^A1_a um
     L1001=INTERNAL A1_drc < A1_a REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL
}

A1.a1 {
     @A1.a1: Min width of 45 degree bent metal must be >= ^A1_a1 um if the bent metal length is >= 0.45 um
     L1001=INTERNAL a1_edge_45l < A1_a1 REGION ABUT<90 
     NOT INSIDE L1001 EXCL
}

A1.b {
     @A1.b: Min space of A1 region must be >= ^A1_b um
     L1001=EXTERNAL A1_drc < A1_b REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL
}

A1.c {
     @A1.c: Min extension of A1 beyond W1 region must be >= ^A1_c um
     L1001=NOT W1_drc A1_drc
     NOT INSIDE L1001 (EXCL AND VTSRAM_mark)
}

A1.c1 {
     @A1.c1: Min extension of A1 end-of-line beyond W1 region must be >= ^A1_c1 um  
     X = RECTANGLE ENCLOSURE W1_drc A1_drc ABUT>0<90
     GOOD A1_c A1_c1 OPPOSITE A1_c A1_c1 OPPOSITE
     Y = ENC [X] A1_drc < A1_c1 ABUT<90 OPPOSITE
     Z = (W1_drc NOT INSIDE EXCL) TOUCH EDGE Y
     INT Z < W1_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides   
}

A1.d12 {
     @A1.d12: Min space between metal lines must be >= ^A1_d1 um with one or both metal line width and length >=10um;
     @Min space between metal line and a small piece of metal(<10um) must be >= ^A1_d2 um 
     @that is connected to the wide metal within 1.0 range from the wide metal
     A1_S5 = SHRINK (SHRINK (SHRINK (SHRINK A1Wide7 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A1_G5 = GROW (GROW (GROW (GROW A1_S5 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A1_Wide = A1_G5 AND A1_drc

     A1_Exp = SIZE A1_Wide BY 1 INSIDE OF A1_drc STEP 0.126
     A1_Branch = A1_Exp NOT A1_Wide
     A1_Branch_edge = A1_Branch COIN INSIDE EDGE A1_drc
     A1_Check = A1_drc AND (SIZE A1_Exp BY A1_d2)
     A1_Else = A1_Check NOT INTERACT A1_Exp
     A1_Extend = A1_Check NOT A1_Exp 

     L1001=EXT A1_Wide A1_Else < A1_d1 ABUT >0 <89.5 REGION
     L1002=EXT A1_Branch_edge A1_Else < A1_d2 ABUT >0 <89.5 OPPOSITE REGION
     L1003=EXT A1_Branch_edge A1_Else < A1_d2 ABUT >0 <89.5 CORNER REGION
     L1004=EXT A1_Branch_edge A1_Else < A1_d2 ABUT >0 <89.5 PROJ==0 REGION
     A = EXT A1_Exp < A1_d1 ABUT > 0 < 89.5 SPACE REGION
     L1005=A NOT INTERACT A1_Extend
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
     NOT INSIDE L1003 EXCL
     NOT INSIDE L1004 EXCL
     NOT INSIDE L1005 EXCL
}

A1.e {
     @A1.e: Min space between two metal line must be >= ^A1_e um with at least one metal line width is>=0.27um and the parallel run length is >=1.0um
     X = (EXT A1Wide0.27 A1_drc < A1_e OPPOSITE REGION MEASURE ALL) NOT INSIDE EXCL
     Y = ENCLOSE RECTANGLE X 0.005 1.00
     WideEdge = Y COIN OUTSIDE EDGE A1Wide0.27
     PATH LENGTH WideEdge >= 1
}

A1.f {
     @A1.f: Min space between 45 degree bent metal must be >= ^A1_f um (the bent metal length is >=0.45um)
     L1001=EXTERNAL A1_drc a1_edge_45l < A1_f REGION ABUT<90
     NOT INSIDE L1001 EXCL
}

A1.h {
     @A1.h: Min area A1 must be >= ^A1_h um2.
     L1001=AREA A1_drc < A1_h 
     NOT INSIDE L1001 EXCL_N
}

A1.i {
     @A1.i: Min enclosed area must be >= ^A1_i um2.
     L32456=HOLES A1_drc INNER
     AREA L32456 < A1_i 
}

A1.c1.guid {
     @A1.c1.guid: Recommended Min extension of A1 end-of-line beyond W1 region is ^A1_c2_guid um to avoid high Rc   
     X = RECTANGLE ENCLOSURE W1_drc A1_drc ABUT>0<90
     GOOD A1_c A1_c2_guid OPPOSITE A1_c A1_c2_guid OPPOSITE
     Y = ENC [X] A1_drc<A1_c2_guid ABUT<90 OPPOSITE
     Z = (W1_drc NOT INSIDE EXCL) TOUCH EDGE Y
     INT Z < W1_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides   
}

A1.c1.guid2 {
     @A1.c1.guid2: Recommended Min extension of A1 (width >0.6um) beyond W1 region is ^A1_c3_guid um to avoid high Rc
     L1001 = SIZE A1_drc BY 0.3 UNDEROVER
     L1002 = L1001 COIN EDGE A1_drc
     L1003 = ENC W1_drc L1002 < A1_c3_guid ABUT<90 REGION
     NOT INSIDE L1003 EXCL     
}

A1.g.guid {
     @A1.g.guid: Recommended Min space between non-A1 regions is ^A1_g_guid um(one of non-A1 regions>4,000,000um2).
     @non-A1 region is (not(A1 or A1 dummy)).   
     non_a1=NOT bulk ALL_A1
     X=AREA non_a1 > 4000000
     L1001=EXTERNAL X non_a1< A1_g_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.13.1 Via1 (W2)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE W2_a1	0.17
VARIABLE W2_a2	0.115
//;W2_a2_ext defined for W2_a2/2 can meet the calibre request (0.001)
VARIABLE W2_a2_ext	0.001
VARIABLE W2_b	0.195
VARIABLE W2_b1	0.26
VARIABLE W2_c	0.005
VARIABLE W2_c_guid	0.05
VARIABLE W2_c_guid2	0.18
VARIABLE W2_c1	0.045
VARIABLE W2_c1_guid	0.08

GROUP GW2
    W2.c.guid
    W2.c.guid2
    W2.c1.guid

W2.a.1 {
     @W2.a.1: Min & Max W2 size must be == ^W2_a1 um.
     tmp=NOT RECTANGLE W2_drc == W2_a1 BY == W2_a1 ORTHOGONAL ONLY
     L1001=NOT tmp via_exd
     NOT INSIDE L1001 EXCL
}

w2_sealring=AND W2_drc SEALRING_mark
W2.a.2 {
     @W2.a.2: Min. & Max. W2 width of W2 bar must be == ^W2_a2 um,W2 bar is only allowed in seal ring
     L1001=INTERNAL w2_sealring < W2_a2 REGION SINGULAR ABUT<90
     L1002=SIZE w2_sealring BY ( W2_a2 + W2_a2_ext ) / 2 UNDEROVER
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

W2.b {
     @W2.b: Min W2 space msut be >= ^W2_b um
     L1001=EXTERNAL W2_drc < W2_b SINGULAR REGION ABUT<90 
     NOT INSIDE L1001 EXCL
}

VARIABLE w2_b1_param ( ( 3 - 1 ) * W2_a1 + ( 3 - 2 ) * 0.31 ) / 2
W2.b1 {
     @W2.b1: Min W2 space in W2 array must be >= ^W2_b1 (W2 number>=3x3(row and column>=3) with space<=0.31um) 
     w2Merge=SIZE W2_drc BY 0.31/2 OVERUNDER     // space <= 0.31 um treated as array
     MinArray=SIZE w2Merge BY w2_b1_param UNDEROVER    // ((3-1)*0.19+(3-2)*0.31)/2)=0.345
     w2Array=INTERACT MinArray W2_drc >= 3*3    // get array larger than or equal to 3x3 
     w2InArray=INTERACT W2_drc w2Array
     EXT (w2InArray NOT INSIDE EXCL) < W2_b1 ABUT <90 
}

W2.c {
     @W2.c: Min extension of A1 beyond W2 must be >= ^W2_c um
     L1001=ENCLOSURE W2_drc A1_drc < W2_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL
}

W2.c1 {
     @W2.c1: Min extension of A1 end of line region beyond W2 must be >= ^W2_c1 um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W2_drc A1_drc ABUT>0<90 
     GOOD W2_c W2_c1 OPPOSITE W2_c W2_c1 OPPOSITE
     Y = ENC [X] A1_drc < W2_c1 ABUT < 90 OPPOSITE
     Z = (W2_drc NOT INSIDE EXCL) TOUCH EDGE Y
     INT Z < W2_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

// W2.d is checked by W2.a
// W2.e has no need check.

W2.c.guid {
     @W2.c.guid: Recommended Min extension of A1 beyond W2 is ^W2_c_guid um
     L1001=ENCLOSURE W2_drc A1_drc < W2_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL
}

W2.c.guid2 {
     @W2.c.guid2: Recommended Min extension of A1 (width >10um) beyond W2 region is ^W2_c_guid2 um 
     L1001 = SIZE A1_drc BY 5 UNDEROVER
     L1002 = L1001 COIN EDGE A1_drc
     L1003 = ENC W2_drc L1002 < W2_c_guid2 ABUT<90 REGION
     NOT INSIDE L1003 EXCL     
}

W2.c1.guid {
     @W2.c1.guid: Recommended Min extension of A1 end of line region beyond W2 is ^W2_c1_guid um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W2_drc A1_drc ABUT>0<90 
     GOOD W2_c_guid W2_c1_guid OPPOSITE W2_c_guid W2_c1_guid OPPOSITE
     Y = ENC [X] A1_drc < W2_c1_guid ABUT<90 OPPOSITE
     Z = (W2_drc NOT INSIDE EXCL) TOUCH EDGE Y
     INT Z < W2_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

A3Wide0.4 = (SIZE A3_drc BY 0.199 UNDEROVER TRUNCATE 0.199) AND A3_drc
A3Wide1.4 = (SIZE A3Wide0.4 BY 0.7 UNDEROVER TRUNCATE 0.7) AND A3Wide0.4
A3Wide7   = (SIZE A3Wide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND A3Wide1.4
A3Stack   = (SIZE A3Wide7 BY 1.1) AND A3_drc
A3OvpA2   = A3Stack AND A2Stack
A2Overlap = A3OvpA2 AND A1Stack

A3Wide5   = (SIZE A3Wide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND A3Wide1.4
A3StackR  = (SIZE A3Wide5 BY 1.1) AND A3_drc
A3OvpA2R  = A3StackR AND A2StackR
A2OverlapR = A3OvpA2R AND A1StackR

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.14.1 Metal 2 (A2)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE A2_a	0.18
VARIABLE A2_a1	0.215
VARIABLE A2_b	0.185
VARIABLE A2_c	0.005
VARIABLE A2_c_guid	0.05
VARIABLE A2_c1	0.045
VARIABLE A2_c1_guid	0.08
VARIABLE A2_d1	0.45
VARIABLE A2_d2	0.45
VARIABLE A2_d3	0.225
VARIABLE A2_e	0.225
VARIABLE A2_f	0.215
VARIABLE A2_g_guid	0.350
VARIABLE A2_h	0.117
VARIABLE A2_i	0.215
VARIABLE A2_j_guid	0.3
VARIABLE A2_k_guid	0.22
VARIABLE A2_l	0.9
VARIABLE A2_l_guid	0.6

GROUP GA2
   A2.c.guid
   A2.c1.guid
   A2.g.guid
   A2.j.guid
   A2.l.guid

a2_edge_45=ANGLE A2_drc == 45
a2_edge_45l=LENGTH a2_edge_45 >=0.5

A2.a {
     @A2.a: Min width of A2 region must be >= ^A2_a um
     L1001=INTERNAL A2_drc < A2_a REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A2.a1 {
     @A2.a1: Min width of 45 degree bent metal must be >= ^A2_a1 um if the bent metal length is >=0.5um
     L1001=INTERNAL a2_edge_45l < A2_a1 REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A2.b {
     @A2.b: Min space of A2 region must be >= ^A2_b um
     L1001=EXTERNAL A2_drc < A2_b REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A2.c {
     @A2.c: Min extension of A2 beyond W2 region must be >= ^A2_c um
     L1001=ENCLOSURE W2_drc A2_drc < A2_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A2.c1 {
     @A2.c1: Min extension of A2 end of line region beyond W2 (at least two opposite sides) must be >= ^A2_c1 um
     X = RECTANGLE ENCLOSURE W2_drc A2_drc ABUT>0<90 
     GOOD A2_c A2_c1 OPPOSITE A2_c A2_c1 OPPOSITE
     Y = ENC [X] A2_drc < A2_c1 ABUT<90 OPPOSITE
     Z = (W2_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W2_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A2.d {
     @A2.d: Min space between metal lines must be >= ^A2_d1 um with one or both metal line width and length >=10um;
     @Min space between metal line and a small piece of metal(<10um) must be >= ^A2_d2 um 
     @that is connected to the wide metal within 1.0 range from the wide metal.
     A2_S5 = SHRINK (SHRINK (SHRINK (SHRINK A2Wide7 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A2_G5 = GROW (GROW (GROW (GROW A2_S5 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A2_Wide = A2_G5 AND A2_drc

     A2_Exp = SIZE A2_Wide BY 1 INSIDE OF A2_drc STEP 0.147
     A2_Branch = A2_Exp NOT A2_Wide
     A2_Branch_edge = A2_Branch COIN INSIDE EDGE A2_drc
     A2_Check = A2_drc AND (SIZE A2_Exp BY A2_d2)
     A2_Else = A2_Check NOT INTERACT A2_Exp
     A2_Extend = A2_Check NOT A2_Exp 

     L1001=EXT A2_Wide A2_Else < A2_d1 ABUT >0 <89.5 REGION
     L1002=EXT A2_Branch_edge A2_Else < A2_d2 ABUT >0 <89.5 OPPOSITE REGION
     L1003=EXT A2_Branch_edge A2_Else < A2_d2 ABUT >0 <89.5 CORNER REGION
     L1004=EXT A2_Branch_edge A2_Else < A2_d2 ABUT >0 <89.5 PROJ==0 REGION
     A = EXT A2_Exp < A2_d1 ABUT > 0 < 89.5 SPACE REGION
     L1005=A NOT INTERACT A2_Extend
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
     NOT INSIDE L1003 EXCL_N
     NOT INSIDE L1004 EXCL_N
     NOT INSIDE L1005 EXCL_N
}

A2.d3 {
     @A2.d3: Min space between metal lines must be >= ^A2_d3 um with one or both metal line width and length >=2um;
     A2_S5 = SHRINK (SHRINK (SHRINK (SHRINK A2_drc RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A2_G5 = GROW (GROW (GROW (GROW A2_S5 RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A2_Wide = A2_G5 AND A2_drc

     L1001=EXT A2_Wide A2_drc < A2_d3 ABUT >0 <89.5 REGION
     NOT INSIDE L1001 EXCL_N
}

A2.e {
     @A2.e: Min space between two metal line must be >= ^A2_e um with at least one metal line width is>=0.4um and the parallel run length is >=1.0um
     X = (EXT A2Wide0.4 A2_drc < A2_e OPPOSITE REGION MEASURE ALL) NOT INSIDE EXCL_N
     Y = ENCLOSE RECTANGLE X 0.005 1.00
     WideEdge = COIN OUTSIDE EDGE Y A2Wide0.4
     PATH LENGTH WideEdge >= 1
}

A2.h {
     @A2.h: Min area must be >= ^A2_h um2
     L1001=AREA A2_drc < A2_h
     NOT INSIDE L1001 EXCL_N
}

A2.i {
     @A2.i: Min enclosure area must be >= ^A2_i um2.
     A2_hole=HOLES A2_drc INNER
     AREA A2_hole < A2_i
}

A2.l {
     @A2.l: Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 7 um, and the projection length (L) > 7 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A1/A2/A3, or A4/A5/A6 , and so on) >= ^A2_l um
     A2OverlapBig = (SIZE A2Overlap BY 3.5 UNDEROVER TRUNCATE 3.5) AND A2Overlap
     W = EXT A2OverlapBig A2Overlap < A2_l OPPOSITE MEASURE ALL REGION
     X = W NOT INSIDE A1_drc
     Y = X NOT INSIDE A2_drc
     Y1 = Y NOT INSIDE A3_drc
     L1001=ENCLOSE RECTANGLE Y1 0.005 7.005 
     NOT INSIDE L1001 EXCL_N
}

A2.c.guid {
     @A2.c.guid: Min extension of A2 beyond W2 region must be >= ^A2_c_guid um
     L1001=ENCLOSURE W2_drc A2_drc < A2_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A2.c1.guid {
     @A2.c1.guid: Recommended Min extension of A2 end of line region beyond W2 (at least two opposite sides) is ^A2_c1_guid um
     X = RECTANGLE ENCLOSURE W2_drc A2_drc ABUT>0<90 
     GOOD A2_c_guid  A2_c1_guid OPPOSITE A2_c_guid A2_c1_guid OPPOSITE
     Y = ENC [X] A2_drc < A2_c1_guid ABUT<90 OPPOSITE
     Z = (W2_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W2_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A2.g.guid {
     @A2.g.guid: Recommended Min space between non-A2 regions is ^A2_g_guid um(one of non-A2 regions>4,000,000um2).
     @non-A2 region is (not(A2 or A2 dummy)).   
     non_a2=NOT bulk ALL_A2
     X=AREA non_a2 > 4000000
     L1001=EXTERNAL X non_a2< A2_g_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A2.j.guid {
     @A2.j.guid: Recommended An space is ^A2_j_guid um when An is within(An and (wide An-1 size 5)).
     @the wide An-1 is that both width and length >5um.
     a1_gt_5=SIZE A1_drc BY 2.5 UNDEROVER
     a1_gt_10=SIZE a1_gt_5 BY 5
     a2_inwide=AND A2_drc a1_gt_10
     L1001=EXTERNAL a2_inwide < A2_j_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A2.l.guid {
     @A2.l.guid: Recommended Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 5 um, and the projection length (L) > 5 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A1/A2/A3, or A4/A5/A6 , and so on) >= ^A2_l_guid um
     A2OverlapBig = (SIZE A2OverlapR BY 2.5 UNDEROVER TRUNCATE 2.5) AND A2OverlapR
     W = EXT A2OverlapBig A2OverlapR < A2_l_guid OPPOSITE MEASURE ALL REGION
     X = W NOT INSIDE A1_drc
     Y = X NOT INSIDE A2_drc
     Y1 = Y NOT INSIDE A3_drc
     L1001=ENCLOSE RECTANGLE Y1 0.005 5.005 
     NOT INSIDE L1001 EXCL_N
}

A4Wide0.4 = (SIZE A4_drc BY 0.199 UNDEROVER TRUNCATE 0.199) AND A4_drc
A4Wide1.4 = (SIZE A4Wide0.4 BY 0.7 UNDEROVER TRUNCATE 0.7) AND A4Wide0.4
A4Wide7   = (SIZE A4Wide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND A4Wide1.4
A4Stack   = (SIZE A4Wide7 BY 1.1) AND A4_drc
A3Overlap = A3OvpA2 AND A4Stack

A4Wide5   = (SIZE A4Wide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND A4Wide1.4
A4StackR  = (SIZE A4Wide5 BY 1.1) AND A4_drc
A3OverlapR = A3OvpA2R AND A4StackR

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.13.2 Via2 (W3)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE W3_a1	0.17
VARIABLE W3_a2	0.115
//;W3_a2_ext defined for W3_a2/2 can meet the calibre request (0.001)
VARIABLE W3_a2_ext	0.001
VARIABLE W3_b	0.195
VARIABLE W3_b1	0.26
VARIABLE W3_c	0.005
VARIABLE W3_c_guid	0.05
VARIABLE W3_c_guid2	0.18
VARIABLE W3_c1	0.045
VARIABLE W3_c1_guid	0.08

GROUP GW3
    W3.c.guid
    W3.c.guid2
    W3.c1.guid

W3.a.1 {
     @W3.a.1: Min & Max W3 size must be == ^W3_a1 um.
     tmp=NOT RECTANGLE W3_drc == W3_a1 BY == W3_a1 ORTHOGONAL ONLY
     L1001=NOT tmp via_exd
     NOT INSIDE L1001 EXCL_N
}

w3_sealring=AND W3_drc SEALRING_mark
W3.a.2 {
     @W3.a.2: Min. & Max. W3 width of W3 bar must be == ^W3_a2 um,W3 bar is only allowed in seal ring
     L1001=INTERNAL w3_sealring < W3_a2 REGION SINGULAR ABUT<90
     L1002=SIZE w3_sealring BY ( W3_a2 + W3_a2_ext ) / 2 UNDEROVER
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
}

W3.b {
     @W3.b: Min W3 space msut be >= ^W3_b um
     L1001=EXTERNAL W3_drc < W3_b SINGULAR REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

VARIABLE w3_b1_param ( ( 3 - 1 ) * W3_a1 + ( 3 - 2 ) * 0.31 ) / 2
W3.b1 {
     @W3.b1: Min W3 space in W3 array must be >= ^W3_b1 (W3 number>=3x3(row and column>=3) with space<=0.31um) 
     w3Merge=SIZE W3_drc BY 0.31/2 OVERUNDER     // space <= 0.31 um treated as array
     MinArray=SIZE w3Merge BY w3_b1_param UNDEROVER    // ((3-1)*0.19+(3-2)*0.31)/2)=0.345
     w3Array=INTERACT MinArray W3_drc >= 3*3    // get array larger than or equal to 3x3 
     w3InArray=INTERACT W3_drc w3Array
     EXT (w3InArray NOT INSIDE EXCL_N) < W3_b1 ABUT <90 
}

W3.c {
     @W3.c: Min extension of A2 beyond W3 must be >= ^W3_c um
     L1001=ENCLOSURE W3_drc A2_drc < W3_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

W3.c1 {
     @W3.c1: Min extension of A2 end of line region beyond W3 must be >= ^W3_c1 um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W3_drc A2_drc ABUT>0<90 
     GOOD W3_c W3_c1 OPPOSITE W3_c W3_c1 OPPOSITE
     Y = ENC [X] A2_drc < W3_c1 ABUT < 90 OPPOSITE
     Z = (W3_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W3_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

// W3.d is checked by W3.a
// W3.e has no need check.

W3.c.guid {
     @W3.c.guid: Recommended Min extension of A2 beyond W3 is ^W3_c_guid um
     L1001=ENCLOSURE W3_drc A2_drc < W3_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

W3.c.guid2 {
     @W3.c.guid2: Recommended Min extension of A2 (width >10um) beyond W3 region is ^W3_c_guid2 um 
     L1001 = SIZE A2_drc BY 5 UNDEROVER
     L1002 = L1001 COIN EDGE A2_drc
     L1003 = ENC W3_drc L1002 < W3_c_guid2 ABUT<90 REGION
     NOT INSIDE L1003 EXCL     
}

W3.c1.guid {
     @W3.c1.guid: Recommended Min extension of A2 end of line region beyond W3 is ^W3_c1_guid um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W3_drc A2_drc ABUT>0<90 
     GOOD W3_c_guid W3_c1_guid OPPOSITE W3_c_guid W3_c1_guid OPPOSITE
     Y = ENC [X] A2_drc < W3_c1_guid ABUT<90 OPPOSITE
     Z = (W3_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W3_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.14.2 Metal 3 (A3)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE A3_a	0.18
VARIABLE A3_a1	0.215
VARIABLE A3_b	0.185
VARIABLE A3_c	0.005
VARIABLE A3_c_guid	0.05
VARIABLE A3_c1	0.045
VARIABLE A3_c1_guid	0.08
VARIABLE A3_d1	0.45
VARIABLE A3_d2	0.45
VARIABLE A3_d3	0.225
VARIABLE A3_e	0.225
VARIABLE A3_f	0.215
VARIABLE A3_g_guid	0.350
VARIABLE A3_h	0.117
VARIABLE A3_i	0.215
VARIABLE A3_j_guid	0.3
VARIABLE A3_k	0.22
VARIABLE A3_l	0.9
VARIABLE A3_l_guid	0.6

GROUP GA3
   A3.c.guid
   A3.c1.guid
   A3.g.guid
   A3.j.guid
   A3.l.guid

a3_edge_45=ANGLE A3_drc == 45
a3_edge_45l=LENGTH a3_edge_45 >=0.5

A3.a {
     @A3.a: Min width of A3 region must be >= ^A3_a um
     L1001=INTERNAL A3_drc < A3_a REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A3.a1 {
     @A3.a1: Min width of 45 degree bent metal must be >= ^A3_a1 um if the bent metal length is >=0.5um
     L1001=INTERNAL a3_edge_45l < A3_a1 REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A3.b {
     @A3.b: Min space of A3 region must be >= ^A3_b um
     L1001=EXTERNAL A3_drc < A3_b REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A3.c {
     @A3.c: Min extension of A3 beyond W3 region must be >= ^A3_c um
     L1001=ENCLOSURE W3_drc A3_drc < A3_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A3.c1 {
     @A3.c1: Min extension of A3 end of line region beyond W3 (at least two opposite sides) must be >= ^A3_c1 um
     X = RECTANGLE ENCLOSURE W3_drc A3_drc ABUT>0<90 
     GOOD A3_c A3_c1 OPPOSITE A3_c A3_c1 OPPOSITE
     Y = ENC [X] A3_drc < A3_c1 ABUT<90 OPPOSITE
     Z = (W3_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W3_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A3.d {
     @A3.d: Min space between metal lines must be >= ^A3_d1 um with one or both metal line width and length >=10um;
     @Min space between metal line and a small piece of metal(<10um) must be >= ^A3_d2 um 
     @that is connected to the wide metal within 1.0 range from the wide metal.
     A3_S5 = SHRINK (SHRINK (SHRINK (SHRINK A3Wide7 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A3_G5 = GROW (GROW (GROW (GROW A3_S5 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A3_Wide = A3_G5 AND A3_drc

     A3_Exp = SIZE A3_Wide BY 1 INSIDE OF A3_drc STEP 0.147
     A3_Branch = A3_Exp NOT A3_Wide
     A3_Branch_edge = A3_Branch COIN INSIDE EDGE A3_drc
     A3_Check = A3_drc AND (SIZE A3_Exp BY A3_d2)
     A3_Else = A3_Check NOT INTERACT A3_Exp
     A3_Extend = A3_Check NOT A3_Exp 

     L1001=EXT A3_Wide A3_Else < A3_d1 ABUT >0 <89.5 REGION
     L1002=EXT A3_Branch_edge A3_Else < A3_d2 ABUT >0 <89.5 OPPOSITE REGION
     L1003=EXT A3_Branch_edge A3_Else < A3_d2 ABUT >0 <89.5 CORNER REGION
     L1004=EXT A3_Branch_edge A3_Else < A3_d2 ABUT >0 <89.5 PROJ==0 REGION
     A = EXT A3_Exp < A3_d1 ABUT > 0 < 89.5 SPACE REGION
     L1005=A NOT INTERACT A3_Extend
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
     NOT INSIDE L1003 EXCL_N
     NOT INSIDE L1004 EXCL_N
     NOT INSIDE L1005 EXCL_N
}

A3.d3 {
     @A3.d3: Min space between metal lines must be >= ^A3_d3 um with one or both metal line width and length >=2um;
     A3_S5 = SHRINK (SHRINK (SHRINK (SHRINK A3_drc RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A3_G5 = GROW (GROW (GROW (GROW A3_S5 RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A3_Wide = A3_G5 AND A3_drc

     L1001=EXT A3_Wide A3_drc < A3_d3 ABUT >0 <89.5 REGION
     NOT INSIDE L1001 EXCL_N
}

A3.e {
     @A3.e: Min space between two metal line must be >= ^A3_e um with at least one metal line width is>=0.4um and the parallel run length is >=1.0um
     X = (EXT A3Wide0.4 A3_drc < A3_e OPPOSITE REGION MEASURE ALL) NOT INSIDE EXCL_N
     Y = ENCLOSE RECTANGLE X 0.005 1.00
     WideEdge = COIN OUTSIDE EDGE Y A3Wide0.4
     PATH LENGTH WideEdge >= 1
}

A3.h {
     @A3.h: Min area must be >= ^A3_h um2
     AREA A3_drc < A3_h
}

A3.f {
     @A3.f: Min space between 45 degree bent metal must be >= ^A3_f um (the bent metal length is >=0.5um).
     L1001=EXTERNAL A3_drc a3_edge_45l < A3_f REGION ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A3.i {
     @A3.i: Min enclosure area must be >= ^A3_i um2.
     A3_hole=HOLES A3_drc INNER
     AREA A3_hole < A3_i
}

A3.l {
     @A3.l: Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 7 um, and the projection length (L) > 7 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A2/A3/A4, or A4/A5/A6 , and so on) >= ^A3_l 
  A3OverlapBig = (SIZE A3Overlap BY 3.5 UNDEROVER TRUNCATE 3.5) AND A3Overlap
  W = EXT A3OverlapBig A3Overlap < A3_l OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A2_drc
  Y = X NOT INSIDE A3_drc
  Y1 = Y NOT INSIDE A4_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 7.005 
  NOT INSIDE L1001 EXCL_N
}

A3.c.guid {
     @A3.c.guid: Min extension of A3 beyond W3 region must be >= ^A3_c_guid um
     L1001=ENCLOSURE W3_drc A3_drc < A3_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A3.c1.guid {
     @A3.c1.guid: Recommended Min extension of A3 end of line region beyond W3 (at least two opposite sides) is ^A3_c1_guid um
     X = RECTANGLE ENCLOSURE W3_drc A3_drc ABUT>0<90 
     GOOD A3_c_guid  A3_c1_guid OPPOSITE A3_c_guid A3_c1_guid OPPOSITE
     Y = ENC [X] A3_drc < A3_c1_guid ABUT<90 OPPOSITE
     Z = (W3_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W3_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A3.g.guid {
     @A3.g.guid: Recommended Min space between non-A3 regions is ^A3_g_guid um(one of non-A3 regions>4,000,000um2).
     @non-A3 region is (not(A3 or A3 dummy)).   
     non_a3=NOT bulk ALL_A3
     X=AREA non_a3 > 4000000
     L1001=EXTERNAL X non_a3< A3_g_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A3.j.guid {
     @A3.j.guid: Recommended An space is ^A3_j_guid um when An is within(An and (wide An-1 size 5)).
     @the wide An-1 is that both width and length >5um.
     a2_gt_5=SIZE A2_drc BY 2.5 UNDEROVER
     a2_gt_10=SIZE a2_gt_5 BY 5
     a3_inwide=AND A3_drc a2_gt_10
     L1001=EXTERNAL a3_inwide < A3_j_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A3.l.guid {
     @A3.l.guid: Recommended Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 5 um, and the projection length (L) > 5 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A2/A3/A4, or A4/A5/A6 , and so on) >= ^A3_l_guid
  A3OverlapBig = (SIZE A3OverlapR BY 2.5 UNDEROVER TRUNCATE 2.5) AND A3OverlapR
  W = EXT A3OverlapBig A3OverlapR < A3_l_guid OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A2_drc
  Y = X NOT INSIDE A3_drc
  Y1 = Y NOT INSIDE A4_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 5.005 
  NOT INSIDE L1001 EXCL_N
}

A5Wide0.4 = (SIZE A5_drc BY 0.199 UNDEROVER TRUNCATE 0.199) AND A5_drc
A5Wide1.4 = (SIZE A5Wide0.4 BY 0.7 UNDEROVER TRUNCATE 0.7) AND A5Wide0.4
A5Wide1.8 = (SIZE A5Wide1.4 BY 0.9 UNDEROVER TRUNCATE 0.9) AND A5Wide1.4
A5Wide7   = (SIZE A5Wide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND A5Wide1.4
A5Stack   = (SIZE A5Wide7 BY 1.1) AND A5_drc
A5OvpA4   = A5Stack AND A4Stack
A4Overlap = A5OvpA4 AND A3Stack

A5Wide5   = (SIZE A5Wide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND A5Wide1.4
A5StackR  = (SIZE A5Wide5 BY 1.1) AND A5_drc
A5OvpA4R  = A5StackR AND A4StackR
A4OverlapR = A5OvpA4R AND A3StackR

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.13.3 Via3 (W4)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE W4_a1	0.17
VARIABLE W4_a2	0.115
//;W4_a2_ext defined for W4_a2/2 can meet the calibre request (0.001)
VARIABLE W4_a2_ext	0.001
VARIABLE W4_b	0.195
VARIABLE W4_b1	0.26
VARIABLE W4_c	0.005
VARIABLE W4_c_guid	0.05
VARIABLE W4_c_guid2	0.18
VARIABLE W4_c1	0.045
VARIABLE W4_c1_guid	0.08

GROUP GW4
    W4.c.guid
    W4.c.guid2
    W4.c1.guid

W4.a.1 {
     @W4.a.1: Min & Max W4 size must be == ^W4_a1 um.
     tmp=NOT RECTANGLE W4_drc == W4_a1 BY == W4_a1 ORTHOGONAL ONLY
     L1001=NOT tmp via_exd
     NOT INSIDE L1001 EXCL_N
}

w4_sealring=AND W4_drc SEALRING_mark
W4.a.2 {
     @W4.a.2: Min. & Max. W4 width of W4 bar must be == ^W4_a2 um,W4 bar is only allowed in seal ring
     L1001=INTERNAL w4_sealring < W4_a2 REGION SINGULAR ABUT<90
     L1002=SIZE w4_sealring BY ( W4_a2 + W4_a2_ext ) / 2 UNDEROVER
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
}

W4.b {
     @W4.b: Min W4 space msut be >= ^W4_b um
     L1001=EXTERNAL W4_drc < W4_b SINGULAR REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

VARIABLE w4_b1_param ( ( 3 - 1 ) * W4_a1 + ( 3 - 2 ) * 0.31 ) / 2
W4.b1 {
     @W4.b1: Min W4 space in W4 array must be >= ^W4_b1 (W4 number>=3x3(row and column>=3) with space<=0.31um) 
     w4Merge=SIZE W4_drc BY 0.31/2 OVERUNDER     // space <= 0.31 um treated as array
     MinArray=SIZE w4Merge BY w4_b1_param UNDEROVER    // ((3-1)*0.19+(3-2)*0.31)/2)=0.345
     w4Array=INTERACT MinArray W4_drc >= 3*3    // get array larger than or equal to 3x3 
     w4InArray=INTERACT W4_drc w4Array
     EXT (w4InArray NOT INSIDE EXCL_N) < W4_b1 ABUT <90 
}

W4.c {
     @W4.c: Min extension of A3 beyond W4 must be >= ^W4_c um
     L1001=ENCLOSURE W4_drc A3_drc < W4_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

W4.c1 {
     @W4.c1: Min extension of A3 end of line region beyond W4 must be >= ^W4_c1 um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W4_drc A3_drc ABUT>0<90 
     GOOD W4_c W4_c1 OPPOSITE W4_c W4_c1 OPPOSITE
     Y = ENC [X] A3_drc < W4_c1 ABUT < 90 OPPOSITE
     Z = (W4_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W4_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

// W4.d is checked by W4.a
// W4.e has no need check.

W4.c.guid {
     @W4.c.guid: Recommended Min extension of A3 beyond W4 is ^W4_c_guid um
     L1001=ENCLOSURE W4_drc A3_drc < W4_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

W4.c.guid2 {
     @W4.c.guid2: Recommended Min extension of A3 (width >10um) beyond W4 region is ^W4_c_guid2 um 
     L1001 = SIZE A3_drc BY 5 UNDEROVER
     L1002 = L1001 COIN EDGE A3_drc
     L1003 = ENC W4_drc L1002 < W4_c_guid2 ABUT<90 REGION
     NOT INSIDE L1003 EXCL     
}

W4.c1.guid {
     @W4.c1.guid: Recommended Min extension of A3 end of line region beyond W4 is ^W4_c1_guid um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W4_drc A3_drc ABUT>0<90 
     GOOD W4_c_guid W4_c1_guid OPPOSITE W4_c_guid W4_c1_guid OPPOSITE
     Y = ENC [X] A3_drc < W4_c1_guid ABUT<90 OPPOSITE
     Z = (W4_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W4_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.14.3 Metal 4 (A4)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE A4_a	0.18
VARIABLE A4_a1	0.215
VARIABLE A4_b	0.185
VARIABLE A4_c	0.005
VARIABLE A4_c_guid	0.05
VARIABLE A4_c1	0.045
VARIABLE A4_c1_guid	0.08
VARIABLE A4_d1	0.45
VARIABLE A4_d2	0.45
VARIABLE A4_d3	0.225
VARIABLE A4_e	0.225
VARIABLE A4_f	0.215
VARIABLE A4_g_guid	0.350
VARIABLE A4_h	0.117
VARIABLE A4_i	0.215
VARIABLE A4_j_guid	0.3
VARIABLE A4_k	0.22
VARIABLE A4_l	0.9
VARIABLE A4_l_guid	0.6

GROUP GA4
   A4.c.guid
   A4.c1.guid
   A4.g.guid
   A4.j.guid
   A4.l.guid

a4_edge_45=ANGLE A4_drc == 45
a4_edge_45l=LENGTH a4_edge_45 >=0.5

A4.a {
     @A4.a: Min width of A4 region must be >= ^A4_a um
     L1001=INTERNAL A4_drc < A4_a REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A4.a1 {
     @A4.a1: Min width of 45 degree bent metal must be >= ^A4_a1 um if the bent metal length is >=0.5um
     L1001=INTERNAL a4_edge_45l < A4_a1 REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A4.b {
     @A4.b: Min space of A4 region must be >= ^A4_b um
     L1001=EXTERNAL A4_drc < A4_b REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A4.c {
     @A4.c: Min extension of A4 beyond W4 region must be >= ^A4_c um
     L1001=ENCLOSURE W4_drc A4_drc < A4_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A4.c1 {
     @A4.c1: Min extension of A4 end of line region beyond W4 (at least two opposite sides) must be >= ^A4_c1 um
     X = RECTANGLE ENCLOSURE W4_drc A4_drc ABUT>0<90 
     GOOD A4_c A4_c1 OPPOSITE A4_c A4_c1 OPPOSITE
     Y = ENC [X] A4_drc < A4_c1 ABUT<90 OPPOSITE
     Z = (W4_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W4_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A4.d {
     @A4.d: Min space between metal lines must be >= ^A4_d1 um with one or both metal line width and length >=10um;
     @Min space between metal line and a small piece of metal(<10um) must be >= ^A4_d2 um 
     @that is connected to the wide metal within 1.0 range from the wide metal.
     A4_S5 = SHRINK (SHRINK (SHRINK (SHRINK A4Wide7 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A4_G5 = GROW (GROW (GROW (GROW A4_S5 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A4_Wide = A4_G5 AND A4_drc

     A4_Exp = SIZE A4_Wide BY 1 INSIDE OF A4_drc STEP 0.147
     A4_Branch = A4_Exp NOT A4_Wide
     A4_Branch_edge = A4_Branch COIN INSIDE EDGE A4_drc
     A4_Check = A4_drc AND (SIZE A4_Exp BY A4_d2)
     A4_Else = A4_Check NOT INTERACT A4_Exp
     A4_Extend = A4_Check NOT A4_Exp 

     L1001=EXT A4_Wide A4_Else < A4_d1 ABUT >0 <89.5 REGION
     L1002=EXT A4_Branch_edge A4_Else < A4_d2 ABUT >0 <89.5 OPPOSITE REGION
     L1003=EXT A4_Branch_edge A4_Else < A4_d2 ABUT >0 <89.5 CORNER REGION
     L1004=EXT A4_Branch_edge A4_Else < A4_d2 ABUT >0 <89.5 PROJ==0 REGION
     A = EXT A4_Exp < A4_d1 ABUT > 0 < 89.5 SPACE REGION
     L1005=A NOT INTERACT A4_Extend
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
     NOT INSIDE L1003 EXCL_N
     NOT INSIDE L1004 EXCL_N
     NOT INSIDE L1005 EXCL_N
}

A4.d3 {
     @A4.d3: Min space between metal lines must be >= ^A4_d3 um with one or both metal line width and length >=2um;
     A4_S5 = SHRINK (SHRINK (SHRINK (SHRINK A4_drc RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A4_G5 = GROW (GROW (GROW (GROW A4_S5 RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A4_Wide = A4_G5 AND A4_drc

     L1001=EXT A4_Wide A4_drc < A4_d3 ABUT >0 <89.5 REGION
     NOT INSIDE L1001 EXCL_N
}

A4.e {
     @A4.e: Min space between two metal line must be >= ^A4_e um with at least one metal line width is>=0.4um and the parallel run length is >=1.0um
     X = (EXT A4Wide0.4 A4_drc < A4_e OPPOSITE REGION MEASURE ALL) NOT INSIDE EXCL_N
     Y = ENCLOSE RECTANGLE X 0.005 1.00
     WideEdge = COIN OUTSIDE EDGE Y A4Wide0.4
     PATH LENGTH WideEdge >= 1
}

A4.h {
     @A4.h: Min area must be >= ^A4_h um2
     AREA A4_drc < A4_h
}

A4.f {
     @A4.f: Min space between 45 degree bent metal must be >= ^A4_f um (the bent metal length is >=0.5um).
     L1001=EXTERNAL A4_drc a4_edge_45l < A4_f REGION ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A4.i {
     @A4.i: Min enclosure area must be >= ^A4_i um2.
     A4_hole=HOLES A4_drc INNER
     AREA A4_hole < A4_i
}

A4.l {
     @A4.l: Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 7 um, and the projection length (L) > 7 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A3/A4/A5, or A4/A5/A6 , and so on) >= ^A4_l 
  A4OverlapBig = (SIZE A4Overlap BY 3.5 UNDEROVER TRUNCATE 3.5) AND A4Overlap
  W = EXT A4OverlapBig A4Overlap < A4_l OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A3_drc
  Y = X NOT INSIDE A4_drc
  Y1 = Y NOT INSIDE A5_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 7.005 
  NOT INSIDE L1001 EXCL_N
}

A4.c.guid {
     @A4.c.guid: Min extension of A4 beyond W4 region must be >= ^A4_c_guid um
     L1001=ENCLOSURE W4_drc A4_drc < A4_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A4.c1.guid {
     @A4.c1.guid: Recommended Min extension of A4 end of line region beyond W4 (at least two opposite sides) is ^A4_c1_guid um
     X = RECTANGLE ENCLOSURE W4_drc A4_drc ABUT>0<90 
     GOOD A4_c_guid  A4_c1_guid OPPOSITE A4_c_guid A4_c1_guid OPPOSITE
     Y = ENC [X] A4_drc < A4_c1_guid ABUT<90 OPPOSITE
     Z = (W4_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W4_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A4.g.guid {
     @A4.g.guid: Recommended Min space between non-A4 regions is ^A4_g_guid um(one of non-A4 regions>4,000,000um2).
     @non-A4 region is (not(A4 or A4 dummy)).   
     non_a4=NOT bulk ALL_A4
     X=AREA non_a4 > 4000000
     L1001=EXTERNAL X non_a4< A4_g_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A4.j.guid {
     @A4.j.guid: Recommended An space is ^A4_j_guid um when An is within(An and (wide An-1 size 5)).
     @the wide An-1 is that both width and length >5um.
     a3_gt_5=SIZE A3_drc BY 2.5 UNDEROVER
     a3_gt_10=SIZE a3_gt_5 BY 5
     a4_inwide=AND A4_drc a3_gt_10
     L1001=EXTERNAL a4_inwide < A4_j_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A4.l.guid {
     @A4.l.guid: Recommended Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 5 um, and the projection length (L) > 5 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A2/A4/A5, or A4/A5/A6 , and so on) >= ^A4_l_guid
  A4OverlapBig = (SIZE A4OverlapR BY 2.5 UNDEROVER TRUNCATE 2.5) AND A4OverlapR
  W = EXT A4OverlapBig A4OverlapR < A4_l_guid OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A3_drc
  Y = X NOT INSIDE A4_drc
  Y1 = Y NOT INSIDE A5_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 5.005 
  NOT INSIDE L1001 EXCL_N
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.13.4 Via4 (W5)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE W5_a1	0.17
VARIABLE W5_a2	0.115
//;W5_a2_ext defined for W5_a2/2 can meet the calibre request (0.001)
VARIABLE W5_a2_ext	0.001
VARIABLE W5_b	0.195
VARIABLE W5_b1	0.26
VARIABLE W5_c	0.005
VARIABLE W5_c_guid	0.05
VARIABLE W5_c_guid2	0.18
VARIABLE W5_c1	0.045
VARIABLE W5_c1_guid	0.08

GROUP GW5
    W5.c.guid
    W5.c.guid2
    W5.c1.guid

W5.a.1 {
     @W5.a.1: Min & Max W5 size must be == ^W5_a1 um.
     tmp=NOT RECTANGLE W5_drc == W5_a1 BY == W5_a1 ORTHOGONAL ONLY
     L1001=NOT tmp via_exd
     NOT INSIDE L1001 EXCL_N
}

w5_sealring=AND W5_drc SEALRING_mark
W5.a.2 {
     @W5.a.2: Min. & Max. W5 width of W5 bar must be == ^W5_a2 um,W5 bar is only allowed in seal ring
     L1001=INTERNAL w5_sealring < W5_a2 REGION SINGULAR ABUT<90
     L1002=SIZE w5_sealring BY ( W5_a2 + W5_a2_ext ) / 2 UNDEROVER
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
}

W5.b {
     @W5.b: Min W5 space msut be >= ^W5_b um
     L1001=EXTERNAL W5_drc < W5_b SINGULAR REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

VARIABLE w5_b1_param ( ( 3 - 1 ) * W5_a1 + ( 3 - 2 ) * 0.31 ) / 2
W5.b1 {
     @W5.b1: Min W5 space in W5 array must be >= ^W5_b1 (W5 number>=3x3(row and column>=3) with space<=0.31um) 
     w5Merge=SIZE W5_drc BY 0.31/2 OVERUNDER     // space <= 0.31 um treated as array
     MinArray=SIZE w5Merge BY w5_b1_param UNDEROVER    // ((3-1)*0.19+(3-2)*0.31)/2)=0.345
     w5Array=INTERACT MinArray W5_drc >= 3*3    // get array larger than or equal to 3x3 
     w5InArray=INTERACT W5_drc w5Array
     EXT (w5InArray NOT INSIDE EXCL_N) < W5_b1 ABUT <90 
}

W5.c {
     @W5.c: Min extension of A4 beyond W5 must be >= ^W5_c um
     L1001=ENCLOSURE W5_drc A4_drc < W5_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

W5.c1 {
     @W5.c1: Min extension of A4 end of line region beyond W5 must be >= ^W5_c1 um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W5_drc A4_drc ABUT>0<90 
     GOOD W5_c W5_c1 OPPOSITE W5_c W5_c1 OPPOSITE
     Y = ENC [X] A4_drc < W5_c1 ABUT < 90 OPPOSITE
     Z = (W5_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W5_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

// W5.d is checked by W5.a
// W5.e has no need check.

W5.c.guid {
     @W5.c.guid: Recommended Min extension of A4 beyond W5 is ^W5_c_guid um
     L1001=ENCLOSURE W5_drc A4_drc < W5_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

W5.c.guid2 {
     @W5.c.guid2: Recommended Min extension of A4 (width >10um) beyond W5 region is ^W5_c_guid2 um 
     L1001 = SIZE A4_drc BY 5 UNDEROVER
     L1002 = L1001 COIN EDGE A4_drc
     L1003 = ENC W5_drc L1002 < W5_c_guid2 ABUT<90 REGION
     NOT INSIDE L1003 EXCL     
}

W5.c1.guid {
     @W5.c1.guid: Recommended Min extension of A4 end of line region beyond W5 is ^W5_c1_guid um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE W5_drc A4_drc ABUT>0<90 
     GOOD W5_c_guid W5_c1_guid OPPOSITE W5_c_guid W5_c1_guid OPPOSITE
     Y = ENC [X] A4_drc < W5_c1_guid ABUT<90 OPPOSITE
     Z = (W5_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W5_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.14.4 Metal 5 (A5)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE A5_a	0.18
VARIABLE A5_a1	0.215
VARIABLE A5_b	0.185
VARIABLE A5_c	0.005
VARIABLE A5_c_guid	0.05
VARIABLE A5_c1	0.045
VARIABLE A5_c1_guid	0.08
VARIABLE A5_d1	0.45
VARIABLE A5_d2	0.45
VARIABLE A5_d3	0.225
VARIABLE A5_e	0.225
VARIABLE A5_f	0.215
VARIABLE A5_g_guid	0.350
VARIABLE A5_h	0.117
VARIABLE A5_i	0.215
VARIABLE A5_j_guid	0.3
VARIABLE A5_k	0.22
VARIABLE A5_l	0.9
VARIABLE A5_l_guid	0.6

GROUP GA5
   A5.c.guid
   A5.c1.guid
   A5.g.guid
   A5.j.guid
   A5.l.guid

a5_edge_45=ANGLE A5_drc == 45
a5_edge_45l=LENGTH a5_edge_45 >=0.5

A5.a {
     @A5.a: Min width of A5 region must be >= ^A5_a um
     tmp=INTERNAL A5_drc < A5_a REGION SINGULAR ABUT<90 
     L1001=NOT tmp INDUM_mark
     NOT INSIDE L1001 EXCL_N
}

A5.a1 {
     @A5.a1: Min width of 45 degree bent metal must be >= ^A5_a1 um if the bent metal length is >=0.5um
     L1001=INTERNAL a5_edge_45l < A5_a1 REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A5.b {
     @A5.b: Min space of A5 region must be >= ^A5_b um
     L1001=EXTERNAL A5_drc < A5_b REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

A5.c {
     @A5.c: Min extension of A5 beyond W5 region must be >= ^A5_c um
     L1001=ENCLOSURE W5_drc A5_drc < A5_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A5.c1 {
     @A5.c1: Min extension of A5 end of line region beyond W5 (at least two opposite sides) must be >= ^A5_c1 um
     X = RECTANGLE ENCLOSURE W5_drc A5_drc ABUT>0<90 
     GOOD A5_c A5_c1 OPPOSITE A5_c A5_c1 OPPOSITE
     Y = ENC [X] A5_drc < A5_c1 ABUT<90 OPPOSITE
     Z = (W5_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W5_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A5.d {
     @A5.d: Min space between metal lines must be >= ^A5_d1 um with one or both metal line width and length >=10um;
     @Min space between metal line and a small piece of metal(<10um) must be >= ^A5_d2 um 
     @that is connected to the wide metal within 1.0 range from the wide metal.
     A5_S5 = SHRINK (SHRINK (SHRINK (SHRINK A5Wide7 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A5_G5 = GROW (GROW (GROW (GROW A5_S5 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     A5_Wide = A5_G5 AND A5_drc

     A5_Exp = SIZE A5_Wide BY 1 INSIDE OF A5_drc STEP 0.147
     A5_Branch = A5_Exp NOT A5_Wide
     A5_Branch_edge = A5_Branch COIN INSIDE EDGE A5_drc
     A5_Check = A5_drc AND (SIZE A5_Exp BY A5_d2)
     A5_Else = A5_Check NOT INTERACT A5_Exp
     A5_Extend = A5_Check NOT A5_Exp 

     L1001=EXT A5_Wide A5_Else < A5_d1 ABUT >0 <89.5 REGION
     L1002=EXT A5_Branch_edge A5_Else < A5_d2 ABUT >0 <89.5 OPPOSITE REGION
     L1003=EXT A5_Branch_edge A5_Else < A5_d2 ABUT >0 <89.5 CORNER REGION
     L1004=EXT A5_Branch_edge A5_Else < A5_d2 ABUT >0 <89.5 PROJ==0 REGION
     A = EXT A5_Exp < A5_d1 ABUT > 0 < 89.5 SPACE REGION
     L1005=A NOT INTERACT A5_Extend
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
     NOT INSIDE L1003 EXCL_N
     NOT INSIDE L1004 EXCL_N
     NOT INSIDE L1005 EXCL_N
}

A5.d3 {
     @A5.d3: Min space between metal lines must be >= ^A5_d3 um with one or both metal line width and length >=2um;
     A5_S5 = SHRINK (SHRINK (SHRINK (SHRINK A5_drc RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A5_G5 = GROW (GROW (GROW (GROW A5_S5 RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     A5_Wide = A5_G5 AND A5_drc

     L1001=EXT A5_Wide A5_drc < A5_d3 ABUT >0 <89.5 REGION
     NOT INSIDE L1001 EXCL_N
}

A5.e {
     @A5.e: Min space between two metal line must be >= ^A5_e um with at least one metal line width is>=0.4um and the parallel run length is >=1.0um
     X = (EXT A5Wide0.4 A5_drc < A5_e OPPOSITE REGION MEASURE ALL) NOT INSIDE EXCL_N
     Y = ENCLOSE RECTANGLE X 0.005 1.00
     WideEdge = COIN OUTSIDE EDGE Y A5Wide0.4
     PATH LENGTH WideEdge >= 1
}

A5.h {
     @A5.h: Min area must be >= ^A5_h um2
     AREA A5_drc < A5_h
}

A5.f {
     @A5.f: Min space between 45 degree bent metal must be >= ^A5_f um (the bent metal length is >=0.5um).
     L1001=EXTERNAL A5_drc a5_edge_45l < A5_f REGION ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A5.i {
     @A5.i: Min enclosure area must be >= ^A5_i um2.
     A5_hole=HOLES A5_drc INNER
     AREA A5_hole < A5_i
}

#IFDEF metal6_process

A5.l {
     @A5.l: Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 7 um, and the projection length (L) > 7 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A4/A4/A5, or A4/A5/A6 , and so on) >= ^A5_l 
  A5OverlapBig = (SIZE A5Overlap BY 3.5 UNDEROVER TRUNCATE 3.5) AND A5Overlap
  W = EXT A5OverlapBig A5Overlap < A5_l OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A4_drc
  Y = X NOT INSIDE A5_drc
  Y1 = Y NOT INSIDE AT_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 7.005 
  NOT INSIDE L1001 EXCL_N
}

#ENDIF

#IFDEF thickmetal6_process

A5.l {
     @A5.l: Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 7 um, and the projection length (L) > 7 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A4/A4/A5, or A4/A5/A6 , and so on) >= ^A5_l 
  A5OverlapBig = (SIZE A5Overlap_TT BY 3.5 UNDEROVER TRUNCATE 3.5) AND A5Overlap_TT
  W = EXT A5OverlapBig A5Overlap_TT < A5_l OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A4_drc
  Y = X NOT INSIDE A5_drc
  Y1 = Y NOT INSIDE TT_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 7.005 
  NOT INSIDE L1001 EXCL_N
}

#ENDIF

A5.c.guid {
     @A5.c.guid: Min extension of A5 beyond W5 region must be >= ^A5_c_guid um
     L1001=ENCLOSURE W5_drc A5_drc < A5_c_guid REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

A5.c1.guid {
     @A5.c1.guid: Recommended Min extension of A5 end of line region beyond W5 (at least two opposite sides) is ^A5_c1_guid um
     X = RECTANGLE ENCLOSURE W5_drc A5_drc ABUT>0<90 
     GOOD A5_c_guid  A5_c1_guid OPPOSITE A5_c_guid A5_c1_guid OPPOSITE
     Y = ENC [X] A5_drc < A5_c1_guid ABUT<90 OPPOSITE
     Z = (W5_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < W5_a1 ABUT == 90 INTERSECTING ONLY   // adjacent narrow sides
}

A5.g.guid {
     @A5.g.guid: Recommended Min space between non-A5 regions is ^A5_g_guid um(one of non-A5 regions>4,000,000um2).
     @non-A5 region is (not(A5 or A5 dummy)).   
     non_a5=NOT bulk ALL_A5
     X=AREA non_a5 > 4000000
     L1001=EXTERNAL X non_a5< A5_g_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

A5.j.guid {
     @A5.j.guid: Recommended An space is ^A5_j_guid um when An is within(An and (wide An-1 size 5)).
     @the wide An-1 is that both width and length >5um.
     a4_gt_5=SIZE A4_drc BY 2.5 UNDEROVER
     a4_gt_10=SIZE a4_gt_5 BY 5
     a5_inwide=AND A5_drc a4_gt_10
     L1001=EXTERNAL a5_inwide < A5_j_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

#IFDEF metal6_process

A5.l.guid {
     @A5.l.guid: Recommended Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 5 um, and the projection length (L) > 5 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A2/A4/A5, or A4/A5/A6 , and so on) >= ^A5_l_guid
  A5OverlapBig = (SIZE A5OverlapR BY 2.5 UNDEROVER TRUNCATE 2.5) AND A5OverlapR
  W = EXT A5OverlapBig A5OverlapR < A5_l_guid OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A4_drc
  Y = X NOT INSIDE A5_drc
  Y1 = Y NOT INSIDE AT_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 5.005 
  NOT INSIDE L1001 EXCL_N
}

#ENDIF

#IFDEF thickmetal6_process

A5.l.guid {
     @A5.l.guid: Recommended Min. space of two adjacent stacked metal (metal layers >= 3) [both length and width of (either A or B) > 5 um, and the projection length (L) > 5 um] The stacked metal layers >= 3 mean that the overlapped area contains >= 3 consecutive metal layers. (For example: A2/A4/A5, or A4/A5/A6 , and so on) >= ^A5_l_guid
  A5OverlapBig = (SIZE A5OverlapR_TT BY 2.5 UNDEROVER TRUNCATE 2.5) AND A5OverlapR_TT
  W = EXT A5OverlapBig A5OverlapR_TT < A5_l_guid OPPOSITE MEASURE ALL REGION
  X = W NOT INSIDE A4_drc
  Y = X NOT INSIDE A5_drc
  Y1 = Y NOT INSIDE TT_drc
  L1001=ENCLOSE RECTANGLE Y1 0.005 5.005 
  NOT INSIDE L1001 EXCL_N
}

#ENDIF

ATWide0.4 = (SIZE AT_drc BY 0.199 UNDEROVER TRUNCATE 0.199) AND AT_drc
ATWide1.4 = (SIZE ATWide0.4 BY 0.7 UNDEROVER TRUNCATE 0.7) AND ATWide0.4
ATWide1.8 = (SIZE ATWide1.4 BY 0.9 UNDEROVER TRUNCATE 0.9) AND ATWide1.4
ATWide7   = (SIZE ATWide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND ATWide1.4
ATStack   = (SIZE ATWide7 BY 1.1) AND AT_drc
A5Overlap = A5OvpA4 AND ATStack

ATWide5   = (SIZE ATWide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND ATWide1.4
ATStackR  = (SIZE ATWide5 BY 1.1) AND AT_drc
A5OverlapR= A5OvpA4R AND ATStackR

TTWide0.4 = (SIZE TT_drc BY 0.199 UNDEROVER TRUNCATE 0.199) AND TT_drc
TTWide1.4 = (SIZE TTWide0.4 BY 0.7 UNDEROVER TRUNCATE 0.7) AND TTWide0.4
TTWide1.8 = (SIZE TTWide1.4 BY 0.9 UNDEROVER TRUNCATE 0.9) AND TTWide1.4
TTWide7   = (SIZE TTWide1.4 BY 3.5 UNDEROVER TRUNCATE 3.5) AND TTWide1.4
TTStack   = (SIZE TTWide7 BY 1.1) AND TT_drc
A5Overlap_TT = A5OvpA4 AND TTStack

TTWide5   = (SIZE TTWide1.4 BY 2.5 UNDEROVER TRUNCATE 2.5) AND TTWide1.4
TTStackR  = (SIZE TTWide5 BY 1.1) AND TT_drc
A5OverlapR_TT= A5OvpA4R AND TTStackR

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.13.7 Top Via (WT)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE WT_a1	0.32
VARIABLE WT_a2	0.25
//;WT_a2_ext defined for WT_a2/2 can meet the calibre request (0.001)
VARIABLE WT_a2_ext	0.000
VARIABLE WT_b	0.315
VARIABLE WT_b1	0.485
VARIABLE WT_c	0.005
VARIABLE WT_c1	0.045
VARIABLE WT_c1_guid	0.08
VARIABLE WT_f	1.7

GROUP GWT
    WT.c1.guid

WT.a.1 {
     @WT.a.1: Min & Max WT size must be == ^WT_a1 um.
     tmp=NOT RECTANGLE WT_drc == WT_a1 BY == WT_a1 ORTHOGONAL ONLY
     L1001=NOT tmp via_exd
     NOT INSIDE L1001 EXCL_N
}

wt_sealring=AND WT_drc SEALRING_mark
WT.a.2 {
     @WT.a.2: Min. & Max. WT width of WT bar must be == ^WT_a2 um,WT bar is only allowed in seal ring      
     L1001=INTERNAL wt_sealring < WT_a2 REGION SINGULAR ABUT<90
     L1002=SIZE wt_sealring BY ( WT_a2 + WT_a2_ext ) /2  UNDEROVER
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
}

WT.b {
     @WT.b: Min WT space msut be >= ^WT_b um
     L1001=EXTERNAL WT_drc < WT_b SINGULAR REGION ABUT<90 
     NOT INSIDE L1001 EXCL_N
}

VARIABLE wt_b1_param ( ( 3 - 1 ) * WT_a1 + ( 3 - 2 ) * 0.56 ) / 2
WT.b1 {
     @WT.b1: Min WT space in WT array must be >= ^WT_b1 um (WT number>=3x3(row and column>=3) with space<=0.56um) 
     wtMerge=SIZE WT_drc BY 0.56/2 OVERUNDER     // space <= 0.56 um treated as array
     MinArray=SIZE wtMerge BY wt_b1_param UNDEROVER    // ((3-1)*0.36+(3-2)*0.56)/2=0.64
     wtArray=INTERACT MinArray WT_drc >= 3*3    // get array larger than or equal to 3x3 
     wtInArray=INTERACT WT_drc wtArray
     EXT (wtInArray NOT INSIDE EXCL_N) < WT_b1 ABUT <90 
}

WT.c {
     @WT.c: Min extension of A5 beyond WT must be >= ^WT_c um
     L1001=ENCLOSURE WT_drc A5_drc < WT_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

WT.c1 {
     @WT.c1: Min extension of A5 end of line region beyond WT must be >= ^WT_c1 um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE WT_drc A5_drc ABUT>0<90 
     GOOD WT_c WT_c1 OPPOSITE WT_c WT_c1 OPPOSITE
     Y = ENC [X] A5_drc < WT_c1 ABUT < 90 OPPOSITE
     Z = (WT_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < WT_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

WT.c1.guid {
     @WT.c1.guid: Recommended Min extension of A5 end of line region beyond WT is ^WT_c1_guid um (at least 2 opposite sides) 
     X = RECTANGLE ENCLOSURE WT_drc A5_drc ABUT>0<90 
     GOOD WT_c WT_c1_guid OPPOSITE WT_c WT_c1_guid OPPOSITE
     Y = ENC [X] A5_drc < WT_c1_guid ABUT<90 OPPOSITE
     Z = (WT_drc NOT INSIDE EXCL_N) TOUCH EDGE Y
     INT Z < WT_a1 ABUT==90 INTERSECTING ONLY   // adjacent narrow sides
}

// WT.d is checked by WT.a
// WT.e has no need check.

#IFDEF metal6_process

WT.f {
     @WT.f: At least top via,with space <= ^WT_f um, are required to connect top metal and top-1 metal, if either of them has both width and length >1.8um.
//for wide M5
  via_exc = (WT_drc NOT via_exd) NOT CT_drc
  AOvp = AT_drc AND A5_drc
  OvpOnA5W = AOvp NOT OUTSIDE A5Wide1.8
  VIA_Check1 = via_exc INTERACT OvpOnA5W 

  Merge1OnA5W = SIZE VIA_Check1 BY WT_f / 2 INSIDE OF OvpOnA5W STEP 0.1
  GoodRegion1 = Merge1OnA5W ENCLOSE VIA_Check1 >= 2
  GoodVIA1 = (VIA_Check1 INTERACT GoodRegion1) NOT OUTSIDE A5Wide1.8
  A1Check = (A5Wide1.8 AND OvpOnA5W) NOT INTERACT GoodVIA1 
  L1001=VIA_Check1 NOT OUTSIDE A1Check
  NOT INSIDE L1001 EXCL_N
  
//for wide AT
  OvpOnATW = AOvp NOT OUTSIDE ATWide1.8
  VIA_Check2 = via_exc INTERACT OvpOnATW 
    
  Merge1OnATW = SIZE VIA_Check2 BY WT_f / 2 INSIDE OF OvpOnATW STEP 0.1
  GoodRegion3 = Merge1OnATW ENCLOSE VIA_Check2 >= 2
  GoodVIA3 = (VIA_Check2 INTERACT GoodRegion3) NOT OUTSIDE ATWide1.8
  A2Check = (ATWide1.8 AND OvpOnATW) NOT INTERACT GoodVIA3 
  L1002=VIA_Check2 NOT OUTSIDE A2Check  
  NOT INSIDE L1002 EXCL_N
}

#ENDIF

#IFDEF thickmetal6_process

WT.f {
     @WT.f: At least top via,with space <= ^WT_f um, are required to connect top metal and top-1 metal, if either of them has both width and length>1.8um.
//for wide M5
  via_exc = (WT_drc NOT via_exd) NOT CT_drc
  AOvp = TT_drc AND A5_drc
  OvpOnA5W = AOvp NOT OUTSIDE A5Wide1.8
  VIA_Check1 = via_exc INTERACT OvpOnA5W 

  Merge1OnA5W = SIZE VIA_Check1 BY WT_f / 2 INSIDE OF OvpOnA5W STEP 0.1
  GoodRegion1 = Merge1OnA5W ENCLOSE VIA_Check1 >= 2
  GoodVIA1 = (VIA_Check1 INTERACT GoodRegion1) NOT OUTSIDE A5Wide1.8
  A1Check = (A5Wide1.8 AND OvpOnA5W) NOT INTERACT GoodVIA1 
  L1001=VIA_Check1 NOT OUTSIDE A1Check
  NOT INSIDE L1001 EXCL_N
  
//for wide TT
  OvpOnATW = AOvp NOT OUTSIDE TTWide1.8
  VIA_Check2 = via_exc INTERACT OvpOnATW 
    
  Merge1OnATW = SIZE VIA_Check2 BY WT_f / 2 INSIDE OF OvpOnATW STEP 0.1
  GoodRegion3 = Merge1OnATW ENCLOSE VIA_Check2 >= 2
  GoodVIA3 = (VIA_Check2 INTERACT GoodRegion3) NOT OUTSIDE TTWide1.8
  A2Check = (TTWide1.8 AND OvpOnATW) NOT INTERACT GoodVIA3 
  L1002=VIA_Check2 NOT OUTSIDE A2Check  
  NOT INSIDE L1002 EXCL_N
}

#ENDIF

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.17 Bound Pad Rules (CP)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE CP_a	65
VARIABLE CP_b1	2.0
VARIABLE CP_b2	5.0
VARIABLE CP_c	3.0
VARIABLE CP_d	0.17
VARIABLE CP_e	0.32
VARIABLE CP_f	0.45
VARIABLE CP_g	0.35
VARIABLE CP_h	0.13

GROUP GCP_Rule CP.?

w2_pad=AND W2_drc CP_drc
w3_pad=AND W3_drc CP_drc
w4_pad=AND W4_drc CP_drc
w5_pad=AND W5_drc CP_drc
wt_pad=AND WT_drc CP_drc

CP.a {
     @CP.a: Min PAD opening must be >= ^CP_a um x ^CP_a um.
     L1001=INTERNAL CP_drc < CP_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.a1 {
     @CP.b.a1: Min & Max extension of A1 beyond PAD must be >= ^CP_b1 um.
     L1001=ENCLOSURE CP_drc A1_drc < CP_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.a2 {
     @CP.b.a2: Min & Max extension of A2 beyond PAD must be >= ^CP_b1 um.
     L1001=ENCLOSURE CP_drc A2_drc < CP_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.a3 {
     @CP.b.a3: Min & Max extension of A3 beyond PAD must be >= ^CP_b1 um.
     L1001=ENCLOSURE CP_drc A3_drc < CP_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.a4 {
     @CP.b.a4: Min & Max extension of A4 beyond PAD must be >= ^CP_b1 um.
     L1001=ENCLOSURE CP_drc A4_drc < CP_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.a5 {
     @CP.b.a5: Min & Max extension of A5 beyond PAD must be >= ^CP_b1 um.
     L1001=ENCLOSURE CP_drc A5_drc < CP_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.at {
     @CP.b.at: Min extension of AT beyond PAD must be >= ^CP_b1 um.
     L1001=ENCLOSURE CP_drc AT_drc < CP_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.b.tt {
     @CP.b.tt: Min extension of TT beyond PAD must be >= ^CP_b2 um.
     L1001=ENCLOSURE CP_drc TT_drc < CP_b2 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.c.w2 {
     @CP.c.w2: Min extension of PAD beyond W2 must be >= ^CP_c um
     L1001=ENCLOSURE w2_pad CP_drc < CP_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.c.w3 {
     @CP.c.w3: Min extension of PAD beyond W3 must be >= ^CP_c um
     L1001=ENCLOSURE w3_pad CP_drc < CP_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.c.w4 {
     @CP.c.w4: Min extension of PAD beyond W4 must be >= ^CP_c um
     L1001=ENCLOSURE w4_pad CP_drc < CP_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.c.w5 {
     @CP.c.w5: Min extension of PAD beyond W5 must be >= ^CP_c um
     L1001=ENCLOSURE w5_pad CP_drc < CP_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.c.wt {
     @CP.c.wt: Min extension of PAD beyond WT must be >= ^CP_c um
     L1001=ENCLOSURE wt_pad CP_drc < CP_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.d.w2 {
     @CP.d.w2: Min & Max width of W2 in PAD must be == ^CP_d um
     L1001=NOT RECTANGLE w2_pad == CP_d BY == CP_d ORTHOGONAL ONLY
     NOT INSIDE L1001 EXCL
}

CP.d.w3 {
     @CP.d.w3: Min & Max width of W3 in PAD must be == ^CP_d um
     L1001=NOT RECTANGLE w3_pad == CP_d BY == CP_d ORTHOGONAL ONLY
     NOT INSIDE L1001 EXCL
}

CP.d.w4 {
     @CP.d.w4: Min & Max width of W4 in PAD must be == ^CP_d um
     L1001=NOT RECTANGLE w4_pad == CP_d BY == CP_d ORTHOGONAL ONLY
     NOT INSIDE L1001 EXCL
}

CP.d.w5 {
     @CP.d.w5: Min & Max width of W5 in PAD must be == ^CP_d um
     L1001=NOT RECTANGLE w5_pad == CP_d BY == CP_d ORTHOGONAL ONLY
     NOT INSIDE L1001 EXCL
}

CP.e.wt {
     @CP.d.wt: Min & Max width of WT in PAD must be == ^CP_e um
     L1001=NOT RECTANGLE wt_pad == CP_e BY == CP_e ORTHOGONAL ONLY
     NOT INSIDE L1001 EXCL
}

CP.f.w2 {
     @CP.f.w2: Min spacing among W2 in PAD must be >= ^CP_f um
     L1001=EXTERNAL w2_pad < CP_f REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.f.w3 {
     @CP.f.w3: Min spacing among W3 in PAD must be >= ^CP_f um
     L1001=EXTERNAL w3_pad < CP_f REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.f.w4 {
     @CP.f.w4: Min spacing among W4 in PAD must be >= ^CP_f um
     L1001=EXTERNAL w4_pad < CP_f REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.f.w5 {
     @CP.f.w5: Min spacing among W5 in PAD must be >= ^CP_f um
     L1001=EXTERNAL w5_pad < CP_f REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.g.wt {
     @CP.g.wt: Min space of WT must be >= ^CP_g um
     L1001=EXTERNAL wt_pad WT_drc < CP_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CP.h.w246_35 {
     @CP.h.w24_35: Min space between Via1 to Via2,4,6 must be >= ^CP_h um
     L1001=EXTERNAL w2_pad w3_pad < CP_h REGION SINGULAR ABUT<90
     L1002=EXTERNAL w2_pad w5_pad < CP_h REGION SINGULAR ABUT<90
     L1004=EXTERNAL w4_pad w3_pad < CP_h REGION SINGULAR ABUT<90
     L1005=EXTERNAL w4_pad w5_pad < CP_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
     NOT INSIDE L1004 EXCL
     NOT INSIDE L1005 EXCL
}

CP.i {
    @CP.i:CP must be fully covered by AT/TT except Seal ring area.

    INTERACT ATSLOT_slot_drc CP_drc
    INTERACT TTSLOT_slot_drc CP_drc

    CUT CP_drc AT_drc
    CUT CP_drc TT_drc
}

// ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//         II. Mixed-Signal/RF layer layout design rule
// ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.18 Deep-NWell (DN)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE DN_a	3.0	
VARIABLE DN_b	5.0
VARIABLE DN_c	1.5
VARIABLE DN_d	2.0
VARIABLE DN_e	3.5
VARIABLE DN_f	1.0
VARIABLE DN_g	1.2
VARIABLE DN_h	3.0

dpw=DN_drc AND tb_hole
DN.a {
     @DN.a: Min. width of DNW must be >= ^DN_a um
     L1001=INTERNAL DN_drc < DN_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

DN.b {
     @DN.b: Min. spacing of DNW to DNW must be >= ^DN_b um
     L1001=EXTERNAL DN_drc < DN_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

DN.c {
     @DN.c: Min. extension of NW beyond DNW must be >= ^DN_c um
     L1001=ENCLOSURE DN_drc TB_drc < DN_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

DN.d {
     @DN.d: Min overlap of NW and DNW must be >= ^DN_d um
     L1001=INTERNAL TB_drc DN_drc< DN_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

DN.e {
     @DN.e: Min clearance from DNW to unrelated NW must be >= ^DN_e um
     L1001=EXTERNAL TB_drc DN_drc < DN_e OPPOSITE MEASURE ALL REGION
     L1002=EXTERNAL TB_drc DN_drc < DN_e CORNER MEASURE ALL REGION
     L1003=EXTERNAL TB_drc DN_drc < DN_e PROJ == 0 MEASURE ALL REGION
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
     NOT INSIDE L1003 EXCL
}

X=STAMP dpw BY pwell
DN.f {
     @DN.f: Min clearance from RW to (RW or PT) with different potential must be >= ^DN_f um
     L1001=EXTERNAL X < DN_f REGION NOT CONNECTED SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL
}

DN.g {
     @DN.g: Min clearance from (RW or PT) to (RW interact with HV) with different potential must be >= ^DN_g um
     hvx=INTERACT X HV_drc
     L1001=EXTERNAL X hvx < DN_g REGION NOT CONNECTED SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

DN.h: {
      @DN.h: Min clearance from N+TO to DNW (DNW cut N+TO is not allowed) must be >= ^DN_h um
      L1001=EXTERNAL ndiff DN_drc < DN_h REGION SINGULAR ABUT<90
      NOT INSIDE L1001 EXCL
      CUT ndiff DN_drc
}

DN.k {
     @DN.k: DN must be surrounded by TB.
     OUTSIDE EDGE DN_drc TB_drc
}

//; DN.i / DN.j / DN.l do not check
//; DN.m / DN.n checked in LVS

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.19 P-well Block layer(PWB) (Native NMOS Blocked Implant Definition)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE PWB_a	1.52
VARIABLE PWB_a1	2
VARIABLE PWB_b1	0.5
VARIABLE PWB_b2	1.2
VARIABLE PWB_b3	1.6
VARIABLE PWB_c	0.62
VARIABLE PWB_c1	1.0
VARIABLE PWB_d	0.26
VARIABLE PWB_d1	0.4
VARIABLE PWB_e	0.38
VARIABLE PWB_e1	0.9
VARIABLE PWB_f	1.2
VARIABLE PWB_f1	1.66
VARIABLE PWB_g	0.35

nat_to=AND TO_drc PWB_drc
nat_gt=AND GT_drc PWB_drc
nat_gate_w=INSIDE EDGE nat_gt nat_to
hvnat_gate_w=INSIDE EDGE nat_gate_w HV_drc
5v_nat_gate_w=INSIDE EDGE nat_gate_w SPW_drc

PWB.a {
     @PWB.a: Min width of PWB region must be >= ^PWB_a um
     L1001=INTERNAL PWB_drc < PWB_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

PWB.a1 {
     @PWB.1: Min width of PWB region for 5V/Quasi_HV ZMOS must be >= ^PWB_a1 um
     L1001=PWB_drc INTERACT ngate5
     L1002=INTERNAL L1001 < PWB_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1002 EXCL
}

PWB.b1 {
     @PWB.b1: Min GT gate dimension(channel length) of 1.5V native device must be >= ^PWB_b1 um
     L1001=INTERNAL nat_gate_w < PWB_b1 REGION ABUT<90
     NOT INSIDE L1001 EXCL
}

PWB.b2 {
      @PWB.b2: Min GT gate dimension(channel length) of 3.3V native device must be >= ^PWB_b2 um
      L1001=INTERNAL hvnat_gate_w < PWB_b2 REGION ABUT<90
      NOT INSIDE L1001 EXCL
}

PWB.b3 {
      @PWB.b3: Min GT gate dimension(channel length) of 5V/Quasi_HV native device must be >= ^PWB_b3 um
      L1001=INTERNAL 5v_nat_gate_w < PWB_b3 REGION ABUT<90
      NOT INSIDE L1001 EXCL
}

PWB.c {
     @PWB.c: Min space between two PWB regions not in SPW for same potential >= ^PWB_c um
     L1001=EXTERNAL (PWB_drc OUTSIDE SPW_drc) < PWB_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

PWB.c1 {
     @PWB.c1: Min space between two PWB regions in same SPW >= ^PWB_c1 um
     L1001=(EXTERNAL PWB_drc < PWB_c1 REGION SINGULAR ABUT<90) INSIDE SPW_drc
     NOT INSIDE L1001 EXCL
}

pwb_no_spw=PWB_drc NOT SPW_drc

PWB.d {
      @PWB.d: Min. and Max. extension of an PWBLK region beyond an N+TO region must be == ^PWB_d um.
      pwb_to=INTERACT pwb_no_spw TO_drc
      to_pwb=INTERACT TO_drc pwb_no_spw 
      to_pwb026=SIZE to_pwb BY PWB_d
      pwb_to026=SIZE pwb_to BY -PWB_d
      L1001=pwb_to XOR to_pwb026
      L1002= to_pwb XOR pwb_to026
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
}

pwb_spw=PWB_drc INSIDE SPW_drc
PWB.d1 {
      @PWB.d1: Min. and Max. extension of an PWBLK region in SPW beyond an N+TO region must be == ^PWB_d1 um.
      pwb_to=INTERACT pwb_spw TO_drc
      to_pwb=INTERACT TO_drc pwb_spw
      to_pwb04=SIZE to_pwb BY PWB_d1
      pwb_to04=SIZE pwb_to BY -PWB_d1
      L1001=pwb_to XOR to_pwb04
      L1002= to_pwb XOR pwb_to04
      NOT INSIDE L1001 EXCL
      NOT INSIDE L1002 EXCL
}

PWB.e {
      @PWB.e: Min clearance from PWBLK region to nominal TO region must be >= ^PWB_e um
      L1001=EXTERNAL PWB_drc TO_drc < PWB_e REGION SINGULAR ABUT<90 OVERLAP
      NOT INSIDE L1001 EXCL
}

PWB.e1 {
      @PWB.e1: Min clearance from PWBLK region in SPW to nominal TO region must be >= ^PWB_e1 um
      L1001=EXTERNAL pwb_spw TO_drc < PWB_e1 REGION SINGULAR ABUT<90 OVERLAP
      NOT INSIDE L1001 EXCL
}

PWB.f {
      @PWB.f: Min clearance from PWBLK region to an N well edge(overlap is not allowed) must be >= ^PWB_f um
      L1001=EXTERNAL PWB_drc TB_drc < PWB_f REGION SINGULAR ABUT<90 INSIDE ALSO
      NOT INSIDE L1001 EXCL
}

PWB.f1 {
      @PWB.f1: Min clearance from PWBLK region in SPW to an N well edge(overlap is not allowed) must be >= ^PWB_f1 um
      L1001=EXTERNAL pwb_spw TB_drc < PWB_f1 REGION SINGULAR ABUT<90 INSIDE ALSO
      NOT INSIDE L1001 EXCL
}

PWB.g {
     @PWB.g: Min overlap of GT region with a native device extended into STI(end cap) must be >= ^PWB_g um
     L1001=ENCLOSURE nat_to GT_drc < PWB_g REGION SINGULAR ABUT<90 
     NOT INSIDE L1001 EXCL
}

PWB.h {
      @PWB.h: PWBLK inside or cross over DNW is not allowed.
      AND PWB_drc DN_drc
}

PWB.i {
      @PWB.i: PWBLK inside or cross over TB is not allowed.
      AND PWB_drc TB_drc
}

PWB.j {
      @PWB.i: Only one TO is allowed to put in an PWBLK region(except for NMOS capacitors with same potential).
     L1001=ENCLOSE PWB_drc TO_drc >1
     NOT INSIDE L1001 EXCL
}

PWB.k {
      @PWB.k: P+TO is not allowed to put in an PWBLK region.
      AND pdiff PWB_drc
}

PWB.l {
     @PWB.l: Bend GT region is not allowed to put in PWB region
     gt_pwb=INSIDE EDGE nat_gate_w PWB_drc
     EXTERNAL gt_pwb < 0.01 ABUT == 135 REGION
     EXTERNAL gt_pwb < 0.01 ABUT == 90 REGION
     EXTERNAL gt_pwb < 0.01 ABUT == 45 REGION
     INTERNAL gt_pwb < 0.01 ABUT == 135 REGION
     INTERNAL gt_pwb < 0.01 ABUT == 90 REGION
     INTERNAL gt_pwb < 0.01 ABUT == 45 REGION
}

//;; PWB.m checked in PWB.d

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.20 Ultra high Nwell (SNW)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE SNW_a	1.0
VARIABLE SNW_b	3.0
VARIABLE SNW_c	3.0
VARIABLE SNW_d	3.0
VARIABLE SNW_e	1.66
VARIABLE SNW_f	0.62
VARIABLE SNW_g	3.0
VARIABLE SNW_h	0.44
VARIABLE SNW_i	1.2 
VARIABLE SNW_j	0.32
VARIABLE SNW_k	0.08

SNW.a {
     @SNW.a:Min SNW width must be >= ^SNW_a um
     L1001=INT SNW_drc < SNW_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.b {
     @SNW.b:Min space of SNW must be >= ^SNW_b um
     L1001=EXT SNW_drc < SNW_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.c {
     @SNW.c:Min clearance from SNW to TB must be >= ^SNW_c um
     L1001=EXT SNW_drc TB_drc < SNW_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.d {
     @SNW.d:Min clearance from SNW to DN must be >= ^SNW_d um
     L1001=EXT SNW_drc DN_drc < SNW_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.e {
     @SNW.e:Min clearance from SNW to PWB must be >= ^SNW_e um
     L1001=EXT SNW_drc PWB_drc < SNW_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.f {
     @SNW.f:Min clearance from SNW to HV must be >= ^SNW_f um
     L1001=EXT SNW_drc HV_drc < SNW_f REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.g {
     @SNW.g:Min clearance from SNW to TO except ptap must be >= ^SNW_g um
     L1001=EXT SNW_drc (TO_drc NOT ptap) < SNW_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.h {
     @SNW.h:Min clearance from SNW to ptap must be >= ^SNW_h um
     L1001=EXT SNW_drc ptap < SNW_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.i {
     @SNW.i:Min extension of SNW beyond TO except ntap must be >= ^SNW_i um
     L1001=ENC (TO_drc NOT ntap) SNW_drc < SNW_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.j {
     @SNW.j:Min extension of SNW beyond ntap must be >= ^SNW_j um
     L1001=ENC ntap SNW_drc < SNW_j REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.k {
     @SNW.k:Min extension of SNW beyond SN must be >= ^SNW_k um
     L1001=ENC SN_drc SNW_drc < SNW_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SNW.l {
     @SNW.l:SNW is not allowed to interact with PWB.
     SNW_drc INTERACT PWB_drc
}

SNW.m {
     @SNW.m:SNW is not allowed to interact with TB.
     SNW_drc INTERACT TB_drc
}

SNW.n {
     @SNW.n:SNW is not allowed to interact with DN.
     SNW_drc INTERACT DN_drc
}

SNW.o {
     @SNW.o:SNW is not allowed to interact with HV.
     SNW_drc INTERACT HV_drc
}

SNW.p {
     @SNW.p:SNW non-orthogonal polygon is no allowed.
     ANGLE SNW_drc >0 <90
}     

SNW.q {
     @SNW.q:SNW must contain only p+TO and ntap TO.
     SNW_drc NOT INTERACT (nsd OR pdiff)
}

SNW.t {
     @SNW.t:TO cannot cross / straddle SNW 
     TO_drc CUT SNW_drc
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.21 Ultra high Pwell (SPW)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE SPW_a	1.0
VARIABLE SPW_b	1.5
VARIABLE SPW_c	1.5
VARIABLE SPW_d	1.5
VARIABLE SPW_e	1.5 
VARIABLE SPW_f	0.62
VARIABLE SPW_g	0.62
VARIABLE SPW_h	0.5 
VARIABLE SPW_i	1.3 
VARIABLE SPW_j	0.32
VARIABLE SPW_k	0.86
VARIABLE SPW_l	0.08

SPW.a {
     @SPW.a:Min SPW width must be >= ^SPW_a um
     L1001=INT SPW_drc < SPW_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.b {
     @SPW.b:Min space of SPW must be >= ^SPW_b um
     L1001=EXT SPW_drc < SPW_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.c {
     @SPW.c:Min clearance from SPW to TB must be >= ^SPW_c um
     L1001=EXT SPW_drc TB_drc < SPW_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.d {
     @SPW.d:Min clearance from SPW to DN must be >= ^SPW_d um
     L1001=EXT SPW_drc DN_drc < SPW_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.e {
     @SPW.e:Min clearance from SPW to SNW must be >= ^SPW_e um
     L1001=EXT SPW_drc SNW_drc < SPW_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.f {
     @SPW.f:Min clearance from SPW to PWB must be >= ^SPW_f um
     L1001=EXT SPW_drc PWB_drc < SPW_f REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.g {
     @SPW.g:Min clearance from SPW to HV must be >= ^SPW_g um
     L1001=EXT SPW_drc HV_drc < SPW_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.h {
     @SPW.h:Min clearance from SPW to N+ TO must be >= ^SPW_h um
     L1001=EXT SPW_drc ndiff < SPW_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.i {
     @SPW.i:Min extension of SPW beyond TO except ptap must be >= ^SPW_i um
     L1001=ENC (TO_drc NOT ptap) SPW_drc < SPW_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.j {
     @SPW.j:Min extension of SPW beyond ptap must be >= ^SPW_j um
     L1001=ENC ptap SPW_drc < SPW_j REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.k {
     @SPW.k:Min extension of SPW beyond PWB must be >= ^SPW_k um
     L1001=ENC PWB_drc SPW_drc < SPW_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.l {
     @SPW.l:Min extension of SPW beyond SP must be >= ^SPW_l um
     L1001=ENC SP_drc SPW_drc < SPW_l REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SPW.m {
     @SPW.m:SPW is not allowed to interact with TB.
     SPW_drc INTERACT TB_drc
}

SPW.n {
     @SPW.n:SPW is not allowed to interact with DN.
     SPW_drc INTERACT DN_drc
}

SPW.o {
     @SPW.o:SPW is not allowed to interact with HV.
     SPW_drc INTERACT HV_drc
}

SPW.p {
     @SPW.p:SPW is not allowed to interact with SNW.
     SPW_drc INTERACT SNW_drc
}

SPW.q {
     @SPW.q:SPW non-orthogonal polygon is no allowed.
     ANGLE SPW_drc >0 <90
}     

SPW.r {
     @SPW.r:TO cannot cross / straddle SPW 
     TO_drc CUT SPW_drc
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.24 Implant layer for High sheet Resistance poly resistor (HR)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE HR_a	0.44
VARIABLE HR_b	0.44
VARIABLE HR_c	0.3
VARIABLE HR_d	0.32
VARIABLE HR_e	0.3
VARIABLE HR_f	0.22
VARIABLE HR_g	0.4
VARIABLE HR_h	0.3
VARIABLE HR_i	0.3
VARIABLE HR_j	0.18
VARIABLE HR_k	0.3
VARIABLE HR_l	0.38

HR.a {
     @HR.a: Min. width of HR must be >= ^HR_a um
     L1001=INTERNAL HR_drc < HR_a REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.b {
     @HR.b: Min. space of HR to HR must be >= ^HR_b um
     L1001=EXTERNAL HR_drc < HR_b REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.c {
     @HR.c: Min. clearance from HR to TO must be >= ^HR_c um
     L1001=EXTERNAL HR_drc TO_drc < HR_c REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.d {
     @HR.d: Min. clearance from HR to unrelated Poly must be >= ^HR_d um
     L1001=EXTERNAL HR_drc GT_drc < HR_d REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.e {
     @HR.e: Min. clearance from unrelated P+ or N+ to poly resistor with HR must be >= ^HR_e um
     L1001=EXTERNAL SP_drc res_hr_poly < HR_e REGION SINGULAR ABUT <90
     L1002=EXTERNAL SN_drc res_hr_poly < HR_e REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

HR.f {
     @HR.f: Min. clearance from SAB to W1 must be >= ^HR_f um
     res_hr_w1=W1_drc NOT OUTSIDE res_hr_poly
     L1001=EXTERNAL res_hr_w1 res_hr_si < HR_f REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.g {
     @HR.g: Min. spacing of HR poly resistor to HR poly resistor must be >= ^HR_g um
     L1001=EXTERNAL res_hr_poly_body < HR_g REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.h {
     @HR.h: Min. extension of HR beyond HR resistor must be >= ^HR_h um
     L1001=ENCLOSURE res_hr_poly HR_drc < HR_h REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

hrsp=NOT OUTSIDE SP_drc res_hr_poly
hrsab=AND SI_drc HR_drc
hrsab_sp=AND hrsab hrsp
HR.i {
     @HR.i: Min and max overlap of PPLUS and SAB in HR region must be == ^HR_i um
     L1001=INTERNAL hrsp hrsab < HR_i REGION SINGULAR ABUT<90 
     L1002=SIZE hrsab_sp BY  HR_i / 2 UNDEROVER
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

HR.j {
     @HR.j: Min. extension of P+ beyond poly Gate must be >= ^HR_j um
     L1001=ENCLOSURE res_hr_poly res_hr_sp < HR_j REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.k {
     @HR.k: Min. extension of SAB beyond HR resistor in width direction must be >= ^HR_k um
     L1001=ENCLOSURE res_hr_poly res_hr_si < HR_k REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

HR.l {
     @HR.l: Min. area of HR must be >= ^HR_l um2.
     AREA HR_drc < HR_l 
}

HR.m {
     @HR.m: Overlap of N+ and HR is not allowed.
     AND SN_drc HR_drc
}

HR.n {
     @HR.n: Overlap of TO and HR is not allowed.
     AND TO_drc HR_drc
}

//; HR.o is not checked.
//; HR.p is not checked.

HR.q {
     @HR.q:rhr RES shall be coverd by RPDMY and RES_HR mark layer.
     res_hr_poly_body NOT INSIDE RPDUM
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.25 MIM Capacitor Top layer (CT)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE CT_a1	4.0
VARIABLE CT_a2	30
VARIABLE CT_c	35
VARIABLE CT_d	1.2
VARIABLE CT_f	0.8
VARIABLE CT_g	0.4
VARIABLE CT_h	2.0
VARIABLE CT_i	2.0
VARIABLE CT_j	0.24
VARIABLE CT_k	0.12
VARIABLE CT_l	0.4
VARIABLE CT_m	2
VARIABLE CT_n	0.01
VARIABLE CT_o	0.03
VARIABLE CT_p	0.2

mctcap=INTERACT CT_drc WT_drc
mctring=NOT CT_drc mctcap

capdumm5=INTERACT A5_drc mctring

capbotm5a=AND A5_drc MCTM5
capbotm5=INTERACT capbotm5a mctcap
capbotm5_m_edge=COIN EDGE capbotm5 A5_drc

CT.a.1 {
     @CT.a.1: Min width of CT used for capacitor top plate must be >= ^CT_a1 um
     L1001=INTERNAL CT_drc < CT_a1 REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

CT.a.2 {
     @CT.a.2: Max width of CT used for capacitor top plate must be <= ^CT_a2 um
     L1001=SIZE CT_drc BY (CT_a2 / 2) UNDEROVER
     NOT INSIDE L1001 EXCL
}

CT.c.a5 {
     @CT.c.a5: Max. width of An used for capacitor bottom plate must be <= ^CT_c um
     L1001=SIZE capbotm5 BY (CT_c / 2) UNDEROVER 
     NOT INSIDE L1001 EXCL
}

CT.d {
     @CT.d: Min. spacing between two capacitor CT must be >= ^CT_d um
     L1001=EXTERNAL CT_drc < CT_d REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

CT.f.a5 {
     @CT.f.a5: Min. spacing between two An used for capacitor bottom plates must be >= ^CT_f um
     L1001=EXTERNAL capbotm5 < CT_f REGION SINGULAR ABUT <90
     L1002=EXTERNAL capbotm5 capdumm5 < CT_f REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

CT.g.wt {
     @CT.g.wt: Min. clearance from CT to WT or Wn must be >= ^CT_g um
     L1001=EXTERNAL WT_drc CT_drc < CT_g REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     CUT WT_drc CT_drc
}

CT.g.w5 {
     @CT.g.w5: Min. clearance from CT to WT or Wn must be >= ^CT_g um
     L1001=EXTERNAL W5_drc CT_drc < CT_g REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     CUT W5_drc CT_drc
}

captopwt=AND WT_drc CT_drc
capbotwt=(WT_drc AND capbotm5) NOT CT_drc
CT.h {
     @CT.h: Min spacing between two WT which are covered by CT must be >= ^CT_h um
     L1001=EXTERNAL captopwt < CT_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CT.i {
     @CT.i: Min spacing between two WT which are covered by An must be >= ^CT_i um
     L1001=EXTERNAL capbotwt < CT_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

CT.j {
     @CT.j: Min extension of CT beyond WT must be >= ^CT_j um.
     L1001=ENCLOSURE WT_drc CT_drc < CT_j REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

CT.k.a5 {
     @CT.k.a5: Min extension of An beyond WT or Wn must be >= ^CT_k um.
     L1001=ENCLOSURE WT_drc capbotm5 < CT_k REGION SINGULAR ABUT <90
     L1002=ENCLOSURE W5_drc capbotm5 < CT_k REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
}

CT.l.a5 {
     @CT.l.a5: Min extension of An beyond CT must be >= ^CT_l um.
     L1001=ENCLOSURE CT_drc A5_drc < CT_l REGION SINGULAR ABUT <90
     NOT INSIDE L1001 EXCL
}

CT.m.a5 {
     @CT.m.a5: Min extension of CTDMY beyond An must be >= ^CT_m um.
     L1001=ENCLOSURE capbotm5_m_edge MCTM5 < CT_m REGION ABUT <90
     NOT INSIDE L1001 EXCL
}

#IFDEF CHECK_DENSITY
CT.n {
     @CT.n: Min density of WT which is covered by CT must be >=1%
     DENSITY wt_and_ct >0<0.01 INSIDE OF LAYER mctcap
}

CT.o {
     @CT.o: Min pattern density of CT must be >=3%
     DENSITY CT_drc >0<0.03
}
#ENDIF

CT.p {
     @CT.p: Min area of CT must be >= ^CT_p um2
     AREA CT_drc < CT_p
}

CT.q.a5 {
     @CT.q.a5: CT without An cover is not allowed.
     NOT CT_drc A5_drc
}

forbiden=(GT_drc OR TO_drc) OR TB_drc
CT.s {
     @CT.s: Both the active and passive device under MIM region are not allowed.
     AND forbiden MCTM5
}

CT.t1 {
     @CT.t1: CT shapes must be rectangular and orthogonal.
     NOT RECTANGLE mctcap ORTHOGONAL ONLY
}

CT.u1 {
     @CT.u1: CT must touch two or more WT.
     ENCLOSE mctcap WT_drc<2
}

CT.u2 {
     @CT.u2: An used for capacitor bottom plate must touch two or more WT or Wn.
     ENCLOSE capbotm5 WT_drc<2
     ENCLOSE capbotm5 W5_drc<2
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.27 ESD (SE)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE ESD_a	0.36
VARIABLE ESD_b	0.36
VARIABLE ESD_c	0.17
VARIABLE ESD_d	0.36
VARIABLE ESD_e	0	
VARIABLE ESD_f	0.24
VARIABLE ESD_g	0.135
VARIABLE ESD_h	0.24

SE.a {
     @SE.a: Min width of ESD must be >= ^ESD_a um
     L1001=INTERNAL SE_drc < ESD_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SE.b {
     @SE.b: Min spacing of ESD to ESD must be >= ^ESD_b um
     L1001=EXTERNAL SE_drc < ESD_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SE.c {
     @SE.c: Min spacing of ESD to NPLUS or PPLUS must be >= ^ESD_c um
     L1001=EXTERNAL SE_drc imp_reg < ESD_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SE.d {
     @SE.d: Min spacing of ESD to NPLUS ACT must be >= ^ESD_d um
     L1001=EXTERNAL SE_drc ndiff < ESD_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SE.e {
     @SE.e: Min spacing of ESD to PPLUS ACT(with same potential) must be >= ^ESD_e um
     butt_pdiff=TOUCH pdiff ndiff
     AND SE_drc butt_pdiff
}

SE.f {
     @SE.f: Min extension of ESD beyond NMOS gate must be >= ^ESD_f um
     esd_nmos_w=INSIDE EDGE ngate_w ESD_mark
     L1001=ENCLOSURE esd_nmos_w SE_drc < ESD_f REGION ABUT<90
     NOT INSIDE L1001 EXCL
}

SE.g {
     @SE.g: Min extension of ESD beyond ESD ACT must be >= ^ESD_g um
     L1001=ENCLOSURE TO_drc SE_drc < ESD_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SE.h {
     @SE.h: Min overlap of ESD with ACT must be >= ^ESD_h um
     L1001=INTERNAL SE_drc TO_drc < ESD_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.28 MOS Varactor (VARMOS)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE VAR_a	0.5
VARIABLE VAR_a1	0.3
VARIABLE VAR_b	0.18
VARIABLE VAR_c_guid	0.13
VARIABLE VAR_d	0.3
VARIABLE VAR_e_guid	0.15

GROUP GVAR
   VARMOS.c.guid
   VARMOS.e.guid

varngate=(ngate AND TB_drc) AND VARMOS
varngate_w=INSIDE EDGE (varngate NOT INSIDE EXCL) TO_drc
VARMOS.a {
      @VARMOS.a: Min length of (VARMOS and GT) must be >= ^VAR_a um
      LENGTH varngate_w < VAR_a
}

varngate_l=COINCIDENT EDGE (varngate NOT INSIDE EXCL) TO_drc
VARMOS.a1 {
      @VARMOS.a1: Min width of (VARMOS and GT) must be >= ^VAR_a1 um
      LENGTH varngate_l < VAR_a1
}

VARMOS.b {
     @VARMOS.b: Min clearance from VARMOS TO must be >= ^VAR_b um
     L1001=EXTERNAL VARMOS TO_drc < VAR_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

VARMOS.d {
     @VARMOS.d: Min extension of VARMOS beyond TO must be >= ^VAR_d um
     L1001=ENCLOSURE TO_drc VARMOS < VAR_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

VARMOS.f {
      @VARMOS.f: N+ must fully cover((((GT and VARMOS) size 0.22) and TO) size 0.18)
      exvargate=SIZE ((SIZE (GT_drc AND VARMOS) BY 0.22) AND TO_drc) BY 0.18
      NOT exvargate SN_drc
}

VARMOS.g {
      @VARMOS.g: MOS varactor only provide NMOS in NW Capacitor structure for application.
     (ngate AND VARMOS) OUTSIDE TB_drc
}

//; VARMOS.h is not able to check

VARMOS.i {
      @VARMOS.i: VARMOS must fully cover the varactor device.
      (TO_drc INTERACT VARMOS) NOT VARMOS
}

VARMOS.j {
      @VARMOS.j: Overlap of VARMOS with PWBLK,PT,or SI is not allowed.
      AND VARMOS PWB_drc
      AND VARMOS pwell
      AND VARMOS SI_drc
}

VARMOS.k {
      @VARMOS.k: P+ Overlap of (GT and VARMOS) is not allowed.
      SP_drc AND (GT_drc AND VARMOS)
}

VARMOS.l {
      @VARMOS.l: Overlap of VARMOS with ((GT and VARMOS) size 0.3) is not allowed.
      NOT (SIZE varngate BY 0.3) VARMOS
}

varw1to=(W1_drc AND TO_drc) AND VARMOS
VARMOS.c.guid {
     @VARMOS.c.guid: Recommended clearance from ((W1 in TO) and VARMOS) to (GT and VARMOS) for space accuracy must be >= ^VAR_c_guid um
     L1001=EXTERNAL varw1to varngate < VAR_c_guid REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

VARMOS.e.guid {
      @VARMOS.e.guid: Recommended Min area of (GT and VARMOS) for spice accuary TO must be >= ^VAR_e_guid um.
      @In spice model,0.5*0.3um is used for Min area of (GT and VARMOS).
      AREA varngate < VAR_e_guid
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.32 Metal Slotting Rules
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE SLOT_a	1.8
VARIABLE SLOT_b	4.5
VARIABLE SLOT_c	9.0
VARIABLE SLOT_d	18.0
VARIABLE SLOT_ef	9.0
VARIABLE SLOT_g	1.8
VARIABLE SLOT_hi	9.0
VARIABLE SLOT_j	31.5

GROUP GSLOT_Rule SLOT.?

VARIABLE slot_grow	0.005

// slot_d_err_a1=((A1SLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_a1slot_edge=EXPAND EDGE A1SLOT_slot_drc OUTSIDE BY 0.01
long_a1slot_edge=LENGTH exp_a1slot_edge > SLOT_b
a1slot_length=LENGTH long_a1slot_edge < SLOT_d
slot_d_err_a1=WITH EDGE A1SLOT_slot_drc a1slot_length

// slot_d_err_a2=((A2SLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_a2slot_edge=EXPAND EDGE A2SLOT_slot_drc OUTSIDE BY 0.01
long_a2slot_edge=LENGTH exp_a2slot_edge > SLOT_b
a2slot_length=LENGTH long_a2slot_edge < SLOT_d
slot_d_err_a2=WITH EDGE A2SLOT_slot_drc a2slot_length

// slot_d_err_a3=((A3SLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_a3slot_edge=EXPAND EDGE A3SLOT_slot_drc OUTSIDE BY 0.01
long_a3slot_edge=LENGTH exp_a3slot_edge > SLOT_b
a3slot_length=LENGTH long_a3slot_edge < SLOT_d
slot_d_err_a3=WITH EDGE A3SLOT_slot_drc a3slot_length

// slot_d_err_a4=((A4SLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_a4slot_edge=EXPAND EDGE A4SLOT_slot_drc OUTSIDE BY 0.01
long_a4slot_edge=LENGTH exp_a4slot_edge > SLOT_b
a4slot_length=LENGTH long_a4slot_edge < SLOT_d
slot_d_err_a4=WITH EDGE A4SLOT_slot_drc a4slot_length

// slot_d_err_a5=((A5SLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_a5slot_edge=EXPAND EDGE A5SLOT_slot_drc OUTSIDE BY 0.01
long_a5slot_edge=LENGTH exp_a5slot_edge > SLOT_b
a5slot_length=LENGTH long_a5slot_edge < SLOT_d
slot_d_err_a5=WITH EDGE A5SLOT_slot_drc a5slot_length

// rule_SLOT_A1_c=(((A1_drc andnot (A1_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// A1_drc) area <0.05
a1_with_cp=NOT OUTSIDE A1 CP_drc
a1_without_cp=NOT A1 a1_with_cp
a1_width_gt_31d5=SIZE a1_without_cp BY SLOT_j/2 UNDEROVER
a1_width_lt_31d5=NOT A1 a1_width_gt_31d5
a1_exp_edge=EXPAND EDGE a1_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_A1_c=INSIDE a1_exp_edge A1

// rule_SLOT_A2_c=(((A2_drc andnot (A2_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// A2_drc) area <0.05
a2_with_cp=NOT OUTSIDE A2 CP_drc
a2_without_cp=NOT A2 a2_with_cp
a2_width_gt_31d5=SIZE a2_without_cp BY SLOT_j/2 UNDEROVER
a2_width_lt_31d5=NOT A2 a2_width_gt_31d5
a2_exp_edge=EXPAND EDGE a2_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_A2_c=INSIDE a2_exp_edge A2

// rule_SLOT_A3_c=(((A3_drc andnot (A3_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// A3_drc) area <0.05
a3_with_cp=NOT OUTSIDE A3 CP_drc
a3_without_cp=NOT A3 a3_with_cp
a3_width_gt_31d5=SIZE a3_without_cp BY SLOT_j/2 UNDEROVER
a3_width_lt_31d5=NOT A3 a3_width_gt_31d5
a3_exp_edge=EXPAND EDGE a3_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_A3_c=INSIDE a3_exp_edge A3

// rule_SLOT_A4_c=(((A4_drc andnot (A4_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// A4_drc) area <0.05
a4_with_cp=NOT OUTSIDE A4 CP_drc
a4_without_cp=NOT A4 a4_with_cp
a4_width_gt_31d5=SIZE a4_without_cp BY SLOT_j/2 UNDEROVER
a4_width_lt_31d5=NOT A4 a4_width_gt_31d5
a4_exp_edge=EXPAND EDGE a4_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_A4_c=INSIDE a4_exp_edge A4

// rule_SLOT_A5_c=(((A5_drc andnot (A5_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// A5_drc) area <0.05
a5_with_cp=NOT OUTSIDE A5 CP_drc
a5_without_cp=NOT A5 a5_with_cp
a5_width_gt_31d5=SIZE a5_without_cp BY SLOT_j/2 UNDEROVER
a5_width_lt_31d5=NOT A5 a5_width_gt_31d5
a5_exp_edge=EXPAND EDGE a5_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_A5_c=INSIDE a5_exp_edge A5

// rule_SLOT_A1_j=(((A1_drc andnot (A1_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract A1SLOT_slot_drc
a1_width31d5_wo_mct=NOT INTERACT a1_width_gt_31d5 MCTM5
rule_SLOT_A1_j=NOT INTERACT a1_width31d5_wo_mct A1SLOT_slot_drc

// rule_SLOT_A2_j=(((A2_drc andnot (A2_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract A2SLOT_slot_drc
a2_width31d5_wo_mct=NOT INTERACT a2_width_gt_31d5 MCTM5
rule_SLOT_A2_j=NOT INTERACT a2_width31d5_wo_mct A2SLOT_slot_drc

// rule_SLOT_A3_j=(((A3_drc andnot (A3_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract A3SLOT_slot_drc
a3_width31d5_wo_mct=NOT INTERACT a3_width_gt_31d5 MCTM5
rule_SLOT_A3_j=NOT INTERACT a3_width31d5_wo_mct A3SLOT_slot_drc

// rule_SLOT_A4_j=(((A4_drc andnot (A4_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract A4SLOT_slot_drc
a4_width31d5_wo_mct=NOT INTERACT a4_width_gt_31d5 MCTM5
rule_SLOT_A4_j=NOT INTERACT a4_width31d5_wo_mct A4SLOT_slot_drc

// rule_SLOT_A5_j=(((A5_drc andnot (A5_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract A5SLOT_slot_drc
a5_width31d5_wo_mct=NOT INTERACT a5_width_gt_31d5 MCTM5
rule_SLOT_A5_j=NOT INTERACT a5_width31d5_wo_mct A5SLOT_slot_drc

SLOT.A1.a {
     @SLOT.A1.a: Min width of A1SLOT must be >= ^SLOT_a um
     L1001=INTERNAL A1SLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A1.b {
     @SLOT.A1.b: Max width of A1SLOT must be <= ^SLOT_b um
     L1001=SIZE A1SLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.A1.c {
     @SLOT.A1.c: Minimum width of a metal1 line which is connected to wide metal1 line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_A1_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.A1.d {
     @SLOT.A1.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_a1
     NOT INSIDE L1001 EXCL
}

SLOT.A1.e_f {
     @SLOT.A1.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL A1SLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.A1.h_i {
     @SLOT.A1.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE A1SLOT_slot_drc A1 < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A1.j {
     @SLOT.A1.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_A1_j
     NOT INSIDE L1001 EXCL
}

SLOT.A2.a {
     @SLOT.A2.a: Min width of A2SLOT must be >= ^SLOT_a um
     L1001=INTERNAL A2SLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A2.b {
     @SLOT.A2.b: Max width of A2SLOT must be <= ^SLOT_b um
     L1001=SIZE A2SLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.A2.c {
     @SLOT.A2.c: Minimum width of a metal2 line which is connected to wide metal2 line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_A2_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.A2.d {
     @SLOT.A2.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_a2
     NOT INSIDE L1001 EXCL
}

SLOT.A2.e_f {
     @SLOT.A2.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL A2SLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.A2.h_i {
     @SLOT.A2.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE A2SLOT_slot_drc A2 < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A12.g {
     @SLOT.A12.g: Minimum clearance between two slots in neighbor layers must be >= ^SLOT_g um
     L1001=EXTERNAL A1SLOT_slot_drc A2SLOT_slot_drc< SLOT_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND A1SLOT_slot_drc A2SLOT_slot_drc 
}

SLOT.A2.j {
     @SLOT.A2.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_A2_j
     NOT INSIDE L1001 EXCL
}

SLOT.A3.a {
     @SLOT.A3.a: Min width of A3SLOT must be >= ^SLOT_a um
     L1001=INTERNAL A3SLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A3.b {
     @SLOT.A3.b: Max width of A3SLOT must be <= ^SLOT_b um
     L1001=SIZE A3SLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.A3.c {
     @SLOT.A3.c: Minimum width of a metal3 line which is connected to wide metal3 line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_A3_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.A3.d {
     @SLOT.A3.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_a3
     NOT INSIDE L1001 EXCL
}

SLOT.A3.e_f {
     @SLOT.A3.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL A3SLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.A3.h_i {
     @SLOT.A3.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE A3SLOT_slot_drc A3 < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A23.g {
     @SLOT.A23.g: Minimum clearance between two slots in neighbor layers must be >= ^SLOT_g um
     L1001=EXTERNAL A2SLOT_slot_drc A3SLOT_slot_drc< SLOT_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND A2SLOT_slot_drc A3SLOT_slot_drc 
}

SLOT.A3.j {
     @SLOT.A3.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_A3_j
     NOT INSIDE L1001 EXCL
}

SLOT.A4.a {
     @SLOT.A4.a: Min width of A4SLOT must be >= ^SLOT_a um
     L1001=INTERNAL A4SLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A4.b {
     @SLOT.A4.b: Max width of A4SLOT must be <= ^SLOT_b um
     L1001=SIZE A4SLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.A4.c {
     @SLOT.A4.c: Minimum width of a metal4 line which is connected to wide metal4 line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_A4_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.A4.d {
     @SLOT.A4.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_a4
     NOT INSIDE L1001 EXCL
}

SLOT.A4.e_f {
     @SLOT.A4.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL A4SLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.A4.h_i {
     @SLOT.A4.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE A4SLOT_slot_drc A4 < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A34.g {
     @SLOT.A34.g: Minimum clearance between two slots in neighbor layers must be >= ^SLOT_g um
     L1001=EXTERNAL A3SLOT_slot_drc A4SLOT_slot_drc< SLOT_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND A3SLOT_slot_drc A4SLOT_slot_drc 
}

SLOT.A4.j {
     @SLOT.A4.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_A4_j
     NOT INSIDE L1001 EXCL
}

SLOT.A5.a {
     @SLOT.A5.a: Min width of A5SLOT must be >= ^SLOT_a um
     L1001=INTERNAL A5SLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A5.b {
     @SLOT.A5.b: Max width of A5SLOT must be <= ^SLOT_b um
     L1001=SIZE A5SLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.A5.c {
     @SLOT.A5.c: Minimum width of a metal5 line which is connected to wide metal5 line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_A5_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.A5.d {
     @SLOT.A5.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_a5
     NOT INSIDE L1001 EXCL
}

SLOT.A5.e_f {
     @SLOT.A5.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL A5SLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.A5.h_i {
     @SLOT.A5.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE A5SLOT_slot_drc A5 < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.A45.g {
     @SLOT.A45.g: Minimum clearance between two slots in neighbor layers must be >= ^SLOT_g um
     L1001=EXTERNAL A4SLOT_slot_drc A5SLOT_slot_drc< SLOT_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND A4SLOT_slot_drc A5SLOT_slot_drc 
}

SLOT.A5.j {
     @SLOT.A5.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_A5_j
     NOT INSIDE L1001 EXCL
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.33 Metal fuse design
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

m4fuse=AND FUSE A4_drc

pifuse=NOT OUTSIDE PI_drc FUSE
pifuse_ring=NOT pifuse FUSE

w1_fuse=AND W1_drc pifuse
w2_fuse=AND W2_drc pifuse
w3_fuse=AND W3_drc pifuse
w4_fuse=AND W4_drc pifuse
w5_fuse=AND W5_drc pifuse
wt_fuse=AND WT_drc pifuse

a1fuse_ring=AND pifuse_ring A1_drc
a2fuse_ring=AND pifuse_ring A2_drc
a3fuse_ring=AND pifuse_ring A3_drc
a4fuse_ring=AND pifuse_ring A4_drc
a5fuse_ring=AND pifuse_ring A5_drc
atfuse_ring=AND pifuse_ring AT_drc
ttfuse_ring=AND pifuse_ring TT_drc

Ha1=HOLES a1fuse_ring
Ba1=TOUCH a1fuse_ring Ha1

Ha2=HOLES a2fuse_ring
Ba2=TOUCH a2fuse_ring Ha2

Ha3=HOLES a3fuse_ring
Ba3=TOUCH a3fuse_ring Ha3

Ha4=HOLES a4fuse_ring
Ba4=TOUCH a4fuse_ring Ha4

Ha5=HOLES a5fuse_ring
Ba5=TOUCH a5fuse_ring Ha5

Hat=HOLES atfuse_ring
Bat=TOUCH atfuse_ring Hat

Htt=HOLES ttfuse_ring
Btt=TOUCH ttfuse_ring Htt

w2fuse_ring=INSIDE W2_drc Ba1
w3fuse_ring=INSIDE W3_drc Ba2
w4fuse_ring=INSIDE W4_drc Ba3
w5fuse_ring=INSIDE W5_drc Ba4
wtfuse_ring=INSIDE WT_drc (Bat OR Btt)

/*
FUSE.a_c {
     @FUSE.a: Width of metal fuse must be >=0.8um
     @FUSE.c: Length of metal fuse must be >=4.0
       NOT ENCLOSE RECTANGLE m6fuse 0.8 4.0
}

FUSE.b {
     @FUSE.b: Minimum space of metal fuse must be >=4.0um
       EXTERNAL m6fuse < 4 ABUT<90 SINGULAR REGION
}

FUSE.c1 {
     @FUSE.c1: Max length of metal fuse must be <=10.0um
       LENGTH m6fuse >10 
}

FUSE.d {
     @FUSE.d: Min.extension from GT to W1 must be >=0.3um
       ENCLOSURE w1_fuse GT_drc < 0.3 ABUT<90 SINGULAR REGION
}

FUSE.e {
     @FUSE.e: Min.extension from M1 to W1 must be >=0.3um
       ENCLOSURE w1_fuse A1_drc < 0.3 ABUT<90 SINGULAR REGION
}

FUSE.f {
     @FUSE.f: Min extension from M1~Mn-2 to W1/V1~Vn-3 (stacked via) must be >=0.3um
       ENCLOSURE w1_fuse A1_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w2_fuse A1_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w2_fuse A2_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w3_fuse A2_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w3_fuse A3_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w4_fuse A3_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w4_fuse A4_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w5_fuse A4_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w5_fuse A5_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w6_fuse A5_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w6_fuse A6_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w7_fuse A6_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE w7_fuse A7_drc < 0.3 ABUT<90 SINGULAR REGION
       ENCLOSURE wt_fuse A7_drc < 0.3 ABUT<90 SINGULAR REGION
}

FUSE.g {
     @FUSE.g: Min separation from fuse edge to PW edge(P-type substrate is used) must be>=8.0um
       EXTERNAL m6fuse TB_drc < 8.0 ABUT<90 SINGULAR REGION
}

FUSE.h {
     @FUSE.h: Min separation from fuse to fuse window must be>=3.5um
       ENCLOSURE m6fuse FUSE < 3.5 ABUT<90 SINGULAR REGION
}

FUSE.i {
     @FUSE.i: Min separation from fuse window to protecting ring must be>=1.5um
       EXTERNAL Ba1 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Ba2 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Ba3 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Ba4 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Ba5 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Ba6 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Ba7 FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Bat FUSE < 1.5 ABUT<90 SINGULAR REGION
       EXTERNAL Btt FUSE < 1.5 ABUT<90 SINGULAR REGION
}

FUSE.j.1 {
     @FUSE.j.1: Width of V1~Vn-2 in protecting ring must be >=0.19um
       INTERNAL w2fuse_ring <0.19 ABUT<90 SINGULAR REGION
       INTERNAL w3fuse_ring <0.19 ABUT<90 SINGULAR REGION
       INTERNAL w4fuse_ring <0.19 ABUT<90 SINGULAR REGION
       INTERNAL w5fuse_ring <0.19 ABUT<90 SINGULAR REGION
       INTERNAL w6fuse_ring <0.19 ABUT<90 SINGULAR REGION
       INTERNAL w7fuse_ring <0.19 ABUT<90 SINGULAR REGION
}

FUSE.j.2 {
     @FUSE.j.2: Width of Vn-1 in protecting ring must be >=0.36um
       INTERNAL wtfuse_ring <0.36 ABUT<90 SINGULAR REGION
}

FUSE.k {
     @FUSE.k: Min.extension from M1~Mx to V1~Vx-1 in protection ring is 0.40
       ENCLOSURE w2fuse_ring Ba2 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w3fuse_ring Ba2 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w3fuse_ring Ba3 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w4fuse_ring Ba3 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w4fuse_ring Ba4 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w5fuse_ring Ba4 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w5fuse_ring Ba5 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w6fuse_ring Ba5 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w6fuse_ring Ba6 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w7fuse_ring Ba6 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE w7fuse_ring Ba7 < 0.4 ABUT<90 SINGULAR REGION
       ENCLOSURE wtfuse_ring Ba7 < 0.4 ABUT<90 SINGULAR REGION
}

FUSE.l_m {
     @FUSE.l: Min width of fuse window must be >=5.0um
     @FUSE.m: Min length of fuse window must be >=10.0um
       NOT ENCLOSE RECTANGLE FUSE 5.0 10.0       
}

FUSE.n {
     @FUSE.n: Min width of polyimide opening must be >=30um
       INTERNAL PI_drc <30 REGION SINGULAR ABUT<90
}

FUSE.n1 {
     @FUSE.n1: Min extension of polyimide window to passivation windtow must be >=12um
       ENCLOSURE FUSE PI_drc <12 REGION SINGULAR ABUT<90
}

FUSE.p {
     @FUSE.p: Min separation of metal island to protection ring must be >=1um
       EXTERNAL (w2_fuse NOT w2fuse_ring) a2fuse_ring <1.0 REGION SINGULAR ABUT<90
       EXTERNAL (w3_fuse NOT w3fuse_ring) a3fuse_ring <1.0 REGION SINGULAR ABUT<90
       EXTERNAL (w4_fuse NOT w4fuse_ring) a4fuse_ring <1.0 REGION SINGULAR ABUT<90
       EXTERNAL (w5_fuse NOT w5fuse_ring) a5fuse_ring <1.0 REGION SINGULAR ABUT<90
       EXTERNAL (w6_fuse NOT w6fuse_ring) a6fuse_ring <1.0 REGION SINGULAR ABUT<90
       EXTERNAL (w7_fuse NOT w7fuse_ring) a7fuse_ring <1.0 REGION SINGULAR ABUT<90
}

FUSE.q {
     @FUSE.q: Min extension of PMDMY to protection ring of metal fuse must be >=0um
       NOT Ba1 PMDMY_mark
       NOT Ba2 PMDMY_mark
       NOT Ba3 PMDMY_mark
       NOT Ba4 PMDMY_mark
       NOT Ba5 PMDMY_mark
       NOT Ba6 PMDMY_mark
       NOT Ba7 PMDMY_mark
}
*/

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.35.1 Dummy Rule check (TO dummy--TODUM)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE TODUM_a	2
VARIABLE TODUM_b1	1
VARIABLE TODUM_b2	0.5
VARIABLE TODUM_c	1.08
VARIABLE TODUM_d	1.08
VARIABLE TODUM_e	0.54
VARIABLE TODUM_e1	1
VARIABLE TODUM_f	1.08
VARIABLE TODUM_g	1.08
VARIABLE TODUM_h	1.08
VARIABLE TODUM_i	0
VARIABLE TODUM_j	1.08
VARIABLE TODUM_k	0.54
VARIABLE TODUM_l	2.25
VARIABLE TODUM_m	1.08
VARIABLE TODUM_s	0.3

#IFDEF CHECK_DUMMY

TODUM.a {
     @TODUM.a: Min and Max TO dummy width must be == ^TODUM_a um
     tmp=NOT RECTANGLE TODUM == TODUM_a BY == TODUM_a 
     NOT INSIDE tmp EXCL
}

TODUM.b1 {
     @TODUM.b1: Min space of TO dummy must be >= ^TODUM_b1 um
     L1001=EXTERNAL TODUM < TODUM_b1 REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
}

TODUM.b2 {
     @TODUM.b2: Min TODUM commom run length >= ^TODUM_b2 um
     L1001=EXT [TODUM] < 1.001 PROJECTING OPPOSITE
     LENGTH L1001 < TODUM_b2
}

TODUM.c {
     @TODUM.c: Min clearance from DTO to TO (Overlap is not allowed) must be >= ^TODUM_c um
     L1001=EXTERNAL TODUM TO_drc < TODUM_c REGION SINGULAR ABUT < 90 
     INTERACT TODUM TO_drc
     NOT INSIDE L1001 EXCL
}

TODUM.d {
     @TODUM.d: Min clearance from DTO to GT (Overlap is not allowed) must be >= ^TODUM_d um
     EXTERNAL TODUM GT_drc < TODUM_d REGION SINGULAR ABUT < 90 
     L1001=INTERACT TODUM GT_drc
     NOT INSIDE L1001 EXCL
}

TODUM.e {
     @TODUM.e: Min clearance from DTO to DN/TB (Overlap is not allowed) must be >= ^TODUM_e um
     L1001=EXTERNAL TODUM TB_drc < TODUM_e REGION SINGULAR ABUT < 90
     L1002=EXTERNAL TODUM DN_drc < TODUM_e REGION SINGULAR ABUT < 90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
     CUT TODUM TB_drc
     CUT TODUM DN_drc
}

TODUM.e1 {
     @TODUM.e1: Min clearance from DTO to SNW/SPW/EECELL (Overlap is not allowed) must be >= ^TODUM_e1 um
     L1001=EXTERNAL TODUM SPW_drc < TODUM_e1 REGION SINGULAR ABUT < 90
     L1002=EXTERNAL TODUM SNW_drc < TODUM_e1 REGION SINGULAR ABUT < 90
     L1003=EXTERNAL TODUM EECELL_drc < TODUM_e1 REGION SINGULAR ABUT < 90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
     NOT INSIDE L1003 EXCL
     CUT TODUM SPW_drc
     CUT TODUM SNW_drc
     CUT TODUM EECELL_drc
}

TODUM.f {
     @TODUM.f: Min clearance from DTO to FU (Overlap is not allowed) must be >= ^TODUM_f um
     L1001=EXTERNAL TODUM FUSE < TODUM_f REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT TODUM FUSE
}

TODUM.g {
     @TODUM.g: Min clearance from DTO to LMARK (Overlap is not allowed) must be >= ^TODUM_g um
     L1001=EXTERNAL TODUM LMARK_mark < TODUM_g REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT TODUM LMARK_mark
}

TODUM.h {
     @TODUM.h: Min clearance from DTO to NWBLK (Overlap is not allowed) must be >= ^TODUM_h um
     L1001=EXTERNAL TODUM RES_NW_mark < TODUM_h REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT TODUM RES_NW_mark
}

TODUM.i {
     @TODUM.i: Min clearance from DTO to LOGO (Overlap is not allowed) must be >= ^TODUM_i um
     AND TODUM LOGO_mark
}

TODUM.j {
     @TODUM.j: Min clearance from DTO to INDDMY inductor (Overlap is not allowed) must be >= ^TODUM_j um
     L1001=EXTERNAL TODUM INDUM_mark < TODUM_j REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT TODUM INDUM_mark
}

TODUM.k {
     @TODUM.k: Min extension of TB beyond DTO must be >= ^TODUM_k um
     L1001=ENCLOSURE TODUM TB_drc < TODUM_k REGION SINGULAR ABUT < 90 OVERLAP
     NOT INSIDE L1001 EXCL
}

TODUM.l {
     @TODUM.l: Min extension of chip edge beyond DTO must be >= ^TODUM_l um
     L1001=ENCLOSURE TODUM chip < TODUM_l REGION SINGULAR ABUT < 90
     NOT INSIDE L1001 EXCL
} 

TODUM.m1 {
     @TODUM.m1: Min clearance from DTO to RTO (Overlap is not allowed) must be >= ^TODUM_m um
     L1001=EXTERNAL TODUM RES_TO_mark < TODUM_m REGION SINGULAR ABUT < 90
     NOT INSIDE L1001 EXCL
     INTERACT TODUM RES_TO_mark
}

//;;TODUM.r don't check

TODUM.s {
     @TODUM.s: Min extension of SAB beyond TODUM must be>= ^TODUM_s um
     ENC TODUM SI_drc < TODUM_s REGION SINGULAR ABUT<90 
}

TODUM.t {
     @TODUM.t: TODUM without the cover of SAB is not allowed
     NOT TODUM SI_drc 
}

TODUM.v {
     @TODUM.v: The TODUM only shape allowed are square(or rectangular) and solid.
     HOLES TODUM
     NOT RECTANGLE TODUM ORTHOGONAL ONLY
}


//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.35.2 Dummy Rule check (GT dummy--GTDUM)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE GTDUM_a	1.6
VARIABLE GTDUM_b	1.4
VARIABLE GTDUM_c	1.28
VARIABLE GTDUM_d	1.28
VARIABLE GTDUM_e	1.28
VARIABLE GTDUM_f	1.28
VARIABLE GTDUM_g	0.2
VARIABLE GTDUM_h	1.28
VARIABLE GTDUM_i	0.2
VARIABLE GTDUM_j	2.45
VARIABLE GTDUM_l	1.28

GTDUM.a {
     @GTDUM.a: Min width of GT dummy must be >= ^GTDUM_a um
     tmp=NOT RECTANGLE GTDUM == GTDUM_a BY == GTDUM_a 
     NOT INSIDE tmp EXCL
}

GTDUM.b {
     @GTDUM.b: Min space of GT dummy must be >= ^GTDUM_b um
     L1001=EXTERNAL GTDUM < GTDUM_b REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
}

GTDUM.c {
     @GTDUM.c: Min clearance from DGT to TO (Overlap is not allowed) must be >= ^GTDUM_c um
     L1001=EXTERNAL GTDUM TO_drc < GTDUM_c REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT GTDUM TO_drc
}

GTDUM.d {
     @GTDUM.d: Min clearance from DGT to GT (Overlap is not allowed) must be >= ^GTDUM_d um
     L1001=EXTERNAL GTDUM GT_drc < GTDUM_d REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT GTDUM GT_drc
}

GTDUM.e {
     @GTDUM.e: Min clearance from DGT to FU (Overlap is not allowed) must be >= ^GTDUM_e um
     L1001=EXTERNAL GTDUM FUSE < GTDUM_e REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT GTDUM FUSE
}

GTDUM.f {
     @GTDUM.f: Min clearance from DGT to LMARK (Overlap is not allowed) must be >= ^GTDUM_f um
     L1001=EXTERNAL GTDUM LMARK_mark < GTDUM_f REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT GTDUM LMARK_mark
}

GTDUM.g {
     @GTDUM.g: Min clearance from DGT to LOGO (Overlap is not allowed) must be >= ^GTDUM_g um
     L1001=EXTERNAL GTDUM LOGO_mark < GTDUM_g REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT GTDUM LOGO_mark 
}

GTDUM.h {
     @GTDUM.h: Min clearance from DGT to INDDMY inductor (Overlap is not allowed) must be >= ^GTDUM_h um
     L1001=EXTERNAL GTDUM INDUM_mark < GTDUM_h REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     INTERACT GTDUM INDUM_mark
}

GTDUM.i {
     @GTDUM.i: Min extension of TODUM beyond GTDUM must be >= ^GTDUM_i um
     L1001=ENC GTDUM TODUM < GTDUM_i REGION SINGULAR ABUT < 90 
     NOT INSIDE L1001 EXCL
     NOT GTDUM TODUM
}

GTDUM.j {
     @GODUM.j: Min extension of chip edge beyond DGT must be >= ^GTDUM_j um
     L1001=ENCLOSURE GTDUM chip < GTDUM_j REGION SINGULAR ABUT < 90
     NOT INSIDE L1001 EXCL
}

GTDUM.k {
     @GTDUM.k: GTDUM without the cover of TODUM is not allowed
     NOT GTDUM TODUM      
}

GTDUM.l {
     @GTDUM.l: Min clearance from DGT to RNDMY,RPDMY,HRDUM(Overlap is not allowed)ust be >= ^GTDUM_l um
     L1001=EXTERNAL GTDUM RPDUM < GTDUM_l REGION SINGULAR ABUT < 90 
     L1002= EXTERNAL GTDUM RES_HR_mark < GTDUM_l REGION SINGULAR ABUT < 90   
     L1003= EXTERNAL GTDUM RNDUM < GTDUM_l REGION SINGULAR ABUT < 90
     NOT INSIDE L1001 EXCL
     NOT INSIDE L1002 EXCL
     NOT INSIDE L1003 EXCL

     INTERACT GTDUM RPDUM
     INTERACT GTDUM RES_HR_mark
     INTERACT GTDUM RNDUM
}

//; GTDUM.n,GTDUM.o do not check

GTDUM.p {
     @GTDUM.p: The GTDUM only shape allowed are square(or rectangular) and solid.
     HOLES GTDUM
     NOT RECTANGLE GTDUM ORTHOGONAL ONLY
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.35.3 Metal Dummy Rule check DAx (A1DUM~ATDUM)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE AnDUM_a1	0.4
VARIABLE AnDUM_a2	3
VARIABLE AnDUM_b	0.4
VARIABLE AnDUM_c	0.6
VARIABLE AnDUM_d	4.5
VARIABLE AnDUM_e	4.5
VARIABLE AnDUM_f	0
VARIABLE AnDUM_g	16.2
VARIABLE AnDUM_h	1.35
VARIABLE AnDUM_i	2.25
VARIABLE AnDUM_j1	0.36
VARIABLE AnDUM_j2	80.0
VARIABLE AnDUM_k	0.54

DUMBLKM=OR NODMF_mark DUMBM_mark
A1DUM.a1 {
     @A1DUM.a1: Min width of A1DUM must be >= ^AnDUM_a1 um
     L1001=INTERNAL A1DUM < AnDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A1DUM.a2 {
     @A1DUM.a2: Max width of A1DUM must be <= ^AnDUM_a2 um
     L1001=SIZE A1DUM BY AnDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

A1DUM.b {
     @A1DUM.b: Min space of A1DUM must be >= ^AnDUM_b um
     L1001=EXTERNAL A1DUM < AnDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A1DUM.c {
     @A1DUM.c: Min clearance from A1DUM to A1(Overlap is not allowed) must be >= ^AnDUM_c um
     L1001=EXTERNAL A1DUM A1 < AnDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A1DUM A1
}

A1DUM.d {
     @A1DUM.d: Min clearance from A1DUM to FU (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_d um
     L1001=EXTERNAL A1DUM FUSE < AnDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A1DUM FUSE
}

A1DUM.e {
     @A1DUM.e: Min clearance from A1DUM to LMARK(Overlap is not allowed) must be >= ^AnDUM_e um
     L1001=EXTERNAL A1DUM LMARK_mark < AnDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A1DUM LMARK_mark
}

A1DUM.f {
     @A1DUM.f: Min clearance from A1DUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_f um
     AND A1DUM LOGO_mark
}

A1DUM.g {
     @A1DUM.g: Min clearance from A1DUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^AnDUM_g um
     L1001=EXTERNAL A1DUM INDUM_mark < AnDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A1DUM INDUM_mark
}

A1DUM.h {
     @A1DUM.h: Min clearance from A1DUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^AnDUM_h um
     L1001=EXTERNAL A1DUM MCTM5 < AnDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A1DUM MCTM5
}

A1DUM.i {
     @A1DUM.i: Min extension of chip edge beyond A1DUM must be >= ^AnDUM_i um
     L1001=ENCLOSURE A1DUM chip < AnDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A1DUM.j1 {
     @A1DUM.j1: Min area of A1DUM must be >= ^AnDUM_j1 um2
     AREA A1DUM < AnDUM_j1
}

A1DUM.j2 {
     @A1DUM.j2: Max area of A1DUM must be <= ^AnDUM_j2 um2
     AREA A1DUM > AnDUM_j2
}

A1DUM.k {
     @A1DUM.k: Min clearance from A1DUM to A1bnd (dummy metal block)(Overlap is not allowed) must be >= ^AnDUM_k um
     L1001=EXTERNAL A1DUM A1_bnd < AnDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A1DUM A1_bnd
}

A1DUM.t {
     @A1DUM.t: The A1DUM only shape allowed are square(or rectangular) and solid.
     HOLES A1DUM
     NOT RECTANGLE A1DUM ORTHOGONAL ONLY
}

A2DUM.a1 {
     @A2DUM.a1: Min width of A2DUM must be >= ^AnDUM_a1 um
     L1001=INTERNAL A2DUM < AnDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A2DUM.a2 {
     @A2DUM.a2: Max width of A2DUM must be <= ^AnDUM_a2 um
     L1001=SIZE A2DUM BY AnDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

A2DUM.b {
     @A2DUM.b: Min space of A2DUM must be >= ^AnDUM_b um
     L1001=EXTERNAL A2DUM < AnDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL     
}

A2DUM.c {
     @A2DUM.c: Min clearance from A2DUM to A2(Overlap is not allowed) must be >= ^AnDUM_c um
     L1001=EXTERNAL A2DUM A2 < AnDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A2DUM A2     
}

A2DUM.d {
     @A2DUM.d: Min clearance from A2DUM to FU (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_d um
     L1001=EXTERNAL A2DUM FUSE < AnDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A2DUM FUSE
}

//A2DUM.e1 {
//     @A2DUM.e1: Min clearance from A2DUM to TO (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A2DUM TO_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A2DUM TO_drc
//}

//A2DUM.e2 {
//     @A2DUM.e2: Min clearance from A2DUM to GT (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A2DUM GT_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A2DUM GT_drc
//}

A2DUM.e {
     @A2DUM.e: Min clearance from A2DUM to LMARK(Overlap is not allowed) must be >= ^AnDUM_e um
     L1001=EXTERNAL A2DUM LMARK_mark < AnDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A2DUM LMARK_mark
}

A2DUM.f {
     @A2DUM.f: Min clearance from A2DUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_f um
     AND A2DUM LOGO_mark
}

A2DUM.g {
     @A2DUM.g: Min clearance from A2DUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^AnDUM_g um
     L1001=EXTERNAL A2DUM INDUM_mark < AnDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A2DUM INDUM_mark
}

A2DUM.h {
     @A2DUM.h: Min clearance from A2DUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^AnDUM_h um
     L1001=EXTERNAL A2DUM MCTM5 < AnDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A2DUM MCTM5
}

A2DUM.i {
     @A2DUM.i: Min extension of chip edge beyond A2DUM must be >= ^AnDUM_i um
     L1001=ENCLOSURE A2DUM chip < AnDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A2DUM.j1 {
     @A2DUM.j1: Min area of A2DUM must be >= ^AnDUM_j1 um2
     AREA A2DUM < AnDUM_j1
}

A2DUM.j2 {
     @A2DUM.j2: Max area of A2DUM must be <= ^AnDUM_j2 um2
     AREA A2DUM > AnDUM_j2
}

A2DUM.k {
     @A2DUM.k: Min clearance from A2DUM to NODNF or DUMBM or A2bnd (dummy metal block)(Overlap is not allowed) must be >= ^AnDUM_k um
     L1001=EXTERNAL A2DUM A2_bnd < AnDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A2DUM A2_bnd
}

A2DUM.t {
     @A2DUM.t: The A2DUM only shape allowed are square(or rectangular) and solid.
     HOLES A2DUM
     NOT RECTANGLE A2DUM ORTHOGONAL ONLY
}

A3DUM.a1 {
     @A3DUM.a1: Min width of A3DUM must be >= ^AnDUM_a1 um
     L1001=INTERNAL A3DUM < AnDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A3DUM.a2 {
     @A3DUM.a2: Max width of A3DUM must be <= ^AnDUM_a2 um
     L1001=SIZE A3DUM BY AnDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

A3DUM.b {
     @A3DUM.b: Min space of A3DUM must be >= ^AnDUM_b um
     L1001=EXTERNAL A3DUM < AnDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL   
}

A3DUM.c {
     @A3DUM.c: Min clearance from A3DUM to A3(Overlap is not allowed) must be >= ^AnDUM_c um
     L1001=EXTERNAL A3DUM A3 < AnDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A3DUM A3
}

A3DUM.d {
     @A3DUM.d: Min clearance from A3DUM to FU (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_d um
     L1001=EXTERNAL A3DUM FUSE < AnDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A3DUM FUSE
}

//A3DUM.e1 {
//     @A3DUM.e1: Min clearance from A3DUM to TO (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A3DUM TO_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A3DUM TO_drc
//}

//A3DUM.e2 {
//     @A3DUM.e2: Min clearance from A3DUM to GT (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A3DUM GT_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A3DUM GT_drc
//}

A3DUM.e {
     @A3DUM.e: Min clearance from A3DUM to LMARK(Overlap is not allowed) must be >= ^AnDUM_e um
     L1001=EXTERNAL A3DUM LMARK_mark < AnDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A3DUM LMARK_mark
}

A3DUM.f {
     @A3DUM.f: Min clearance from A3DUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_f um
     AND A3DUM LOGO_mark
}

A3DUM.g {
     @A3DUM.g: Min clearance from A3DUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^AnDUM_g um
     L1001=EXTERNAL A3DUM INDUM_mark < AnDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A3DUM INDUM_mark
}

A3DUM.h {
     @A3DUM.h: Min clearance from A3DUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^AnDUM_h um
     L1001=EXTERNAL A3DUM MCTM5 < AnDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A3DUM MCTM5
}

A3DUM.i {
     @A3DUM.i: Min extension of chip edge beyond A3DUM must be >= ^AnDUM_i um
     L1001=ENCLOSURE A3DUM chip < AnDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A3DUM.j1 {
     @A3DUM.j1: Min area of A3DUM must be >= ^AnDUM_j1 um2
     AREA A3DUM < AnDUM_j1
}

A3DUM.j2 {
     @A3DUM.j2: Max area of A3DUM must be <= ^AnDUM_j2 um2
     AREA A3DUM > AnDUM_j2
}

A3DUM.k {
     @A3DUM.k: Min clearance from A3DUM to A3bnd (dummy metal block)(Overlap is not allowed) must be >= ^AnDUM_k um
     L1001=EXTERNAL A3DUM A3_bnd < AnDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A3DUM A3_bnd
}

A3DUM.t {
     @A3DUM.t: The A3DUM only shape allowed are square(or rectangular) and solid.
     HOLES A3DUM
     NOT RECTANGLE A3DUM ORTHOGONAL ONLY
}

A4DUM.a1 {
     @A4DUM.a1: Min width of A4DUM must be >= ^AnDUM_a1 um
     L1001=INTERNAL A4DUM < AnDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A4DUM.a2 {
     @A4DUM.a2: Max width of A4DUM must be <= ^AnDUM_a2 um
     L1001=SIZE A4DUM BY AnDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

A4DUM.b {
     @A4DUM.b: Min space of A4DUM must be >= ^AnDUM_b um
     L1001=EXTERNAL A4DUM < AnDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     
}

A4DUM.c {
     @A4DUM.c: Min clearance from A4DUM to A4(Overlap is not allowed) must be >= ^AnDUM_c um
     L1001=EXTERNAL A4DUM A4 < AnDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A4DUM A4
}

A4DUM.d {
     @A4DUM.d: Min clearance from A4DUM to FU (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_d um
     L1001=EXTERNAL A4DUM FUSE < AnDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A4DUM FUSE
}

//A4DUM.e1 {
//     @A4DUM.e1: Min clearance from A4DUM to TO (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A4DUM TO_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A4DUM TO_drc
//}

//A4DUM.e2 {
//     @A4DUM.e2: Min clearance from A4DUM to GT (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A4DUM GT_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A4DUM GT_drc
//}

A4DUM.e {
     @A4DUM.e: Min clearance from A4DUM to LMARK(Overlap is not allowed) must be >= ^AnDUM_e um
     L1001=EXTERNAL A4DUM LMARK_mark < AnDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A4DUM LMARK_mark
}

A4DUM.f {
     @A4DUM.f: Min clearance from A4DUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_f um
     AND A4DUM LOGO_mark
}

A4DUM.g {
     @A4DUM.g: Min clearance from A4DUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^AnDUM_g um
     L1001=EXTERNAL A4DUM INDUM_mark < AnDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A4DUM INDUM_mark
}

A4DUM.h {
     @A4DUM.h: Min clearance from A4DUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^AnDUM_h um
     L1001=EXTERNAL A4DUM MCTM5 < AnDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A4DUM MCTM5
}

A4DUM.i {
     @A4DUM.i: Min extension of chip edge beyond A4DUM must be >= ^AnDUM_i um
     L1001=ENCLOSURE A4DUM chip < AnDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A4DUM.j1 {
     @A4DUM.j1: Min area of A4DUM must be >= ^AnDUM_j1 um2
     AREA A4DUM < AnDUM_j1
}

A4DUM.j2 {
     @A4DUM.j2: Max area of A4DUM must be <= ^AnDUM_j2 um2
     AREA A4DUM > AnDUM_j2
}

A4DUM.k {
     @A4DUM.k: Min clearance from A4DUM to A4bnd (dummy metal block)(Overlap is not allowed) must be >= ^AnDUM_k um
     L1001=EXTERNAL A4DUM A4_bnd < AnDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A4DUM A4_bnd
}

A4DUM.t {
     @A4DUM.t: The A4DUM only shape allowed are square(or rectangular) and solid.
     HOLES A4DUM
     NOT RECTANGLE A4DUM ORTHOGONAL ONLY
}

A5DUM.a1 {
     @A5DUM.a1: Min width of A5DUM must be >= ^AnDUM_a1 um
     L1001=INTERNAL A5DUM < AnDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A5DUM.a2 {
     @A5DUM.a2: Max width of A5DUM must be <= ^AnDUM_a2 um
     L1001=SIZE A5DUM BY AnDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

A5DUM.b {
     @A5DUM.b: Min space of A5DUM must be >= ^AnDUM_b um
     L1001=EXTERNAL A5DUM < AnDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A5DUM.c {
     @A5DUM.c: Min clearance from A5DUM to A5(Overlap is not allowed) must be >= ^AnDUM_c um
     L1001=EXTERNAL A5DUM A5 < AnDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A5DUM A5
}

A5DUM.d {
     @A5DUM.d: Min clearance from A5DUM to FU (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_d um
     L1001=EXTERNAL A5DUM FUSE < AnDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A5DUM FUSE
}

//A5DUM.e1 {
//     @A5DUM.e1: Min clearance from A5DUM to TO (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A5DUM TO_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A5DUM TO_drc
//}

//A5DUM.e2 {
//     @A5DUM.e2: Min clearance from A5DUM to GT (Overlap is not allowed) must be >=2.0um
//     EXTERNAL A5DUM GT_drc <2.0 REGION SINGULAR ABUT<90
//     INTERACT A5DUM GT_drc
//}

A5DUM.e {
     @A5DUM.e: Min clearance from A5DUM to LMARK(Overlap is not allowed) must be >= ^AnDUM_e um
     L1001=EXTERNAL A5DUM LMARK_mark < AnDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A5DUM LMARK_mark
}

A5DUM.f {
     @A5DUM.f: Min clearance from A5DUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^AnDUM_f um
     AND A5DUM LOGO_mark
}

A5DUM.g {
     @A5DUM.g: Min clearance from A5DUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^AnDUM_g um
     L1001=EXTERNAL A5DUM INDUM_mark < AnDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A5DUM INDUM_mark
}

A5DUM.h {
     @A5DUM.h: Min clearance from A5DUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^AnDUM_h um
     L1001=EXTERNAL A5DUM MCTM5 < AnDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A5DUM MCTM5
}

A5DUM.i {
     @A5DUM.i: Min extension of chip edge beyond A5DUM must be >= ^AnDUM_i um
     L1001=ENCLOSURE A5DUM chip < AnDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

A5DUM.j1 {
     @A5DUM.j1: Min area of A5DUM must be >= ^AnDUM_j1 um2
     AREA A5DUM < AnDUM_j1
}

A5DUM.j2 {
     @A5DUM.j2: Max area of A5DUM must be <= ^AnDUM_j2 um2
     AREA A5DUM > AnDUM_j2
}

A5DUM.k {
     @A5DUM.k: Min clearance from A5DUM to A5bnd (dummy metal block)(Overlap is not allowed) must be >= ^AnDUM_k um
     L1001=EXTERNAL A5DUM A5_bnd < AnDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT A5DUM A5_bnd
}

A5DUM.t {
     @A5DUM.t: The A5DUM only shape allowed are square(or rectangular) and solid.
     HOLES A5DUM
     NOT RECTANGLE A5DUM ORTHOGONAL ONLY
}

#ENDIF

#IFDEF metal6_process
#DEFINE gteSwitch0
#ENDIF

#IFDEF gteSwitch0

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.16 Top Metal (AT)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE AT_a	0.4 
VARIABLE AT_b	0.42
VARIABLE AT_b1	0.5
VARIABLE AT_c	0.02
VARIABLE AT_c11	0.11
VARIABLE AT_c12	0.09
VARIABLE AT_d1	0.6
VARIABLE AT_d2	0.6
VARIABLE AT_e	0.562
VARIABLE AT_f	0.565

AT.a {
     @AT.a: Min width of AT region must be>= ^AT_a um
     L1001=INTERNAL AT_drc < AT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

AT.b {
     @AT.b: Min space between two AT region must be>= ^AT_b um
     L1001=EXTERNAL AT_drc < AT_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

AT.b1 {
     @AT,b1: Min space between metal lines must be >= ^AT_b1 um with one or both metal line width and length >=2um;
     AT_S5 = SHRINK (SHRINK (SHRINK (SHRINK AT_drc RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     AT_G5 = GROW (GROW (GROW (GROW AT_S5 RIGHT BY 0.999) LEFT BY 0.999) TOP BY 0.999) BOTTOM BY 0.999
     AT_Wide = AT_G5 AND AT_drc

     L1001=EXT AT_Wide AT_drc < AT_b1 ABUT >0 <89.5 REGION
     NOT INSIDE L1001 EXCL_N
}

AT.c {
     @AT.c: Min extension of AT region beyond WT region must be>= ^AT_c um
     L1001=ENCLOSURE WT_drc AT_drc < AT_c REGION SINGULAR ABUT<90 OUTSIDE ALSO
     NOT INSIDE L1001 EXCL_N
}

AT.c1 {
      @AT.c1: Min extension of AT end of line region beyond WT (at least two opposite sides) must be >= ^AT_c11 um
      @ OR extension of AT beyond WT (at all sides) must be >= ^AT_c12 um
      A = RECTANGLE ENCLOSURE WT_drc AT_drc ABUT>0<90 
      GOOD AT_c AT_c11 OPPOSITE AT_c AT_c11 OPPOSITE
     L1001=ENC A AT_drc < AT_c12 REGION SINGULAR ABUT<90  
     NOT INSIDE L1001 EXCL_N
}

AT.d {
     @AT.d: Min space between metal lines (with one or both metal line width and length>=10um) must be>= ^AT_d1 um
     @Min space between a metal line and a small piece of metal(<10um) that is connected to the wide metal within 1.0um range from the wide metal must be >= ^AT_d2 um
     AT_S5 = SHRINK (SHRINK (SHRINK (SHRINK ATWide7 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     AT_G5 = GROW (GROW (GROW (GROW AT_S5 RIGHT BY 4.999) LEFT BY 4.999) TOP BY 4.999) BOTTOM BY 4.999
     AT_Wide = AT_G5 AND AT_drc

     AT_Exp = SIZE AT_Wide BY 1 INSIDE OF AT_drc STEP 0.322
     AT_Branch = AT_Exp NOT AT_Wide
     AT_Branch_edge = AT_Branch COIN INSIDE EDGE AT_drc
     AT_Check = AT_drc AND (SIZE AT_Exp BY AT_d2)
     AT_Else = AT_Check NOT INTERACT AT_Exp
     AT_Extend = AT_Check NOT AT_Exp 

     L1001=EXT AT_Wide AT_Else < AT_d1 ABUT >0 <89.5 REGION
     L1002=EXT AT_Branch_edge AT_Else < AT_d2 ABUT >0 <89.5 OPPOSITE REGION
     L1003=EXT AT_Branch_edge AT_Else < AT_d2 ABUT >0 <89.5 CORNER REGION
     L1004=EXT AT_Branch_edge AT_Else < AT_d2 ABUT >0 <89.5 PROJ==0 REGION
     A = EXT AT_Exp < AT_d1 ABUT > 0 < 89.5 SPACE REGION
     L1005=A NOT INTERACT AT_Extend
     NOT INSIDE L1001 EXCL_N
     NOT INSIDE L1002 EXCL_N
     NOT INSIDE L1003 EXCL_N
     NOT INSIDE L1004 EXCL_N
     NOT INSIDE L1005 EXCL_N
}

AT.e {
     @AT.e: Min area if AT must be >= ^AT_e um2
     AREA AT_drc < AT_e
}

AT.f {
     @AT.f: Min enclosed area must be >= ^AT_f um2
     AT_hole=HOLES AT_drc INNER
     AREA AT_hole < AT_f
}

#IFDEF CHECK_DUMMY

VARIABLE ATDUM_a1	0.8
VARIABLE ATDUM_a2	3
VARIABLE ATDUM_b	0.8
VARIABLE ATDUM_c	0.6
VARIABLE ATDUM_d	4.5
VARIABLE ATDUM_e	4.5
VARIABLE ATDUM_f	0
VARIABLE ATDUM_g	16.2
VARIABLE ATDUM_h	1.35
VARIABLE ATDUM_i	2.25
VARIABLE ATDUM_j1	0.8
VARIABLE ATDUM_j2	160
VARIABLE ATDUM_k	0.54

ATDUM.a1 {
     @ATDUM.a1: Min width of ATDUM must be >= ^ATDUM_a1 um
     L1001=INTERNAL ATDUM < ATDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

ATDUM.a2 {
     @ATDUM.a2: Max width of ATDUM must be <= ^ATDUM_a2 um
     L1001=SIZE ATDUM BY ATDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

ATDUM.b {
     @ATDUM.b: Min space of ATDUM must be >= ^ATDUM_b um
     L1001=EXTERNAL ATDUM < ATDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL  
}

ATDUM.c {
     @ATDUM.c: Min clearance from ATDUM to AT(Overlap is not allowed) must be >= ^ATDUM_c um
     L1001=EXTERNAL ATDUM AT < ATDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT ATDUM AT
}

ATDUM.d {
     @ATDUM.d: Min clearance from ATDUM to FU (metal fuse)(Overlap is not allowed) must be >= ^ATDUM_d um
     L1001=EXTERNAL ATDUM FUSE < ATDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT ATDUM FUSE
}

ATDUM.e {
     @ATDUM.e: Min clearance from ATDUM to LMARK (metal fuse)(Overlap is not allowed) must be >= ^ATDUM_e um
     L1001=EXTERNAL ATDUM LMARK_mark < ATDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT ATDUM LMARK_mark
}

ATDUM.f {
     @ATDUM.f: Min clearance from ATDUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^ATDUM_f um
     AND ATDUM LOGO_mark
}

ATDUM.g {
     @ATDUM.g: Min clearance from ATDUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^ATDUM_g um
     L1001=EXTERNAL ATDUM INDUM_mark < ATDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT ATDUM INDUM_mark
}

ATDUM.h {
     @ATDUM.h: Min clearance from ATDUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^ATDUM_h um
     L1001=EXTERNAL ATDUM MCTM5 < ATDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT ATDUM MCTM5
}

ATDUM.i {
     @ATDUM.i: Min extension of chip edge beyond ATDUM must be >= ^ATDUM_i um
     L1001=ENCLOSURE ATDUM chip < ATDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

ATDUM.j1 {
     @ATDUM.j1: Min area of ATDUM must be >= ^ATDUM_j1 um2
     AREA ATDUM < ATDUM_j1
}

ATDUM.j2 {
     @ATDUM.j2: Max area of ATDUM must be <= ^ATDUM_j2 um2
     AREA ATDUM > ATDUM_j2
}

ATDUM.k {
     @ATDUM.k: Min clearance from ATDUM to ATbnd (dummy metal block)(Overlap is not allowed) must be >= ^ATDUM_k um
     L1001=EXTERNAL ATDUM AT_bnd < ATDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT ATDUM AT_bnd
}

ATDUM.t {
     @ATDUM.t: The ATDUM only shape allowed are square(or rectangular) and solid.
     HOLES ATDUM
     NOT RECTANGLE ATDUM ORTHOGONAL ONLY
}
#ENDIF

// slot_d_err_at=((ATSLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_atslot_edge=EXPAND EDGE ATSLOT_slot_drc OUTSIDE BY 0.01
long_atslot_edge=LENGTH exp_atslot_edge > SLOT_b
atslot_length=LENGTH long_atslot_edge < SLOT_d
slot_d_err_at=WITH EDGE ATSLOT_slot_drc atslot_length

// rule_SLOT_AT_c=(((AT_drc andnot (AT_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// AT_drc) area <0.05
at_with_cp=NOT OUTSIDE AT CP_drc
at_without_cp=NOT AT at_with_cp
at_width_gt_31d5=SIZE at_without_cp BY SLOT_j/2 UNDEROVER
at_width_lt_31d5=NOT AT at_width_gt_31d5
at_exp_edge=EXPAND EDGE at_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_AT_c=INSIDE at_exp_edge AT

// rule_SLOT_AT_j=(((AT_drc andnot (AT_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract ATSLOT_slot_drc
at_width31d5_wo_mct=NOT INTERACT at_width_gt_31d5 MCTM5
rule_SLOT_AT_j=NOT INTERACT at_width31d5_wo_mct ATSLOT_slot_drc

SLOT.AT.a {
     @SLOT.AT.a: Min width of ATSLOT must be >= ^SLOT_a um
     L1001=INTERNAL ATSLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.AT.b {
     @SLOT.AT.b: Max width of ATSLOT must be <= ^SLOT_b um
     L1001=SIZE ATSLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.AT.c {
     @SLOT.AT.c: Minimum width of a top metal line which is connected to wide metal line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_AT_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.AT.d {
     @SLOT.AT.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_at
     NOT INSIDE L1001 EXCL
}

SLOT.AT.e_f {
     @SLOT.AT.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL ATSLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.AT.h_i {
     @SLOT.AT.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE ATSLOT_slot_drc AT < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.AT.g {
     @SLOT.AT.g: Minimum clearance between two slots in neighbor layers must be >= ^SLOT_g um
     L1001=EXTERNAL A5SLOT_slot_drc ATSLOT_slot_drc< SLOT_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND A5SLOT_slot_drc ATSLOT_slot_drc 
}

SLOT.AT.j {
     @SLOT.AT.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_AT_j
     NOT INSIDE L1001 EXCL
}

/*
FUSE.f.at {
     @FUSE.f.at: Min extension from M1~Mn-2 to W1/V1~Vn-3 (stacked via) must be >=0.3um
     L1001=ENCLOSURE wt_fuse AT_drc < 0.3 ABUT<90 SINGULAR REGION
     NOT INSIDE L1001 EXCL
}

FUSE.k.at {
     L1001=@FUSE.k.at: Min.extension from M1~Mx to V1~Vx-1 in protection ring is 0.40
     ENCLOSURE wtfuse_ring Bat < 0.4 ABUT<90 SINGULAR REGION
     NOT INSIDE L1001 EXCL
}

FUSE.p.at {
     @FUSE.p.at: Min separation of metal island to protection ring must be >=1um
     L1001=EXTERNAL (wt_fuse NOT wtfuse_ring) atfuse_ring <1.0 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

FUSE.q.at {
     @FUSE.q.at: Min extension of PMDMY to protection ring of metal fuse must be >=0um
     NOT Bat PMDMY_mark
}
*/

#IFDEF CHECK_DENSITY

AT.i {
    @AT.i: Max AT global density must be <=70%. If less then 30%, please add dummy metal
    DENSITY (ALL_AT NOT ATSLOT_slot) >0<0.3 PRINT AT_DEN_I.densit
    DENSITY (ALL_AT NOT ATSLOT_slot) >0.7 PRINT AT_DEN_I.density 
}

at_not_exc=NOT ALL_AT metal_den_exc
AT.density.m {
     @AT.density.m: Min AT density over any 200umx200um area (checked by stepping in 100um increments) must be >=20%
     DENSITY at_not_exc chip_not_metal_exc <0.20 WINDOW 200 STEP 100 BACKUP PRINT AT_DEN_M.density 
     [ AREA(at_not_exc)/AREA(chip_not_metal_exc) ]
}

AT.density.n {
     @AT.density.n: Max AT density over any 200umx200um area (checked by stepping in 100um increments) must be >=80%
     DENSITY at_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT AT_DEN_N.density 
     [ AREA(at_not_exc)/AREA(chip_not_metal_exc) ]
}

AT.density.p {
     @AT.density.p: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=20% 
     DENSITY AT AT_bnd <0.20 WINDOW 200 STEP 100 BACKUP PRINT density_report_DAT_p.log
     [AREA(AT)/AREA(AT_bnd)]
} 

AT.density.q {
     @AT.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY AT AT_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DAT_q.log
     [AREA(AT)/AREA(AT_bnd)]
}

#ENDIF
#ENDIF

#IFDEF thickmetal6_process
#DEFINE gteSwitch1
#ENDIF

#IFDEF gteSwitch1
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.26 Thick Top Metal layer (TT)
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE TT_a	1.5
VARIABLE TT_b1  1.5
VARIABLE TT_b2  3
VARIABLE TT_c1  0.3
VARIABLE TT_c2  0.45
VARIABLE TT_d   50
VARIABLE TT_e   50
VARIABLE TT_f   2.15


TT.a {
     @TT.a: Min width of TT must be >= ^TT_a um
     tmp=INTERNAL TT_drc <TT_a REGION SINGULAR ABUT <90
     L1001=NOT tmp INDUM_mark
     NOT INSIDE L1001 EXCL_N
}

TT.b1 {
      @TT.b1: Min spacing of TT to TT must be >= ^TT_b1 um.
      @if the width of both metals less than 10um
     L1001=EXTERNAL tt_conn <TT_b1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

tt_gt_10=SIZE (TT_drc NOT INDUM_mark) BY 5.0 UNDEROVER
TT.b2 {
      @TT.b2: Min spacing of TT to TT must be >= ^TT_b2 um
      @if the width and length of one metal both larger than 10um.
     L1001=EXTERNAL tt_gt_10 TT_drc < TT_b2 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

TT.c {
     @TT.c: Min extension of TT beyond WT 
      @c1: in Line must be >= ^TT_c1 um
      @c2: Line-end must be >= ^TT_c2 um
      @c3: inner corner must be >= ^TT_c1 um
      @c4: outer corner must be >= ^TT_c2 
      X = RECTANGLE ENC WT_drc TT_drc ABUT<90  OUTSIDE ALSO
      GOOD TT_c1 OPPOSITE TT_c2 OPPOSITE TT_c1 OPPOSITE TT_c2 OPPOSITE
      ENC (X NOT INSIDE EXCL_N) TT_drc < TT_c1 ABUT<90 SINGULAR OVERLAP OUTSIDE ALSO
      Y = ENC [X] (TT_drc NOT INSIDE EXCL_N) < TT_c2 OPPOSITE
      INT Y < 0.01 ABUT==90 INTERSECTING ONLY
}

TT.d {
     @TT.d: Min extension of INDDMY beyond TT must be >= ^TT_d 0um
     L1001=ENCLOSURE TT_drc INDUM_mark < TT_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL_N
}

TT.e {
     @TT.e: Min spacing of TT of inductor to other TT must be >= ^TT_e um
     L1001=EXTERNAL tt_conn indu_tt < TT_e REGION SINGULAR ABUT>0<90
     NOT INSIDE L1001 EXCL_N
}

TT.f {
     @TT.f: Min area of TT island is ^TT_f um2.
      AREA TT_drc < TT_f
}

TT.i {
     @TT.i: Both active and passive device inside INDDMY region are not allowed.
     AND forbiden INDUM_mark
}

TT.j.a5 {
     @TT.j.a5: No via and metal layers inside INDDMY region are allowed expect
     @ underpass via and metal interconnect of inductor.
     COPY err_mtt_j
}

#IFDEF CHECK_DUMMY

VARIABLE TTDUM_a1	3.0
VARIABLE TTDUM_a2	3.0
VARIABLE TTDUM_b	3.0
VARIABLE TTDUM_c	3.0
VARIABLE TTDUM_d	4.5
VARIABLE TTDUM_e	4.5
VARIABLE TTDUM_f	0
VARIABLE TTDUM_g	16.2
VARIABLE TTDUM_h	1.35
VARIABLE TTDUM_i	2.25
VARIABLE TTDUM_j1	9.0
VARIABLE TTDUM_j2	600
VARIABLE TTDUM_k	0.54

TTDUM.a1 {
     @TTDUM.a1: Min width of TTDUM must be >= ^TTDUM_a1 um
     L1001=INTERNAL TTDUM < TTDUM_a1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TTDUM.a2 {
     @TTDUM.a2: Max width of TTDUM must be <= ^TTDUM_a2 um
     L1001=SIZE TTDUM BY TTDUM_a2/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

TTDUM.b {
     @TTDUM.b: Min space of TTDUM must be >= ^TTDUM_b um
     L1001=EXTERNAL TTDUM < TTDUM_b REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL   
}

TTDUM.c {
     @TTDUM.c: Min clearance from TTDUM to TT(Overlap is not allowed) must be >= ^TTDUM_c um
     L1001=EXTERNAL TTDUM TT < TTDUM_c REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT TTDUM TT
}

TTDUM.d {
     @TTDUM.d: Min clearance from TTDUM to FU (metal fuse)(Overlap is not allowed) must be >= ^TTDUM_d um
     L1001=EXTERNAL TTDUM FUSE < TTDUM_d REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT TTDUM FUSE
}

TTDUM.e {
     @TTDUM.e: Min clearance from TTDUM to LMARK (metal fuse)(Overlap is not allowed) must be >= ^TTDUM_e um
     L1001=EXTERNAL TTDUM LMARK_mark < TTDUM_e REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT TTDUM LMARK_mark
}

TTDUM.f {
     @TTDUM.f: Min clearance from TTDUM to LOGO (metal fuse)(Overlap is not allowed) must be >= ^TTDUM_f um
     AND TTDUM LOGO_mark
}

TTDUM.g {
     @TTDUM.g: Min clearance from TTDUM to INDDMY (inductor)(Overlap is not allowed) must be >= ^TTDUM_g um
     L1001=EXTERNAL TTDUM INDUM_mark < TTDUM_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT TTDUM INDUM_mark
}

TTDUM.h {
     @TTDUM.h: Min clearance from TTDUM to CTDMY (MIM Capacotor)(Overlap is not allowed) must be >= ^TTDUM_h um
     L1001=EXTERNAL TTDUM MCTM5 < TTDUM_h REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT TTDUM MCTM5
}

TTDUM.i {
     @TTDUM.i: Min extension of chip edge beyond TTDUM must be >= ^TTDUM_i um
     L1001=ENCLOSURE TTDUM chip < TTDUM_i REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

TTDUM.j1 {
     @TTDUM.j1: Min area of TTDUM must be >= ^TTDUM_j1 um2
     AREA TTDUM < TTDUM_j1
}

TTDUM.j2 {
     @TTDUM.j2: Max area of TTDUM must be <= ^TTDUM_j2 um2
     AREA TTDUM > TTDUM_j2
}

TTDUM.k {
     @TTDUM.k: Min clearance from TTDUM to TTBLK (dummy metal block)(Overlap is not allowed) must be >= ^TTDUM_k um
     L1001=EXTERNAL TTDUM TT_bnd < TTDUM_k REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     INTERACT TTDUM TT_bnd
}

TTDUM.t {
     @TTDUM.t: The TTDUM only shape allowed are square(or rectangular) and solid.
     HOLES TTDUM
     NOT RECTANGLE TTDUM ORTHOGONAL ONLY
}
#ENDIF

// slot_d_err_tt=((TTSLOT_slot_drc growEdges 0.01) segment > ^SLOT_b) length < SLOT_d
exp_ttslot_edge=EXPAND EDGE TTSLOT_slot_drc OUTSIDE BY 0.01
long_ttslot_edge=LENGTH exp_ttslot_edge > SLOT_b
ttslot_length=LENGTH long_ttslot_edge < SLOT_d
slot_d_err_tt=WITH EDGE TTSLOT_slot_drc ttslot_length

// rule_SLOT_TT_c=(((TT_drc andnot (TT_drc overlap CP_drc)) downUp SLOT_j/2)) grow90Edges slot_grow) inside
// TT_drc) area <0.05
tt_with_cp=NOT OUTSIDE TT CP_drc
tt_without_cp=NOT TT tt_with_cp
tt_width_gt_31d5=SIZE tt_without_cp BY SLOT_j/2 UNDEROVER
tt_width_lt_31d5=NOT TT tt_width_gt_31d5
tt_exp_edge=EXPAND EDGE tt_width_lt_31d5 OUTSIDE BY slot_grow
rule_SLOT_TT_c=INSIDE tt_exp_edge TT

// rule_SLOT_TT_j=(((TT_drc andnot (TT_drc overlap CP_drc)) downUp SLOT_j/2) notInteract
// notInteract MCTM5) notInteract TTSLOT_slot_drc
tt_width31d5_wo_mct=NOT INTERACT tt_width_gt_31d5 MCTM5
rule_SLOT_TT_j=NOT INTERACT tt_width31d5_wo_mct TTSLOT_slot_drc

SLOT.TT.a {
     @SLOT.TT.a: Min width of TTSLOT must be >= ^SLOT_a um
     L1001=INTERNAL TTSLOT_slot_drc < SLOT_a REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.TT.b {
     @SLOT.TT.b: Max width of TTSLOT must be <= ^SLOT_b um
     L1001=SIZE TTSLOT_slot_drc BY SLOT_b/2 UNDEROVER
     NOT INSIDE L1001 EXCL
}

SLOT.TT.c {
     @SLOT.TT.c: Minimum width of a top metal line which is connected to wide metal line must be >= ^SLOT_c um.
     L1001=AREA rule_SLOT_TT_c < slot_grow * SLOT_c
     NOT INSIDE L1001 EXCL
}

SLOT.TT.d {
     @SLOT.TT.d: Minimum length of an open slot must be >= ^SLOT_d um
     L1001=COPY slot_d_err_tt
     NOT INSIDE L1001 EXCL
}

SLOT.TT.e_f {
     @SLOT.TT.e_f: Minimum spacing between any two parallel open slots must be >= ^SLOT_ef um
     L1001=EXTERNAL TTSLOT_slot_drc < SLOT_ef REGION SINGULAR PARA ONLY OPPOSITE
     NOT INSIDE L1001 EXCL
}

SLOT.TT.h_i {
     @SLOT.TT.h_i: Minimum distance from any open slot to the inner/outer metal edge must be >= ^SLOT_hi um
     L1001=ENCLOSURE TTSLOT_slot_drc TT < SLOT_hi REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

SLOT.TT.g {
     @SLOT.TT.g: Minimum clearance between two slots in neighbor layers must be >= ^SLOT_g um
     L1001=EXTERNAL A5SLOT_slot_drc TTSLOT_slot_drc< SLOT_g REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
     AND A5SLOT_slot_drc TTSLOT_slot_drc 
}

SLOT.TT.j {
     @SLOT.TT.j: Maximum Metal1 width without sloting must be <= ^SLOT_j um
     L1001=COPY rule_SLOT_TT_j
     NOT INSIDE L1001 EXCL
}

/*
FUSE.f.tt {
     @FUSE.f.tt: Min extension from M1~Mn-2 to W1/V1~Vn-3 (stacked via) must be >=0.3um
     L1001=ENCLOSURE wt_fuse TT_drc < 0.3 ABUT<90 SINGULAR REGION
     NOT INSIDE L1001 EXCL
}

FUSE.k.tt {
     @FUSE.k.tt: Min.extension from M1~Mx to V1~Vx-1 in protection ring is 0.40
     L1001=ENCLOSURE wtfuse_ring Btt < 0.4 ABUT<90 SINGULAR REGION
     NOT INSIDE L1001 EXCL
}

FUSE.p.tt {
     @FUSE.p.tt: Min separation of metal island to protection ring must be >=1um
     L1001=EXTERNAL (wt_fuse NOT wtfuse_ring) ttfuse_ring <1.0 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

FUSE.q.tt {
     @FUSE.q.tt: Min extension of PMDMY to protection ring of metal fuse must be >=0um
     NOT Btt PMDMY_mark
}
*/

#IFDEF CHECK_DENSITY

tt_not_exc=NOT ALL_TT metal_den_exc
TT.density.g {
     @TT.density.g: Min pattern density of TT must be >=30%. If less then 30%, please add dummy metal
     DENSITY (ALL_TT NOT TTSLOT_slot) <0.3 PRINT TT_DEN_1L.density 
}

TT.density.m {
     @TT.density.m: Min TT density over any 200umx200um area (checked by stepping in 100um increments) must be >=20%
     DENSITY tt_not_exc chip_not_metal_exc <0.20 WINDOW 200 STEP 100 BACKUP PRINT TT_DEN_M.density 
     [ AREA(tt_not_exc)/AREA(chip_not_metal_exc) ]
}

TT.density.n {
     @TT.density.n: Max TT density over any 200umx200um area (checked by stepping in 100um increments) must be <=80%
     DENSITY tt_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT TT_DEN_N.density 
     [ AREA(tt_not_exc)/AREA(chip_not_metal_exc) ]
}

TT.density.p {
     @TT.density.p: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=20% 
     DENSITY TT TT_bnd <0.20 WINDOW 200 STEP 100 BACKUP PRINT density_report_DTT_p.log
     [AREA(TT)/AREA(TT_bnd)]
} 

TT.density.q {
     @TT.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY TT TT_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DTT_q.log
     [AREA(TT)/AREA(TT_bnd)]
}

#ENDIF
#ENDIF

#IFDEF CHECK_DENSITY

A1.l {
    @A1.l: Max A1 global density must be <=70%. If less then 30%, please add dummy metal.
    DENSITY (ALL_A1 NOT A1SLOT_slot) >0<0.3 PRINT A1_DEN_L.density    
    DENSITY (ALL_A1 NOT A1SLOT_slot) >0.7 PRINT A1_DEN_L.density 
}

A2.o {
    @A2.o: Max A2 global density must be <=70%. If less then 30%, please add dummy metal
    DENSITY (ALL_A2 NOT A2SLOT_slot) >0<0.3 PRINT A2_DEN_O.density
    DENSITY (ALL_A2 NOT A2SLOT_slot) >0.7 PRINT A2_DEN_O.density 
}

A3.o {
    @A3.o: Max A3 global density must be <=70%. If less then 30%, please add dummy metal
    DENSITY (ALL_A3 NOT A3SLOT_slot) >0<0.3 PRINT A3_DEN_O.density
    DENSITY (ALL_A3 NOT A3SLOT_slot) >0.7 PRINT A3_DEN_O.density 
}

A4.o {
    @A4.o: Max A4 global density must be <=70%. If less then 30%, please add dummy metal
    DENSITY (ALL_A4 NOT A4SLOT_slot) >0<0.3 PRINT A4_DEN_O.density
    DENSITY (ALL_A4 NOT A4SLOT_slot) >0.7 PRINT A4_DEN_O.density 
}

A5.o {
    @A5.o: Max A5 global density must be <=70%. If less then 30%, please add dummy metal
    DENSITY (ALL_A5 NOT A5SLOT_slot) >0<0.3 PRINT A5_DEN_O.density
    DENSITY (ALL_A5 NOT A5SLOT_slot) >0.7 PRINT A5_DEN_O.density 
}

to_den_exc=((((RES_NW_mark OR FUSE) OR LMARK_mark) OR LOGO_mark) OR INDUM_mark) OR DUMBA_mark
chip_not_to_exc=NOT chip to_den_exc
to_not_exc=NOT ALL_TO to_den_exc

TO.density.n {
     @TO.density.n: Min local density (TO or TO dummy) must be >=20%
     DENSITY to_not_exc chip_not_to_exc < 0.2 WINDOW 500 STEP 250 BACKUP PRINT TO_DEN_1.density
     [ AREA(to_not_exc)/AREA(chip_not_to_exc) ]

}

TO.density.o {
     @TO.density.o: Max local density (TO or TO dummy) must be <=80%
     DENSITY to_not_exc chip_not_to_exc > 0.8 WINDOW 500 STEP 250 BACKUP PRINT TO_DEN_2.density
     [ AREA(to_not_exc)/AREA(chip_not_to_exc) ]

}

TO.density.p {
     @TO.density.p: Min full chip density (TO or TO dummy )must be >=25%
     DENSITY ALL_TO <0.25 PRINT TO_DEN_3.density
}

TO.density.q {
     @TO.density.q: Max full chip density (TO or TO dummy )must be >=75%
     DENSITY ALL_TO >0.75 PRINT TO_DEN_4.density
}

GT.density.m {
     @GT.density.m: (GT or GT dummy) density across full chip must be >=14%
     DENSITY ALL_GT <0.14 PRINT GT_DEN_1.density
}

//METAL DENSITY RULES 
//===================

metal_den_exc=((((FUSE OR LMARK_mark) OR LOGO_mark) OR INDUM_mark) OR DUMBM_mark) OR metal_bnd
chip_not_metal_exc=NOT chip metal_den_exc

a1_not_exc=NOT ALL_A1 metal_den_exc
A1.density.l {
     @A1.density.l: Min A1 density over any 200umx200um area (checked by stepping in 100um increments) must be >=15%
     DENSITY a1_not_exc chip_not_metal_exc <0.15 WINDOW 200 STEP 100 BACKUP PRINT A1_DEN_1L.density 
     [ AREA(a1_not_exc)/AREA(chip_not_metal_exc) ]
}

a2_not_exc=NOT ALL_A2 metal_den_exc
A2.density.l {
     @A2.density.l: Min A2 density over any 200umx200um area (checked by stepping in 100um increments) must be >=15%
     DENSITY a2_not_exc chip_not_metal_exc <0.15 WINDOW 200 STEP 100 BACKUP PRINT A2_DEN_1L.density 
     [ AREA(a2_not_exc)/AREA(chip_not_metal_exc) ]
}

a3_not_exc=NOT ALL_A3 metal_den_exc
A3.density.l {
     @A3.density.l: Min A3 density over any 200umx200um area (checked by stepping in 100um increments) must be >=15%
     DENSITY a3_not_exc chip_not_metal_exc <0.15 WINDOW 200 STEP 100 BACKUP PRINT A3_DEN_1L.density 
     [ AREA(a3_not_exc)/AREA(chip_not_metal_exc) ]
}

a4_not_exc=NOT ALL_A4 metal_den_exc
A4.density.l {
     @A4.density.l: Min A4 density over any 200umx200um area (checked by stepping in 100um increments) must be >=15%
     DENSITY a4_not_exc chip_not_metal_exc <0.15 WINDOW 200 STEP 100 BACKUP PRINT A4_DEN_1L.density 
     [ AREA(a4_not_exc)/AREA(chip_not_metal_exc) ]
}

a5_not_exc=NOT ALL_A5 metal_den_exc
A5.density.l {
     @A5.density.l: Min A5 density over any 200umx200um area (checked by stepping in 100um increments) must be >=15%
     DENSITY a5_not_exc chip_not_metal_exc <0.15 WINDOW 200 STEP 100 BACKUP PRINT A5_DEN_1L.density 
     [ AREA(a5_not_exc)/AREA(chip_not_metal_exc) ]
}

A1.density.n {
     @A1.density.n: Max A1 density over any 200umx200um area (checked by stepping in 100um increments) must be <=80%
     DENSITY a1_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT A1_DEN_N.density 
     [ AREA(a1_not_exc)/AREA(chip_not_metal_exc) ]
}

A2.density.n {
     @A2.density.n: Max A2 density over any 200umx200um area (checked by stepping in 100um increments) must be <=80%
     DENSITY a2_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT A2_DEN_N.density 
     [ AREA(a2_not_exc)/AREA(chip_not_metal_exc) ]
}

A3.density.n {
     @A3.density.n: Max A3 density over any 200umx200um area (checked by stepping in 100um increments) must be <=80%
     DENSITY a3_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT A3_DEN_N.density 
     [ AREA(a3_not_exc)/AREA(chip_not_metal_exc) ]
}

A4.density.n {
     @A4.density.n: Max A4 density over any 200umx200um area (checked by stepping in 100um increments) must be <=80%
     DENSITY a4_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT A4_DEN_N.density 
     [ AREA(a4_not_exc)/AREA(chip_not_metal_exc) ]
}

A5.density.n {
     @A5.density.n: Max A5 density over any 200umx200um area (checked by stepping in 100um increments) must be <=80%
     DENSITY a5_not_exc chip_not_metal_exc >0.8 WINDOW 200 STEP 100 BACKUP PRINT A5_DEN_N.density 
     [ AREA(a5_not_exc)/AREA(chip_not_metal_exc) ]
}

A1.density.o {
     @A1.density.o: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=15% 
     DENSITY A1 A1_bnd <0.15 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA1_o.log
     [AREA(A1)/AREA(A1_bnd)]
} 

A2.density.o {
     @A2.density.o: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=15% 
     DENSITY A2 A2_bnd <0.15 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA2_o.log
     [AREA(A2)/AREA(A2_bnd)]
} 

A3.density.o {
     @A3.density.o: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=15% 
     DENSITY A3 A3_bnd <0.15 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA3_o.log
     [AREA(A3)/AREA(A3_bnd)]
} 

A4.density.o {
     @A4.density.o: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=15% 
     DENSITY A4 A4_bnd <0.15 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA4_o.log
     [AREA(A4)/AREA(A4_bnd)]
} 

A5.density.o {
     @A5.density.o: Min metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be >=15% 
     DENSITY A5 A5_bnd <0.15 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA5_o.log
     [AREA(A5)/AREA(A5_bnd)]
} 

A1.density.q {
     @A1.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY A1 A1_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA1_q.log
     [AREA(A1)/AREA(A1_bnd)]
}  

A2.density.q {
     @A2.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY A2 A2_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA2_q.log
     [AREA(A2)/AREA(A2_bnd)]
} 

A3.density.q {
     @A3.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY A3 A3_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA3_q.log
     [AREA(A3)/AREA(A3_bnd)]
} 

A4.density.q {
     @A4.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY A4 A4_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA4_q.log
     [AREA(A4)/AREA(A4_bnd)]
} 

A5.density.q {
     @A5.density.q Max metal density over any 200umx200um area (checked by stepping in 100um increments) within DAxBLK must be <=80% 
     DENSITY A5 A5_bnd >0.8 WINDOW 200 STEP 100 BACKUP PRINT density_report_DA5_q.log
     [AREA(A5)/AREA(A5_bnd)]
} 

#ENDIF

#IFDEF CHECK_CSMC_IP_DRC_Rule

8.6.a.1{
     @8.6.a.1: Min. width of non-salicided poly resistor must be >=0.58 um
     L1001=INTERNAL non_salic_res_gt_body < 0.58 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

#ELSE

8.6.a.1{
     @8.6.a.1: Min. width of non-salicided poly resistor must be >= ^8_6_a_1 um
     L1001=INTERNAL non_salic_res_gt_body < 8_6_a_1 REGION SINGULAR ABUT<90
     NOT INSIDE L1001 EXCL
}

#ENDIF


8.6.b.1{
     @8.6.b.1: Min. length of non-salicided poly resistor must be >= ^8_6_b_1 um
     nsali_resgt_exp1=EXPAND EDGE non_salic_res_gt_body OUTSIDE BY 0.01
     nsali_resgt_length=OUTSIDE nsali_resgt_exp1 non_salic_res_gt
     nsali_resgt_length_err=LENGTH nsali_resgt_length <8_6_b_1
     L1001=WITH EDGE non_salic_res_gt_body nsali_resgt_length_err
     NOT INSIDE L1001 EXCL
}

res_gt_sab=INTERACT SI_drc gt_res
res_gt_w1=NOT OUTSIDE W1_drc non_salic_res_gt
8.6.d.2{
     @8.6.d.2: Min. & Max. clearance from SAB to W1 on TO or poly must be == ^8_6_d um
     EXTERNAL res_gt_w1 res_gt_sab < 8_6_d REGION SINGULAR ABUT<90
     tmp1=SIZE res_gt_sab BY ( 8_6_d + 0.001 )
     L1001=res_gt_w1 OUTSIDE tmp1
     NOT INSIDE L1001 EXCL
}

A2.f {
     @A2.f: Min space between 45 degree bent metal must be >= ^A2_f um (the bent metal length is >=0.5um).
     L1001=EXTERNAL A2_drc a2_edge_45l < A2_f REGION ABUT<90
     NOT INSIDE L1001 EXCL_N
}

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//  8.29 MOM capacitor
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE mom_a         0.18
VARIABLE mom_b         0.185
VARIABLE mom_c         0.18
VARIABLE mom_d         20
VARIABLE mom_e         5
VARIABLE mom_f1        0.5
VARIABLE mom_f2        0.5
VARIABLE mom_g         105
VARIABLE mom_i         1000
VARIABLE mom_j         90
VARIABLE mom_m         1

mom_a1=(AND A1_drc MOM_mark) AND DUMBA_mark
mom_a2=(AND A2_drc MOM_mark) AND DUMBA_mark
mom_a3=(AND A3_drc MOM_mark) AND DUMBA_mark
mom_a4=(AND A4_drc MOM_mark) AND DUMBA_mark
mom_a5=(AND A5_drc MOM_mark) AND DUMBA_mark
mom_a12345=(((OR mom_a1 mom_a2) OR mom_a3) OR mom_a4 ) OR mom_a5

spa_a1=(mom_region INTERACT mom_a1_all) NOT mom_a1_all
spa_a2=(mom_region INTERACT mom_a2_all) NOT mom_a2_all
spa_a3=(mom_region INTERACT mom_a3_all) NOT mom_a3_all
spa_a4=(mom_region INTERACT mom_a4_all) NOT mom_a4_all
spa_a5=(mom_region INTERACT mom_a5_all) NOT mom_a5_all

mom_a1_l=INSIDE EDGE (mom_a1 NOT INSIDE EXCL) MOM_mark
mom_a2_l=INSIDE EDGE (mom_a2 NOT INSIDE EXCL) MOM_mark
mom_a3_l=INSIDE EDGE (mom_a3 NOT INSIDE EXCL) MOM_mark
mom_a4_l=INSIDE EDGE (mom_a4 NOT INSIDE EXCL) MOM_mark
mom_a5_l=INSIDE EDGE (mom_a5 NOT INSIDE EXCL) MOM_mark

mom_ring1=((HOLES TO_drc INNER) NOT OUTSIDE DUMBA_mark) NOT OUTSIDE MOM_mark
mom_ring_to=TOUCH TO_drc mom_ring1

mom_ring_a1=A1_drc INTERACT ((A1_drc AND mom_ring_to) AND W1_drc)
mom_ring_a2=A2_drc INTERACT ((A2_drc AND mom_ring_to) AND W2_drc)
mom_ring_a3=A3_drc INTERACT ((A3_drc AND mom_ring_to) AND W3_drc)
mom_ring_a4=A4_drc INTERACT ((A4_drc AND mom_ring_to) AND W4_drc)
mom_ring_a5=A5_drc INTERACT ((A5_drc AND mom_ring_to) AND W5_drc)
mom_region=OR MOM_mark MOM_ter
mom_region_with_guardring=mom_region OR mom_ring_to

mom_a1_all=(A1_drc INTERACT MOM_mark) AND DUMBA_mark
mom_a2_all=(A2_drc INTERACT MOM_mark) AND DUMBA_mark
mom_a3_all=(A3_drc INTERACT MOM_mark) AND DUMBA_mark
mom_a4_all=(A4_drc INTERACT MOM_mark) AND DUMBA_mark
mom_a5_all=(A5_drc INTERACT MOM_mark) AND DUMBA_mark

A1_not_mom=((A1_drc NOT INTERACT MOM_mark) OR (A1 NOT INTERACT MOM_ter)) NOT mom_ring_a1
A2_not_mom=((A2_drc NOT INTERACT MOM_mark) OR (A2 NOT INTERACT MOM_ter)) NOT mom_ring_a2
A3_not_mom=((A3_drc NOT INTERACT MOM_mark) OR (A3 NOT INTERACT MOM_ter)) NOT mom_ring_a3
A4_not_mom=((A4_drc NOT INTERACT MOM_mark) OR (A4 NOT INTERACT MOM_ter)) NOT mom_ring_a4
A5_not_mom=((A5_drc NOT INTERACT MOM_mark) OR (A5 NOT INTERACT MOM_ter)) NOT mom_ring_a5
MOM_DUMBA=DUMBA_mark INTERACT MOM_mark
  
mom.a {
    @Min and Max width of A1/An finger must be == ^mom_a um
    L1001=INTERNAL mom_a1 < mom_a REGION SINGULAR ABUT<90
    L1002=INTERNAL mom_a2 < mom_a REGION SINGULAR ABUT<90
    L1003=INTERNAL mom_a3 < mom_a REGION SINGULAR ABUT<90
    L1004=INTERNAL mom_a4 < mom_a REGION SINGULAR ABUT<90
    L1005=INTERNAL mom_a5 < mom_a REGION SINGULAR ABUT<90
    L10011=SIZE mom_a1 BY mom_a/2 UNDEROVER
    L10012=SIZE mom_a2 BY mom_a/2 UNDEROVER
    L10013=SIZE mom_a3 BY mom_a/2 UNDEROVER
    L10014=SIZE mom_a4 BY mom_a/2 UNDEROVER
    L10015=SIZE mom_a5 BY mom_a/2 UNDEROVER
    L10018=SIZE mom_a12345 BY mom_a/2 UNDEROVER
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
    NOT INSIDE L10011 EXCL
    NOT INSIDE L10012 EXCL
    NOT INSIDE L10013 EXCL
    NOT INSIDE L10014 EXCL
    NOT INSIDE L10015 EXCL
    NOT INSIDE L10018 EXCL
}

mom.b {
    @Min and Max space of A1/An finger must be == ^mom_b um
    L1001=INTERNAL spa_a1 < mom_b REGION SINGULAR ABUT<90
    L1002=INTERNAL spa_a2 < mom_b REGION SINGULAR ABUT<90
    L1003=INTERNAL spa_a3 < mom_b REGION SINGULAR ABUT<90
    L1004=INTERNAL spa_a4 < mom_b REGION SINGULAR ABUT<90
    L1005=INTERNAL spa_a5 < mom_b REGION SINGULAR ABUT<90
    L10011=SIZE spa_a1 BY (mom_b+0.001)/2 UNDEROVER
    L10012=SIZE spa_a2 BY (mom_b+0.001)/2 UNDEROVER
    L10013=SIZE spa_a3 BY (mom_b+0.001)/2 UNDEROVER
    L10014=SIZE spa_a4 BY (mom_b+0.001)/2 UNDEROVER
    L10015=SIZE spa_a5 BY (mom_b+0.001)/2 UNDEROVER
    L100111=INTERNAL spa_a1 == (mom_b+0.001) REGION OPPOSITE
    L100112=INTERNAL spa_a2 == (mom_b+0.001) REGION OPPOSITE
    L100113=INTERNAL spa_a3 == (mom_b+0.001) REGION OPPOSITE
    L100114=INTERNAL spa_a4 == (mom_b+0.001) REGION OPPOSITE
    L100115=INTERNAL spa_a5 == (mom_b+0.001) REGION OPPOSITE
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
    NOT INSIDE L10011 EXCL
    NOT INSIDE L10012 EXCL
    NOT INSIDE L10013 EXCL
    NOT INSIDE L10014 EXCL
    NOT INSIDE L10015 EXCL
    NOT INSIDE L100111 EXCL
    NOT INSIDE L100112 EXCL
    NOT INSIDE L100113 EXCL
    NOT INSIDE L100114 EXCL
    NOT INSIDE L100115 EXCL
}

//;; mom.c is checked in An.a/W2.a/W2.c 

mom.d {
    @Min length of A1/An finger must be >= ^mom_d um
    LENGTH mom_a1_l < mom_d 
    LENGTH mom_a2_l < mom_d 
    LENGTH mom_a3_l < mom_d 
    LENGTH mom_a4_l < mom_d 
    LENGTH mom_a5_l < mom_d 
}

mom.e {
    @Min space from MOM to unrelaed metal must be >= ^mom_e um
    L1001=EXTERNAL ((A1_drc NOT INTERACT mom_region) NOT mom_ring_a1) mom_region < mom_e REGION SINGULAR ABUT<90
    L1002=EXTERNAL ((A2_drc NOT INTERACT mom_region) NOT mom_ring_a2) mom_region < mom_e REGION SINGULAR ABUT<90
    L1003=EXTERNAL ((A3_drc NOT INTERACT mom_region) NOT mom_ring_a3) mom_region < mom_e REGION SINGULAR ABUT<90
    L1004=EXTERNAL ((A4_drc NOT INTERACT mom_region) NOT mom_ring_a4) mom_region < mom_e REGION SINGULAR ABUT<90
    L1005=EXTERNAL ((A5_drc NOT INTERACT mom_region) NOT mom_ring_a5) mom_region < mom_e REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
}

mom.f1 {
    @If use guard ring, Min clearance from MOM A1/An to guard ring metal must be >= ^mom_f1 um
    L1001=EXTERNAL mom_a1_all mom_ring_a1 < mom_f1 REGION SINGULAR ABUT<90
    L1002=EXTERNAL mom_a2_all mom_ring_a2 < mom_f1 REGION SINGULAR ABUT<90
    L1003=EXTERNAL mom_a3_all mom_ring_a3 < mom_f1 REGION SINGULAR ABUT<90
    L1004=EXTERNAL mom_a4_all mom_ring_a4 < mom_f1 REGION SINGULAR ABUT<90
    L1005=EXTERNAL mom_a5_all mom_ring_a5 < mom_f1 REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
}

mom.f2 {
    @If use guard ring, Min clearance from MOM to guard ring TO must be >= ^mom_f2 um
    L1001=EXTERNAL mom_a1_all mom_ring_to < mom_f2 REGION SINGULAR ABUT<90
    L1002=EXTERNAL mom_a2_all mom_ring_to < mom_f2 REGION SINGULAR ABUT<90
    L1003=EXTERNAL mom_a3_all mom_ring_to < mom_f2 REGION SINGULAR ABUT<90
    L1004=EXTERNAL mom_a4_all mom_ring_to < mom_f2 REGION SINGULAR ABUT<90
    L1005=EXTERNAL mom_a5_all mom_ring_to < mom_f2 REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
}    

mom.g {   
    @Min MOM finger number must be >= ^mom_g
    L1001=MOM_mark INTERACT mom_a1 < mom_g
    L1002=MOM_mark INTERACT mom_a2 < mom_g
    L1003=MOM_mark INTERACT mom_a3 < mom_g
    L1004=MOM_mark INTERACT mom_a4 < mom_g
    L1005=MOM_mark INTERACT mom_a5 < mom_g
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
}

mom.i {   
    @Min MOM capacitance area is ^mom_i um2
    L1001=AREA MOM_mark < mom_i
    NOT INSIDE L1001 EXCL
}


mom.j {
    @ Max area of a single MOM cell is 10000um2, If size greater than 10000um2 
    @ than either of two side should not be greater than ^mom_j
    L1001=AREA (MOM_mark NOT INSIDE EXCL) > 10000
    L1002=LENGTH L1001 < mom_j
    NOT WITH EDGE L1001 L1002
}
mom.k { 
    @Both the active and passive device under MOM region are not allowed
    L1001=AND TO_drc mom_region 
    L1002=AND GT_drc mom_region
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
}

mom.l {
    @MOM capacitor is formed by A1 to An-1
    L1001=AND AT_drc MOM_mark
    L1002=AND TT_drc MOM_mark
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
}

mom.m {    
    @Active dummy pattern is not allowed in MOM region,
    @MOM need covered by mark layer DUMBA,and Min DUMBA enclosure of MOM metal must be >= ^mom_m um
    L1001=AND TODUM MOM_DUMBA
    L1002=NOT mom_region DUMBA_mark
    L1003=ENCLOSURE mom_region DUMBA_mark < mom_m REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
} 

mom.o {    
    @All dummy pattern is not allowed in MOM region, need cover NODMF  
    L1001= NOT MOM_DUMBA NODMF_mark
    NOT INSIDE L1001 EXCL

}

mom.p {
    @Unrelated metal pattern can not put in DUMBA
    L1001=AND A1_not_mom MOM_DUMBA
    L1002=AND A2_not_mom MOM_DUMBA
    L1003=AND A3_not_mom MOM_DUMBA
    L1004=AND A4_not_mom MOM_DUMBA
    L1005=AND A5_not_mom MOM_DUMBA
    L1008=AND AT_drc MOM_DUMBA
    L1009=AND TT_drc MOM_DUMBA
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
    NOT INSIDE L1008 EXCL 
    NOT INSIDE L1009 EXCL 
}

mom.r {
    @Please use the top metal layer which form MOM capacitor to connect MOM capacitor, if use other metal layers
    @to connect MOM capacitor, please contact TD to confirm it.
    L1003=mom_a5_all INSIDE mom_region
    L1004=(mom_a4_all NOT INTERACT mom_a5_all) INSIDE mom_region
    L1005=((mom_a3_all NOT INTERACT mom_a5_all) NOT INTERACT mom_a4_all) INSIDE mom_region
    NOT INSIDE L1003 EXCL
    NOT INSIDE L1004 EXCL
    NOT INSIDE L1005 EXCL
}

//;; mom.q is checked in lvs
//============================
//    5.28.3 Merge Ring 
//============================
VARIABLE  merge_ring_a        3.2
VARIABLE  merge_ring_d        0.3
VARIABLE  merge_ring_e        0.3
VARIABLE  merge_ring_f        0.16
VARIABLE  merge_ring_g        0.22

Merge_Ring.a {
    @Min. & Max. Merge ring width must be == ^merge_ring_a um.
    L1001=INTERNAL Merge_Ring < merge_ring_a REGION SINGULAR ABUT<90
    L1002=SIZE Merge_Ring BY (merge_ring_a)/2 UNDEROVER
    NOT INSIDE L1001 EXCL
    NOT INSIDE L1002 EXCL
}

Merge_Ring.d {
    @Min. clearance from Merge ring to SPW must be >= ^merge_ring_d um.
    L1001=EXTERNAL Merge_Ring SPW_drc < merge_ring_d REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

Merge_Ring.e {
    @Min. clearance from Merge ring to HV must be >= ^merge_ring_e um.
    L1001=EXTERNAL Merge_Ring HV_drc < merge_ring_e REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

Merge_Ring.f {
    @Min. clearance from Merge ring to PWB must be >= ^merge_ring_f um.
    L1001=EXTERNAL Merge_Ring PWB_drc < merge_ring_f REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

Merge_Ring.g {
    @Min. clearance from Merge ring to P+TO must be >= ^merge_ring_g um.
    L1001=EXTERNAL Merge_Ring pdiff < merge_ring_g REGION SINGULAR ABUT<90
    NOT INSIDE L1001 EXCL
}

all_layers_1=OR (OR (OR (OR (OR (OR TB_drc TO_drc) GT_drc) SP_drc) SN_drc) HV_drc) SI_drc
all_layers_2=OR (OR (OR (OR (OR (OR PWB_drc DN_drc) HR_drc) CT_drc) SNW_drc) SPW_drc) SE_drc
all_layers=OR all_layers_1 all_layers_2

Merge_Ring.h {
    @Min. clearance from Merge ring to P+TO must be >= ^merge_ring_g um.
    Merge_Ring AND all_layers
}

//============================
//    Conventional Check
//============================

Convention_FLT_NW {
@ NW without N+ pick up
  L1001=TB_drc NOT INTERACT ntap
  NOT INSIDE L1001 EXCL
}

Convention_BPMO {
@ Pmos in PW
  L1001=AND pgate pwell
  NOT INSIDE L1001 EXCL
}

Convention_NWMO {
@ Nmos in NW
  L1001=AND (ngate NOT INTERACT VARMOS) TB_drc
  NOT INSIDE L1001 EXCL
}

Convention_SNWMO {
@ Nmos in SNW
  L1001=AND (ngate NOT INTERACT VARMOS) SNW_drc
  NOT INSIDE L1001 EXCL
}

Convention_PSUB2 {
@ ptap cannot cut PSUB2
  L1001=ptap CUT PSUB2
  NOT INSIDE L1001 EXCL
}

Pwell_not_enclose_ptap{
  @Pwell_not_enclose_ptap: pwell without pick-up layer ptd is not allowed.
  L1001=HOLES TB_drc INNER
  NOT INTERACT L1001 ptap
}

//============================
//   ISO RING CHECK 
//============================

bad_device_in_iso_ring_1=OR BJT_mark RES_NW_mark
bad_device_in_iso_ring_2=OR (OR SNW_drc SPW_drc) EECELL
bad_device_in_iso_ring=OR bad_device_in_iso_ring_1 bad_device_in_iso_ring_2
//iso_ring=((HOLES TB_drc INNER) AND DN_drc) AND DIODE_ISO

dn_noTB=DN_drc NOT TB_drc
dn_noTB_edge=dn_noTB NOT TOUCH EDGE TB_drc
dn_isolated_tb=dn_noTB NOT WITH EDGE dn_noTB_edge

iso_ring=AND dn_isolated_tb DIODE_ISO

ISO_RING_CHECK_device {
@ Only mn15/mp15/mn33/mp33/SRAM/poly resistor/N+ or P+ diffusion resistor/metal resistor/MOM/CMIM/Varactor
@ dnplpw/dnphpw/dpplnw/dpphnw can be used in ISO ring
  DIODE_ISO AND bad_device_in_iso_ring
}

ISO_RING_CHECK_ptap {
@ ISO RING without P+ pick up
  iso_ring NOT INTERACT ptap
}






