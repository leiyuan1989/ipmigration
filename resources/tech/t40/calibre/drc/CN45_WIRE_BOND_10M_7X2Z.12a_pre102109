//****************************************************************************
//  CALIBRE DRC COMMAND FILE - CN45_WIRE_BOND_10M_7X2Z.12a_pre102109  (10/21/2009)
//  FOR TSMC 45NM/40NM 1P10M WIRE BOND PAD PROCESS WITH 7X2Z METAL OPTION  
//  DRC COMMAND FILE DOCUMENT: T-N45-CL-DR-003-C1 VER 1.2a_pre102109
//  DESIGN RULE DOCUMENT: T-N45-CL-DR-003 VER. 1.1
//****************************************************************************
//****************************************************************************
//TSMC developed this deck using Mentor Graphics proprietary SVRF and TVF formats, 
//it is to only be used in Calibre tools.
//****************************************************************************


//OPTIONS
//=======
/* select process */
#DEFINE HALF_NODE       //Turn on for 'N40LP/N40G'. Turn off for 'N45LP'. 
 
/* select Redistribution Interconnection */
#DEFINE with_AP           // Turn on to use AP as the redistribution metal after passivation (AP_RDL)

/* select optional layer */
#DEFINE with_PM	          // Turn off if process without Polyimide

/* select pad pitch and structure */
//#DEFINE PITCH_40_SINGLE  //Turn on to use single in-line pad with pitch >= 40um
//#DEFINE PITCH_45_SINGLE  //Turn on to use single in-line pad with pitch >= 45um
//#DEFINE PITCH_50_SINGLE  //Turn on to use single in-line pad with pitch >= 50um
//#DEFINE PITCH_55_SINGLE  //Turn on to use single in-line pad with pitch >= 55um
//#DEFINE PITCH_60_SINGLE  //Turn on to use single in-line pad with pitch >= 60um

//#DEFINE PITCH_45_STAGGER  //Turn on to use staggered pad with pitch >= 45um
//#DEFINE PITCH_50_STAGGER  //Turn on to use staggered pad with pitch >= 50um
#DEFINE PITCH_60_STAGGER  //Turn on to use staggered pad with pitch >= 60um
//#DEFINE PITCH_70_STAGGER  //Turn on to use staggered pad with pitch >= 70um
//#DEFINE PITCH_80_STAGGER  //Turn on to use staggered pad with pitch >= 80um

//#DEFINE PITCH_80_TRITIER  //Turn on to use tri-tier pad with  pitch >= 80um 

/*Please note that for each pad structure (single_in_line, stagger, or tri_tier) only one kind of pitch can exist.*/

/* select sealring type*/
//#DEFINE P3_SEALRING  // Turn on for P3_SEALRING (only for old layout)

// ENVIRONMENT SETUP
//==================
PRECISION    1000
RESOLUTION      5

LAYOUT SYSTEM GDSII
LAYOUT PATH "GDSFILENAME"
LAYOUT PRIMARY "TOPCELLNAME"

DRC RESULTS DATABASE "DRC_RES.db"
DRC SUMMARY REPORT "DRC.rep"
DRC KEEP EMPTY NO
DRC CHECK TEXT ALL
DRC MAXIMUM RESULTS ALL

FLAG OFFGRID YES
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES

// Rule Value Variables
// =====================

VARIABLE SRwidth   24.0 // width of seal ring including assembly isolation region
VARIABLE GRID      0.005
VARIABLE CB_W_1    3
VARIABLE CB_S_1    3

#IFDEF PITCH_40_SINGLE 
VARIABLE CB2_W_1_SI 35
VARIABLE CB2_W_2_SI 70
VARIABLE CB2_S_1_SI 5  
VARIABLE CB2_P_1_SI 40  
#ELSE
#IFDEF PITCH_45_SINGLE
VARIABLE CB2_W_1_SI 40
VARIABLE CB2_W_2_SI 80
VARIABLE CB2_S_1_SI 5 
VARIABLE CB2_P_1_SI 45 
#ELSE
#IFDEF PITCH_50_SINGLE
VARIABLE CB2_W_1_SI 44
#IFDEF HALF_NODE
VARIABLE CB2_W_2_SI 88
#ELSE
VARIABLE CB2_W_2_SI 80
#ENDIF
VARIABLE CB2_S_1_SI 6
VARIABLE CB2_P_1_SI 50 
#ELSE
#IFDEF PITCH_55_SINGLE
VARIABLE CB2_W_1_SI 49
#IFDEF HALF_NODE
VARIABLE CB2_W_2_SI 88
#ELSE
VARIABLE CB2_W_2_SI 66
#ENDIF
VARIABLE CB2_S_1_SI 6 
VARIABLE CB2_P_1_SI 55
#ELSE
#IFDEF PITCH_60_SINGLE
VARIABLE CB2_W_1_SI 54
VARIABLE CB2_W_2_SI 66
VARIABLE CB2_S_1_SI 6 
VARIABLE CB2_P_1_SI 60
#ELSE
VARIABLE CB2_W_1_SI 54
VARIABLE CB2_W_2_SI 66
VARIABLE CB2_S_1_SI 6 
VARIABLE CB2_P_1_SI 60
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF PITCH_45_STAGGER
#IFDEF HALF_NODE
VARIABLE CB2_W_1_ST 40
VARIABLE CB2_W_2_ST 80
VARIABLE CB2_S_1_ST 5 
VARIABLE CB2_P_1_ST 45 
#ELSE
VARIABLE CB2_W_1_ST 40
VARIABLE CB2_W_2_ST 80
VARIABLE CB2_S_1_ST 5 
VARIABLE CB2_P_1_ST 45 
#ENDIF
VARIABLE CB2_W_3_ST 20
#ELSE
#IFDEF PITCH_50_STAGGER
#IFDEF HALF_NODE
VARIABLE CB2_W_1_ST 44
VARIABLE CB2_W_2_ST 88
VARIABLE CB2_S_1_ST 6  
VARIABLE CB2_P_1_ST 50
#ELSE
VARIABLE CB2_W_1_ST 44
VARIABLE CB2_W_2_ST 80
VARIABLE CB2_S_1_ST 6 
VARIABLE CB2_P_1_ST 50 
#ENDIF
VARIABLE CB2_W_3_ST 20
#ELSE
#IFDEF PITCH_60_STAGGER
VARIABLE CB2_W_1_ST 54
VARIABLE CB2_W_2_ST 66
VARIABLE CB2_S_1_ST 6 
VARIABLE CB2_P_1_ST 60
VARIABLE CB2_W_3_ST 20
#ELSE
#IFDEF PITCH_70_STAGGER
VARIABLE CB2_W_1_ST 58
VARIABLE CB2_W_2_ST 66
VARIABLE CB2_S_1_ST 6 
VARIABLE CB2_P_1_ST 70
VARIABLE CB2_W_3_ST 45
#ELSE
#IFDEF PITCH_80_STAGGER
VARIABLE CB2_W_1_ST 65
VARIABLE CB2_W_2_ST 75
VARIABLE CB2_S_1_ST 6
VARIABLE CB2_P_1_ST 80 
VARIABLE CB2_W_3_ST 50
#ELSE
VARIABLE CB2_W_1_ST 65
VARIABLE CB2_W_2_ST 75
VARIABLE CB2_S_1_ST 6
VARIABLE CB2_P_1_ST 80 
VARIABLE CB2_W_3_ST 50
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF PITCH_80_TRITIER
VARIABLE CB2_W_1_TR 65
VARIABLE CB2_W_2_TR 75
VARIABLE CB2_S_1_TR 6
VARIABLE CB2_P_1_TR 80
VARIABLE CB2_W_3_TR 50
#ELSE
VARIABLE CB2_W_1_TR 65
VARIABLE CB2_W_2_TR 75
VARIABLE CB2_S_1_TR 6
VARIABLE CB2_P_1_TR 80
VARIABLE CB2_W_3_TR 50
#ENDIF

VARIABLE CB2_S_2    2.5
VARIABLE CB2_S_3    15


VARIABLE CB2_EN_1   1.0 
VARIABLE CB2_R_6_MIN 2.0 
VARIABLE CB2_R_6_MAX 3.0
VARIABLE CB2VIA1_W_2  0.07
VARIABLE CB2VIA1_S_3  0.09
VARIABLE CB2VIA1_EN_4 0.05
VARIABLE CB2VIA1_R_4  81
VARIABLE CB2VIA1_R_3   0.03
VARIABLE CB2VIA1_R_3_1 0.02
VARIABLE CB2VIA2_W_2  0.07
VARIABLE CB2VIA2_S_3  0.09
VARIABLE CB2VIA2_EN_4 0.05
VARIABLE CB2VIA2_R_4  81
VARIABLE CB2VIA2_R_3   0.03
VARIABLE CB2VIA2_R_3_1 0.02
VARIABLE CB2VIA3_W_2  0.07
VARIABLE CB2VIA3_S_3  0.09
VARIABLE CB2VIA3_EN_4 0.05
VARIABLE CB2VIA3_R_4  81
VARIABLE CB2VIA3_R_3   0.03
VARIABLE CB2VIA3_R_3_1 0.02
VARIABLE CB2VIA4_W_2  0.07
VARIABLE CB2VIA4_S_3  0.09
VARIABLE CB2VIA4_EN_4 0.05
VARIABLE CB2VIA4_R_4  81
VARIABLE CB2VIA4_R_3   0.03
VARIABLE CB2VIA4_R_3_1 0.02
VARIABLE CB2VIA5_W_2  0.07
VARIABLE CB2VIA5_S_3  0.09
VARIABLE CB2VIA5_EN_4 0.05
VARIABLE CB2VIA5_R_4  81
VARIABLE CB2VIA5_R_3   0.03
VARIABLE CB2VIA5_R_3_1 0.02
VARIABLE CB2VIA6_W_2  0.07
VARIABLE CB2VIA6_S_3  0.09
VARIABLE CB2VIA6_EN_4 0.05
VARIABLE CB2VIA6_R_4  81
VARIABLE CB2VIA6_R_3   0.03
VARIABLE CB2VIA6_R_3_1 0.02
VARIABLE CB2VIA7_W_2  0.07
VARIABLE CB2VIA7_S_3  0.09
VARIABLE CB2VIA7_EN_4 0.05
VARIABLE CB2VIA7_R_4  81
VARIABLE CB2VIA7_R_3   0.03
VARIABLE CB2VIA7_R_3_1 0.02
VARIABLE CB2VIA8_W_2   0.36
VARIABLE CB2VIA8_S_3   0.54
VARIABLE CB2VIA8_EN_4  0.12
VARIABLE CB2VIA8_R_4   4
VARIABLE CB2VIA8_R_3   0.03
VARIABLE CB2VIA8_R_3_1 0.02

VARIABLE CB2VIA9_W_2   0.36
VARIABLE CB2VIA9_S_3   0.54
VARIABLE CB2VIA9_EN_4  0.09
VARIABLE CB2VIA9_R_4   4 // no used
VARIABLE CB2VIA9_R_3   0.1
VARIABLE CB2VIA9_R_3_1 0.1



VARIABLE CB2Mx_W_2     1.5
VARIABLE CB2Mx_W_3     4.5
VARIABLE CB2Mx_S_2     1
VARIABLE CB2Mx_S_3_MIN 1
VARIABLE CB2Mx_S_3_MAX 3.5


VARIABLE CUPCB2_EN_3   1.0 
VARIABLE CUPCB2_R_7_MIN 2.0
VARIABLE CUPCB2_R_7_MAX 3.0

VARIABLE CUPVIAT_W_1 0.36
VARIABLE CUPVIAT_S_1 0.54
VARIABLE CUPVIAT_EN_1 0.09


VARIABLE CUPVIAT_DN_1 0.1
VARIABLE CUPVIAT_DN_2 0.1

VARIABLE RV_W_1A    3
VARIABLE RV_W_1B    2
VARIABLE RV_S_1     2
VARIABLE RV_S_3     6
VARIABLE RV_EN_1    0.5
VARIABLE AP_W_1     2
VARIABLE AP_W_2     35.0
VARIABLE AP_S_1     2
VARIABLE AP_S_1_1   2.5
VARIABLE AP_S_4     3.5
VARIABLE AP_EN_1    0.5
VARIABLE AP_EN_2    1.0
VARIABLE AP_DN_1  0.1
VARIABLE AP_DN_1_1  0.7
VARIABLE PM_W_1     86
VARIABLE PM_W_2     30
VARIABLE PM_S_1     15 
VARIABLE PM_EN_1    5

// DRAWN LAYER DEFINITIONS
//------------------------
LAYER ODi 350 7 8
LAYER MAP 6 DATATYPE 0           350
LAYER MAP 6 DATATYPE 2           350
LAYER MAP 6 DATATYPE >=4   <=6   350
LAYER MAP 6 DATATYPE >=8   <=160 350
LAYER MAP 6 DATATYPE >=166 <=255 350
LAYER  EMPTY1     6000           // An Empty layer for DRC coding
LAYER  EMPTY2     6001           // An Empty layer for DRC coding
LAYER  EMPTY3     6002           // An Empty layer for DRC coding
LAYER CB2Fi      8600    // Passivation-2 opening for Flip-Chip
LAYER MAP 86 DATATYPE 0  8600
LAYER CB2Wi      8620    // Passivation-2 opening for Wire-Bond
LAYER MAP 86 DATATYPE 20 8620
LAYER  CBi        76  		// passivation-1 window for wire-bond
LAYER  CBDi       169  		// passivation-1 window for flip-chip
LAYER  WBDMY     157            // Dummy layer for CUP Pad
LAYER  PMi         5  		// drawn polymide window
LAYER  PM1i   	  5001          // polyimide 1 window for WLCSP
LAYER MAP 5 DATATYPE 1 5001
LAYER  PM2i   	  5002           // polyimide 2 window for WLCSP
LAYER MAP 5 DATATYPE 2 5002
LAYER  PMDMY     106  		// fuse area dummy layer
LAYER  RVi	 850              // Passivation via hole
LAYER  MAP 85 DATATYPE 0 850   
LAYER  APi	 740             // AL pad and interconnection
LAYER MAP 74 DATATYPE 0 740
LAYER FWALi      951     // Al fuse window
LAYER MAP 95 DATATYPE 20 951
LAYER FWCUi      952     // Cu fuse window
LAYER MAP 95 DATATYPE 0 952
FWi = FWALi OR FWCUi
LAYER  UBMi	 170            // under bump metallurgy
LAYER  INDDMY   1440            // layer to cover inductor
LAYER MAP 144 DATATYPE >=0 <=14 1440
LAYER SEALRINGi 1620         // INITIAL SR Region
LAYER MAP 162 DATATYPE 0 1620
LAYER SEALRING_DB 1621          // SLDB Region
LAYER MAP 162 DATATYPE 1 1621
LAYER SEALRING_ALL 1622         // SLDB + SR + ISO + CSR + chip cormer DMV
LAYER MAP 162 DATATYPE 2 1622


LAYER M1i         501                       // Metal1 layer
LAYER MAP 31 DATATYPE 0  501           // Mapping (31;0) to 501 for M1i
LAYER DM1_O       781 
LAYER MAP 31 DATATYPE 7  781          // Mapping (DM1_O, 31;7) to 781 for OPC_M1i, OPC dummy metal
LAYER DUM1        521                      // dummy Metal1
LAYER MAP 31 DATATYPE 1  521          // Mapping (31;1) to 521 for DUM1
LAYER DM1EXCL  371
LAYER MAP 150 DATATYPE 1 371

LAYER M2i         502                       // Metal2 layer
LAYER MAP 32 DATATYPE 0  502           // Mapping (32;0) to 502 for M2i
LAYER DM2_O       782 
LAYER MAP 32 DATATYPE 7  782          // Mapping (DM2_O, 32;7) to 782 for OPC_M2i, OPC dummy metal
LAYER DUM2        522                      // dummy Metal2
LAYER MAP 32 DATATYPE 1  522          // Mapping (32;1) to 522 for DUM2
LAYER DM2EXCL  372
LAYER MAP 150 DATATYPE 2 372

LAYER M3i         503                       // Metal3 layer
LAYER MAP 33 DATATYPE 0  503           // Mapping (33;0) to 503 for M3i
LAYER DM3_O       783 
LAYER MAP 33 DATATYPE 7  783          // Mapping (DM3_O, 33;7) to 783 for OPC_M3i, OPC dummy metal
LAYER DUM3        523                      // dummy Metal3
LAYER MAP 33 DATATYPE 1  523          // Mapping (33;1) to 523 for DUM3
LAYER DM3EXCL  373
LAYER MAP 150 DATATYPE 3 373

LAYER M4i         504                       // Metal4 layer
LAYER MAP 34 DATATYPE 0  504           // Mapping (34;0) to 504 for M4i
LAYER DM4_O       784 
LAYER MAP 34 DATATYPE 7  784          // Mapping (DM4_O, 34;7) to 784 for OPC_M4i, OPC dummy metal
LAYER DUM4        524                      // dummy Metal4
LAYER MAP 34 DATATYPE 1  524          // Mapping (34;1) to 524 for DUM4
LAYER DM4EXCL  374
LAYER MAP 150 DATATYPE 4 374

LAYER M5i         505                       // Metal5 layer
LAYER MAP 35 DATATYPE 0  505           // Mapping (35;0) to 505 for M5i
LAYER DM5_O       785 
LAYER MAP 35 DATATYPE 7  785          // Mapping (DM5_O, 35;7) to 785 for OPC_M5i, OPC dummy metal
LAYER DUM5        525                      // dummy Metal5
LAYER MAP 35 DATATYPE 1  525          // Mapping (35;1) to 525 for DUM5
LAYER DM5EXCL  375
LAYER MAP 150 DATATYPE 5 375

LAYER M6i         506                       // Metal6 layer
LAYER MAP 36 DATATYPE 0  506           // Mapping (36;0) to 506 for M6i
LAYER DM6_O       786 
LAYER MAP 36 DATATYPE 7  786          // Mapping (DM6_O, 36;7) to 786 for OPC_M6i, OPC dummy metal
LAYER DUM6        526                      // dummy Metal6
LAYER MAP 36 DATATYPE 1  526          // Mapping (36;1) to 526 for DUM6
LAYER DM6EXCL  376
LAYER MAP 150 DATATYPE 6 376

LAYER M7i         507                       // Metal7 layer
LAYER MAP 37 DATATYPE 0  507           // Mapping (37;0) to 507 for M7i
LAYER DM7_O       787 
LAYER MAP 37 DATATYPE 7  787          // Mapping (DM7_O, 37;7) to 787 for OPC_M7i, OPC dummy metal
LAYER DUM7        527                      // dummy Metal7
LAYER MAP 37 DATATYPE 1  527          // Mapping (37;1) to 527 for DUM7
LAYER DM7EXCL  377
LAYER MAP 150 DATATYPE 7 377

LAYER M8i         508                       // Metal8 layer
LAYER MAP 38 DATATYPE 0  508           // Mapping (38;0) to 508 for M8i
LAYER DM8_O       788 
LAYER MAP 38 DATATYPE 7  788          // Mapping (DM8_O, 38;7) to 788 for OPC_M8i, OPC dummy metal
LAYER DUM8        528                      // dummy Metal8
LAYER MAP 38 DATATYPE 1  528          // Mapping (38;1) to 528 for DUM8
LAYER DM8EXCL  378
LAYER MAP 150 DATATYPE 8 378

LAYER M9i        509                        // Metal9 layer
LAYER MAP 39 DATATYPE 40 509           // Mapping (39;40) to 509 for M9i
LAYER MAP 39 DATATYPE 0  509           // Mapping (39;0) to 509 for M9i
LAYER DUM9       529                       // dummy Metal9
LAYER MAP 39 DATATYPE 41 529          // Mapping (39;41) to 529 for DUM9
LAYER MAP 39 DATATYPE 1  529          // Mapping (39;1) to 529 for DUM9
LAYER DM9EXCL  379
LAYER MAP 150 DATATYPE 9 379

LAYER M10i        510                        // Metal10 layer
LAYER MAP 40 DATATYPE 40 510           // Mapping (40;40) to 510 for M10i
LAYER MAP 40 DATATYPE 0  510           // Mapping (40;0) to 510 for M10i
LAYER DUM10       530                       // dummy Metal10
LAYER MAP 40 DATATYPE 41 530          // Mapping (40;41) to 530 for DUM10
LAYER MAP 40 DATATYPE 1  530          // Mapping (40;1) to 530 for DUM10
LAYER DM10EXCL  380
LAYER MAP 150 DATATYPE 10 380

LAYER VIA1i      601
LAYER MAP 51 DATATYPE 0  601
LAYER DUMVIA1i      801
LAYER MAP 51 DATATYPE 1  801

LAYER VIA2i      602
LAYER MAP 52 DATATYPE 0  602
LAYER DUMVIA2i      802
LAYER MAP 52 DATATYPE 1  802

LAYER VIA3i      603
LAYER MAP 53 DATATYPE 0  603
LAYER DUMVIA3i      803
LAYER MAP 53 DATATYPE 1  803

LAYER VIA4i      604
LAYER MAP 54 DATATYPE 0  604
LAYER DUMVIA4i      804
LAYER MAP 54 DATATYPE 1  804

LAYER VIA5i      605
LAYER MAP 55 DATATYPE 0  605
LAYER DUMVIA5i      805
LAYER MAP 55 DATATYPE 1  805

LAYER VIA6i      606
LAYER MAP 56 DATATYPE 0  606
LAYER DUMVIA6i      806
LAYER MAP 56 DATATYPE 1  806

LAYER VIA7i      607
LAYER MAP 57 DATATYPE 0  607
LAYER DUMVIA7i      807
LAYER MAP 57 DATATYPE 1  807

LAYER VIA8i      608
LAYER MAP 58 DATATYPE 40 608
LAYER MAP 58 DATATYPE 0  608

LAYER VIA9i      609
LAYER MAP 59 DATATYPE 40 609
LAYER MAP 59 DATATYPE 0  609



ODi_EXTENT = EXTENT ODi
CB2Fi_EXTENT = EXTENT CB2Fi
CB2Wi_EXTENT = EXTENT CB2Wi
CBi_EXTENT = EXTENT CBi
CBDi_EXTENT = EXTENT CBDi
PMi_EXTENT = EXTENT PMi
PM1i_EXTENT = EXTENT PM1i
PM2i_EXTENT = EXTENT PM2i
RVi_EXTENT = EXTENT RVi
APi_EXTENT = EXTENT APi
FWALi_EXTENT = EXTENT FWALi
FWCUi_EXTENT = EXTENT FWCUi
UBMi_EXTENT = EXTENT UBMi
INDDMY_EXTENT = EXTENT INDDMY
M1i_EXTENT = EXTENT M1i
DM1_O_EXTENT = EXTENT DM1_O
DUM1_EXTENT = EXTENT DUM1
M2i_EXTENT = EXTENT M2i
DM2_O_EXTENT = EXTENT DM2_O
DUM2_EXTENT = EXTENT DUM2
M3i_EXTENT = EXTENT M3i
DM3_O_EXTENT = EXTENT DM3_O
DUM3_EXTENT = EXTENT DUM3
M4i_EXTENT = EXTENT M4i
DM4_O_EXTENT = EXTENT DM4_O
DUM4_EXTENT = EXTENT DUM4
M5i_EXTENT = EXTENT M5i
DM5_O_EXTENT = EXTENT DM5_O
DUM5_EXTENT = EXTENT DUM5
M6i_EXTENT = EXTENT M6i
DM6_O_EXTENT = EXTENT DM6_O
DUM6_EXTENT = EXTENT DUM6
M7i_EXTENT = EXTENT M7i
DM7_O_EXTENT = EXTENT DM7_O
DUM7_EXTENT = EXTENT DUM7
M8i_EXTENT = EXTENT M8i
DM8_O_EXTENT = EXTENT DM8_O
DUM8_EXTENT = EXTENT DUM8
M9i_EXTENT = EXTENT M9i
DUM9_EXTENT = EXTENT DUM9
M10i_EXTENT = EXTENT M10i
DUM10_EXTENT = EXTENT DUM10
DUMVIA1i_EXTENT = EXTENT DUMVIA1i
DUMVIA2i_EXTENT = EXTENT DUMVIA2i
DUMVIA3i_EXTENT = EXTENT DUMVIA3i
DUMVIA4i_EXTENT = EXTENT DUMVIA4i
DUMVIA5i_EXTENT = EXTENT DUMVIA5i
DUMVIA6i_EXTENT = EXTENT DUMVIA6i
DUMVIA7i_EXTENT = EXTENT DUMVIA7i

 MT_LAYERS =  (((((((((((((((((((((((((((((((((((((((((((((((ODi_EXTENT OR CB2Fi_EXTENT) OR CB2Wi_EXTENT) OR CBi_EXTENT) OR CBDi_EXTENT) OR PMi_EXTENT) OR PM1i_EXTENT) OR PM2i_EXTENT) OR RVi_EXTENT) OR APi_EXTENT) OR FWALi_EXTENT) OR FWCUi_EXTENT) OR UBMi_EXTENT) OR INDDMY_EXTENT) OR M1i_EXTENT) OR DM1_O_EXTENT) OR DUM1_EXTENT) OR M2i_EXTENT) OR DM2_O_EXTENT) OR DUM2_EXTENT) OR M3i_EXTENT) OR DM3_O_EXTENT) OR DUM3_EXTENT) OR M4i_EXTENT) OR DM4_O_EXTENT) OR DUM4_EXTENT) OR M5i_EXTENT) OR DM5_O_EXTENT) OR DUM5_EXTENT) OR M6i_EXTENT) OR DM6_O_EXTENT) OR DUM6_EXTENT) OR M7i_EXTENT) OR DM7_O_EXTENT) OR DUM7_EXTENT) OR M8i_EXTENT) OR DM8_O_EXTENT) OR DUM8_EXTENT) OR M9i_EXTENT) OR DUM9_EXTENT) OR M10i_EXTENT) OR DUM10_EXTENT) OR DUMVIA1i_EXTENT) OR DUMVIA2i_EXTENT) OR DUMVIA3i_EXTENT) OR DUMVIA4i_EXTENT) OR DUMVIA5i_EXTENT) OR DUMVIA6i_EXTENT) OR DUMVIA7i_EXTENT


// GLOBAL DERIVED LAYERS FOR RULE CHECKS
//--------------------------------------
CHIP         = EXTENT MT_LAYERS

#IFDEF P3_SEALRING
SR_EDGE = CHIP NOT (SIZE CHIP BY -16)
SR_EXC  = EXT SR_EDGE < 73.715 ABUT == 90 REGION INTERSECTING ONLY 
SEALRING_EXCLUDE = SR_EDGE OR SR_EXC   // Sealring + CSR Corner + Assembly isolation
#ELSE
SEALRING_EXCLUDE = COPY SEALRING_ALL
#ENDIF

CHIP_WISR = CHIP INTERACT SEALRING_EXCLUDE  // Chip with sealring
CHIP_WOSR = CHIP NOT INTERACT SEALRING_EXCLUDE // Chip without sealring
CHIP_EDGE = (CHIP_WISR AND (EXTENT (HOLES SEALRING_EXCLUDE)) ) OR CHIP_WOSR //CHIP EDGE


// EXCLUDE UNCHECKED REGIONS
//--------------------------
M1     =  COPY M1i 
M2     =  COPY M2i 
M3     =  COPY M3i 
M4     =  COPY M4i 
M5     =  COPY M5i 
M6     =  COPY M6i 
M7     =  COPY M7i 
M8     =  COPY M8i 
M9     =  COPY M9i 
M10     =  COPY M10i 
VIA1   =  COPY VIA1i
VIA2   =  COPY VIA2i
VIA3   =  COPY VIA3i
VIA4   =  COPY VIA4i
VIA5   =  COPY VIA5i
VIA6   =  COPY VIA6i
VIA7   =  COPY VIA7i
VIA8   =  COPY VIA8i
VIA9   =  COPY VIA9i
RV     =  COPY RVi 
AP     =  COPY APi
PM     =  COPY PMi

CBx  = CBi NOT INTERACT SEALRING_EXCLUDE 
CB2x = CB2Wi NOT INTERACT SEALRING_EXCLUDE

CB_OPEN_EDGE = CONVEX EDGE CBx ANGLE1 == 90 ANGLE2 == 90 WITH LENGTH == CB_W_1
CB_OPENING_REGION = (EXPAND EDGE CB_OPEN_EDGE OUTSIDE BY CB_S_1) NOT CBx
CB_RING = (CBx NOT (CBx WITH WIDTH > 5)) OR CB_OPENING_REGION
CB_HOLE_insideRING = HOLES CB_RING
CB_PAD_RAP = CB_RING OR (CB_HOLE_insideRING INTERACT CB_RING)
notch_CB = EXT CBx <5 NOTCH OPPOSITE REGION    
notch_CB2 = EXT CB2x < 5 NOTCH OPPOSITE REGION

CB_PAD_NON_RAP = CBx WITH WIDTH > 5

CB_PAD = CB_PAD_RAP OR CB_PAD_NON_RAP

CB_CENTER   = EXTENTS CB_PAD CENTERS    // CENTERS is 1x1

CB2 = COPY CB2x


#IFDEF PITCH_40_SINGLE    
#DEFINE SINGLE_PAD
#ELSE
#IFDEF PITCH_45_SINGLE    
#DEFINE SINGLE_PAD
#ELSE
#IFDEF PITCH_50_SINGLE 
#DEFINE SINGLE_PAD
#ELSE
#IFDEF PITCH_55_SINGLE    
#DEFINE SINGLE_PAD
#ELSE
#IFDEF PITCH_60_SINGLE 
#DEFINE SINGLE_PAD
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF PITCH_45_STAGGER    
#DEFINE STAGGER_PAD
#ELSE
#IFDEF PITCH_50_STAGGER    
#DEFINE STAGGER_PAD
#ELSE
#IFDEF PITCH_60_STAGGER 
#DEFINE STAGGER_PAD
#ELSE
#IFDEF PITCH_70_STAGGER    
#DEFINE STAGGER_PAD
#ELSE
#IFDEF PITCH_80_STAGGER 
#DEFINE STAGGER_PAD
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF PITCH_80_TRITIER 
#DEFINE TRITIER_PAD
#ENDIF

#IFDEF SINGLE_PAD
#IFDEF STAGGER_PAD
#DEFINE MIX
#ENDIF
#IFDEF TRITIER_PAD
#DEFINE MIX
#ENDIF
#ENDIF
#IFDEF STAGGER_PAD
#IFDEF TRITIER_PAD
#DEFINE MIX
#ENDIF
#ENDIF


PAD_CB = COPY CB2 
PAD_CB_BOX = MERGE (EXTENT PAD_CB)
INNER_RING = SIZE PAD_CB_BOX BY -220
MID_RING = SIZE PAD_CB_BOX BY -10

#IFDEF MIX
INNER_CB_TR = PAD_CB INSIDE INNER_RING
CB_ROW23 = PAD_CB INSIDE MID_RING
CB_ROW2 = CB_ROW23 NOT INNER_CB_TR
A = EXT INNER_CB_TR CB_ROW2 < 80 OPPOSITE REGION 
MID_CB_TR = CB_ROW2 INTERACT A
INNER_CB_ST = CB_ROW2 NOT MID_CB_TR
CB_ROW1 = PAD_CB NOT CB_ROW23
B = EXT MID_CB_TR CB_ROW1 < 80 OPPOSITE REGION 
OUTER_CB_TR = CB_ROW1 INTERACT B
C = EXT INNER_CB_ST CB_ROW1 < 70 OPPOSITE REGION
OUTER_CB_ST = CB_ROW1 INTERACT C
#ELSE
#IFDEF SINGLE_PAD
INNER_CB_TR = COPY EMPTY1
MID_CB_TR = COPY EMPTY2
INNER_CB_ST = COPY EMPTY1
CB_ROW1 = COPY PAD_CB 
OUTER_CB_TR = COPY EMPTY3  
OUTER_CB_ST = COPY EMPTY2
#ELSE
#IFDEF STAGGER_PAD
INNER_CB_TR = COPY EMPTY1
CB_ROW23 = PAD_CB INSIDE MID_RING
CB_ROW2 = CB_ROW23 NOT INNER_CB_TR
MID_CB_TR = COPY EMPTY2
INNER_CB_ST = CB_ROW2 NOT MID_CB_TR
CB_ROW1 = PAD_CB NOT CB_ROW23
OUTER_CB_TR = COPY EMPTY3  
OUTER_CB_ST = COPY CB_ROW1 
#ELSE
#IFDEF TRITIER_PAD
INNER_CB_TR = PAD_CB INSIDE INNER_RING
CB_ROW23 = PAD_CB INSIDE MID_RING
CB_ROW2 = CB_ROW23 NOT INNER_CB_TR
MID_CB_TR = COPY CB_ROW2 
INNER_CB_ST = COPY EMPTY1
CB_ROW1 = PAD_CB NOT CB_ROW23
OUTER_CB_TR = COPY CB_ROW1 
OUTER_CB_ST = COPY EMPTY2
#ELSE
INNER_CB_TR = COPY EMPTY1
MID_CB_TR = COPY EMPTY2
INNER_CB_ST = COPY EMPTY1
CB_ROW1 = COPY EMPTY1 
OUTER_CB_TR = COPY EMPTY3  
OUTER_CB_ST = COPY EMPTY2
#ENDIF
#ENDIF
#ENDIF
#ENDIF

CB_SINGLE  = (CB_ROW1 NOT OUTER_CB_TR) NOT OUTER_CB_ST
CB_STAGGER = INNER_CB_ST OR OUTER_CB_ST 
CB_TRI_TIER = (INNER_CB_TR OR MID_CB_TR) OR OUTER_CB_TR

CB_CENTER_SI   = EXTENTS CB_SINGLE CENTERS    // CENTERS is 1x1
CB_CENTER_ST   = EXTENTS CB_STAGGER CENTERS    // CENTERS is 1x1
CB_CENTER_TR   = EXTENTS CB_TRI_TIER CENTERS    // CENTERS is 1x1


CB_TRI_TIER_NON_CUP = CB_TRI_TIER NOT INTERACT WBDMY
CB_STAGGER_NON_CUP  = CB_STAGGER  NOT INTERACT WBDMY
CB_SINGLE_NON_CUP   = CB_SINGLE   NOT INTERACT WBDMY
CB_TRI_TIER_CUP     = CB_TRI_TIER INTERACT WBDMY
CB_STAGGER_CUP      = CB_STAGGER  INTERACT WBDMY
CB_SINGLE_CUP       = CB_SINGLE   INTERACT WBDMY 
CB_RING_CUP         = CB_RING INTERACT WBDMY 
CB_RING_NON_CUP     = CB_RING NOT INTERACT WBDMY 
CB2_CUP             = CB2 INTERACT WBDMY
CB2_NON_CUP         = CB2 NOT INTERACT WBDMY

CB_A_NON_CUP      = (CB_PAD OR notch_CB) NOT INTERACT WBDMY 
CB_A_CUP	    = (CB_PAD OR notch_CB) INTERACT WBDMY 
CB2_A_NON_CUP      =(CB2x OR notch_CB2) NOT INTERACT WBDMY 
CB2_A_CUP	    = (CB2x OR notch_CB2) INTERACT WBDMY 


//CUP Pad Metal & Via
WBM9	 = M9    AND WBDMY
WBVIA9	 = VIA9  AND WBDMY
WBM10	 = M10     AND WBDMY
WBAP	 = AP     AND WBDMY

// pad slot
M1CB_SI    = CB_SINGLE_NON_CUP AND M1
SL_M1a_SI  = HOLES M1CB_SI
SL_M1_SI   = SL_M1a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA1_SI = EXT SL_M1_SI < 7 REGION 
PADH1_SI = SL_SPA1_SI OR SL_M1_SI
PADM1area_SI = SIZE PADH1_SI BY 4.5
M2CB_SI    = CB_SINGLE_NON_CUP AND M2
SL_M2a_SI  = HOLES M2CB_SI
SL_M2_SI   = SL_M2a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA2_SI = EXT SL_M2_SI < 7 REGION 
PADH2_SI = SL_SPA2_SI OR SL_M2_SI
PADM2area_SI = SIZE PADH2_SI BY 4.5
M3CB_SI    = CB_SINGLE_NON_CUP AND M3
SL_M3a_SI  = HOLES M3CB_SI
SL_M3_SI   = SL_M3a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA3_SI = EXT SL_M3_SI < 7 REGION 
PADH3_SI = SL_SPA3_SI OR SL_M3_SI
PADM3area_SI = SIZE PADH3_SI BY 4.5
M4CB_SI    = CB_SINGLE_NON_CUP AND M4
SL_M4a_SI  = HOLES M4CB_SI
SL_M4_SI   = SL_M4a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA4_SI = EXT SL_M4_SI < 7 REGION 
PADH4_SI = SL_SPA4_SI OR SL_M4_SI
PADM4area_SI = SIZE PADH4_SI BY 4.5
M5CB_SI    = CB_SINGLE_NON_CUP AND M5
SL_M5a_SI  = HOLES M5CB_SI
SL_M5_SI   = SL_M5a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA5_SI = EXT SL_M5_SI < 7 REGION 
PADH5_SI = SL_SPA5_SI OR SL_M5_SI
PADM5area_SI = SIZE PADH5_SI BY 4.5
M6CB_SI    = CB_SINGLE_NON_CUP AND M6
SL_M6a_SI  = HOLES M6CB_SI
SL_M6_SI   = SL_M6a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA6_SI = EXT SL_M6_SI < 7 REGION 
PADH6_SI = SL_SPA6_SI OR SL_M6_SI
PADM6area_SI = SIZE PADH6_SI BY 4.5
M7CB_SI    = CB_SINGLE_NON_CUP AND M7
SL_M7a_SI  = HOLES M7CB_SI
SL_M7_SI   = SL_M7a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA7_SI = EXT SL_M7_SI < 7 REGION 
PADH7_SI = SL_SPA7_SI OR SL_M7_SI
PADM7area_SI = SIZE PADH7_SI BY 4.5
M8CB_SI    = CB_SINGLE_NON_CUP AND M8
SL_M8a_SI  = HOLES M8CB_SI
SL_M8_SI   = SL_M8a_SI INSIDE CB_SINGLE_NON_CUP
SL_SPA8_SI = EXT SL_M8_SI < 7 REGION 
PADH8_SI = SL_SPA8_SI OR SL_M8_SI
PADM8area_SI = SIZE PADH8_SI BY 4.5
M9CB_SI    = CB_SINGLE_NON_CUP AND M9
PADM9area_SI = WITH WIDTH (SIZE M9CB_SI BY 3 INSIDE OF M9 STEP 0.1) >= CB2_W_1_SI
M10CB_SI    = CB_SINGLE_NON_CUP AND M10
PADM10area_SI = WITH WIDTH (SIZE M10CB_SI BY 3 INSIDE OF M10 STEP 0.1) >= CB2_W_1_SI
PADAParea_SI = WITH WIDTH (SIZE CB_SINGLE_NON_CUP BY 3 INSIDE OF AP STEP 0.1) >= CB2_W_1_SI

M1CB_ST    = CB_STAGGER_NON_CUP AND M1
SL_M1a_ST  = HOLES M1CB_ST
SL_M1_ST   = SL_M1a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA1_ST = EXT SL_M1_ST < 7 REGION 
PADH1_ST = SL_SPA1_ST OR SL_M1_ST
PADM1area_ST = SIZE PADH1_ST BY 4.5
M2CB_ST    = CB_STAGGER_NON_CUP AND M2
SL_M2a_ST  = HOLES M2CB_ST
SL_M2_ST   = SL_M2a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA2_ST = EXT SL_M2_ST < 7 REGION 
PADH2_ST = SL_SPA2_ST OR SL_M2_ST
PADM2area_ST = SIZE PADH2_ST BY 4.5
M3CB_ST    = CB_STAGGER_NON_CUP AND M3
SL_M3a_ST  = HOLES M3CB_ST
SL_M3_ST   = SL_M3a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA3_ST = EXT SL_M3_ST < 7 REGION 
PADH3_ST = SL_SPA3_ST OR SL_M3_ST
PADM3area_ST = SIZE PADH3_ST BY 4.5
M4CB_ST    = CB_STAGGER_NON_CUP AND M4
SL_M4a_ST  = HOLES M4CB_ST
SL_M4_ST   = SL_M4a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA4_ST = EXT SL_M4_ST < 7 REGION 
PADH4_ST = SL_SPA4_ST OR SL_M4_ST
PADM4area_ST = SIZE PADH4_ST BY 4.5
M5CB_ST    = CB_STAGGER_NON_CUP AND M5
SL_M5a_ST  = HOLES M5CB_ST
SL_M5_ST   = SL_M5a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA5_ST = EXT SL_M5_ST < 7 REGION 
PADH5_ST = SL_SPA5_ST OR SL_M5_ST
PADM5area_ST = SIZE PADH5_ST BY 4.5
M6CB_ST    = CB_STAGGER_NON_CUP AND M6
SL_M6a_ST  = HOLES M6CB_ST
SL_M6_ST   = SL_M6a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA6_ST = EXT SL_M6_ST < 7 REGION 
PADH6_ST = SL_SPA6_ST OR SL_M6_ST
PADM6area_ST = SIZE PADH6_ST BY 4.5
M7CB_ST    = CB_STAGGER_NON_CUP AND M7
SL_M7a_ST  = HOLES M7CB_ST
SL_M7_ST   = SL_M7a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA7_ST = EXT SL_M7_ST < 7 REGION 
PADH7_ST = SL_SPA7_ST OR SL_M7_ST
PADM7area_ST = SIZE PADH7_ST BY 4.5
M8CB_ST    = CB_STAGGER_NON_CUP AND M8
SL_M8a_ST  = HOLES M8CB_ST
SL_M8_ST   = SL_M8a_ST INSIDE CB_STAGGER_NON_CUP
SL_SPA8_ST = EXT SL_M8_ST < 7 REGION 
PADH8_ST = SL_SPA8_ST OR SL_M8_ST
PADM8area_ST = SIZE PADH8_ST BY 4.5
M9CB_ST    = CB_STAGGER_NON_CUP INTERACT M9
PADM9area_ST = WITH WIDTH (SIZE M9CB_ST BY 3 INSIDE OF M9 STEP 0.1) >= CB2_W_1_ST
M10CB_ST    = CB_STAGGER_NON_CUP INTERACT M10
PADM10area_ST = WITH WIDTH (SIZE M10CB_ST BY 3 INSIDE OF M10 STEP 0.1) >= CB2_W_1_ST
PADAParea_ST = WITH WIDTH (SIZE CB_STAGGER_NON_CUP BY 3 INSIDE OF AP STEP 0.1) >= CB2_W_1_ST

M1CB_TR    = CB_TRI_TIER_NON_CUP AND M1
SL_M1a_TR  = HOLES M1CB_TR
SL_M1_TR   = SL_M1a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA1_TR = EXT SL_M1_TR < 7 REGION 
PADH1_TR = SL_SPA1_TR OR SL_M1_TR
PADM1area_TR = SIZE PADH1_TR BY 4.5
M2CB_TR    = CB_TRI_TIER_NON_CUP AND M2
SL_M2a_TR  = HOLES M2CB_TR
SL_M2_TR   = SL_M2a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA2_TR = EXT SL_M2_TR < 7 REGION 
PADH2_TR = SL_SPA2_TR OR SL_M2_TR
PADM2area_TR = SIZE PADH2_TR BY 4.5
M3CB_TR    = CB_TRI_TIER_NON_CUP AND M3
SL_M3a_TR  = HOLES M3CB_TR
SL_M3_TR   = SL_M3a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA3_TR = EXT SL_M3_TR < 7 REGION 
PADH3_TR = SL_SPA3_TR OR SL_M3_TR
PADM3area_TR = SIZE PADH3_TR BY 4.5
M4CB_TR    = CB_TRI_TIER_NON_CUP AND M4
SL_M4a_TR  = HOLES M4CB_TR
SL_M4_TR   = SL_M4a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA4_TR = EXT SL_M4_TR < 7 REGION 
PADH4_TR = SL_SPA4_TR OR SL_M4_TR
PADM4area_TR = SIZE PADH4_TR BY 4.5
M5CB_TR    = CB_TRI_TIER_NON_CUP AND M5
SL_M5a_TR  = HOLES M5CB_TR
SL_M5_TR   = SL_M5a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA5_TR = EXT SL_M5_TR < 7 REGION 
PADH5_TR = SL_SPA5_TR OR SL_M5_TR
PADM5area_TR = SIZE PADH5_TR BY 4.5
M6CB_TR    = CB_TRI_TIER_NON_CUP AND M6
SL_M6a_TR  = HOLES M6CB_TR
SL_M6_TR   = SL_M6a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA6_TR = EXT SL_M6_TR < 7 REGION 
PADH6_TR = SL_SPA6_TR OR SL_M6_TR
PADM6area_TR = SIZE PADH6_TR BY 4.5
M7CB_TR    = CB_TRI_TIER_NON_CUP AND M7
SL_M7a_TR  = HOLES M7CB_TR
SL_M7_TR   = SL_M7a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA7_TR = EXT SL_M7_TR < 7 REGION 
PADH7_TR = SL_SPA7_TR OR SL_M7_TR
PADM7area_TR = SIZE PADH7_TR BY 4.5
M8CB_TR    = CB_TRI_TIER_NON_CUP AND M8
SL_M8a_TR  = HOLES M8CB_TR
SL_M8_TR   = SL_M8a_TR INSIDE CB_TRI_TIER_NON_CUP
SL_SPA8_TR = EXT SL_M8_TR < 7 REGION 
PADH8_TR = SL_SPA8_TR OR SL_M8_TR
PADM8area_TR = SIZE PADH8_TR BY 4.5
M9CB_TR    = CB_TRI_TIER_NON_CUP AND M9
PADM9area_TR = WITH WIDTH (SIZE M9CB_TR BY 3 INSIDE OF M9 STEP 0.1) >= CB2_W_1_TR
M10CB_TR    = CB_TRI_TIER_NON_CUP AND M10
PADM10area_TR = WITH WIDTH (SIZE M10CB_TR BY 3 INSIDE OF M10 STEP 0.1) >= CB2_W_1_TR
PADAParea_TR = WITH WIDTH (SIZE CB_TRI_TIER_NON_CUP BY 3 INSIDE OF AP STEP 0.1) >= CB2_W_1_TR



// pad metal

PADM1_SI = PADM1area_SI AND M1
PADM2_SI = PADM2area_SI AND M2
PADM3_SI = PADM3area_SI AND M3
PADM4_SI = PADM4area_SI AND M4
PADM5_SI = PADM5area_SI AND M5
PADM6_SI = PADM6area_SI AND M6
PADM7_SI = PADM7area_SI AND M7
PADM8_SI = PADM8area_SI AND M8
PADM9_SI = PADM9area_SI AND M9
PADM10_SI = PADM10area_SI AND M10
PADAP_SI = PADAParea_SI AND AP
L_M1_SI = SL_SPA1_SI AND M1
L_M2_SI = SL_SPA2_SI AND M2
L_M3_SI = SL_SPA3_SI AND M3
L_M4_SI = SL_SPA4_SI AND M4
L_M5_SI = SL_SPA5_SI AND M5
L_M6_SI = SL_SPA6_SI AND M6
L_M7_SI = SL_SPA7_SI AND M7
L_M8_SI = SL_SPA8_SI AND M8
PADM1_ST = PADM1area_ST AND M1
PADM2_ST = PADM2area_ST AND M2
PADM3_ST = PADM3area_ST AND M3
PADM4_ST = PADM4area_ST AND M4
PADM5_ST = PADM5area_ST AND M5
PADM6_ST = PADM6area_ST AND M6
PADM7_ST = PADM7area_ST AND M7
PADM8_ST = PADM8area_ST AND M8
PADM9_ST = PADM9area_ST AND M9
PADM10_ST = PADM10area_ST AND M10
PADAP_ST = PADAParea_ST AND AP
L_M1_ST = SL_SPA1_ST AND M1
L_M2_ST = SL_SPA2_ST AND M2
L_M3_ST = SL_SPA3_ST AND M3
L_M4_ST = SL_SPA4_ST AND M4
L_M5_ST = SL_SPA5_ST AND M5
L_M6_ST = SL_SPA6_ST AND M6
L_M7_ST = SL_SPA7_ST AND M7
L_M8_ST = SL_SPA8_ST AND M8
PADM1_TR = PADM1area_TR AND M1
PADM2_TR = PADM2area_TR AND M2
PADM3_TR = PADM3area_TR AND M3
PADM4_TR = PADM4area_TR AND M4
PADM5_TR = PADM5area_TR AND M5
PADM6_TR = PADM6area_TR AND M6
PADM7_TR = PADM7area_TR AND M7
PADM8_TR = PADM8area_TR AND M8
PADM9_TR = PADM9area_TR AND M9
PADM10_TR = PADM10area_TR AND M10
PADAP_TR = PADAParea_TR AND AP
L_M1_TR = SL_SPA1_TR AND M1
L_M2_TR = SL_SPA2_TR AND M2
L_M3_TR = SL_SPA3_TR AND M3
L_M4_TR = SL_SPA4_TR AND M4
L_M5_TR = SL_SPA5_TR AND M5
L_M6_TR = SL_SPA6_TR AND M6
L_M7_TR = SL_SPA7_TR AND M7
L_M8_TR = SL_SPA8_TR AND M8

// metal ring
R_M1_SI = PADM1_SI NOT L_M1_SI
R_M2_SI = PADM2_SI NOT L_M2_SI
R_M3_SI = PADM3_SI NOT L_M3_SI
R_M4_SI = PADM4_SI NOT L_M4_SI
R_M5_SI = PADM5_SI NOT L_M5_SI
R_M6_SI = PADM6_SI NOT L_M6_SI
R_M7_SI = PADM7_SI NOT L_M7_SI
R_M8_SI = PADM8_SI NOT L_M8_SI
R_M1_ST = PADM1_ST NOT L_M1_ST
R_M2_ST = PADM2_ST NOT L_M2_ST
R_M3_ST = PADM3_ST NOT L_M3_ST
R_M4_ST = PADM4_ST NOT L_M4_ST
R_M5_ST = PADM5_ST NOT L_M5_ST
R_M6_ST = PADM6_ST NOT L_M6_ST
R_M7_ST = PADM7_ST NOT L_M7_ST
R_M8_ST = PADM8_ST NOT L_M8_ST
R_M1_TR = PADM1_TR NOT L_M1_TR
R_M2_TR = PADM2_TR NOT L_M2_TR
R_M3_TR = PADM3_TR NOT L_M3_TR
R_M4_TR = PADM4_TR NOT L_M4_TR
R_M5_TR = PADM5_TR NOT L_M5_TR
R_M6_TR = PADM6_TR NOT L_M6_TR
R_M7_TR = PADM7_TR NOT L_M7_TR
R_M8_TR = PADM8_TR NOT L_M8_TR

// metal cross region
C_M12_SI = L_M1_SI AND L_M2_SI 
C_M23_SI = L_M2_SI AND L_M3_SI 
C_M34_SI = L_M3_SI AND L_M4_SI 
C_M45_SI = L_M4_SI AND L_M5_SI 
C_M56_SI = L_M5_SI AND L_M6_SI 
C_M67_SI = L_M6_SI AND L_M7_SI 
C_M78_SI = L_M7_SI AND L_M8_SI 
C_M12_ST = L_M1_ST AND L_M2_ST 
C_M23_ST = L_M2_ST AND L_M3_ST 
C_M34_ST = L_M3_ST AND L_M4_ST 
C_M45_ST = L_M4_ST AND L_M5_ST 
C_M56_ST = L_M5_ST AND L_M6_ST 
C_M67_ST = L_M6_ST AND L_M7_ST 
C_M78_ST = L_M7_ST AND L_M8_ST 
C_M12_TR = L_M1_TR AND L_M2_TR 
C_M23_TR = L_M2_TR AND L_M3_TR 
C_M34_TR = L_M3_TR AND L_M4_TR 
C_M45_TR = L_M4_TR AND L_M5_TR 
C_M56_TR = L_M5_TR AND L_M6_TR 
C_M67_TR = L_M6_TR AND L_M7_TR 
C_M78_TR = L_M7_TR AND L_M8_TR 

// pad via
PAD_VIA1_SI = VIA1 INTERACT PADM1_SI
PAD_VIA1_SI_NON_CUP =  PAD_VIA1_SI NOT INTERACT WBDMY
PAD_VIA2_SI = VIA2 INTERACT PADM2_SI
PAD_VIA2_SI_NON_CUP =  PAD_VIA2_SI NOT INTERACT WBDMY
PAD_VIA3_SI = VIA3 INTERACT PADM3_SI
PAD_VIA3_SI_NON_CUP =  PAD_VIA3_SI NOT INTERACT WBDMY
PAD_VIA4_SI = VIA4 INTERACT PADM4_SI
PAD_VIA4_SI_NON_CUP =  PAD_VIA4_SI NOT INTERACT WBDMY
PAD_VIA5_SI = VIA5 INTERACT PADM5_SI
PAD_VIA5_SI_NON_CUP =  PAD_VIA5_SI NOT INTERACT WBDMY
PAD_VIA6_SI = VIA6 INTERACT PADM6_SI
PAD_VIA6_SI_NON_CUP =  PAD_VIA6_SI NOT INTERACT WBDMY
PAD_VIA7_SI = VIA7 INTERACT PADM7_SI
PAD_VIA7_SI_NON_CUP =  PAD_VIA7_SI NOT INTERACT WBDMY
PAD_VIA8_SI = VIA8 INTERACT PADM8_SI
PAD_VIA8_SI_NON_CUP =  PAD_VIA8_SI NOT INTERACT WBDMY
PAD_VIA9_SI = VIA9 INTERACT PADM9_SI
PAD_VIA9_SI_NON_CUP =  PAD_VIA9_SI NOT INTERACT WBDMY
PAD_VIA1_ST = VIA1 INTERACT PADM1_ST
PAD_VIA1_ST_NON_CUP = PAD_VIA1_ST NOT INTERACT WBDMY 
PAD_VIA1_ST_OUTER = VIA1 INTERACT OUTER_CB_ST
PAD_VIA1_ST_OUTER_NON_CUP = PAD_VIA1_ST_OUTER NOT INTERACT WBDMY
PAD_VIA1_ST_INNER = VIA1 INTERACT INNER_CB_ST
PAD_VIA1_ST_INNER_NON_CUP = PAD_VIA1_ST_INNER NOT INTERACT WBDMY
PAD_VIA2_ST = VIA2 INTERACT PADM2_ST
PAD_VIA2_ST_NON_CUP = PAD_VIA2_ST NOT INTERACT WBDMY 
PAD_VIA2_ST_OUTER = VIA2 INTERACT OUTER_CB_ST
PAD_VIA2_ST_OUTER_NON_CUP = PAD_VIA2_ST_OUTER NOT INTERACT WBDMY
PAD_VIA2_ST_INNER = VIA2 INTERACT INNER_CB_ST
PAD_VIA2_ST_INNER_NON_CUP = PAD_VIA2_ST_INNER NOT INTERACT WBDMY
PAD_VIA3_ST = VIA3 INTERACT PADM3_ST
PAD_VIA3_ST_NON_CUP = PAD_VIA3_ST NOT INTERACT WBDMY 
PAD_VIA3_ST_OUTER = VIA3 INTERACT OUTER_CB_ST
PAD_VIA3_ST_OUTER_NON_CUP = PAD_VIA3_ST_OUTER NOT INTERACT WBDMY
PAD_VIA3_ST_INNER = VIA3 INTERACT INNER_CB_ST
PAD_VIA3_ST_INNER_NON_CUP = PAD_VIA3_ST_INNER NOT INTERACT WBDMY
PAD_VIA4_ST = VIA4 INTERACT PADM4_ST
PAD_VIA4_ST_NON_CUP = PAD_VIA4_ST NOT INTERACT WBDMY 
PAD_VIA4_ST_OUTER = VIA4 INTERACT OUTER_CB_ST
PAD_VIA4_ST_OUTER_NON_CUP = PAD_VIA4_ST_OUTER NOT INTERACT WBDMY
PAD_VIA4_ST_INNER = VIA4 INTERACT INNER_CB_ST
PAD_VIA4_ST_INNER_NON_CUP = PAD_VIA4_ST_INNER NOT INTERACT WBDMY
PAD_VIA5_ST = VIA5 INTERACT PADM5_ST
PAD_VIA5_ST_NON_CUP = PAD_VIA5_ST NOT INTERACT WBDMY 
PAD_VIA5_ST_OUTER = VIA5 INTERACT OUTER_CB_ST
PAD_VIA5_ST_OUTER_NON_CUP = PAD_VIA5_ST_OUTER NOT INTERACT WBDMY
PAD_VIA5_ST_INNER = VIA5 INTERACT INNER_CB_ST
PAD_VIA5_ST_INNER_NON_CUP = PAD_VIA5_ST_INNER NOT INTERACT WBDMY
PAD_VIA6_ST = VIA6 INTERACT PADM6_ST
PAD_VIA6_ST_NON_CUP = PAD_VIA6_ST NOT INTERACT WBDMY 
PAD_VIA6_ST_OUTER = VIA6 INTERACT OUTER_CB_ST
PAD_VIA6_ST_OUTER_NON_CUP = PAD_VIA6_ST_OUTER NOT INTERACT WBDMY
PAD_VIA6_ST_INNER = VIA6 INTERACT INNER_CB_ST
PAD_VIA6_ST_INNER_NON_CUP = PAD_VIA6_ST_INNER NOT INTERACT WBDMY
PAD_VIA7_ST = VIA7 INTERACT PADM7_ST
PAD_VIA7_ST_NON_CUP = PAD_VIA7_ST NOT INTERACT WBDMY 
PAD_VIA7_ST_OUTER = VIA7 INTERACT OUTER_CB_ST
PAD_VIA7_ST_OUTER_NON_CUP = PAD_VIA7_ST_OUTER NOT INTERACT WBDMY
PAD_VIA7_ST_INNER = VIA7 INTERACT INNER_CB_ST
PAD_VIA7_ST_INNER_NON_CUP = PAD_VIA7_ST_INNER NOT INTERACT WBDMY
PAD_VIA8_ST = VIA8 INTERACT PADM8_ST
PAD_VIA8_ST_NON_CUP = PAD_VIA8_ST NOT INTERACT WBDMY 
PAD_VIA8_ST_OUTER = VIA8 INTERACT OUTER_CB_ST
PAD_VIA8_ST_OUTER_NON_CUP = PAD_VIA8_ST_OUTER NOT INTERACT WBDMY
PAD_VIA8_ST_INNER = VIA8 INTERACT INNER_CB_ST
PAD_VIA8_ST_INNER_NON_CUP = PAD_VIA8_ST_INNER NOT INTERACT WBDMY
PAD_VIA9_ST = VIA9 INTERACT PADM9_ST
PAD_VIA9_ST_NON_CUP = PAD_VIA9_ST NOT INTERACT WBDMY 
PAD_VIA9_ST_OUTER = VIA9 INTERACT OUTER_CB_ST
PAD_VIA9_ST_OUTER_NON_CUP = PAD_VIA9_ST_OUTER NOT INTERACT WBDMY
PAD_VIA9_ST_INNER = VIA9 INTERACT INNER_CB_ST
PAD_VIA9_ST_INNER_NON_CUP = PAD_VIA9_ST_INNER NOT INTERACT WBDMY
PAD_VIA1_TR = VIA1 INTERACT PADM1_TR
PAD_VIA1_TR_NON_CUP = PAD_VIA1_TR NOT INTERACT WBDMY
PAD_VIA1_TR_OUTER = VIA1 INTERACT OUTER_CB_TR
PAD_VIA1_TR_OUTER_NON_CUP = PAD_VIA1_TR_OUTER NOT INTERACT WBDMY
PAD_VIA1_TR_MID = VIA1 INTERACT MID_CB_TR
PAD_VIA1_TR_MID_NON_CUP = PAD_VIA1_TR_MID NOT INTERACT WBDMY
PAD_VIA1_TR_INNER = VIA1 INTERACT INNER_CB_TR
PAD_VIA1_TR_INNER_NON_CUP = PAD_VIA1_TR_INNER NOT INTERACT WBDMY
PAD_VIA2_TR = VIA2 INTERACT PADM2_TR
PAD_VIA2_TR_NON_CUP = PAD_VIA2_TR NOT INTERACT WBDMY
PAD_VIA2_TR_OUTER = VIA2 INTERACT OUTER_CB_TR
PAD_VIA2_TR_OUTER_NON_CUP = PAD_VIA2_TR_OUTER NOT INTERACT WBDMY
PAD_VIA2_TR_MID = VIA2 INTERACT MID_CB_TR
PAD_VIA2_TR_MID_NON_CUP = PAD_VIA2_TR_MID NOT INTERACT WBDMY
PAD_VIA2_TR_INNER = VIA2 INTERACT INNER_CB_TR
PAD_VIA2_TR_INNER_NON_CUP = PAD_VIA2_TR_INNER NOT INTERACT WBDMY
PAD_VIA3_TR = VIA3 INTERACT PADM3_TR
PAD_VIA3_TR_NON_CUP = PAD_VIA3_TR NOT INTERACT WBDMY
PAD_VIA3_TR_OUTER = VIA3 INTERACT OUTER_CB_TR
PAD_VIA3_TR_OUTER_NON_CUP = PAD_VIA3_TR_OUTER NOT INTERACT WBDMY
PAD_VIA3_TR_MID = VIA3 INTERACT MID_CB_TR
PAD_VIA3_TR_MID_NON_CUP = PAD_VIA3_TR_MID NOT INTERACT WBDMY
PAD_VIA3_TR_INNER = VIA3 INTERACT INNER_CB_TR
PAD_VIA3_TR_INNER_NON_CUP = PAD_VIA3_TR_INNER NOT INTERACT WBDMY
PAD_VIA4_TR = VIA4 INTERACT PADM4_TR
PAD_VIA4_TR_NON_CUP = PAD_VIA4_TR NOT INTERACT WBDMY
PAD_VIA4_TR_OUTER = VIA4 INTERACT OUTER_CB_TR
PAD_VIA4_TR_OUTER_NON_CUP = PAD_VIA4_TR_OUTER NOT INTERACT WBDMY
PAD_VIA4_TR_MID = VIA4 INTERACT MID_CB_TR
PAD_VIA4_TR_MID_NON_CUP = PAD_VIA4_TR_MID NOT INTERACT WBDMY
PAD_VIA4_TR_INNER = VIA4 INTERACT INNER_CB_TR
PAD_VIA4_TR_INNER_NON_CUP = PAD_VIA4_TR_INNER NOT INTERACT WBDMY
PAD_VIA5_TR = VIA5 INTERACT PADM5_TR
PAD_VIA5_TR_NON_CUP = PAD_VIA5_TR NOT INTERACT WBDMY
PAD_VIA5_TR_OUTER = VIA5 INTERACT OUTER_CB_TR
PAD_VIA5_TR_OUTER_NON_CUP = PAD_VIA5_TR_OUTER NOT INTERACT WBDMY
PAD_VIA5_TR_MID = VIA5 INTERACT MID_CB_TR
PAD_VIA5_TR_MID_NON_CUP = PAD_VIA5_TR_MID NOT INTERACT WBDMY
PAD_VIA5_TR_INNER = VIA5 INTERACT INNER_CB_TR
PAD_VIA5_TR_INNER_NON_CUP = PAD_VIA5_TR_INNER NOT INTERACT WBDMY
PAD_VIA6_TR = VIA6 INTERACT PADM6_TR
PAD_VIA6_TR_NON_CUP = PAD_VIA6_TR NOT INTERACT WBDMY
PAD_VIA6_TR_OUTER = VIA6 INTERACT OUTER_CB_TR
PAD_VIA6_TR_OUTER_NON_CUP = PAD_VIA6_TR_OUTER NOT INTERACT WBDMY
PAD_VIA6_TR_MID = VIA6 INTERACT MID_CB_TR
PAD_VIA6_TR_MID_NON_CUP = PAD_VIA6_TR_MID NOT INTERACT WBDMY
PAD_VIA6_TR_INNER = VIA6 INTERACT INNER_CB_TR
PAD_VIA6_TR_INNER_NON_CUP = PAD_VIA6_TR_INNER NOT INTERACT WBDMY
PAD_VIA7_TR = VIA7 INTERACT PADM7_TR
PAD_VIA7_TR_NON_CUP = PAD_VIA7_TR NOT INTERACT WBDMY
PAD_VIA7_TR_OUTER = VIA7 INTERACT OUTER_CB_TR
PAD_VIA7_TR_OUTER_NON_CUP = PAD_VIA7_TR_OUTER NOT INTERACT WBDMY
PAD_VIA7_TR_MID = VIA7 INTERACT MID_CB_TR
PAD_VIA7_TR_MID_NON_CUP = PAD_VIA7_TR_MID NOT INTERACT WBDMY
PAD_VIA7_TR_INNER = VIA7 INTERACT INNER_CB_TR
PAD_VIA7_TR_INNER_NON_CUP = PAD_VIA7_TR_INNER NOT INTERACT WBDMY
PAD_VIA8_TR = VIA8 INTERACT PADM8_TR
PAD_VIA8_TR_NON_CUP = PAD_VIA8_TR NOT INTERACT WBDMY
PAD_VIA8_TR_OUTER = VIA8 INTERACT OUTER_CB_TR
PAD_VIA8_TR_OUTER_NON_CUP = PAD_VIA8_TR_OUTER NOT INTERACT WBDMY
PAD_VIA8_TR_MID = VIA8 INTERACT MID_CB_TR
PAD_VIA8_TR_MID_NON_CUP = PAD_VIA8_TR_MID NOT INTERACT WBDMY
PAD_VIA8_TR_INNER = VIA8 INTERACT INNER_CB_TR
PAD_VIA8_TR_INNER_NON_CUP = PAD_VIA8_TR_INNER NOT INTERACT WBDMY
PAD_VIA9_TR = VIA9 INTERACT PADM9_TR
PAD_VIA9_TR_NON_CUP = PAD_VIA9_TR NOT INTERACT WBDMY
PAD_VIA9_TR_OUTER = VIA9 INTERACT OUTER_CB_TR
PAD_VIA9_TR_OUTER_NON_CUP = PAD_VIA9_TR_OUTER NOT INTERACT WBDMY
PAD_VIA9_TR_MID = VIA9 INTERACT MID_CB_TR
PAD_VIA9_TR_MID_NON_CUP = PAD_VIA9_TR_MID NOT INTERACT WBDMY
PAD_VIA9_TR_INNER = VIA9 INTERACT INNER_CB_TR
PAD_VIA9_TR_INNER_NON_CUP = PAD_VIA9_TR_INNER NOT INTERACT WBDMY

OUTER_CB_ST_NON_CUP = OUTER_CB_ST NOT INTERACT WBDMY
INNER_CB_ST_NON_CUP = INNER_CB_ST NOT INTERACT WBDMY
OUTER_CB_TR_NON_CUP = OUTER_CB_TR NOT INTERACT WBDMY
MID_CB_TR_NON_CUP   = MID_CB_TR   NOT INTERACT WBDMY
INNER_CB_TR_NON_CUP = INNER_CB_TR NOT INTERACT WBDMY

OUTER_CB_ST_CUP = OUTER_CB_ST  INTERACT WBDMY
OUTER_CB_TR_CUP = OUTER_CB_TR  INTERACT WBDMY


// Pitch Setting Error
//--------
#IFNDEF PITCH_40_SINGLE    
#IFNDEF PITCH_45_SINGLE    
#IFNDEF PITCH_50_SINGLE 
#IFNDEF PITCH_55_SINGLE 
#IFNDEF PITCH_60_SINGLE
#IFNDEF PITCH_45_STAGGER 
#IFNDEF PITCH_50_STAGGER
#IFNDEF PITCH_60_STAGGER
#IFNDEF PITCH_70_STAGGER
#IFNDEF PITCH_80_STAGGER
#IFNDEF PITCH_80_TRITIER 
PITCH_OPTION.ERROR.1 { @ At least one of the pitch options must be selected.
  COPY CHIP
}
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF PITCH_40_SINGLE
#IFDEF PITCH_45_SINGLE
PITCH_OPTION.ERROR.2 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_50_SINGLE
PITCH_OPTION.ERROR.3 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_55_SINGLE
PITCH_OPTION.ERROR.4 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_60_SINGLE
PITCH_OPTION.ERROR.5 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_45_SINGLE
#IFDEF PITCH_50_SINGLE
PITCH_OPTION.ERROR.6 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_55_SINGLE
PITCH_OPTION.ERROR.7 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_60_SINGLE
PITCH_OPTION.ERROR.8 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#ENDIF


#IFDEF PITCH_50_SINGLE
#IFDEF PITCH_55_SINGLE
PITCH_OPTION.ERROR.9 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_60_SINGLE
PITCH_OPTION.ERROR.10 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_55_SINGLE
#IFDEF PITCH_60_SINGLE
PITCH_OPTION.ERROR.11 { @ Only one kind of pitch option can be selected for single_in_line structure
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_45_STAGGER
#IFDEF PITCH_50_STAGGER
PITCH_OPTION.ERROR.12 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_60_STAGGER
PITCH_OPTION.ERROR.13 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_70_STAGGER
PITCH_OPTION.ERROR.14 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_80_STAGGER
PITCH_OPTION.ERROR.15 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_50_STAGGER
#IFDEF PITCH_60_STAGGER
PITCH_OPTION.ERROR.16 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_70_STAGGER
PITCH_OPTION.ERROR.17 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_80_STAGGER
PITCH_OPTION.ERROR.18 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_60_STAGGER
#IFDEF PITCH_70_STAGGER
PITCH_OPTION.ERROR.19 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#IFDEF PITCH_80_STAGGER
PITCH_OPTION.ERROR.20 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_70_STAGGER
#IFDEF PITCH_80_STAGGER
PITCH_OPTION.ERROR.21 { @ Only one kind of pitch can be selected for staggered structure
  COPY CHIP
}
#ENDIF
#ENDIF


#IFDEF PITCH_40_SINGLE
#IFDEF HALF_NODE
PITCH_40_SINGLE_HALF_NODE.WARN{@ single in-line pad with pitch >= 40um is not available in 'N40LP/N40G'
  COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_45_STAGGER
#IFDEF HALF_NODE
PITCH_45_STAGGER_HALF_NODE.WARN{@ stagger pad with pitch >= 45um is not available in 'N40LP/N40G'
   COPY CHIP
}
#ENDIF
#ENDIF

#IFDEF PITCH_40_SINGLE 
#DEFINE PITCH_LESS_55
#DEFINE PITCH_LESS_55_SINGLE
#ENDIF

#IFDEF PITCH_45_SINGLE 
#DEFINE PITCH_LESS_55
#DEFINE PITCH_LESS_55_SINGLE
#ENDIF

#IFDEF PITCH_50_SINGLE 
#DEFINE PITCH_LESS_55
#DEFINE PITCH_LESS_55_SINGLE
#ENDIF

#IFDEF PITCH_50_STAGGER
#DEFINE PITCH_LESS_55
#DEFINE PITCH_LESS_55_STAGGER
#ENDIF

#IFDEF PITCH_45_STAGGER
#DEFINE PITCH_LESS_55
#DEFINE PITCH_LESS_55_STAGGER
#ENDIF

// Passivation Opening Rule For Wire Bond
//=======================================
CB.W.1 { @ RAP: CB ring width = ^CB_W_1 um; NON-RAP: CB is fully identical to CB2 (Pls refer to CB.EN.1)
  A = CBx NOT INTERACT (CBx XOR CB2x)
  NOT WITH WIDTH (CBx NOT A)== CB_W_1
  INT CBx < CB_W_1 ABUT < 90 SINGULAR REGION
}




CB.R.2 { @inner corner of CB ring must be 90 degree
  NOT RECTANGLE (HOLES CB_RING)
}

CB.EN.1 { @ CB enclosure by CB2_WB == 0 um
  CB_PAD XOR CB2
}

#IFDEF PITCH_LESS_55
CB.R.1{ @ for 40um <= pad pitch < 55um, one pair of notches on each pad in CB is requred. the size of notch in RAP is 3um *3um; that in non_RAP is 3um*1.5um 
#IFDEF PITCH_LESS_55_SINGLE
  (CB_PAD_RAP AND CB_SINGLE) NOT INTERACT CB_OPENING_REGION == 2
  (CB_PAD_RAP AND CB_SINGLE) NOT INTERACT CB_OPENING_REGION
  INT CB_OPENING_REGION < CB_S_1 ABUT <90 SINGULAR REGION
  CB_OPENING_REGION ENCLOSE RECTANGLE CB_S_1 CB_S_1+GRID 

  (CB_PAD_NON_RAP AND CB_SINGLE) NOT INTERACT notch_CB  == 2
  (CB_PAD_NON_RAP AND CB_SINGLE) NOT INTERACT notch_CB 
  NOT RECTANGLE notch_CB == 1.5 BY == 3.0 ORTHOGONAL ONLY
#ENDIF
#IFDEF PITCH_LESS_55_STAGGER
  (CB_PAD_RAP AND CB_STAGGER) NOT INTERACT CB_OPENING_REGION == 2
  (CB_PAD_RAP AND CB_STAGGER) NOT INTERACT CB_OPENING_REGION
  INT CB_OPENING_REGION < CB_S_1 ABUT <90 SINGULAR REGION
  CB_OPENING_REGION ENCLOSE RECTANGLE CB_S_1 CB_S_1+GRID 

  (CB_PAD_NON_RAP AND CB_STAGGER) NOT INTERACT notch_CB  == 2
  (CB_PAD_NON_RAP AND CB_STAGGER) NOT INTERACT notch_CB 
  NOT RECTANGLE notch_CB == 1.5 BY == 3.0 ORTHOGONAL ONLY
#ENDIF
}
#ENDIF






CB_SINGLE_A = CB_SINGLE OR (notch_CB2 INTERACT CB_SINGLE)
CB_STAGGER_A = CB_STAGGER OR (notch_CB2 INTERACT CB_STAGGER)
CB_TRI_TIER_A = CB_TRI_TIER OR (notch_CB2 INTERACT CB_TRI_TIER)
  
#IFDEF SINGLE_PAD
CB2.W.1.SI { @ CB2 width >= ^CB2_W_1_SI um
  INT CB_SINGLE_A < CB2_W_1_SI ABUT < 90 PARALLEL ONLY REGION
}

CB2.W.2.SI { @ CB2 length (the edge perpendicular to nearby chip edge) >= ^CB2_W_2_SI um
  NOT ENCLOSE RECTANGLE CB_SINGLE 0.001 CB2_W_2_SI ORTHOGONAL ONLY
}

CB2.S.1.SI { @ CB2 space >= ^CB2_S_1_SI um
  EXT CB_SINGLE_A < CB2_S_1_SI ABUT < 90 SINGULAR REGION
}

CB2.P.1.SI { @ CB2 pitch >= ^CB2_P_1_SI um
  EXT CB_CENTER_SI < CB2_P_1_SI - 1 ABUT < 90 REGION
}

CB2.EN.1.SI.M1 { @ CB2 enclosure by M1 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M1 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M1
}
CB2.EN.1.SI.M2 { @ CB2 enclosure by M2 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M2 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M2
}
CB2.EN.1.SI.M3 { @ CB2 enclosure by M3 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M3 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M3
}
CB2.EN.1.SI.M4 { @ CB2 enclosure by M4 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M4 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M4
}
CB2.EN.1.SI.M5 { @ CB2 enclosure by M5 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M5 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M5
}
CB2.EN.1.SI.M6 { @ CB2 enclosure by M6 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M6 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M6
}
CB2.EN.1.SI.M7 { @ CB2 enclosure by M7 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M7 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M7
}
CB2.EN.1.SI.M8 { @ CB2 enclosure by M8 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M8 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M8
}
CB2.EN.1.SI.M9 { @ CB2 enclosure by M9 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M9 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M9
  ENC CB_SINGLE_CUP M9 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_CUP OUTSIDE EDGE M9
}
CB2.EN.1.SI.M10 { @ CB2 enclosure by M10 pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE_NON_CUP M10 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_NON_CUP OUTSIDE EDGE M10
  ENC CB_SINGLE_CUP M10 < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE_CUP OUTSIDE EDGE M10
}
#IFDEF with_AP
CB2.EN.1.SI.AP { @ CB2 enclosure by AP-MD in pad regions >= ^CB2_EN_1 um
  ENC CB_SINGLE AP < CB2_EN_1 ABUT <90 SINGULAR REGION
  CB_SINGLE OUTSIDE EDGE AP
}
#ENDIF
#ENDIF



#IFDEF STAGGER_PAD

CB2.W.1.ST { @ CB2 width >= ^CB2_W_1_ST um
  INT CB_STAGGER_A < CB2_W_1_ST ABUT < 90 PARALLEL ONLY REGION
}

CB2.W.2.ST { @ CB2 length (the edge perpendicular to nearby chip edge) >= ^CB2_W_2_ST um
  NOT ENCLOSE RECTANGLE CB_STAGGER 0.001 CB2_W_2_ST ORTHOGONAL ONLY
}

CB2.S.1.ST { @ CB2 space >= ^CB2_S_1_ST um
  EXT CB_STAGGER_A < CB2_S_1_ST ABUT < 90 SINGULAR REGION
}

CB2.P.1.ST { @ CB2 pitch >= ^CB2_P_1_ST um
  EXT CB_CENTER_ST < CB2_P_1_ST - 1 ABUT < 90 REGION
}

CB2.W.3.ST.M1 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM1area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M2 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM2area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M3 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM3area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M4 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM4area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M5 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM5area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M6 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM6area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M7 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM7area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}
CB2.W.3.ST.M8 { @ Width of non-cup pad metal under CB2 region. M1~Mtop-2 under inner pad >= ^CB2_W_3_ST um
  X = PADM8area_ST INTERACT INNER_CB_ST_NON_CUP
  INT X < CB2_W_3_ST ABUT < 90 SINGULAR REGION
}

CB2.EN.1.ST.M1 { @ CB2 enclosure by M1 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M1 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M1
}
CB2.EN.1.ST.M2 { @ CB2 enclosure by M2 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M2 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M2
}
CB2.EN.1.ST.M3 { @ CB2 enclosure by M3 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M3 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M3
}
CB2.EN.1.ST.M4 { @ CB2 enclosure by M4 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M4 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M4
}
CB2.EN.1.ST.M5 { @ CB2 enclosure by M5 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M5 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M5
}
CB2.EN.1.ST.M6 { @ CB2 enclosure by M6 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M6 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M6
}
CB2.EN.1.ST.M7 { @ CB2 enclosure by M7 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M7 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M7
}
CB2.EN.1.ST.M8 { @ CB2 enclosure by M8 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M8 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M8
}
CB2.EN.1.ST.M9 { @ CB2 enclosure by M9 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M9
  ENC OUTER_CB_ST_CUP M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_CUP OUTSIDE EDGE M9
  ENC INNER_CB_ST M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  INNER_CB_ST OUTSIDE EDGE M9
}
CB2.EN.1.ST.M10 { @ CB2 enclosure by M10 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST_NON_CUP M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_NON_CUP OUTSIDE EDGE M10
  ENC OUTER_CB_ST_CUP M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST_CUP OUTSIDE EDGE M10
  ENC INNER_CB_ST M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  INNER_CB_ST OUTSIDE EDGE M10
}
#IFDEF with_AP
CB2.EN.1.ST.AP { @ CB2 enclosure by AP-MD in pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_ST AP < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_ST OUTSIDE EDGE AP
  ENC INNER_CB_ST AP < CB2_EN_1 ABUT < 90 SINGULAR REGION
  INNER_CB_ST OUTSIDE EDGE AP
}
#ENDIF
#ENDIF



#IFDEF TRITIER_PAD
CB2.W.1.TR { @ C2B width >= ^CB2_W_1_TR um
  INT CB_TRI_TIER_A < CB2_W_1_TR ABUT < 90 PARALLEL ONLY REGION
}

CB2.W.2.TR { @ CB2 length (the edge perpendicular to nearby chip edge) >= ^CB2_W_2_TR um
  NOT ENCLOSE RECTANGLE CB_TRI_TIER 0.001 CB2_W_2_TR ORTHOGONAL ONLY
}

CB2.S.1.TR { @ CB2 space >= ^CB2_S_1_TR um
  EXT CB_TRI_TIER_A < CB2_S_1_TR ABUT < 90 SINGULAR REGION
}

CB2.P.1.TR { @ CB2 pitch >= ^CB2_P_1_TR um
  EXT CB_CENTER_TR < CB2_P_1_TR - 1 ABUT < 90 REGION
}

CB2.W.3.TR.Mid.M1 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM1area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M2 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM2area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M3 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM3area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M4 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM4area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M5 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM5area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M6 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM6area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M7 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM7area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Mid.M8 { @ Width of pad metal under CB2 region. M1~Mtop-2 under middle pad >= ^CB2_W_3_TR um
  X = PADM8area_TR NOT OUTSIDE MID_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT < 90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M2 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM2area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M3 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM3area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M4 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM4area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M5 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM5area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M6 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM6area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M7 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM7area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}
CB2.W.3.TR.Inner.M8 {@ Width of pad metal under CB2 region. M2~Mtop-2 under inner pad >= ^CB2_W_3_TR um
  X = PADM8area_TR NOT OUTSIDE INNER_CB_TR_NON_CUP
  INT X < CB2_W_3_TR ABUT <90 SINGULAR REGION
}


CB2.EN.1.TR.M1 { @ CB2 enclosure by M1 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M1 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M1
}
CB2.EN.1.TR.M2 { @ CB2 enclosure by M2 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M2 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M2
}
CB2.EN.1.TR.M3 { @ CB2 enclosure by M3 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M3 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M3
}
CB2.EN.1.TR.M4 { @ CB2 enclosure by M4 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M4 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M4
}
CB2.EN.1.TR.M5 { @ CB2 enclosure by M5 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M5 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M5
}
CB2.EN.1.TR.M6 { @ CB2 enclosure by M6 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M6 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M6
}
CB2.EN.1.TR.M7 { @ CB2 enclosure by M7 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M7 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M7
}
CB2.EN.1.TR.M8 { @ CB2 enclosure by M8 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M8 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M8
}
CB2.EN.1.TR.M9 { @ CB2 enclosure by M9 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M9
  ENC OUTER_CB_TR_CUP M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_CUP OUTSIDE EDGE M9
  ENC MID_CB_TR M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  MID_CB_TR OUTSIDE EDGE M9
  ENC INNER_CB_TR M9 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  INNER_CB_TR OUTSIDE EDGE M9
}
CB2.EN.1.TR.M10 { @ CB2 enclosure by M10 pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR_NON_CUP M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_NON_CUP OUTSIDE EDGE M10
  ENC OUTER_CB_TR_CUP M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR_CUP OUTSIDE EDGE M10
  ENC MID_CB_TR M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  MID_CB_TR OUTSIDE EDGE M10
  ENC INNER_CB_TR M10 < CB2_EN_1 ABUT < 90 SINGULAR REGION
  INNER_CB_TR OUTSIDE EDGE M10
}
#IFDEF with_AP
CB2.EN.1.TR.AP { @ CB2 enclosure by AP-MD in pad regions >= ^CB2_EN_1 um
  ENC OUTER_CB_TR AP < CB2_EN_1 ABUT < 90 SINGULAR REGION
  OUTER_CB_TR OUTSIDE EDGE AP
  ENC MID_CB_TR AP < CB2_EN_1 ABUT < 90 SINGULAR REGION
  MID_CB_TR OUTSIDE EDGE AP
  ENC INNER_CB_TR AP < CB2_EN_1 ABUT < 90 SINGULAR REGION
  INNER_CB_TR OUTSIDE EDGE AP
}
#ENDIF
#ENDIF



CB2.S.2.M1 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M1_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M1i NOT PADM1_SI
  A_SI = EXT PADM1_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M1i COIN EDGE B_SI
  EXT C_SI M1i < CB2_S_2 SPACE REGION
  EXT R_M1_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M1i NOT PADM1_ST
  A_ST = EXT PADM1_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M1i COIN EDGE B_ST
  EXT C_ST M1i < CB2_S_2 SPACE REGION
  EXT R_M1_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M1i NOT PADM1_TR
  A_TR = EXT PADM1_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M1i COIN EDGE B_TR
  EXT C_TR M1i < CB2_S_2 SPACE REGION
}
CB2.S.2.M2 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M2_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M2i NOT PADM2_SI
  A_SI = EXT PADM2_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M2i COIN EDGE B_SI
  EXT C_SI M2i < CB2_S_2 SPACE REGION
  EXT R_M2_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M2i NOT PADM2_ST
  A_ST = EXT PADM2_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M2i COIN EDGE B_ST
  EXT C_ST M2i < CB2_S_2 SPACE REGION
  EXT R_M2_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M2i NOT PADM2_TR
  A_TR = EXT PADM2_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M2i COIN EDGE B_TR
  EXT C_TR M2i < CB2_S_2 SPACE REGION
}
CB2.S.2.M3 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M3_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M3i NOT PADM3_SI
  A_SI = EXT PADM3_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M3i COIN EDGE B_SI
  EXT C_SI M3i < CB2_S_2 SPACE REGION
  EXT R_M3_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M3i NOT PADM3_ST
  A_ST = EXT PADM3_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M3i COIN EDGE B_ST
  EXT C_ST M3i < CB2_S_2 SPACE REGION
  EXT R_M3_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M3i NOT PADM3_TR
  A_TR = EXT PADM3_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M3i COIN EDGE B_TR
  EXT C_TR M3i < CB2_S_2 SPACE REGION
}
CB2.S.2.M4 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M4_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M4i NOT PADM4_SI
  A_SI = EXT PADM4_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M4i COIN EDGE B_SI
  EXT C_SI M4i < CB2_S_2 SPACE REGION
  EXT R_M4_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M4i NOT PADM4_ST
  A_ST = EXT PADM4_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M4i COIN EDGE B_ST
  EXT C_ST M4i < CB2_S_2 SPACE REGION
  EXT R_M4_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M4i NOT PADM4_TR
  A_TR = EXT PADM4_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M4i COIN EDGE B_TR
  EXT C_TR M4i < CB2_S_2 SPACE REGION
}
CB2.S.2.M5 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M5_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M5i NOT PADM5_SI
  A_SI = EXT PADM5_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M5i COIN EDGE B_SI
  EXT C_SI M5i < CB2_S_2 SPACE REGION
  EXT R_M5_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M5i NOT PADM5_ST
  A_ST = EXT PADM5_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M5i COIN EDGE B_ST
  EXT C_ST M5i < CB2_S_2 SPACE REGION
  EXT R_M5_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M5i NOT PADM5_TR
  A_TR = EXT PADM5_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M5i COIN EDGE B_TR
  EXT C_TR M5i < CB2_S_2 SPACE REGION
}
CB2.S.2.M6 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M6_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M6i NOT PADM6_SI
  A_SI = EXT PADM6_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M6i COIN EDGE B_SI
  EXT C_SI M6i < CB2_S_2 SPACE REGION
  EXT R_M6_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M6i NOT PADM6_ST
  A_ST = EXT PADM6_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M6i COIN EDGE B_ST
  EXT C_ST M6i < CB2_S_2 SPACE REGION
  EXT R_M6_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M6i NOT PADM6_TR
  A_TR = EXT PADM6_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M6i COIN EDGE B_TR
  EXT C_TR M6i < CB2_S_2 SPACE REGION
}
CB2.S.2.M7 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M7_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M7i NOT PADM7_SI
  A_SI = EXT PADM7_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M7i COIN EDGE B_SI
  EXT C_SI M7i < CB2_S_2 SPACE REGION
  EXT R_M7_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M7i NOT PADM7_ST
  A_ST = EXT PADM7_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M7i COIN EDGE B_ST
  EXT C_ST M7i < CB2_S_2 SPACE REGION
  EXT R_M7_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M7i NOT PADM7_TR
  A_TR = EXT PADM7_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M7i COIN EDGE B_TR
  EXT C_TR M7i < CB2_S_2 SPACE REGION
}
CB2.S.2.M8 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT R_M8_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M8i NOT PADM8_SI
  A_SI = EXT PADM8_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M8i COIN EDGE B_SI
  EXT C_SI M8i < CB2_S_2 SPACE REGION
  EXT R_M8_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M8i NOT PADM8_ST
  A_ST = EXT PADM8_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M8i COIN EDGE B_ST
  EXT C_ST M8i < CB2_S_2 SPACE REGION
  EXT R_M8_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M8i NOT PADM8_TR
  A_TR = EXT PADM8_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M8i COIN EDGE B_TR
  EXT C_TR M8i < CB2_S_2 SPACE REGION
}
CB2.S.2.M9 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT PADM9_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M9i NOT PADM9_SI
  A_SI = EXT PADM9_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M9i COIN EDGE B_SI
  EXT C_SI M9i < CB2_S_2 SPACE REGION
  EXT PADM9_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M9i NOT PADM9_ST
  A_ST = EXT PADM9_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M9i COIN EDGE B_ST
  EXT C_ST M9i < CB2_S_2 SPACE REGION
  EXT PADM9_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M9i NOT PADM9_TR
  A_TR = EXT PADM9_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M9i COIN EDGE B_TR
  EXT C_TR M9i < CB2_S_2 SPACE REGION
}
CB2.S.2.M10 { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT PADM10_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_SI = M10i NOT PADM10_SI
  A_SI = EXT PADM10_SI X_SI < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_SI = X_SI COIN EDGE A_SI
  C_SI = M10i COIN EDGE B_SI
  EXT C_SI M10i < CB2_S_2 SPACE REGION
  EXT PADM10_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_ST = M10i NOT PADM10_ST
  A_ST = EXT PADM10_ST X_ST < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_ST = X_ST COIN EDGE A_ST
  C_ST = M10i COIN EDGE B_ST
  EXT C_ST M10i < CB2_S_2 SPACE REGION
  EXT PADM10_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  X_TR = M10i NOT PADM10_TR
  A_TR = EXT PADM10_TR X_TR < CB2_S_2 ABUT >0 <90 SINGULAR REGION  
  B_TR = X_TR COIN EDGE A_TR
  C_TR = M10i COIN EDGE B_TR
  EXT C_TR M10i < CB2_S_2 SPACE REGION
}

AP_PAD_nonCUP = (PADAP_SI OR PADAP_ST) OR PADAP_TR 
CONNECT AP_PAD_nonCUP AP

CB2.S.2.AP { @ Space of 2 AP-MD pad metals >= ^CB2_S_2 um
  EXT AP_PAD_nonCUP < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  EXT AP_PAD_nonCUP AP < CB2_S_2 ABUT >0 <90 SINGULAR REGION NOT CONNECTED
}

CB2.S.2.M9.CUP { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT WBM9 < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  M9_NOWB = M9i NOT WBM9
  A = EXT WBM9 M9_NOWB < CB2_S_2 ABUT >0 <90 SINGULAR REGION 
  B = M9_NOWB COIN EDGE A
  C = M9i COIN EDGE B
  EXT C M9i < CB2_S_2 SPACE REGION
}
CB2.S.2.M10.CUP { @ Space of 2 pad metals, or between pad metal and metal >= ^CB2_S_2 um
  EXT WBM10 < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  M10_NOWB = M10i NOT WBM10
  A = EXT WBM10 M10_NOWB < CB2_S_2 ABUT >0 <90 SINGULAR REGION 
  B = M10_NOWB COIN EDGE A
  C = M10i COIN EDGE B
  EXT C M10i < CB2_S_2 SPACE REGION
}


CB2.S.2.AP.CUP { @ Space of 2 pad metals, or between AP-MD pad and AP-MD >= ^CB2_S_2 um
  EXT WBAP  < CB2_S_2 ABUT >0 <90 SINGULAR REGION
  AP_NOWB = AP NOT WBAP
  A = EXT WBAP AP_NOWB < CB2_S_2 ABUT >0 <90 SINGULAR REGION 
  B = AP_NOWB COIN EDGE A
  C = AP COIN EDGE B
  EXT C AP < CB2_S_2 SPACE REGION
}


CB2.S.3 { @ Space of different pad geometries (CB) [(Single to Stagger), (Single to Tri-tier) or (Stagger to Tri-tier)] >= ^CB2_S_3 um
  EXT CB_SINGLE CB_STAGGER < CB2_S_3 ABUT <90 OPPOSITE SINGULAR REGION
  EXT CB_STAGGER CB_TRI_TIER < CB2_S_3 ABUT <90 OPPOSITE SINGULAR REGION
  EXT CB_TRI_TIER CB_SINGLE  < CB2_S_3 ABUT  <90 OPPOSITE SINGULAR REGION
}

//CB2.P.2 can't be checked by DRC.
//CB2.P.3 can't be checked by DRC.
//CB2.P.4 can't be checked by DRC.







// Fully Stacking Pad structure Rules
//=======================================

CB2.R.5a.SI { @ Pad structure must be MT/VIAT...VIA1/M1
  CB_SINGLE_NON_CUP NOT INTERACT PADM1_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM2_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM3_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM4_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM5_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM6_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM7_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM8_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM9_SI
  CB_SINGLE_NON_CUP NOT INTERACT PADM10_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA1
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA2
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA3
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA4
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA5
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA6
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA7
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA8
  CB_SINGLE_NON_CUP NOT ENCLOSE VIA9
}
CB2.R.5a.ST { @ Pad structure must be MT/VIAT...VIA1/M1
  CB_STAGGER_NON_CUP NOT INTERACT PADM1_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM2_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM3_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM4_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM5_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM6_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM7_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM8_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM9_ST
  CB_STAGGER_NON_CUP NOT INTERACT PADM10_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA1
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA2
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA3
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA4
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA5
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA6
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA7
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA8
  CB_STAGGER_NON_CUP NOT ENCLOSE VIA9
}
CB2.R.5a.TR { @ Pad structure must be MT/VIAT...VIA1/M1 
  X = CB_TRI_TIER_NON_CUP NOT INTERACT PADM1_TR
  X NOT INNER_CB_TR_NON_CUP
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM2_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM3_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM4_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM5_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM6_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM7_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM8_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM9_TR
  CB_TRI_TIER_NON_CUP NOT INTERACT PADM10_TR

  Y = CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA1
  Y NOT INNER_CB_TR_NON_CUP
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA2
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA3
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA4
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA5
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA6
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA7
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA8
  CB_TRI_TIER_NON_CUP NOT ENCLOSE VIA9
}

CB2.R.5b.SI { @ AP-MD/Mtop/Mtop-1 pad must be solid
  CB_SINGLE_NON_CUP NOT PADM10_SI
  CB_SINGLE_NON_CUP NOT PADM9_SI
#IFDEF with_AP
  CB_SINGLE_NON_CUP NOT AP 
#ENDIF 
}
CB2.R.5b.ST { @ AP-MD/Mtop/Mtop-1 pad must be solid
  CB_STAGGER_NON_CUP NOT PADM10_ST
  CB_STAGGER_NON_CUP NOT PADM9_ST
#IFDEF with_AP
  CB_STAGGER_NON_CUP NOT AP 
#ENDIF 
}
CB2.R.5b.TR { @ AP-MD/Mtop/Mtop-1 pad must be solid
  CB_TRI_TIER_NON_CUP NOT PADM10_TR
  CB_TRI_TIER_NON_CUP NOT PADM9_TR
#IFDEF with_AP
  CB_TRI_TIER_NON_CUP NOT AP 
#ENDIF 
}

CB2.R.5c.SI { @ CB2 must enclose M1~M8 slot
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA1_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA2_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA3_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA4_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA5_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA6_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA7_SI > 1
  CB_SINGLE_NON_CUP ENCLOSE SL_SPA8_SI > 1
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA1_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA2_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA3_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA4_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA5_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA6_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA7_SI
  CB_SINGLE_NON_CUP NOT ENCLOSE SL_SPA8_SI
}
CB2.R.5c.ST { @ CB2 must enclose M1~M8 slot
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA1_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA2_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA3_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA4_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA5_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA6_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA7_ST > 1
  CB_STAGGER_NON_CUP ENCLOSE SL_SPA8_ST > 1
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA1_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA2_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA3_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA4_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA5_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA6_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA7_ST
  CB_STAGGER_NON_CUP NOT ENCLOSE SL_SPA8_ST
}
CB2.R.5c.TR { @ CB2 must enclose M1~M8 slot
  X = CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA1_TR > 1
  X NOT INNER_CB_TR_NON_CUP
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA2_TR > 1
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA3_TR > 1
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA4_TR > 1
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA5_TR > 1
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA6_TR > 1
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA7_TR > 1
  CB_TRI_TIER_NON_CUP ENCLOSE SL_SPA8_TR > 1

  Y = CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA1_TR
  Y NOT INNER_CB_TR_NON_CUP
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA2_TR
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA3_TR
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA4_TR
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA5_TR
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA6_TR
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA7_TR
  CB_TRI_TIER_NON_CUP NOT ENCLOSE SL_SPA8_TR
}

CB2.R.5d.SI { @ non-rectangle slot
  NOT RECTANGLE SL_M1_SI
  NOT RECTANGLE SL_M2_SI
  NOT RECTANGLE SL_M3_SI
  NOT RECTANGLE SL_M4_SI
  NOT RECTANGLE SL_M5_SI
  NOT RECTANGLE SL_M6_SI
  NOT RECTANGLE SL_M7_SI
  NOT RECTANGLE SL_M8_SI
}
CB2.R.5d.ST { @ non-rectangle slot
  NOT RECTANGLE SL_M1_ST
  NOT RECTANGLE SL_M2_ST
  NOT RECTANGLE SL_M3_ST
  NOT RECTANGLE SL_M4_ST
  NOT RECTANGLE SL_M5_ST
  NOT RECTANGLE SL_M6_ST
  NOT RECTANGLE SL_M7_ST
  NOT RECTANGLE SL_M8_ST
}
CB2.R.5d.TR { @ non-rectangle slot
  NOT RECTANGLE SL_M1_TR
  NOT RECTANGLE SL_M2_TR
  NOT RECTANGLE SL_M3_TR
  NOT RECTANGLE SL_M4_TR
  NOT RECTANGLE SL_M5_TR
  NOT RECTANGLE SL_M6_TR
  NOT RECTANGLE SL_M7_TR
  NOT RECTANGLE SL_M8_TR
}

CB2.R.5e { @ RV interact CB/CB2 not allowed
  RV INTERACT CBx
  RV INTERACT CB2x
}

CB2.R.6.CB { @ length of octangle pad CB 45 degree turn corners  2~3 um
  s45_edge = ANGLE CB_A_NON_CUP  == 45
  VERTEX CB_A_NON_CUP            != 8
  LENGTH s45_edge      < CB2_R_6_MIN
  LENGTH s45_edge      > CB2_R_6_MAX
}
CB2.R.6.CB2 { @ length of octangle pad CB2 45 degree turn corners  2~3 um
  s45_edge = ANGLE CB2_A_NON_CUP  == 45
  VERTEX CB2_A_NON_CUP          != 8
  LENGTH s45_edge      < CB2_R_6_MIN
  LENGTH s45_edge      > CB2_R_6_MAX
}


CB2.R.6.M1 { @ length of octangle pad M1 degree turn corners  2~3 um
  PAD_M = ((R_M1_SI OR PADH1_SI) OR (R_M1_ST OR PADH1_ST) )OR (R_M1_TR OR PADH1_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M2 { @ length of octangle pad M2 degree turn corners  2~3 um
  PAD_M = ((R_M2_SI OR PADH2_SI) OR (R_M2_ST OR PADH2_ST) )OR (R_M2_TR OR PADH2_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M3 { @ length of octangle pad M3 degree turn corners  2~3 um
  PAD_M = ((R_M3_SI OR PADH3_SI) OR (R_M3_ST OR PADH3_ST) )OR (R_M3_TR OR PADH3_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M4 { @ length of octangle pad M4 degree turn corners  2~3 um
  PAD_M = ((R_M4_SI OR PADH4_SI) OR (R_M4_ST OR PADH4_ST) )OR (R_M4_TR OR PADH4_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M5 { @ length of octangle pad M5 degree turn corners  2~3 um
  PAD_M = ((R_M5_SI OR PADH5_SI) OR (R_M5_ST OR PADH5_ST) )OR (R_M5_TR OR PADH5_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M6 { @ length of octangle pad M6 degree turn corners  2~3 um
  PAD_M = ((R_M6_SI OR PADH6_SI) OR (R_M6_ST OR PADH6_ST) )OR (R_M6_TR OR PADH6_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M7 { @ length of octangle pad M7 degree turn corners  2~3 um
  PAD_M = ((R_M7_SI OR PADH7_SI) OR (R_M7_ST OR PADH7_ST) )OR (R_M7_TR OR PADH7_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M8 { @ length of octangle pad M8 degree turn corners  2~3 um
  PAD_M = ((R_M8_SI OR PADH8_SI) OR (R_M8_ST OR PADH8_ST) )OR (R_M8_TR OR PADH8_TR)
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M9 { @ length of octangle pad MT 45 degree turn corners  2~3 um
  PAD_M = (PADM9_SI OR PADM9_ST) OR PADM9_TR
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}
CB2.R.6.M10 { @ length of octangle pad MT 45 degree turn corners  2~3 um
  PAD_M = (PADM10_SI OR PADM10_ST) OR PADM10_TR
  VERTEX PAD_M      != 8
  s45_edge  = ANGLE PAD_M  == 45
  LENGTH s45_edge   < CB2_R_6_MIN
  LENGTH s45_edge   > CB2_R_6_MAX
}




// Fully Stacking Pad structure Rules (VIAx)
//=======================================

CB2VIA1.W.2 { @ VIA1 width = ^CB2VIA1_W_2 um
  NOT RECTANGLE PAD_VIA1_SI == CB2VIA1_W_2 BY == CB2VIA1_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA1_ST == CB2VIA1_W_2 BY == CB2VIA1_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA1_TR == CB2VIA1_W_2 BY == CB2VIA1_W_2 ORTHOGONAL ONLY      
}
CB2VIA1.S.3 { @ pad VIA1 space >= ^CB2VIA1_S_3 um
  EXT PAD_VIA1_SI < CB2VIA1_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA1_ST < CB2VIA1_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA1_TR < CB2VIA1_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA1.EN.4 { @ pad VIA1 enclosure by M1/M2 >= ^CB2VIA1_EN_4 um
  ENC PAD_VIA1_SI M1 < CB2VIA1_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA1_SI NOT M1
  ENC PAD_VIA1_SI M2 < CB2VIA1_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA1_SI NOT M2
  ENC PAD_VIA1_ST M1 < CB2VIA1_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA1_ST NOT M1
  ENC PAD_VIA1_ST M2 < CB2VIA1_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA1_ST NOT M2
  ENC PAD_VIA1_TR M1 < CB2VIA1_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA1_TR NOT M1
  ENC PAD_VIA1_TR M2 < CB2VIA1_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA1_TR NOT M2
}
CB2VIA1.R.4 { @ VIA1 number at each square metal crossing region >= ^CB2VIA1_R_4
  SQUARE_C12_SI = RECTANGLE C_M12_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C12_ST = RECTANGLE C_M12_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C12_TR = RECTANGLE C_M12_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C12_SI ENCLOSE PAD_VIA1_SI < CB2VIA1_R_4
  SQUARE_C12_SI NOT ENCLOSE PAD_VIA1_SI_NON_CUP
  SQUARE_C12_ST ENCLOSE PAD_VIA1_ST < CB2VIA1_R_4
  SQUARE_C12_ST NOT ENCLOSE PAD_VIA1_ST_NON_CUP  
  SQUARE_C12_TR ENCLOSE PAD_VIA1_TR < CB2VIA1_R_4
  SQUARE_C12_TR NOT ENCLOSE PAD_VIA1_TR_NON_CUP 
}

CB2VIA2.W.2 { @ VIA2 width = ^CB2VIA2_W_2 um
  NOT RECTANGLE PAD_VIA2_SI == CB2VIA2_W_2 BY == CB2VIA2_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA2_ST == CB2VIA2_W_2 BY == CB2VIA2_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA2_TR == CB2VIA2_W_2 BY == CB2VIA2_W_2 ORTHOGONAL ONLY      
}
CB2VIA2.S.3 { @ pad VIA2 space >= ^CB2VIA2_S_3 um
  EXT PAD_VIA2_SI < CB2VIA2_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA2_ST < CB2VIA2_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA2_TR < CB2VIA2_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA2.EN.4 { @ pad VIA2 enclosure by M2/M3 >= ^CB2VIA2_EN_4 um
  ENC PAD_VIA2_SI M2 < CB2VIA2_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA2_SI NOT M2
  ENC PAD_VIA2_SI M3 < CB2VIA2_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA2_SI NOT M3
  ENC PAD_VIA2_ST M2 < CB2VIA2_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA2_ST NOT M2
  ENC PAD_VIA2_ST M3 < CB2VIA2_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA2_ST NOT M3
  ENC PAD_VIA2_TR M2 < CB2VIA2_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA2_TR NOT M2
  ENC PAD_VIA2_TR M3 < CB2VIA2_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA2_TR NOT M3
}
CB2VIA2.R.4 { @ VIA2 number at each square metal crossing region >= ^CB2VIA2_R_4
  SQUARE_C23_SI = RECTANGLE C_M23_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C23_ST = RECTANGLE C_M23_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C23_TR = RECTANGLE C_M23_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C23_SI ENCLOSE PAD_VIA2_SI < CB2VIA2_R_4
  SQUARE_C23_SI NOT ENCLOSE PAD_VIA2_SI_NON_CUP
  SQUARE_C23_ST ENCLOSE PAD_VIA2_ST < CB2VIA2_R_4
  SQUARE_C23_ST NOT ENCLOSE PAD_VIA2_ST_NON_CUP  
  SQUARE_C23_TR ENCLOSE PAD_VIA2_TR < CB2VIA2_R_4
  SQUARE_C23_TR NOT ENCLOSE PAD_VIA2_TR_NON_CUP 
}

CB2VIA3.W.2 { @ VIA3 width = ^CB2VIA3_W_2 um
  NOT RECTANGLE PAD_VIA3_SI == CB2VIA3_W_2 BY == CB2VIA3_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA3_ST == CB2VIA3_W_2 BY == CB2VIA3_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA3_TR == CB2VIA3_W_2 BY == CB2VIA3_W_2 ORTHOGONAL ONLY      
}
CB2VIA3.S.3 { @ pad VIA3 space >= ^CB2VIA3_S_3 um
  EXT PAD_VIA3_SI < CB2VIA3_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA3_ST < CB2VIA3_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA3_TR < CB2VIA3_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA3.EN.4 { @ pad VIA3 enclosure by M3/M4 >= ^CB2VIA3_EN_4 um
  ENC PAD_VIA3_SI M3 < CB2VIA3_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA3_SI NOT M3
  ENC PAD_VIA3_SI M4 < CB2VIA3_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA3_SI NOT M4
  ENC PAD_VIA3_ST M3 < CB2VIA3_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA3_ST NOT M3
  ENC PAD_VIA3_ST M4 < CB2VIA3_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA3_ST NOT M4
  ENC PAD_VIA3_TR M3 < CB2VIA3_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA3_TR NOT M3
  ENC PAD_VIA3_TR M4 < CB2VIA3_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA3_TR NOT M4
}
CB2VIA3.R.4 { @ VIA3 number at each square metal crossing region >= ^CB2VIA3_R_4
  SQUARE_C34_SI = RECTANGLE C_M34_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C34_ST = RECTANGLE C_M34_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C34_TR = RECTANGLE C_M34_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C34_SI ENCLOSE PAD_VIA3_SI < CB2VIA3_R_4
  SQUARE_C34_SI NOT ENCLOSE PAD_VIA3_SI_NON_CUP
  SQUARE_C34_ST ENCLOSE PAD_VIA3_ST < CB2VIA3_R_4
  SQUARE_C34_ST NOT ENCLOSE PAD_VIA3_ST_NON_CUP  
  SQUARE_C34_TR ENCLOSE PAD_VIA3_TR < CB2VIA3_R_4
  SQUARE_C34_TR NOT ENCLOSE PAD_VIA3_TR_NON_CUP 
}

CB2VIA4.W.2 { @ VIA4 width = ^CB2VIA4_W_2 um
  NOT RECTANGLE PAD_VIA4_SI == CB2VIA4_W_2 BY == CB2VIA4_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA4_ST == CB2VIA4_W_2 BY == CB2VIA4_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA4_TR == CB2VIA4_W_2 BY == CB2VIA4_W_2 ORTHOGONAL ONLY      
}
CB2VIA4.S.3 { @ pad VIA4 space >= ^CB2VIA4_S_3 um
  EXT PAD_VIA4_SI < CB2VIA4_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA4_ST < CB2VIA4_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA4_TR < CB2VIA4_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA4.EN.4 { @ pad VIA4 enclosure by M4/M5 >= ^CB2VIA4_EN_4 um
  ENC PAD_VIA4_SI M4 < CB2VIA4_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA4_SI NOT M4
  ENC PAD_VIA4_SI M5 < CB2VIA4_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA4_SI NOT M5
  ENC PAD_VIA4_ST M4 < CB2VIA4_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA4_ST NOT M4
  ENC PAD_VIA4_ST M5 < CB2VIA4_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA4_ST NOT M5
  ENC PAD_VIA4_TR M4 < CB2VIA4_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA4_TR NOT M4
  ENC PAD_VIA4_TR M5 < CB2VIA4_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA4_TR NOT M5
}
CB2VIA4.R.4 { @ VIA4 number at each square metal crossing region >= ^CB2VIA4_R_4
  SQUARE_C45_SI = RECTANGLE C_M45_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C45_ST = RECTANGLE C_M45_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C45_TR = RECTANGLE C_M45_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C45_SI ENCLOSE PAD_VIA4_SI < CB2VIA4_R_4
  SQUARE_C45_SI NOT ENCLOSE PAD_VIA4_SI_NON_CUP
  SQUARE_C45_ST ENCLOSE PAD_VIA4_ST < CB2VIA4_R_4
  SQUARE_C45_ST NOT ENCLOSE PAD_VIA4_ST_NON_CUP  
  SQUARE_C45_TR ENCLOSE PAD_VIA4_TR < CB2VIA4_R_4
  SQUARE_C45_TR NOT ENCLOSE PAD_VIA4_TR_NON_CUP 
}

CB2VIA5.W.2 { @ VIA5 width = ^CB2VIA5_W_2 um
  NOT RECTANGLE PAD_VIA5_SI == CB2VIA5_W_2 BY == CB2VIA5_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA5_ST == CB2VIA5_W_2 BY == CB2VIA5_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA5_TR == CB2VIA5_W_2 BY == CB2VIA5_W_2 ORTHOGONAL ONLY      
}
CB2VIA5.S.3 { @ pad VIA5 space >= ^CB2VIA5_S_3 um
  EXT PAD_VIA5_SI < CB2VIA5_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA5_ST < CB2VIA5_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA5_TR < CB2VIA5_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA5.EN.4 { @ pad VIA5 enclosure by M5/M6 >= ^CB2VIA5_EN_4 um
  ENC PAD_VIA5_SI M5 < CB2VIA5_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA5_SI NOT M5
  ENC PAD_VIA5_SI M6 < CB2VIA5_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA5_SI NOT M6
  ENC PAD_VIA5_ST M5 < CB2VIA5_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA5_ST NOT M5
  ENC PAD_VIA5_ST M6 < CB2VIA5_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA5_ST NOT M6
  ENC PAD_VIA5_TR M5 < CB2VIA5_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA5_TR NOT M5
  ENC PAD_VIA5_TR M6 < CB2VIA5_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA5_TR NOT M6
}
CB2VIA5.R.4 { @ VIA5 number at each square metal crossing region >= ^CB2VIA5_R_4
  SQUARE_C56_SI = RECTANGLE C_M56_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C56_ST = RECTANGLE C_M56_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C56_TR = RECTANGLE C_M56_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C56_SI ENCLOSE PAD_VIA5_SI < CB2VIA5_R_4
  SQUARE_C56_SI NOT ENCLOSE PAD_VIA5_SI_NON_CUP
  SQUARE_C56_ST ENCLOSE PAD_VIA5_ST < CB2VIA5_R_4
  SQUARE_C56_ST NOT ENCLOSE PAD_VIA5_ST_NON_CUP  
  SQUARE_C56_TR ENCLOSE PAD_VIA5_TR < CB2VIA5_R_4
  SQUARE_C56_TR NOT ENCLOSE PAD_VIA5_TR_NON_CUP 
}

CB2VIA6.W.2 { @ VIA6 width = ^CB2VIA6_W_2 um
  NOT RECTANGLE PAD_VIA6_SI == CB2VIA6_W_2 BY == CB2VIA6_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA6_ST == CB2VIA6_W_2 BY == CB2VIA6_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA6_TR == CB2VIA6_W_2 BY == CB2VIA6_W_2 ORTHOGONAL ONLY      
}
CB2VIA6.S.3 { @ pad VIA6 space >= ^CB2VIA6_S_3 um
  EXT PAD_VIA6_SI < CB2VIA6_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA6_ST < CB2VIA6_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA6_TR < CB2VIA6_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA6.EN.4 { @ pad VIA6 enclosure by M6/M7 >= ^CB2VIA6_EN_4 um
  ENC PAD_VIA6_SI M6 < CB2VIA6_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA6_SI NOT M6
  ENC PAD_VIA6_SI M7 < CB2VIA6_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA6_SI NOT M7
  ENC PAD_VIA6_ST M6 < CB2VIA6_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA6_ST NOT M6
  ENC PAD_VIA6_ST M7 < CB2VIA6_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA6_ST NOT M7
  ENC PAD_VIA6_TR M6 < CB2VIA6_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA6_TR NOT M6
  ENC PAD_VIA6_TR M7 < CB2VIA6_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA6_TR NOT M7
}
CB2VIA6.R.4 { @ VIA6 number at each square metal crossing region >= ^CB2VIA6_R_4
  SQUARE_C67_SI = RECTANGLE C_M67_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C67_ST = RECTANGLE C_M67_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C67_TR = RECTANGLE C_M67_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C67_SI ENCLOSE PAD_VIA6_SI < CB2VIA6_R_4
  SQUARE_C67_SI NOT ENCLOSE PAD_VIA6_SI_NON_CUP
  SQUARE_C67_ST ENCLOSE PAD_VIA6_ST < CB2VIA6_R_4
  SQUARE_C67_ST NOT ENCLOSE PAD_VIA6_ST_NON_CUP  
  SQUARE_C67_TR ENCLOSE PAD_VIA6_TR < CB2VIA6_R_4
  SQUARE_C67_TR NOT ENCLOSE PAD_VIA6_TR_NON_CUP 
}

CB2VIA7.W.2 { @ VIA7 width = ^CB2VIA7_W_2 um
  NOT RECTANGLE PAD_VIA7_SI == CB2VIA7_W_2 BY == CB2VIA7_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA7_ST == CB2VIA7_W_2 BY == CB2VIA7_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA7_TR == CB2VIA7_W_2 BY == CB2VIA7_W_2 ORTHOGONAL ONLY      
}
CB2VIA7.S.3 { @ pad VIA7 space >= ^CB2VIA7_S_3 um
  EXT PAD_VIA7_SI < CB2VIA7_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA7_ST < CB2VIA7_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA7_TR < CB2VIA7_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA7.EN.4 { @ pad VIA7 enclosure by M7/M8 >= ^CB2VIA7_EN_4 um
  ENC PAD_VIA7_SI M7 < CB2VIA7_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA7_SI NOT M7
  ENC PAD_VIA7_SI M8 < CB2VIA7_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA7_SI NOT M8
  ENC PAD_VIA7_ST M7 < CB2VIA7_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA7_ST NOT M7
  ENC PAD_VIA7_ST M8 < CB2VIA7_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA7_ST NOT M8
  ENC PAD_VIA7_TR M7 < CB2VIA7_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA7_TR NOT M7
  ENC PAD_VIA7_TR M8 < CB2VIA7_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA7_TR NOT M8
}
CB2VIA7.R.4 { @ VIA7 number at each square metal crossing region >= ^CB2VIA7_R_4
  SQUARE_C78_SI = RECTANGLE C_M78_SI == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C78_ST = RECTANGLE C_M78_ST == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C78_TR = RECTANGLE C_M78_TR == CB2Mx_W_2 BY == CB2Mx_W_2 ORTHOGONAL ONLY
  SQUARE_C78_SI ENCLOSE PAD_VIA7_SI < CB2VIA7_R_4
  SQUARE_C78_SI NOT ENCLOSE PAD_VIA7_SI_NON_CUP
  SQUARE_C78_ST ENCLOSE PAD_VIA7_ST < CB2VIA7_R_4
  SQUARE_C78_ST NOT ENCLOSE PAD_VIA7_ST_NON_CUP  
  SQUARE_C78_TR ENCLOSE PAD_VIA7_TR < CB2VIA7_R_4
  SQUARE_C78_TR NOT ENCLOSE PAD_VIA7_TR_NON_CUP 
}

CB2VIA8.W.2 { @ VIA8 width = ^CB2VIA8_W_2 um
  NOT RECTANGLE PAD_VIA8_SI == CB2VIA8_W_2 BY == CB2VIA8_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA8_ST == CB2VIA8_W_2 BY == CB2VIA8_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA8_TR == CB2VIA8_W_2 BY == CB2VIA8_W_2 ORTHOGONAL ONLY      
}
CB2VIA8.S.3 { @ pad VIA8 space >= ^CB2VIA8_S_3 um
  EXT PAD_VIA8_SI < CB2VIA8_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA8_ST < CB2VIA8_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA8_TR < CB2VIA8_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA8.EN.4 { @ pad VIA8 enclosure by M8/M9 >= ^CB2VIA8_EN_4 um
  ENC PAD_VIA8_SI M8 < CB2VIA8_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA8_SI NOT M8
  ENC PAD_VIA8_SI M9 < CB2VIA8_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA8_SI NOT M9
  ENC PAD_VIA8_ST M8 < CB2VIA8_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA8_ST NOT M8
  ENC PAD_VIA8_ST M9 < CB2VIA8_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA8_ST NOT M9
  ENC PAD_VIA8_TR M8 < CB2VIA8_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA8_TR NOT M8
  ENC PAD_VIA8_TR M9 < CB2VIA8_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA8_TR NOT M9
}

CB2VIA9.W.2 { @ VIA9 width = ^CB2VIA9_W_2 um
  NOT RECTANGLE PAD_VIA9_SI == CB2VIA9_W_2 BY == CB2VIA9_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA9_ST == CB2VIA9_W_2 BY == CB2VIA9_W_2 ORTHOGONAL ONLY
  NOT RECTANGLE PAD_VIA9_TR == CB2VIA9_W_2 BY == CB2VIA9_W_2 ORTHOGONAL ONLY      
}
CB2VIA9.S.3 { @ pad VIA9 space >= ^CB2VIA9_S_3 um
  EXT PAD_VIA9_SI < CB2VIA9_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA9_ST < CB2VIA9_S_3 ABUT < 90 SINGULAR REGION
  EXT PAD_VIA9_TR < CB2VIA9_S_3 ABUT < 90 SINGULAR REGION
}
CB2VIA9.EN.4 { @ pad VIA9 enclosure by M9/M10 >= ^CB2VIA9_EN_4 um
  ENC PAD_VIA9_SI M9 < CB2VIA9_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA9_SI NOT M9
  ENC PAD_VIA9_SI M10 < CB2VIA9_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA9_SI NOT M10
  ENC PAD_VIA9_ST M9 < CB2VIA9_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA9_ST NOT M9
  ENC PAD_VIA9_ST M10 < CB2VIA9_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA9_ST NOT M10
  ENC PAD_VIA9_TR M9 < CB2VIA9_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA9_TR NOT M9
  ENC PAD_VIA9_TR M10 < CB2VIA9_EN_4 ABUT < 90 SINGULAR REGION
  PAD_VIA9_TR NOT M10
}



CONNECT PAD_VIA1_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA1_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA1_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA1_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA1_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA1_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA2_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA2_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA2_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA2_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA2_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA2_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA3_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA3_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA3_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA3_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA3_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA3_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA4_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA4_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA4_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA4_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA4_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA4_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA5_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA5_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA5_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA5_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA5_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA5_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA6_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA6_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA6_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA6_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA6_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA6_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA7_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA7_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA7_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA7_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA7_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA7_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA8_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA8_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA8_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA8_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA8_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA8_TR_MID MID_CB_TR_NON_CUP
CONNECT PAD_VIA9_SI CB_SINGLE_NON_CUP
CONNECT PAD_VIA9_ST_OUTER OUTER_CB_ST_NON_CUP
CONNECT PAD_VIA9_ST_INNER INNER_CB_ST_NON_CUP 
CONNECT PAD_VIA9_TR_OUTER OUTER_CB_TR_NON_CUP
CONNECT PAD_VIA9_TR_INNER INNER_CB_TR_NON_CUP
CONNECT PAD_VIA9_TR_MID MID_CB_TR_NON_CUP


CB2VIA1.R.3.OUTER { @ ratio of outer PAD VIA1 to CB2 >= ^CB2VIA1_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA1_SI < CB2VIA1_R_3
  [AREA(PAD_VIA1_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via1_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA1_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA1_ST_OUTER < CB2VIA1_R_3
  [AREA(PAD_VIA1_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via1_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA1_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA1_TR_OUTER < CB2VIA1_R_3
  [AREA(PAD_VIA1_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via1_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA1_TR_OUTER
}
CB2VIA2.R.3.OUTER { @ ratio of outer PAD VIA2 to CB2 >= ^CB2VIA2_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA2_SI < CB2VIA2_R_3
  [AREA(PAD_VIA2_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via2_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA2_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA2_ST_OUTER < CB2VIA2_R_3
  [AREA(PAD_VIA2_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via2_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA2_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA2_TR_OUTER < CB2VIA2_R_3
  [AREA(PAD_VIA2_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via2_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA2_TR_OUTER
}
CB2VIA3.R.3.OUTER { @ ratio of outer PAD VIA3 to CB2 >= ^CB2VIA3_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA3_SI < CB2VIA3_R_3
  [AREA(PAD_VIA3_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via3_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA3_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA3_ST_OUTER < CB2VIA3_R_3
  [AREA(PAD_VIA3_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via3_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA3_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA3_TR_OUTER < CB2VIA3_R_3
  [AREA(PAD_VIA3_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via3_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA3_TR_OUTER
}
CB2VIA4.R.3.OUTER { @ ratio of outer PAD VIA4 to CB2 >= ^CB2VIA4_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA4_SI < CB2VIA4_R_3
  [AREA(PAD_VIA4_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via4_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA4_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA4_ST_OUTER < CB2VIA4_R_3
  [AREA(PAD_VIA4_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via4_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA4_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA4_TR_OUTER < CB2VIA4_R_3
  [AREA(PAD_VIA4_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via4_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA4_TR_OUTER
}
CB2VIA5.R.3.OUTER { @ ratio of outer PAD VIA5 to CB2 >= ^CB2VIA5_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA5_SI < CB2VIA5_R_3
  [AREA(PAD_VIA5_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via5_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA5_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA5_ST_OUTER < CB2VIA5_R_3
  [AREA(PAD_VIA5_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via5_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA5_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA5_TR_OUTER < CB2VIA5_R_3
  [AREA(PAD_VIA5_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via5_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA5_TR_OUTER
}
CB2VIA6.R.3.OUTER { @ ratio of outer PAD VIA6 to CB2 >= ^CB2VIA6_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA6_SI < CB2VIA6_R_3
  [AREA(PAD_VIA6_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via6_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA6_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA6_ST_OUTER < CB2VIA6_R_3
  [AREA(PAD_VIA6_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via6_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA6_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA6_TR_OUTER < CB2VIA6_R_3
  [AREA(PAD_VIA6_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via6_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA6_TR_OUTER
}
CB2VIA7.R.3.OUTER { @ ratio of outer PAD VIA7 to CB2 >= ^CB2VIA7_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA7_SI < CB2VIA7_R_3
  [AREA(PAD_VIA7_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via7_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA7_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA7_ST_OUTER < CB2VIA7_R_3
  [AREA(PAD_VIA7_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via7_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA7_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA7_TR_OUTER < CB2VIA7_R_3
  [AREA(PAD_VIA7_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via7_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA7_TR_OUTER
}
CB2VIA8.R.3.OUTER { @ ratio of outer PAD VIA8 to CB2 >= ^CB2VIA8_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA8_SI < CB2VIA8_R_3
  [AREA(PAD_VIA8_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via8_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA8_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA8_ST_OUTER < CB2VIA8_R_3
  [AREA(PAD_VIA8_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via8_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA8_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA8_TR_OUTER < CB2VIA8_R_3
  [AREA(PAD_VIA8_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via8_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA8_TR_OUTER
}
CB2VIA9.R.3.OUTER { @ ratio of outer PAD VIA9 to CB2 >= ^CB2VIA9_R_3
   NET AREA RATIO CB_SINGLE_NON_CUP PAD_VIA9_SI < CB2VIA9_R_3
  [AREA(PAD_VIA9_SI)/AREA(CB_SINGLE_NON_CUP)
  ] RDB via9_single_ratio.log CB_SINGLE_NON_CUP PAD_VIA9_SI
   NET AREA RATIO OUTER_CB_ST_NON_CUP PAD_VIA9_ST_OUTER < CB2VIA9_R_3
  [AREA(PAD_VIA9_ST_OUTER)/AREA(OUTER_CB_ST_NON_CUP)
  ] RDB via9_stagger_outer_ratio.log OUTER_CB_ST_NON_CUP PAD_VIA9_ST_OUTER
   NET AREA RATIO OUTER_CB_TR_NON_CUP PAD_VIA9_TR_OUTER < CB2VIA9_R_3
  [AREA(PAD_VIA9_TR_OUTER)/AREA(OUTER_CB_TR_NON_CUP)
  ] RDB via9_tri_tier_outer_ratio.log OUTER_CB_TR_NON_CUP PAD_VIA9_TR_OUTER
}

CB2VIA9.R.3.MID.INNER { @ ratio of middle/inner PAD VIA9 to CB2 >= ^CB2VIA9_R_3
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA9_ST_INNER < CB2VIA9_R_3
  [AREA(PAD_VIA9_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via9_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA9_ST_INNER
   NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA9_TR_INNER < CB2VIA9_R_3
  [AREA(PAD_VIA9_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via9_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA9_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA9_TR_MID < CB2VIA9_R_3
  [AREA(PAD_VIA9_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via9_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA9_TR_MID
}


CB2VIA1.R.3.1 { @ ratio of middle/inner VIA1 to CB2 >= ^CB2VIA1_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA1_ST_INNER < CB2VIA1_R_3_1
  [AREA(PAD_VIA1_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via1_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA1_ST_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA1_TR_MID < CB2VIA1_R_3_1
  [AREA(PAD_VIA1_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via1_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA1_TR_MID
}
CB2VIA2.R.3.1 { @ ratio of middle/inner VIA2 to CB2 >= ^CB2VIA2_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA2_ST_INNER < CB2VIA2_R_3_1
  [AREA(PAD_VIA2_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via2_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA2_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA2_TR_INNER < CB2VIA2_R_3_1
  [AREA(PAD_VIA2_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via2_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA2_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA2_TR_MID < CB2VIA2_R_3_1
  [AREA(PAD_VIA2_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via2_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA2_TR_MID
}
CB2VIA3.R.3.1 { @ ratio of middle/inner VIA3 to CB2 >= ^CB2VIA3_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA3_ST_INNER < CB2VIA3_R_3_1
  [AREA(PAD_VIA3_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via3_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA3_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA3_TR_INNER < CB2VIA3_R_3_1
  [AREA(PAD_VIA3_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via3_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA3_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA3_TR_MID < CB2VIA3_R_3_1
  [AREA(PAD_VIA3_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via3_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA3_TR_MID
}
CB2VIA4.R.3.1 { @ ratio of middle/inner VIA4 to CB2 >= ^CB2VIA4_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA4_ST_INNER < CB2VIA4_R_3_1
  [AREA(PAD_VIA4_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via4_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA4_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA4_TR_INNER < CB2VIA4_R_3_1
  [AREA(PAD_VIA4_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via4_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA4_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA4_TR_MID < CB2VIA4_R_3_1
  [AREA(PAD_VIA4_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via4_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA4_TR_MID
}
CB2VIA5.R.3.1 { @ ratio of middle/inner VIA5 to CB2 >= ^CB2VIA5_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA5_ST_INNER < CB2VIA5_R_3_1
  [AREA(PAD_VIA5_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via5_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA5_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA5_TR_INNER < CB2VIA5_R_3_1
  [AREA(PAD_VIA5_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via5_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA5_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA5_TR_MID < CB2VIA5_R_3_1
  [AREA(PAD_VIA5_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via5_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA5_TR_MID
}
CB2VIA6.R.3.1 { @ ratio of middle/inner VIA6 to CB2 >= ^CB2VIA6_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA6_ST_INNER < CB2VIA6_R_3_1
  [AREA(PAD_VIA6_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via6_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA6_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA6_TR_INNER < CB2VIA6_R_3_1
  [AREA(PAD_VIA6_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via6_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA6_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA6_TR_MID < CB2VIA6_R_3_1
  [AREA(PAD_VIA6_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via6_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA6_TR_MID
}
CB2VIA7.R.3.1 { @ ratio of middle/inner VIA7 to CB2 >= ^CB2VIA7_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA7_ST_INNER < CB2VIA7_R_3_1
  [AREA(PAD_VIA7_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via7_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA7_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA7_TR_INNER < CB2VIA7_R_3_1
  [AREA(PAD_VIA7_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via7_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA7_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA7_TR_MID < CB2VIA7_R_3_1
  [AREA(PAD_VIA7_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via7_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA7_TR_MID
}
CB2VIA8.R.3.1 { @ ratio of middle/inner VIA8 to CB2 >= ^CB2VIA8_R_3_1
   NET AREA RATIO INNER_CB_ST_NON_CUP PAD_VIA8_ST_INNER < CB2VIA8_R_3_1
  [AREA(PAD_VIA8_ST_INNER)/AREA(INNER_CB_ST_NON_CUP)
  ] RDB via8_stagger_inner_ratio.log  INNER_CB_ST_NON_CUP PAD_VIA8_ST_INNER
  NET AREA RATIO INNER_CB_TR_NON_CUP PAD_VIA8_TR_INNER < CB2VIA8_R_3_1
  [AREA(PAD_VIA8_TR_INNER)/AREA(INNER_CB_TR_NON_CUP)
  ] RDB via8_tri_tier_inner_ratio.log  INNER_CB_TR_NON_CUP PAD_VIA8_TR_INNER
   NET AREA RATIO MID_CB_TR_NON_CUP PAD_VIA8_TR_MID < CB2VIA8_R_3_1
  [AREA(PAD_VIA8_TR_MID)/AREA(MID_CB_TR_NON_CUP)
  ] RDB via8_tri_tier_mid_ratio.log  MID_CB_TR_NON_CUP PAD_VIA8_TR_MID
}







// Fully Stacking Pad structure Rules (Mx)
//=======================================

CB2M1.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M1_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M1_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M1_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M1_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M1_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M1_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M2.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M2_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M2_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M2_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M2_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M2_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M2_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M3.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M3_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M3_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M3_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M3_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M3_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M3_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M4.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M4_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M4_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M4_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M4_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M4_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M4_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M5.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M5_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M5_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M5_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M5_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M5_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M5_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M6.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M6_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M6_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M6_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M6_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M6_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M6_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M7.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M7_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M7_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M7_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M7_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M7_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M7_TR BY CB2Mx_W_2/2 UNDEROVER  
}             
CB2M8.W.2 { @ metal width in pad = ^CB2Mx_W_2 um
  INT L_M8_SI < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M8_SI BY CB2Mx_W_2/2 UNDEROVER
  INT L_M8_ST < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M8_ST BY CB2Mx_W_2/2 UNDEROVER
  INT L_M8_TR < CB2Mx_W_2 ABUT < 90 REGION
  SIZE L_M8_TR BY CB2Mx_W_2/2 UNDEROVER  
}             

CB2M1.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M1_SI < CB2Mx_W_3 ABUT < 90 REGION
  J1_SI = SIZE PADM1area_SI BY 0.5
  L1_SI = M1 AND J1_SI
  K1_SI = PADH1_SI OR L1_SI
  A1_SI = ENC [PADH1_SI] K1_SI == CB2Mx_W_3
  B1_SI = PADH1_SI NOT COIN EDGE A1_SI
  //D1_SI = LENGTH B1_SI >20
  D1_SI = PADH1_SI TOUCH EDGE B1_SI
  C1_SI = EXPAND EDGE D1_SI OUTSIDE BY CB2Mx_W_3
  E1_SI = K1_SI ENCLOSE C1_SI >1
  E1_SI AND C1_SI
  INT R_M1_ST < CB2Mx_W_3 ABUT < 90 REGION
  J1_ST = SIZE PADM1area_ST BY 0.5
  L1_ST = M1 AND J1_ST
  K1_ST = PADH1_ST OR L1_ST
  A1_ST = ENC [PADH1_ST] K1_ST == CB2Mx_W_3
  B1_ST = PADH1_ST NOT COIN EDGE A1_ST
  //D1_ST = LENGTH B1_ST >20
  D1_ST = PADH1_ST TOUCH EDGE B1_ST
  C1_ST = EXPAND EDGE D1_ST OUTSIDE BY CB2Mx_W_3
  E1_ST = K1_ST ENCLOSE C1_ST >1
  E1_ST AND C1_ST
  INT R_M1_TR < 5 ABUT < 90 REGION
  J1_TR = SIZE PADM1area_TR BY 0.5
  L1_TR = M1 AND J1_TR
  K1_TR = PADH1_TR OR L1_TR
  A1_TR = ENC [PADH1_TR] K1_TR == CB2Mx_W_3
  B1_TR = PADH1_TR NOT COIN EDGE A1_TR
  //D1_TR = LENGTH B1_TR >20
  D1_TR = PADH1_TR TOUCH EDGE B1_TR
  C1_TR = EXPAND EDGE D1_TR OUTSIDE BY CB2Mx_W_3
  E1_TR = K1_TR ENCLOSE C1_TR >1
  E1_TR AND C1_TR
}
CB2M2.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M2_SI < CB2Mx_W_3 ABUT < 90 REGION
  J2_SI = SIZE PADM2area_SI BY 0.5
  L2_SI = M2 AND J2_SI
  K2_SI = PADH2_SI OR L2_SI
  A2_SI = ENC [PADH2_SI] K2_SI == CB2Mx_W_3
  B2_SI = PADH2_SI NOT COIN EDGE A2_SI
  //D2_SI = LENGTH B2_SI >20
  D2_SI = PADH2_SI TOUCH EDGE B2_SI
  C2_SI = EXPAND EDGE D2_SI OUTSIDE BY CB2Mx_W_3
  E2_SI = K2_SI ENCLOSE C2_SI >1
  E2_SI AND C2_SI
  INT R_M2_ST < CB2Mx_W_3 ABUT < 90 REGION
  J2_ST = SIZE PADM2area_ST BY 0.5
  L2_ST = M2 AND J2_ST
  K2_ST = PADH2_ST OR L2_ST
  A2_ST = ENC [PADH2_ST] K2_ST == CB2Mx_W_3
  B2_ST = PADH2_ST NOT COIN EDGE A2_ST
  //D2_ST = LENGTH B2_ST >20
  D2_ST = PADH2_ST TOUCH EDGE B2_ST
  C2_ST = EXPAND EDGE D2_ST OUTSIDE BY CB2Mx_W_3
  E2_ST = K2_ST ENCLOSE C2_ST >1
  E2_ST AND C2_ST
  INT R_M2_TR < 5 ABUT < 90 REGION
  J2_TR = SIZE PADM2area_TR BY 0.5
  L2_TR = M2 AND J2_TR
  K2_TR = PADH2_TR OR L2_TR
  A2_TR = ENC [PADH2_TR] K2_TR == CB2Mx_W_3
  B2_TR = PADH2_TR NOT COIN EDGE A2_TR
  //D2_TR = LENGTH B2_TR >20
  D2_TR = PADH2_TR TOUCH EDGE B2_TR
  C2_TR = EXPAND EDGE D2_TR OUTSIDE BY CB2Mx_W_3
  E2_TR = K2_TR ENCLOSE C2_TR >1
  E2_TR AND C2_TR
}
CB2M3.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M3_SI < CB2Mx_W_3 ABUT < 90 REGION
  J3_SI = SIZE PADM3area_SI BY 0.5
  L3_SI = M3 AND J3_SI
  K3_SI = PADH3_SI OR L3_SI
  A3_SI = ENC [PADH3_SI] K3_SI == CB2Mx_W_3
  B3_SI = PADH3_SI NOT COIN EDGE A3_SI
  //D3_SI = LENGTH B3_SI >20
  D3_SI = PADH3_SI TOUCH EDGE B3_SI
  C3_SI = EXPAND EDGE D3_SI OUTSIDE BY CB2Mx_W_3
  E3_SI = K3_SI ENCLOSE C3_SI >1
  E3_SI AND C3_SI
  INT R_M3_ST < CB2Mx_W_3 ABUT < 90 REGION
  J3_ST = SIZE PADM3area_ST BY 0.5
  L3_ST = M3 AND J3_ST
  K3_ST = PADH3_ST OR L3_ST
  A3_ST = ENC [PADH3_ST] K3_ST == CB2Mx_W_3
  B3_ST = PADH3_ST NOT COIN EDGE A3_ST
  //D3_ST = LENGTH B3_ST >20
  D3_ST = PADH3_ST TOUCH EDGE B3_ST
  C3_ST = EXPAND EDGE D3_ST OUTSIDE BY CB2Mx_W_3
  E3_ST = K3_ST ENCLOSE C3_ST >1
  E3_ST AND C3_ST
  INT R_M3_TR < 5 ABUT < 90 REGION
  J3_TR = SIZE PADM3area_TR BY 0.5
  L3_TR = M3 AND J3_TR
  K3_TR = PADH3_TR OR L3_TR
  A3_TR = ENC [PADH3_TR] K3_TR == CB2Mx_W_3
  B3_TR = PADH3_TR NOT COIN EDGE A3_TR
  //D3_TR = LENGTH B3_TR >20
  D3_TR = PADH3_TR TOUCH EDGE B3_TR
  C3_TR = EXPAND EDGE D3_TR OUTSIDE BY CB2Mx_W_3
  E3_TR = K3_TR ENCLOSE C3_TR >1
  E3_TR AND C3_TR
}
CB2M4.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M4_SI < CB2Mx_W_3 ABUT < 90 REGION
  J4_SI = SIZE PADM4area_SI BY 0.5
  L4_SI = M4 AND J4_SI
  K4_SI = PADH4_SI OR L4_SI
  A4_SI = ENC [PADH4_SI] K4_SI == CB2Mx_W_3
  B4_SI = PADH4_SI NOT COIN EDGE A4_SI
  //D4_SI = LENGTH B4_SI >20
  D4_SI = PADH4_SI TOUCH EDGE B4_SI
  C4_SI = EXPAND EDGE D4_SI OUTSIDE BY CB2Mx_W_3
  E4_SI = K4_SI ENCLOSE C4_SI >1
  E4_SI AND C4_SI
  INT R_M4_ST < CB2Mx_W_3 ABUT < 90 REGION
  J4_ST = SIZE PADM4area_ST BY 0.5
  L4_ST = M4 AND J4_ST
  K4_ST = PADH4_ST OR L4_ST
  A4_ST = ENC [PADH4_ST] K4_ST == CB2Mx_W_3
  B4_ST = PADH4_ST NOT COIN EDGE A4_ST
  //D4_ST = LENGTH B4_ST >20
  D4_ST = PADH4_ST TOUCH EDGE B4_ST
  C4_ST = EXPAND EDGE D4_ST OUTSIDE BY CB2Mx_W_3
  E4_ST = K4_ST ENCLOSE C4_ST >1
  E4_ST AND C4_ST
  INT R_M4_TR < 5 ABUT < 90 REGION
  J4_TR = SIZE PADM4area_TR BY 0.5
  L4_TR = M4 AND J4_TR
  K4_TR = PADH4_TR OR L4_TR
  A4_TR = ENC [PADH4_TR] K4_TR == CB2Mx_W_3
  B4_TR = PADH4_TR NOT COIN EDGE A4_TR
  //D4_TR = LENGTH B4_TR >20
  D4_TR = PADH4_TR TOUCH EDGE B4_TR
  C4_TR = EXPAND EDGE D4_TR OUTSIDE BY CB2Mx_W_3
  E4_TR = K4_TR ENCLOSE C4_TR >1
  E4_TR AND C4_TR
}
CB2M5.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M5_SI < CB2Mx_W_3 ABUT < 90 REGION
  J5_SI = SIZE PADM5area_SI BY 0.5
  L5_SI = M5 AND J5_SI
  K5_SI = PADH5_SI OR L5_SI
  A5_SI = ENC [PADH5_SI] K5_SI == CB2Mx_W_3
  B5_SI = PADH5_SI NOT COIN EDGE A5_SI
  //D5_SI = LENGTH B5_SI >20
  D5_SI = PADH5_SI TOUCH EDGE B5_SI
  C5_SI = EXPAND EDGE D5_SI OUTSIDE BY CB2Mx_W_3
  E5_SI = K5_SI ENCLOSE C5_SI >1
  E5_SI AND C5_SI
  INT R_M5_ST < CB2Mx_W_3 ABUT < 90 REGION
  J5_ST = SIZE PADM5area_ST BY 0.5
  L5_ST = M5 AND J5_ST
  K5_ST = PADH5_ST OR L5_ST
  A5_ST = ENC [PADH5_ST] K5_ST == CB2Mx_W_3
  B5_ST = PADH5_ST NOT COIN EDGE A5_ST
  //D5_ST = LENGTH B5_ST >20
  D5_ST = PADH5_ST TOUCH EDGE B5_ST
  C5_ST = EXPAND EDGE D5_ST OUTSIDE BY CB2Mx_W_3
  E5_ST = K5_ST ENCLOSE C5_ST >1
  E5_ST AND C5_ST
  INT R_M5_TR < 5 ABUT < 90 REGION
  J5_TR = SIZE PADM5area_TR BY 0.5
  L5_TR = M5 AND J5_TR
  K5_TR = PADH5_TR OR L5_TR
  A5_TR = ENC [PADH5_TR] K5_TR == CB2Mx_W_3
  B5_TR = PADH5_TR NOT COIN EDGE A5_TR
  //D5_TR = LENGTH B5_TR >20
  D5_TR = PADH5_TR TOUCH EDGE B5_TR
  C5_TR = EXPAND EDGE D5_TR OUTSIDE BY CB2Mx_W_3
  E5_TR = K5_TR ENCLOSE C5_TR >1
  E5_TR AND C5_TR
}
CB2M6.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M6_SI < CB2Mx_W_3 ABUT < 90 REGION
  J6_SI = SIZE PADM6area_SI BY 0.5
  L6_SI = M6 AND J6_SI
  K6_SI = PADH6_SI OR L6_SI
  A6_SI = ENC [PADH6_SI] K6_SI == CB2Mx_W_3
  B6_SI = PADH6_SI NOT COIN EDGE A6_SI
  //D6_SI = LENGTH B6_SI >20
  D6_SI = PADH6_SI TOUCH EDGE B6_SI
  C6_SI = EXPAND EDGE D6_SI OUTSIDE BY CB2Mx_W_3
  E6_SI = K6_SI ENCLOSE C6_SI >1
  E6_SI AND C6_SI
  INT R_M6_ST < CB2Mx_W_3 ABUT < 90 REGION
  J6_ST = SIZE PADM6area_ST BY 0.5
  L6_ST = M6 AND J6_ST
  K6_ST = PADH6_ST OR L6_ST
  A6_ST = ENC [PADH6_ST] K6_ST == CB2Mx_W_3
  B6_ST = PADH6_ST NOT COIN EDGE A6_ST
  //D6_ST = LENGTH B6_ST >20
  D6_ST = PADH6_ST TOUCH EDGE B6_ST
  C6_ST = EXPAND EDGE D6_ST OUTSIDE BY CB2Mx_W_3
  E6_ST = K6_ST ENCLOSE C6_ST >1
  E6_ST AND C6_ST
  INT R_M6_TR < 5 ABUT < 90 REGION
  J6_TR = SIZE PADM6area_TR BY 0.5
  L6_TR = M6 AND J6_TR
  K6_TR = PADH6_TR OR L6_TR
  A6_TR = ENC [PADH6_TR] K6_TR == CB2Mx_W_3
  B6_TR = PADH6_TR NOT COIN EDGE A6_TR
  //D6_TR = LENGTH B6_TR >20
  D6_TR = PADH6_TR TOUCH EDGE B6_TR
  C6_TR = EXPAND EDGE D6_TR OUTSIDE BY CB2Mx_W_3
  E6_TR = K6_TR ENCLOSE C6_TR >1
  E6_TR AND C6_TR
}
CB2M7.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M7_SI < CB2Mx_W_3 ABUT < 90 REGION
  J7_SI = SIZE PADM7area_SI BY 0.5
  L7_SI = M7 AND J7_SI
  K7_SI = PADH7_SI OR L7_SI
  A7_SI = ENC [PADH7_SI] K7_SI == CB2Mx_W_3
  B7_SI = PADH7_SI NOT COIN EDGE A7_SI
  //D7_SI = LENGTH B7_SI >20
  D7_SI = PADH7_SI TOUCH EDGE B7_SI
  C7_SI = EXPAND EDGE D7_SI OUTSIDE BY CB2Mx_W_3
  E7_SI = K7_SI ENCLOSE C7_SI >1
  E7_SI AND C7_SI
  INT R_M7_ST < CB2Mx_W_3 ABUT < 90 REGION
  J7_ST = SIZE PADM7area_ST BY 0.5
  L7_ST = M7 AND J7_ST
  K7_ST = PADH7_ST OR L7_ST
  A7_ST = ENC [PADH7_ST] K7_ST == CB2Mx_W_3
  B7_ST = PADH7_ST NOT COIN EDGE A7_ST
  //D7_ST = LENGTH B7_ST >20
  D7_ST = PADH7_ST TOUCH EDGE B7_ST
  C7_ST = EXPAND EDGE D7_ST OUTSIDE BY CB2Mx_W_3
  E7_ST = K7_ST ENCLOSE C7_ST >1
  E7_ST AND C7_ST
  INT R_M7_TR < 5 ABUT < 90 REGION
  J7_TR = SIZE PADM7area_TR BY 0.5
  L7_TR = M7 AND J7_TR
  K7_TR = PADH7_TR OR L7_TR
  A7_TR = ENC [PADH7_TR] K7_TR == CB2Mx_W_3
  B7_TR = PADH7_TR NOT COIN EDGE A7_TR
  //D7_TR = LENGTH B7_TR >20
  D7_TR = PADH7_TR TOUCH EDGE B7_TR
  C7_TR = EXPAND EDGE D7_TR OUTSIDE BY CB2Mx_W_3
  E7_TR = K7_TR ENCLOSE C7_TR >1
  E7_TR AND C7_TR
}
CB2M8.W.3 { @ pad metal ring width = ^CB2Mx_W_3 um    
  INT R_M8_SI < CB2Mx_W_3 ABUT < 90 REGION
  J8_SI = SIZE PADM8area_SI BY 0.5
  L8_SI = M8 AND J8_SI
  K8_SI = PADH8_SI OR L8_SI
  A8_SI = ENC [PADH8_SI] K8_SI == CB2Mx_W_3
  B8_SI = PADH8_SI NOT COIN EDGE A8_SI
  //D8_SI = LENGTH B8_SI >20
  D8_SI = PADH8_SI TOUCH EDGE B8_SI
  C8_SI = EXPAND EDGE D8_SI OUTSIDE BY CB2Mx_W_3
  E8_SI = K8_SI ENCLOSE C8_SI >1
  E8_SI AND C8_SI
  INT R_M8_ST < CB2Mx_W_3 ABUT < 90 REGION
  J8_ST = SIZE PADM8area_ST BY 0.5
  L8_ST = M8 AND J8_ST
  K8_ST = PADH8_ST OR L8_ST
  A8_ST = ENC [PADH8_ST] K8_ST == CB2Mx_W_3
  B8_ST = PADH8_ST NOT COIN EDGE A8_ST
  //D8_ST = LENGTH B8_ST >20
  D8_ST = PADH8_ST TOUCH EDGE B8_ST
  C8_ST = EXPAND EDGE D8_ST OUTSIDE BY CB2Mx_W_3
  E8_ST = K8_ST ENCLOSE C8_ST >1
  E8_ST AND C8_ST
  INT R_M8_TR < 5 ABUT < 90 REGION
  J8_TR = SIZE PADM8area_TR BY 0.5
  L8_TR = M8 AND J8_TR
  K8_TR = PADH8_TR OR L8_TR
  A8_TR = ENC [PADH8_TR] K8_TR == CB2Mx_W_3
  B8_TR = PADH8_TR NOT COIN EDGE A8_TR
  //D8_TR = LENGTH B8_TR >20
  D8_TR = PADH8_TR TOUCH EDGE B8_TR
  C8_TR = EXPAND EDGE D8_TR OUTSIDE BY CB2Mx_W_3
  E8_TR = K8_TR ENCLOSE C8_TR >1
  E8_TR AND C8_TR
}


CB2M1.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M1_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M1_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M1_SI > 1
  EXT L_M1_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M1_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M1_ST > 1
  EXT L_M1_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M1_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M1_TR > 1
}           
CB2M2.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M2_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M2_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M2_SI > 1
  EXT L_M2_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M2_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M2_ST > 1
  EXT L_M2_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M2_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M2_TR > 1
}           
CB2M3.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M3_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M3_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M3_SI > 1
  EXT L_M3_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M3_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M3_ST > 1
  EXT L_M3_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M3_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M3_TR > 1
}           
CB2M4.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M4_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M4_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M4_SI > 1
  EXT L_M4_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M4_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M4_ST > 1
  EXT L_M4_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M4_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M4_TR > 1
}           
CB2M5.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M5_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M5_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M5_SI > 1
  EXT L_M5_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M5_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M5_ST > 1
  EXT L_M5_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M5_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M5_TR > 1
}           
CB2M6.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M6_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M6_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M6_SI > 1
  EXT L_M6_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M6_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M6_ST > 1
  EXT L_M6_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M6_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M6_TR > 1
}           
CB2M7.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M7_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M7_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M7_SI > 1
  EXT L_M7_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M7_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M7_ST > 1
  EXT L_M7_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M7_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M7_TR > 1
}           
CB2M8.S.2 { @ metal space in pad = ^CB2Mx_S_2 um
  EXT L_M8_SI < CB2Mx_S_2 ABUT < 90 REGION
  X_SI = SIZE SL_M8_SI BY CB2Mx_S_2/2 UNDEROVER
  X_SI TOUCH L_M8_SI > 1
  EXT L_M8_ST < CB2Mx_S_2 ABUT < 90 REGION
  X_ST = SIZE SL_M8_ST BY CB2Mx_S_2/2 UNDEROVER
  X_ST TOUCH L_M8_ST > 1
  EXT L_M8_TR < CB2Mx_S_2 ABUT < 90 REGION
  X_TR = SIZE SL_M8_TR BY CB2Mx_S_2/2 UNDEROVER
  X_TR TOUCH L_M8_TR > 1
}           


CB2M1.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M1_SI TOUCH L_M1_SI > 1
  Y_SI = SL_M1_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M1_ST TOUCH L_M1_ST > 1
  Y_ST = SL_M1_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M1_TR TOUCH L_M1_TR > 1
  Y_TR = SL_M1_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M2.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M2_SI TOUCH L_M2_SI > 1
  Y_SI = SL_M2_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M2_ST TOUCH L_M2_ST > 1
  Y_ST = SL_M2_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M2_TR TOUCH L_M2_TR > 1
  Y_TR = SL_M2_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M3.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M3_SI TOUCH L_M3_SI > 1
  Y_SI = SL_M3_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M3_ST TOUCH L_M3_ST > 1
  Y_ST = SL_M3_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M3_TR TOUCH L_M3_TR > 1
  Y_TR = SL_M3_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M4.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M4_SI TOUCH L_M4_SI > 1
  Y_SI = SL_M4_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M4_ST TOUCH L_M4_ST > 1
  Y_ST = SL_M4_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M4_TR TOUCH L_M4_TR > 1
  Y_TR = SL_M4_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M5.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M5_SI TOUCH L_M5_SI > 1
  Y_SI = SL_M5_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M5_ST TOUCH L_M5_ST > 1
  Y_ST = SL_M5_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M5_TR TOUCH L_M5_TR > 1
  Y_TR = SL_M5_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M6.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M6_SI TOUCH L_M6_SI > 1
  Y_SI = SL_M6_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M6_ST TOUCH L_M6_ST > 1
  Y_ST = SL_M6_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M6_TR TOUCH L_M6_TR > 1
  Y_TR = SL_M6_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M7.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M7_SI TOUCH L_M7_SI > 1
  Y_SI = SL_M7_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M7_ST TOUCH L_M7_ST > 1
  Y_ST = SL_M7_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M7_TR TOUCH L_M7_TR > 1
  Y_TR = SL_M7_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}
CB2M8.S.3 { @ space between pad ring metal and nearest metal 1~3.5 um
  X_SI = SL_M8_SI TOUCH L_M8_SI > 1
  Y_SI = SL_M8_SI NOT X_SI
  INT Y_SI < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_SI BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_ST = SL_M8_ST TOUCH L_M8_ST > 1
  Y_ST = SL_M8_ST NOT X_ST
  INT Y_ST < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_ST BY CB2Mx_S_3_MAX/2 UNDEROVER
  X_TR = SL_M8_TR TOUCH L_M8_TR > 1
  Y_TR = SL_M8_TR NOT X_TR
  INT Y_TR < CB2Mx_S_3_MIN ABUT < 90 REGION
  SIZE Y_TR BY CB2Mx_S_3_MAX/2 UNDEROVER
}







// CUP Pad Structure Rule Starts Here.
//===========================================

CUPCB2.EN.3.M9 { @ CB2 enclosure by Mtop-1 >= ^CUPCB2_EN_3 um
  ENC CB2_CUP WBM9 < CUPCB2_EN_3 ABUT <90 SINGULAR REGION
  CB2_CUP OUTSIDE EDGE WBM9
}
CUPCB2.EN.3.M10 { @ CB2 enclosure by Mtop >= ^CUPCB2_EN_3 um
  ENC CB2_CUP WBM10 < CUPCB2_EN_3 ABUT <90 SINGULAR REGION
  CB2_CUP OUTSIDE EDGE WBM10
}
#IFDEF with_AP
CUPCB2.EN.3.AP { @ CB2 enclosure by AP-MD >= ^CUPCB2_EN_3 um
  ENC CB2_CUP WBAP < CUPCB2_EN_3 ABUT <90 SINGULAR REGION
  CB2_CUP OUTSIDE EDGE WBAP
}
#ENDIF


CUPCB2.EN.4.M9 { @ WBDMY enclosure of Mtop-1 (Mtop) metal pad =  0 um
  WBDMY OUTSIDE EDGE M9
  WBDMY INSIDE EDGE CB2    
  WBDMY NOT INTERACT CB2
  VERTEX WBDMY != 8
  w45_edge = ANGLE WBDMY  == 45
  WBDMY WITH EDGE w45_edge   > 4
  WBDMY WITH EDGE w45_edge   < 4
  WBDMY NOT WITH EDGE w45_edge
  m45_edge = M9 TOUCH INSIDE EDGE w45_edge
  m45_edge NOT COIN EDGE w45_edge
  w45_edge NOT COIN EDGE m45_edge
}
CUPCB2.EN.4.M10 { @ WBDMY enclosure of Mtop-1 (Mtop) metal pad =  0 um
  WBDMY OUTSIDE EDGE M10
  WBDMY INSIDE EDGE CB2    
  WBDMY NOT INTERACT CB2
  VERTEX WBDMY != 8
  w45_edge = ANGLE WBDMY  == 45
  WBDMY WITH EDGE w45_edge   > 4
  WBDMY WITH EDGE w45_edge   < 4
  WBDMY NOT WITH EDGE w45_edge
  m45_edge = M10 TOUCH INSIDE EDGE w45_edge
  m45_edge NOT COIN EDGE w45_edge
  w45_edge NOT COIN EDGE m45_edge
}

#IFDEF with_AP
CUPCB2.EN.4.AP { @ WBDMY enclosure of AP metal pad =  0 um
  WBDMY OUTSIDE EDGE AP
  w45_edge = ANGLE WBDMY  == 45
  m45_edge = AP TOUCH INSIDE EDGE w45_edge
  m45_edge NOT COIN EDGE w45_edge
  w45_edge NOT COIN EDGE m45_edge
}
#ENDIF


CUPCB2.R.7.CB {@ length of octangle pad CB 45 degree turn corners 2~3 um
  VERTEX CB_A_CUP != 8
  s45_edge = ANGLE CB_A_CUP  == 45  
  LENGTH s45_edge      < CUPCB2_R_7_MIN
  LENGTH s45_edge      > CUPCB2_R_7_MAX
}


CUPCB2.R.7.CB2 {@ length of octangle pad CB2_WB 45 degree turn corners 2~3 um
  VERTEX CB2_A_CUP != 8
  s45_edge = ANGLE CB2_A_CUP  == 45  
  LENGTH s45_edge      < CUPCB2_R_7_MIN
  LENGTH s45_edge      > CUPCB2_R_7_MAX
}
CUPCB2.R.7.M10 { @ length of octangle pad Mtop 45 degree turn corners  2~3um
  VERTEX WBM10	     != 8
  s45_edgeM10   = ANGLE WBM10  == 45
  LENGTH s45_edgeM10   < CUPCB2_R_7_MIN
  LENGTH s45_edgeM10   > CUPCB2_R_7_MAX
}
CUPCB2.R.7.M9 { @ length of octangle pad Mtop-1 45 degree turn corners  2~3um
  VERTEX WBM9       != 8
  s45_edgeM9  = ANGLE WBM9 == 45
  LENGTH s45_edgeM9  < CUPCB2_R_7_MIN
  LENGTH s45_edgeM9  > CUPCB2_R_7_MAX
}
#IFDEF with_AP
CUPCB2.R.7.AP { @ length of octangle pad AP-MD 45 degree turn corners  2~3um
  VERTEX WBAP	     != 8
  s45_edgeAP   = ANGLE WBAP  == 45
  LENGTH s45_edgeAP   < CUPCB2_R_7_MIN
  LENGTH s45_edgeAP   > CUPCB2_R_7_MAX
}
#ENDIF


CUPVIAT.W.1 { @ VIAT width == ^CUPVIAT_W_1 um
  NOT RECTANGLE WBVIA9 == CUPVIAT_W_1 BY == CUPVIAT_W_1 ORTHOGONAL ONLY
}
CUPVIAT.S.1 { @ VIAT space == ^CUPVIAT_S_1 um
  EXT WBVIA9 < CUPVIAT_S_1 ABUT <90 SINGULAR REGION
}
CUPVIAT.EN.1.M10 { @ VIAT enclosure by MT >=  ^CUPVIAT_EN_1 um 
  ENC WBVIA9 WBM10 <  CUPVIAT_EN_1 ABUT <90 SINGULAR REGION
  WBVIA9 NOT WBM10
}
CUPVIAT.EN.1.M9 { @ VIAT enclosure by Mtop-1 >= ^CUPVIAT_EN_1 um 
  ENC WBVIA9 WBM9 < CUPVIAT_EN_1 ABUT <90 SINGULAR REGION
  WBVIA9 NOT WBM9
}

CONNECT WBVIA9 CB2_CUP
CUPVIAT.DN.1 { @ Ratio of total exposure VIAT area to CB2 area within CB2 region >=  ^CUPVIAT_DN_1 
   NET AREA RATIO CB2_CUP WBVIA9 <  CUPVIAT_DN_1
  	[AREA(WBVIA9)/AREA(CB2_CUP)] RDB CUPVIAT.DN.1.ratio CB2_CUP WBVIA9
}
CUPVIAT.DN.2 { @ Minimum via density over any 10x10um area (checked by stepping in 5um increment) >= ^CUPVIAT_DN_2
  DENSITY WBVIA9 < CUPVIAT_DN_2 INSIDE OF LAYER CB2_CUP WINDOW 10 STEP 5 BACKUP PRINT CUPVIAT.DN.2.density 
}

CUPCB2.R.3 { @  Pad structure must be MT/VIAT/Mtop-1. MT/Mtop-1 must be solid.  
@ For AP-MD process, Al pad is required to be be drawn.    
  CB2_CUP NOT WBM10  
  CB2_CUP NOT ENCLOSE WBVIA9
  CB2_CUP NOT WBM9
#IFDEF with_AP
  CB2_CUP NOT AP
#ENDIF  
}


#IFDEF with_AP
// RV Layout Rules  
//==============================================
IND_EXD = SIZE INDDMY BY 22
RV_CHECK = RV NOT SEALRING_EXCLUDE
RV_NIND = RV_CHECK NOT INSIDE IND_EXD
RV_IND = RV_CHECK INSIDE IND_EXD

RV.W.1 { @ Width (Square) (maximum = minimum) (Not inside seal ring) = ^RV_W_1A or ^RV_W_1B um
  A = NOT RECTANGLE RV_NIND == RV_W_1A BY == RV_W_1A ORTHOGONAL ONLY
  NOT RECTANGLE A == RV_W_1B BY == RV_W_1B ORTHOGONAL ONLY
  B = NOT RECTANGLE RV_IND >= (RV_W_1A-2*GRID) <= (RV_W_1A+2*GRID) BY >= (RV_W_1A-2*GRID) <= (RV_W_1A+2*GRID)
  NOT RECTANGLE B >= (RV_W_1B-2*GRID) <= (RV_W_1B+2*GRID) BY >= (RV_W_1B-2*GRID) <= (RV_W_1B+2*GRID)
}

RV.S.1 { @ Space >= ^RV_S_1 um
  EXT RV_NIND RV < RV_S_1 ABUT < 90 SINGULAR REGION
  EXT RV_IND RV < RV_S_1-2*GRID ABUT < 90 SINGULAR REGION
}

RV.S.3 { @ Space to CB/CB2_WB {Overlap is not allowed} >= ^RV_S_3 um
   EXT RV_CHECK CBx  < RV_S_3 ABUT < 90 SINGULAR REGION 
   RV_CHECK AND CBx
   EXT RV_CHECK CB2x  < RV_S_3 ABUT < 90 SINGULAR REGION 
   RV_CHECK AND CB2x  
}

RV.EN.1 { @ Enclosure by Mtop (Not inside seal ring) >= ^RV_EN_1 um
  ENC RV_NIND M10 < RV_EN_1 ABUT < 90 SINGULAR REGION OUTSIDE ALSO
  ENC RV_IND M10 < RV_EN_1-2*GRID ABUT < 90 SINGULAR REGION OUTSIDE ALSO
}

RV.R.1 { @ A 45-degree rotated RV is prohibited
  (NOT RECTANGLE RV_CHECK ORTHOGONAL ONLY) NOT INSIDE IND_EXD
}

#ENDIF


#IFDEF with_AP
// AP Layout Rules
//=================
AP_CHECK = AP NOT INTERACT SEALRING_EXCLUDE

AP.W.1 { @ Width [interconnect only] [ not inside sealring] >= ^AP_W_1 um
  (INT AP_CHECK < AP_W_1 ABUT < 90 SINGULAR REGION) NOT INSIDE IND_EXD
  (INT AP_CHECK < AP_W_1-2*GRID ABUT < 90 SINGULAR REGION) NOT OUTSIDE IND_EXD
}

AP.W.2 { @ Maximum width [interconnect only] [ not inside CB or CB2_WB] <= ^AP_W_2 um
  A = ((AP NOT CBi) NOT CB2Fi) NOT CB2Wi
  (A WITH WIDTH > AP_W_2) NOT INSIDE IND_EXD
  (A WITH WIDTH > AP_W_2+2*GRID) NOT OUTSIDE IND_EXD
}

AP.S.1 { @ Space >= ^AP_S_1 um
  (EXT AP < AP_S_1 ABUT < 90 SINGULAR REGION) NOT INSIDE IND_EXD
  (EXT AP < AP_S_1-2*GRID ABUT < 90 SINGULAR REGION) NOT OUTSIDE IND_EXD
}

AP.S.1.1 {@ AP pad space to AP pad or AP routing >= ^AP_S_1_1 um
  AP_pad = SIZE CB2x BY 3 INSIDE OF AP STEP AP_S_1*0.7 
  X = AP COIN INSIDE EDGE AP_pad   
  EXT X < AP_S_1_1 ABUT < 90 REGION  
  EXT X AP < AP_S_1_1 ABUT < 90 REGION 
}

AP.S.4 { @ Space to CB2_WB/PM [overlap is prohibited except bond pad and seal ring] >= ^AP_S_4 um  
  CB2_CHECK = (CB2 NOT INTERACT CB_PAD) NOT INTERACT SEALRING_EXCLUDE
  EXT AP_CHECK CB2_CHECK < AP_S_4 ABUT < 90 SINGULAR REGION 
  AP_CHECK AND CB2_CHECK
#IFDEF with_PM
  PM_CHECK = (PM NOT INTERACT CB_PAD) NOT INTERACT SEALRING_EXCLUDE
  EXT AP_CHECK PM_CHECK < AP_S_4 ABUT < 90 SINGULAR REGION 
  AP_CHECK AND PM_CHECK
#ENDIF
}

AP.EN.1 { @ Enclosured of RV (Not inside seal ring) >= ^AP_EN_1 um
  ENC RV_NIND AP < AP_EN_1 ABUT < 90 SINGULAR REGION OUTSIDE ALSO
  ENC RV_IND AP < AP_EN_1-2*GRID ABUT < 90 SINGULAR REGION OUTSIDE ALSO
}

AP.EN.2 { @ Enclosure of CB2_WB >= ^AP_EN_2 um ; AP must be drawn to cover PAD for AP_RDL
  ENC CB2x AP < AP_EN_2 ABUT < 90 SINGULAR REGION
  CB2x NOT AP
}

AP.DN.1 { @ AP density across full chip >= ^AP_DN_1
  DENSITY AP < AP_DN_1 INSIDE OF LAYER CHIP_EDGE PRINT AP.DN.1.density
}

AP.DN.1.1 { @ AP density across full chip <= ^AP_DN_1_1
  DENSITY AP > AP_DN_1_1 INSIDE OF LAYER CHIP_EDGE PRINT AP.DN.1.1.density    
}

#ENDIF 



// PM Layout Rules  
//==============================================
PM_CHECK = PM NOT INTERACT SEALRING_EXCLUDE 


PM.W.1 { @ width of PM (interact with CB/CB2 region)(except sealring(162,2)) >= ^PM_W_1
  PM_CHK1 = PM_CHECK INTERACT (CBx OR CB2)  
  INT PM_CHK1 < PM_W_1 ABUT <90 SINGULAR REGION
}
PM.W.2 { @ width of PM (not interact with CB/CB2 region)(except sealring(162,2)) >=  ^PM_W_2
  PM_CHK2 =  PM_CHECK NOT INTERACT (CBx OR CB2)  
  INT PM_CHK2 < PM_W_2 ABUT <90 SINGULAR REGION
}
PM.S.1 { @ space of PM, PM space to chip >= ^PM_S_1 
  EXT PM_CHECK < PM_S_1 ABUT < 90 SINGULAR REGION
  EXT PM_CHECK CHIP_EDGE < PM_S_1 ABUT < 90 SINGULAR REGION
}
PM.EN.1 { @ PM enclosure of CB/CB2 >= ^PM_EN_1
  ENC CB_PAD PM < PM_EN_1 ABUT <90 SINGULAR REGION
  ENC CB2 PM < PM_EN_1 ABUT <90 SINGULAR REGION
}
#IFDEF with_PM
PM.R.3{ @ Polyimide is prohibited over outer seal ring and SLDB regions.
        @ It only covers inner seal ring area 
        @ (PM drawn pattern must cover outer seal ring and SLDB regions.)    
  SEALRING_INNER = SEALRINGi AND (HOLES SEALRINGi)
  SEALRING_OUTER = SEALRINGi NOT (HOLES SEALRINGi)
  (SEALRING_OUTER OR SEALRING_DB) NOT PM
  SEALRING_INNER AND PM
}
#ENDIF
